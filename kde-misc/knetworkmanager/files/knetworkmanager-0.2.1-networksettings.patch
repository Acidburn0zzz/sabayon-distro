diff -Nurp knetworkmanager-0.2.1r738551.orig/knetworkmanager/src/knetworkmanager-tray.cpp knetworkmanager-0.2.1r738551/knetworkmanager/src/knetworkmanager-tray.cpp
--- knetworkmanager-0.2.1r738551.orig/knetworkmanager/src/knetworkmanager-tray.cpp	2007-11-19 07:36:05.000000000 +0100
+++ knetworkmanager-0.2.1r738551/knetworkmanager/src/knetworkmanager-tray.cpp	2007-12-25 19:39:49.000000000 +0100
@@ -184,6 +184,8 @@ Tray::updateTooltip ()
 						_tooltip += " " + i18n ("Warning: No active wireless network found.");
 					}
 				}
+			} else {
+				_tooltip = i18n ("Manual network configuration");
 			}
 		} else if (state->isSleeping ()) {
 			_tooltip = i18n ("Offline Mode is currently active");
@@ -259,6 +261,14 @@ Tray::connectHiddenNetwork ()
 }
 
 void
+Tray::staticConfiguration ()
+{
+  KProcess *proc = new KProcess;
+  *proc << "networksettings";
+  proc->start();
+}
+
+void
 Tray::configureVPN ()
 {
 	VPNConnectionsDialog* mvc;
@@ -766,7 +776,7 @@ Tray::contextMenuAboutToShow (KPopupMenu
 		}
 
 		/* if we don't have any network devices make this clear */
-		if (!devicesFound) {
+		if (!state->isConnected() && !devicesFound) {
 			QLabel* noDeviceFound = new QLabel (i18n ("No network device found."), 0);
 			noDeviceFound->setAlignment (Qt::AlignHCenter | Qt::AlignVCenter);
 			contextMenu ()->insertItem (noDeviceFound);
@@ -815,6 +825,9 @@ Tray::contextMenuAboutToShow (KPopupMenu
 		}
 	}
 
+	KAction* staticAction = actionCollection()->action("static_configuration");
+	staticAction->plug(menu);
+
 	/* build-up the ``Options'' sub menu if NM is running */
 	if (state->isNetworkManagerRunning () && !state->isWaitingForKey()) {
 		if (!separated)
@@ -947,9 +960,11 @@ Tray::updateForState( NMState state )
 	{
 		case NM_STATE_CONNECTED:
 			//FIXME: correct connected icon
-			if ( !dev )
-				pixmap = m_disconnected;
-			else if ( dev->isWireless( ) )
+			if ( !dev ) {
+				//if it's reported as connected and there's no device it means /etc/network/interfaces is being used
+				//show a wired icon and tooltip as Manual Config
+				pixmap = m_wired;
+			} else if ( dev->isWireless( ) )
 			{
 				int strength;
 				Network* net = _ctx->getDeviceStore()->getActiveNetwork (dev);
@@ -1156,6 +1171,10 @@ Tray::Tray () : KSystemTray (), m_step( 
 	connectHiddenAction   = new KAction (i18n ("Connect to Other Wireless Network..."),
 					     SmallIcon ("wireless",  QIconSet::Automatic), 0,
 					     this, SLOT (connectHiddenNetwork ()), actionCollection (), "connect_hidden");
+
+	staticConfigurationAction   = new KAction (i18n ("Manual Configuration..."),
+					     SmallIcon ("knetworkmanager",  QIconSet::Automatic), 0,
+					     this, SLOT (staticConfiguration ()), actionCollection (), "static_configuration");
 	
 	configureVPNAction = new KAction (i18n ("Configure VPN..."),
 					  SmallIcon ("configure",  QIconSet::Automatic), 0,
diff -Nurp knetworkmanager-0.2.1r738551.orig/knetworkmanager/src/knetworkmanager-tray.h knetworkmanager-0.2.1r738551/knetworkmanager/src/knetworkmanager-tray.h
--- knetworkmanager-0.2.1r738551.orig/knetworkmanager/src/knetworkmanager-tray.h	2007-11-19 07:36:05.000000000 +0100
+++ knetworkmanager-0.2.1r738551/knetworkmanager/src/knetworkmanager-tray.h	2007-12-25 19:35:05.000000000 +0100
@@ -109,6 +109,7 @@ class Tray : public KSystemTray
 	  ~Tray ();
 
 	  KAction* connectHiddenAction;
+	  KAction* staticConfigurationAction;
 	  KAction* configureVPNAction;
 	  KAction* disconnectVPNAction;
 	  KAction* configureDialUpAction;
@@ -152,6 +153,7 @@ class Tray : public KSystemTray
 	public slots:
 	  void updateTooltip          (void);
 	  void connectHiddenNetwork   (void);
+	  void staticConfiguration    (void);
 	  void configureVPN           (void);
 	  void disconnectVPN          (void);
 	  void configureDialUp        (void);
