--- 389-adminutil-1.1.10.orig/lib/libadminutil/distadm.c
+++ 389-adminutil-1.1.10/lib/libadminutil/distadm.c
@@ -29,6 +29,7 @@
 #if HAVE_UNISTD_H == 1
 #include <unistd.h>
 #endif
+#include <string.h>
 
 /* Form new nspr20 */
 #include <nspr.h>
@@ -126,6 +127,7 @@ ADM_InitializePermissions(int *errcode)
     int _ai=ADM_Init();
     */
     char *t = getenv("PASSWORD_PIPE");
+    char *d = getenv("DATA_PIPE");
     PRInt32 osfd = 0;
     PRFileDesc *fd = NULL;
     char *buf;
@@ -140,29 +142,38 @@ ADM_InitializePermissions(int *errcode)
     
 
     /* No error in this case, because it's expected to happen sometimes */
-    if(!t)   {
+    if(!t) {
         user = NULL;
         pass = NULL;
         auth = NULL;
         return retval;
     }
 
-    osfd = atol(t);
-    if (osfd == STDIN_FILENO) {
-        fd = PR_STDIN;
+    if (!d) {
+        osfd = atol(t);
+        if (osfd == STDIN_FILENO) {
+            fd = PR_STDIN;
+        } else {
+            fd = PR_ImportFile(osfd);
+        }
+        buf = (char *) PR_Malloc(BIG_LINE);
+        bufsize = BIG_LINE;
+
     } else {
-        fd = PR_ImportFile(osfd);
+        buf = d;
     }
 
-    buf = (char *) PR_Malloc(BIG_LINE);
-    bufsize = BIG_LINE;
 
     while(1)  {
+        if (!d) {
 #ifdef XP_WIN32
-        numread = NTPriv_system_pread(fd, buf, bufsize);
+            numread = NTPriv_system_pread(fd, buf, bufsize);
 #else
-        numread = PR_Read(fd, buf, bufsize);
+            numread = PR_Read(fd, buf, bufsize);
 #endif
+        } else {
+            numread = strlen(buf) + 1;
+        }
         totalread += numread;
         if(numread < 0)  {
             /* MLM XXX - ERROR CODE */
@@ -246,7 +257,7 @@ ADM_InitializePermissions(int *errcode)
         }
     }
 cleanup:
-    if (fd != PR_STDIN) {
+    if ((!d) && (fd != PR_STDIN)) {
         PR_Close(fd);
     }
     if (errmsg) {
