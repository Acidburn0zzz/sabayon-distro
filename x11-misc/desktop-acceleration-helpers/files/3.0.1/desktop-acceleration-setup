#!/bin/bash
# Copyright 2007 - SabayonLinux (Fabio Erculiani)
# Desktop Acceleration Helpers

# TODO:
# - put the proper settings icon on the Desktop

if [ -e "/sbin/lspci" ];then
    lspci="/sbin/lspci"
else
    lspci="/usr/sbin/lspci"
fi
compiz_tmpdir="/tmp/"
xprofile_file="/etc/xprofile"
compiz_manager="compiz-manager.desktop"
compiz_settings="compiz-settings.desktop"
ccsm_settings="ccsm.desktop"
compiz_manager_desktop_file=$compiz_tmpdir$compiz_manager
compiz_settings_desktop_file="/usr/share/applications/"$compiz_settings
ccsm_settings_desktop_file="/usr/share/applications/"$ccsm_settings
xorg_conf="/etc/X11/xorg.conf"
desktop_acceleration_helpers_config_file="/etc/desktop-acceleration-helpers.conf"
xgl_nvidia=$($lspci | grep ' VGA ' | grep -i nvidia)
xgl_ati=$($lspci | grep ' VGA ' | grep ATI)


# Functions

write_acceleration_method() {
    if [ ! -e "$desktop_acceleration_helpers_config_file" ]; then
        echo "Acceleration=$1" > $desktop_acceleration_helpers_config_file
    else
        sed -i 's/Acceleration=.*/Acceleration='$1'/' $desktop_acceleration_helpers_config_file
    fi
}

create_compiz_manager_desktop_file() {

    # it works with both KDE and GNOME
    echo "[Desktop Entry]" > $compiz_manager_desktop_file
    echo "Name=Compiz" >> $compiz_manager_desktop_file
    echo "Encoding=UTF-8" >> $compiz_manager_desktop_file
    echo "Icon=/usr/share/compiz/icon.png" >> $compiz_manager_desktop_file
    echo "Version=1.0" >> $compiz_manager_desktop_file
    echo "Exec=fusion-icon --sleep 10" >> $compiz_manager_desktop_file
    echo "X-KDE-StartupNotify=false" >> $compiz_manager_desktop_file
    echo "Terminal=false" >> $compiz_manager_desktop_file
    echo "Type=Application" >> $compiz_manager_desktop_file
    echo "X-GNOME-Autostart-enabled=true" >> $compiz_manager_desktop_file

}

scan_and_remove_old_files() {
    for file in `find /home -maxdepth 4 -name $compiz_manager`
       do
          rm -rf $file
       done
}

add_compiz_manager_to_the_startup() {

    for kver in `ls /usr/kde/`; do
        if [ -d "/usr/kde/${kver}/share/autostart" ]; then
       	    cp $compiz_manager_desktop_file /usr/kde/${kver}/share/autostart/ -p
        fi
    done
    if [ -d /etc/xdg/autostart ]; then
        cp $compiz_manager_desktop_file /etc/xdg/autostart/ -p
    fi


    # if it's available, add compiz-settings too

    if [ -e "$ccsm_settings_desktop_file" ]; then
        for user in `ls /home/`; do
            if [ -d "/home/$user/Desktop" ]; then
                cp $ccsm_settings_desktop_file /home/$user/Desktop/
                chown $user /home/$user/Desktop/$ccsm_settings
            fi
        done
    elif [ -e "$compiz_settings_desktop_file" ]; then
        for user in `ls /home/`; do
            if [ -d "/home/$user/Desktop" ]; then
                cp $compiz_settings_desktop_file /home/$user/Desktop/
                chown $user /home/$user/Desktop/$compiz_settings
            fi
        done
    fi

}

remove_compiz_manager_from_startup() {

    rm -f /usr/share/gnome/autostart/$compiz_manager
    rm -f /usr/share/autostart/$compiz_manager
    rm -f /etc/xdg/autostart/$compiz_manager

    for kver in `ls /usr/kde/`; do
        if [ -f "/usr/kde/${kver}/share/autostart/${compiz_manager}" ]; then
            rm -f "/usr/kde/${kver}/share/autostart/${compiz_manager}"
        fi
    done

    # remove compiz variables in /etc/xprofile
    if [ -e "$xprofile_file" ]; then
        sed -i '/WINDOW_MANAGER=/d' $xprofile_file
        sed -i '/KDEWM=/d' $xprofile_file
        sed -i '/XLIB_SKIP_ARGB_VISUALS=/d' $xprofile_file
    fi

    # if it's available, remove compiz-settings too
    if [ -e "$ccsm_settings_desktop_file" ]; then
        for user in `ls /home/`; do
            if [ -d "/home/$user/Desktop" ]; then
                rm -f /home/$user/Desktop/$ccsm_settings
            fi
        done
    elif [ -e "$compiz_settings_desktop_file" ]; then
        for user in `ls /home/`; do
            if [ -d "/home/$user/Desktop" ]; then
                rm -f /home/$user/Desktop/$compiz_settings
            fi
        done
    fi
}

enable_aiglx_in_xorg_conf() {
    # Enable AIGLX Stuff
    sed -i '/"AddARGBGLXVisuals"/ s/#//' $xorg_conf
    sed -i '/"XAANoOffscreenPixmaps"/ s/#//' $xorg_conf
    sed -i '/"Composite"/ s/#//g' $xorg_conf
    sed -i 's/"Composite".*".*"/"Composite" "Enable"/' $xorg_conf

    # check if Option Compisite is in xorg.conf
    option_composite=$(cat $xorg_conf | grep -i "Option.*Composite")
    if [ -z "$option_composite" ]; then
        # add it
        echo '' >> $xorg_conf
        echo 'Section "Extensions"' >> $xorg_conf
        echo '   Option "Composite" "Enable"' >> $xorg_conf
        echo 'EndSection' >> $xorg_conf
        echo '' >> $xorg_conf
    fi

}

disable_aiglx_in_xorg_conf() {
    # Disable AIGLX Option
    sed -i '/"AddARGBGLXVisuals"/ s/#//' $xorg_conf
    sed -i '/"AddARGBGLXVisuals"/ s/Option/#Option/' $xorg_conf
    sed -i '/"Composite"/ s/#//' $xorg_conf
    sed -i '/"Composite"/ s/Option/#Option/' $xorg_conf
    # for security sake
    sed -i '/"RenderAccel"/ s/#//' $xorg_conf
    sed -i '/"RenderAccel"/ s/Option/#Option/' $xorg_conf
    sed -i '/"XAANoOffscreenPixmaps"/ s/#//' $xorg_conf
    sed -i '/"XAANoOffscreenPixmaps"/ s/Option/#Option/' $xorg_conf
}

enable_nvidia_in_xorg_conf() {
    # Enable nvidia stuff, no AIGLX option
    opengl_nvidia=$(eselect opengl show | grep nvidia)
    if [ -n "$opengl_nvidia" ]; then
        sed -i '/"AddARGBGLXVisuals"/ s/#//' $xorg_conf
        sed -i '/"RenderAccel"/ s/#//' $xorg_conf
    fi
    sed -i '/"Composite"/ s/#//g' $xorg_conf
}

disable_nvidia_in_xorg_conf() {
    # Disable nvidia
    sed -i '/"AddARGBGLXVisuals"/ s/#//' $xorg_conf
    sed -i '/"AddARGBGLXVisuals"/ s/Option/#Option/' $xorg_conf
    sed -i '/"Composite"/ s/#//' $xorg_conf
    sed -i '/"Composite"/ s/Option/#Option/' $xorg_conf
    sed -i '/"RenderAccel"/ s/#//' $xorg_conf
    sed -i '/"RenderAccel"/ s/Option/#Option/' $xorg_conf
    sed -i '/"XAANoOffscreenPixmaps"/ s/#//' $xorg_conf
    sed -i '/"XAANoOffscreenPixmaps"/ s/Option/#Option/' $xorg_conf
}

show_help=0
if [ -z "$2" ] || [ "$1" == "--help" ]; then
    show_help=1
fi
if [ "$1" != "aiglx" ] && [ "$1" != "xgl" ] && [ "$1" != "nvidia" ] && [ "$2" != "enable" ] && [ "$2" != "disable" ]; then
    show_help=1
fi

if [ "$show_help" == 1 ]; then
   echo
   echo "desktop-acceleration-setup - SabayonLinux - Copyright 2007-2009"
   echo
   echo "This helper enable/disable AIGLX/XGL Subsystem fueled by Compiz."
   echo "   Usage:"
   echo "   # desktop-acceleration-setup aiglx/xgl enable/disable"
   echo
   exit 1
fi

if [ "$UID" != "0" ]; then
   echo "Error: this application must be run as root."
   exit 2
fi

if [ ! -e "/usr/bin/compiz" ]; then
   echo "Error: Compiz is not installed. /usr/bin/compiz not found."
   exit 3
fi

echo "Working..."

# Create our config file if it does not exist
if [ ! -e "$desktop_acceleration_helpers_config_file" ]; then
    # Acceleration is disabled (AND MUST BE) by default
    echo "Acceleration=none" > $desktop_acceleration_helpers_config_file
fi

if [ "$1" == "aiglx" ]; then

   if [ "$2" == "enable" ]; then
        echo "Enabling AIGLX system wide..."

        # remove old stuff
        scan_and_remove_old_files

	# Enable AIGLX
	enable_aiglx_in_xorg_conf

	# Beryl Manager startup file - create file $compiz_manager_desktop_file
	create_compiz_manager_desktop_file

	# Add Beryl to the startup
	add_compiz_manager_to_the_startup

	# remove junk
	rm -f $compiz_manager_desktop_file

	# set XGL in the config file
	write_acceleration_method aiglx

        echo -e "Done"
   else
        echo "Disabling AIGLX system wide..."

        # remove old stuff
        scan_and_remove_old_files

	# Disable AIGLX
	disable_aiglx_in_xorg_conf

        # remove compiz-manager
        remove_compiz_manager_from_startup

	# set No Acceleration in the config file
	write_acceleration_method none

        echo -e "Done"
   fi

elif [ "$1" == "nvidia" ]; then

   if [ "$2" == "enable" ]; then
        echo "Enabling NVidia system wide..."

        # remove old stuff
        scan_and_remove_old_files

	# Enable NVidia
	enable_nvidia_in_xorg_conf

	# Compiz startup file - create file $compiz_manager_desktop_file
	create_compiz_manager_desktop_file

	# Add Beryl to the startup
	add_compiz_manager_to_the_startup

	# remove junk
	if [ -e "$compiz_manager_desktop_file" ]; then
	    rm -f $compiz_manager_desktop_file
	fi


	# set NVidia in the config file
	write_acceleration_method nvidia

        echo -e "Done"
   else
        echo "Disabling NVidia system wide..."

        # remove old stuff
        scan_and_remove_old_files

	# Disable NVidia
	disable_nvidia_in_xorg_conf

        # remove compiz-manager
        remove_compiz_manager_from_startup

	# set No Acceleration in the config file
	write_acceleration_method none

        echo -e "Done"
   fi

fi
