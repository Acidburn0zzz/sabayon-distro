--- src/Svg.py.orig	2006-10-05 20:48:25.000000000 +0200
+++ src/Svg.py	2006-12-18 22:37:17.000000000 +0100
@@ -363,7 +363,7 @@
 
   def startPath(self, attrs):
     if self.context() in ["g", None]:
-      if "d" in attrs:
+      if attrs.has_key("d"):
         self.style().apply(self.drawBoard, self.transform())
         self.transform().apply(self.drawBoard)
         d = str(attrs["d"])
@@ -397,7 +397,7 @@
 
   def startLineargradient(self, attrs):
     if self.context() == "defs":
-      if "xlink:href" in attrs:
+      if attrs.has_key("xlink:href"):
         id = attrs["xlink:href"][1:]
         if not id in self.defs:
           Log.warn("Linear gradient %s has not been defined." % id)
@@ -412,7 +412,7 @@
     
   def startRadialgradient(self, attrs):
     if self.context() == "defs":
-      if "xlink:href" in attrs:
+      if attrs.has_key("xlink:href"):
         id = attrs["xlink:href"][1:]
         if not id in self.defs:
           Log.warn("Radial gradient %s has not been defined." % id)
@@ -429,13 +429,13 @@
     keys = []
     for stop in self.stops:
       color, opacity, offset = None, None, None
-      if "style" in stop:
+      if stop.has_key("style"):
         style =  self.style().parseStyle(stop["style"])
         if "stop-color" in style:
           color = self.style().parseColor(style["stop-color"])
         if "stop-opacity" in style:
           opacity = float(style["stop-opacity"])
-      if "offset" in stop:
+      if stop.has_key("offset"):
         offset = float(stop["offset"])
       if offset is not None and (color is not None or opacity is not None):
         if opacity is None: opacity = 1.0
