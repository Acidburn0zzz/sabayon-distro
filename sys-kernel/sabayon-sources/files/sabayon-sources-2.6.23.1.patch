diff -urpN linux-2.6.23-sabayon/.config testtry/.config
--- linux-2.6.23-sabayon/.config	1970-01-01 00:00:00.000000000 +0000
+++ testtry/.config	2007-10-15 16:44:55.000000000 +0000
@@ -0,0 +1,3491 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.23-sabayon
+# Mon Oct 15 16:44:43 2007
+#
+CONFIG_X86_64=y
+CONFIG_64BIT=y
+CONFIG_X86=y
+CONFIG_GENERIC_TIME=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_NONIRQ_WAKEUP=y
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CMOS_UPDATE=y
+CONFIG_ZONE_DMA32=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_SEMAPHORE_SLEEPERS=y
+CONFIG_MMU=y
+CONFIG_ZONE_DMA=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_X86_CMPXCHG=y
+CONFIG_EARLY_PRINTK=y
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_GENERIC_IOMAP=y
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+CONFIG_ARCH_POPULATES_NODE_MAP=y
+CONFIG_DMI=y
+CONFIG_AUDIT_ARCH=y
+CONFIG_GENERIC_BUG=y
+# CONFIG_ARCH_HAS_ILOG2_U32 is not set
+# CONFIG_ARCH_HAS_ILOG2_U64 is not set
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+# CONFIG_USER_NS is not set
+CONFIG_AUDIT=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_LOG_BUF_SHIFT=15
+CONFIG_CPUSETS=y
+CONFIG_SYSFS_DEPRECATED=y
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+# CONFIG_EMBEDDED is not set
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_EXTRA_PASS is not set
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_ANON_INODES=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_RT_MUTEXES=y
+# CONFIG_TINY_SHMEM is not set
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_KMOD=y
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_BLK_DEV_IO_TRACE=y
+CONFIG_BLK_DEV_BSG=y
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_AS=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+# CONFIG_DEFAULT_AS is not set
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+
+#
+# Processor type and features
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_X86_PC=y
+# CONFIG_X86_VSMP is not set
+# CONFIG_MK8 is not set
+# CONFIG_MPSC is not set
+# CONFIG_MCORE2 is not set
+CONFIG_GENERIC_CPU=y
+CONFIG_X86_L1_CACHE_BYTES=128
+CONFIG_X86_L1_CACHE_SHIFT=7
+CONFIG_X86_INTERNODE_CACHE_BYTES=128
+CONFIG_X86_TSC=y
+CONFIG_X86_GOOD_APIC=y
+CONFIG_MICROCODE=m
+CONFIG_MICROCODE_OLD_INTERFACE=y
+CONFIG_X86_MSR=y
+CONFIG_X86_CPUID=y
+CONFIG_X86_HT=y
+CONFIG_X86_IO_APIC=y
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_MTRR=y
+CONFIG_SMP=y
+CONFIG_SCHED_SMT=y
+CONFIG_SCHED_MC=y
+# CONFIG_PREEMPT_NONE is not set
+CONFIG_PREEMPT_VOLUNTARY=y
+# CONFIG_PREEMPT is not set
+CONFIG_PREEMPT_BKL=y
+CONFIG_NUMA=y
+CONFIG_K8_NUMA=y
+CONFIG_NODES_SHIFT=6
+CONFIG_X86_64_ACPI_NUMA=y
+# CONFIG_NUMA_EMU is not set
+CONFIG_ARCH_DISCONTIGMEM_ENABLE=y
+CONFIG_ARCH_DISCONTIGMEM_DEFAULT=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_SELECT_MEMORY_MODEL=y
+# CONFIG_FLATMEM_MANUAL is not set
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_NEED_MULTIPLE_NODES=y
+CONFIG_HAVE_MEMORY_PRESENT=y
+# CONFIG_SPARSEMEM_STATIC is not set
+CONFIG_SPARSEMEM_EXTREME=y
+
+#
+# Memory hotplug is currently incompatible with Software Suspend
+#
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_MIGRATION=y
+CONFIG_RESOURCES_64BIT=y
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+CONFIG_HAVE_ARCH_EARLY_PFN_TO_NID=y
+CONFIG_NR_CPUS=8
+CONFIG_PHYSICAL_ALIGN=0x200000
+CONFIG_HOTPLUG_CPU=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_HPET_TIMER=y
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_IOMMU=y
+CONFIG_CALGARY_IOMMU=y
+CONFIG_CALGARY_IOMMU_ENABLED_BY_DEFAULT=y
+CONFIG_SWIOTLB=y
+CONFIG_X86_MCE=y
+CONFIG_X86_MCE_INTEL=y
+CONFIG_X86_MCE_AMD=y
+# CONFIG_KEXEC is not set
+# CONFIG_CRASH_DUMP is not set
+# CONFIG_RELOCATABLE is not set
+CONFIG_PHYSICAL_START=0x200000
+CONFIG_SECCOMP=y
+# CONFIG_CC_STACKPROTECTOR is not set
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_K8_NB=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_ISA_DMA_API=y
+CONFIG_GENERIC_PENDING_IRQ=y
+
+#
+# Power management options
+#
+CONFIG_PM=y
+CONFIG_PM_LEGACY=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_PM_SLEEP=y
+CONFIG_SUSPEND_SMP_POSSIBLE=y
+CONFIG_SUSPEND=y
+CONFIG_HIBERNATION_SMP_POSSIBLE=y
+CONFIG_HIBERNATION=y
+CONFIG_PM_STD_PARTITION=""
+CONFIG_TOI_CORE=y
+
+#
+# Image Storage (you need at least one allocator)
+#
+CONFIG_TOI_FILE=y
+CONFIG_TOI_SWAP=y
+
+#
+# General Options
+#
+CONFIG_TOI_CRYPTO=y
+CONFIG_TOI_USERUI=y
+CONFIG_TOI_USERUI_DEFAULT_PATH="/usr/local/sbin/tuxonice_fbsplash"
+# CONFIG_TOI_KEEP_IMAGE is not set
+CONFIG_TOI_REPLACE_SWSUSP=y
+CONFIG_TOI_CHECKSUM=y
+CONFIG_TOI_DEFAULT_WAIT=25
+CONFIG_TOI=y
+CONFIG_ACPI=y
+CONFIG_ACPI_SLEEP=y
+CONFIG_ACPI_PROCFS=y
+CONFIG_ACPI_PROC_EVENT=y
+CONFIG_ACPI_AC=m
+CONFIG_ACPI_BATTERY=m
+CONFIG_ACPI_BUTTON=y
+CONFIG_ACPI_VIDEO=m
+CONFIG_ACPI_FAN=y
+CONFIG_ACPI_DOCK=y
+CONFIG_ACPI_BAY=y
+CONFIG_ACPI_PROCESSOR=y
+CONFIG_ACPI_HOTPLUG_CPU=y
+CONFIG_ACPI_THERMAL=y
+CONFIG_ACPI_NUMA=y
+CONFIG_ACPI_ASUS=y
+CONFIG_ACPI_TOSHIBA=y
+# CONFIG_ACPI_CUSTOM_DSDT is not set
+CONFIG_ACPI_BLACKLIST_YEAR=0
+# CONFIG_ACPI_DEBUG is not set
+CONFIG_ACPI_EC=y
+CONFIG_ACPI_POWER=y
+CONFIG_ACPI_SYSTEM=y
+CONFIG_X86_PM_TIMER=y
+CONFIG_ACPI_CONTAINER=y
+CONFIG_ACPI_SBS=m
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+# CONFIG_CPU_FREQ_DEBUG is not set
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_STAT_DETAILS=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
+
+#
+# CPUFreq processor drivers
+#
+CONFIG_X86_POWERNOW_K8=y
+CONFIG_X86_POWERNOW_K8_ACPI=y
+CONFIG_X86_SPEEDSTEP_CENTRINO=m
+CONFIG_X86_ACPI_CPUFREQ=y
+
+#
+# shared options
+#
+# CONFIG_X86_ACPI_CPUFREQ_PROC_INTF is not set
+# CONFIG_X86_SPEEDSTEP_LIB is not set
+
+#
+# CPU idle PM support
+#
+CONFIG_CPU_IDLE=y
+
+#
+# Governors
+#
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+
+#
+# Bus options (PCI etc.)
+#
+CONFIG_PCI=y
+CONFIG_PCI_DIRECT=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_PCIEPORTBUS=y
+CONFIG_HOTPLUG_PCI_PCIE=m
+# CONFIG_HOTPLUG_PCI_PCIE_POLL_EVENT_MODE is not set
+CONFIG_PCIEAER=y
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_PCI_MSI=y
+CONFIG_HT_IRQ=y
+
+#
+# PCCARD (PCMCIA/CardBus) support
+#
+CONFIG_PCCARD=y
+# CONFIG_PCMCIA_DEBUG is not set
+CONFIG_PCMCIA=m
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_PCMCIA_IOCTL=y
+CONFIG_CARDBUS=y
+
+#
+# PC-card bridges
+#
+CONFIG_YENTA=m
+CONFIG_YENTA_O2=y
+CONFIG_YENTA_RICOH=y
+CONFIG_YENTA_TI=y
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_YENTA_TOSHIBA=y
+CONFIG_PD6729=m
+CONFIG_I82092=m
+CONFIG_PCCARD_NONSTATIC=m
+CONFIG_HOTPLUG_PCI=m
+CONFIG_HOTPLUG_PCI_FAKE=m
+CONFIG_HOTPLUG_PCI_ACPI=m
+CONFIG_HOTPLUG_PCI_ACPI_IBM=m
+CONFIG_HOTPLUG_PCI_CPCI=y
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=m
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=m
+CONFIG_HOTPLUG_PCI_SHPC=m
+
+#
+# Executable file formats / Emulations
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_BINFMT_MISC=y
+CONFIG_IA32_EMULATION=y
+CONFIG_IA32_AOUT=y
+CONFIG_COMPAT=y
+CONFIG_COMPAT_FOR_U64_ALIGNMENT=y
+CONFIG_SYSVIPC_COMPAT=y
+
+#
+# Networking
+#
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_PACKET_MMAP=y
+CONFIG_UNIX=y
+CONFIG_XFRM=y
+CONFIG_XFRM_USER=m
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_MIGRATE=y
+CONFIG_NET_KEY=m
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_ASK_IP_FIB_HASH=y
+# CONFIG_IP_FIB_TRIE is not set
+CONFIG_IP_FIB_HASH=y
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_IP_PNP_RARP=y
+CONFIG_NET_IPIP=m
+CONFIG_NET_IPGRE=m
+CONFIG_NET_IPGRE_BROADCAST=y
+CONFIG_IP_MROUTE=y
+CONFIG_IP_PIMSM_V1=y
+CONFIG_IP_PIMSM_V2=y
+CONFIG_ARPD=y
+CONFIG_SYN_COOKIES=y
+CONFIG_INET_AH=m
+CONFIG_INET_ESP=m
+CONFIG_INET_IPCOMP=m
+CONFIG_INET_XFRM_TUNNEL=m
+CONFIG_INET_TUNNEL=m
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_TCP_CONG_BIC=y
+CONFIG_TCP_CONG_CUBIC=m
+CONFIG_TCP_CONG_WESTWOOD=m
+CONFIG_TCP_CONG_HTCP=m
+CONFIG_TCP_CONG_HSTCP=m
+CONFIG_TCP_CONG_HYBLA=m
+CONFIG_TCP_CONG_VEGAS=m
+CONFIG_TCP_CONG_SCALABLE=m
+CONFIG_TCP_CONG_LP=m
+CONFIG_TCP_CONG_VENO=m
+CONFIG_TCP_CONG_YEAH=m
+CONFIG_TCP_CONG_ILLINOIS=m
+CONFIG_DEFAULT_BIC=y
+# CONFIG_DEFAULT_CUBIC is not set
+# CONFIG_DEFAULT_HTCP is not set
+# CONFIG_DEFAULT_VEGAS is not set
+# CONFIG_DEFAULT_WESTWOOD is not set
+# CONFIG_DEFAULT_RENO is not set
+CONFIG_DEFAULT_TCP_CONG="bic"
+CONFIG_TCP_MD5SIG=y
+CONFIG_IP_VS=m
+# CONFIG_IP_VS_DEBUG is not set
+CONFIG_IP_VS_TAB_BITS=12
+
+#
+# IPVS transport protocol load balancing support
+#
+CONFIG_IP_VS_PROTO_TCP=y
+CONFIG_IP_VS_PROTO_UDP=y
+CONFIG_IP_VS_PROTO_ESP=y
+CONFIG_IP_VS_PROTO_AH=y
+
+#
+# IPVS scheduler
+#
+CONFIG_IP_VS_RR=m
+CONFIG_IP_VS_WRR=m
+CONFIG_IP_VS_LC=m
+CONFIG_IP_VS_WLC=m
+CONFIG_IP_VS_LBLC=m
+CONFIG_IP_VS_LBLCR=m
+CONFIG_IP_VS_DH=m
+CONFIG_IP_VS_SH=m
+CONFIG_IP_VS_SED=m
+CONFIG_IP_VS_NQ=m
+
+#
+# IPVS application helper
+#
+CONFIG_IP_VS_FTP=m
+CONFIG_IPV6=m
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=m
+CONFIG_INET6_ESP=m
+CONFIG_INET6_IPCOMP=m
+CONFIG_IPV6_MIP6=m
+CONFIG_INET6_XFRM_TUNNEL=m
+CONFIG_INET6_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_TRANSPORT=m
+CONFIG_INET6_XFRM_MODE_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_BEET=m
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=m
+CONFIG_IPV6_SIT=m
+CONFIG_IPV6_TUNNEL=m
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+CONFIG_NETLABEL=y
+CONFIG_NETWORK_SECMARK=y
+CONFIG_NETFILTER=y
+CONFIG_NETFILTER_DEBUG=y
+CONFIG_BRIDGE_NETFILTER=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=m
+CONFIG_NETFILTER_NETLINK_QUEUE=m
+CONFIG_NETFILTER_NETLINK_LOG=m
+CONFIG_NF_CONNTRACK_ENABLED=m
+CONFIG_NF_CONNTRACK=m
+CONFIG_NF_CT_ACCT=y
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+CONFIG_NF_CT_PROTO_GRE=m
+CONFIG_NF_CT_PROTO_SCTP=m
+# CONFIG_NF_CT_PROTO_UDPLITE is not set
+CONFIG_NF_CONNTRACK_AMANDA=m
+CONFIG_NF_CONNTRACK_FTP=m
+CONFIG_NF_CONNTRACK_H323=m
+CONFIG_NF_CONNTRACK_IRC=m
+CONFIG_NF_CONNTRACK_NETBIOS_NS=m
+CONFIG_NF_CONNTRACK_PPTP=m
+CONFIG_NF_CONNTRACK_SANE=m
+CONFIG_NF_CONNTRACK_SIP=m
+CONFIG_NF_CONNTRACK_TFTP=m
+CONFIG_NF_CT_NETLINK=m
+CONFIG_NETFILTER_XTABLES=m
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
+CONFIG_NETFILTER_XT_TARGET_DSCP=m
+CONFIG_NETFILTER_XT_TARGET_MARK=m
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
+CONFIG_NETFILTER_XT_TARGET_NFLOG=m
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
+# CONFIG_NETFILTER_XT_TARGET_TRACE is not set
+CONFIG_NETFILTER_XT_TARGET_SECMARK=m
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
+# CONFIG_NETFILTER_XT_MATCH_CONNLIMIT is not set
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+CONFIG_NETFILTER_XT_MATCH_DCCP=m
+CONFIG_NETFILTER_XT_MATCH_DSCP=m
+CONFIG_NETFILTER_XT_MATCH_ESP=m
+CONFIG_NETFILTER_XT_MATCH_HELPER=m
+CONFIG_NETFILTER_XT_MATCH_LENGTH=m
+CONFIG_NETFILTER_XT_MATCH_LIMIT=m
+CONFIG_NETFILTER_XT_MATCH_MAC=m
+CONFIG_NETFILTER_XT_MATCH_MARK=m
+CONFIG_NETFILTER_XT_MATCH_POLICY=m
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA=m
+CONFIG_NETFILTER_XT_MATCH_REALM=m
+CONFIG_NETFILTER_XT_MATCH_SCTP=m
+CONFIG_NETFILTER_XT_MATCH_STATE=m
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
+CONFIG_NETFILTER_XT_MATCH_STRING=m
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
+# CONFIG_NETFILTER_XT_MATCH_U32 is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_CONNTRACK_IPV4=m
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_IP_NF_QUEUE=m
+CONFIG_IP_NF_IPTABLES=m
+CONFIG_IP_NF_MATCH_IPRANGE=m
+CONFIG_IP_NF_MATCH_TOS=m
+CONFIG_IP_NF_MATCH_RECENT=m
+CONFIG_IP_NF_MATCH_ECN=m
+CONFIG_IP_NF_MATCH_AH=m
+CONFIG_IP_NF_MATCH_TTL=m
+CONFIG_IP_NF_MATCH_OWNER=m
+CONFIG_IP_NF_MATCH_ADDRTYPE=m
+CONFIG_IP_NF_FILTER=m
+CONFIG_IP_NF_TARGET_REJECT=m
+CONFIG_IP_NF_TARGET_LOG=m
+CONFIG_IP_NF_TARGET_ULOG=m
+CONFIG_NF_NAT=m
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_IP_NF_TARGET_REDIRECT=m
+CONFIG_IP_NF_TARGET_NETMAP=m
+CONFIG_IP_NF_TARGET_SAME=m
+CONFIG_NF_NAT_SNMP_BASIC=m
+CONFIG_NF_NAT_PROTO_GRE=m
+CONFIG_NF_NAT_FTP=m
+CONFIG_NF_NAT_IRC=m
+CONFIG_NF_NAT_TFTP=m
+CONFIG_NF_NAT_AMANDA=m
+CONFIG_NF_NAT_PPTP=m
+CONFIG_NF_NAT_H323=m
+CONFIG_NF_NAT_SIP=m
+CONFIG_IP_NF_MANGLE=m
+CONFIG_IP_NF_TARGET_TOS=m
+CONFIG_IP_NF_TARGET_ECN=m
+CONFIG_IP_NF_TARGET_TTL=m
+CONFIG_IP_NF_TARGET_CLUSTERIP=m
+CONFIG_IP_NF_RAW=m
+CONFIG_IP_NF_ARPTABLES=m
+CONFIG_IP_NF_ARPFILTER=m
+CONFIG_IP_NF_ARP_MANGLE=m
+
+#
+# IPv6: Netfilter Configuration (EXPERIMENTAL)
+#
+CONFIG_NF_CONNTRACK_IPV6=m
+CONFIG_IP6_NF_QUEUE=m
+CONFIG_IP6_NF_IPTABLES=m
+CONFIG_IP6_NF_MATCH_RT=m
+CONFIG_IP6_NF_MATCH_OPTS=m
+CONFIG_IP6_NF_MATCH_FRAG=m
+CONFIG_IP6_NF_MATCH_HL=m
+CONFIG_IP6_NF_MATCH_OWNER=m
+CONFIG_IP6_NF_MATCH_IPV6HEADER=m
+CONFIG_IP6_NF_MATCH_AH=m
+CONFIG_IP6_NF_MATCH_MH=m
+CONFIG_IP6_NF_MATCH_EUI64=m
+CONFIG_IP6_NF_FILTER=m
+CONFIG_IP6_NF_TARGET_LOG=m
+CONFIG_IP6_NF_TARGET_REJECT=m
+CONFIG_IP6_NF_MANGLE=m
+CONFIG_IP6_NF_TARGET_HL=m
+CONFIG_IP6_NF_RAW=m
+
+#
+# DECnet: Netfilter Configuration
+#
+CONFIG_DECNET_NF_GRABULATOR=m
+
+#
+# Bridge: Netfilter Configuration
+#
+CONFIG_BRIDGE_NF_EBTABLES=m
+CONFIG_BRIDGE_EBT_BROUTE=m
+CONFIG_BRIDGE_EBT_T_FILTER=m
+CONFIG_BRIDGE_EBT_T_NAT=m
+CONFIG_BRIDGE_EBT_802_3=m
+CONFIG_BRIDGE_EBT_AMONG=m
+CONFIG_BRIDGE_EBT_ARP=m
+CONFIG_BRIDGE_EBT_IP=m
+CONFIG_BRIDGE_EBT_LIMIT=m
+CONFIG_BRIDGE_EBT_MARK=m
+CONFIG_BRIDGE_EBT_PKTTYPE=m
+CONFIG_BRIDGE_EBT_STP=m
+CONFIG_BRIDGE_EBT_VLAN=m
+CONFIG_BRIDGE_EBT_ARPREPLY=m
+CONFIG_BRIDGE_EBT_DNAT=m
+CONFIG_BRIDGE_EBT_MARK_T=m
+CONFIG_BRIDGE_EBT_REDIRECT=m
+CONFIG_BRIDGE_EBT_SNAT=m
+CONFIG_BRIDGE_EBT_LOG=m
+CONFIG_BRIDGE_EBT_ULOG=m
+CONFIG_IP_DCCP=m
+CONFIG_INET_DCCP_DIAG=m
+CONFIG_IP_DCCP_ACKVEC=y
+
+#
+# DCCP CCIDs Configuration (EXPERIMENTAL)
+#
+CONFIG_IP_DCCP_CCID2=m
+# CONFIG_IP_DCCP_CCID2_DEBUG is not set
+CONFIG_IP_DCCP_CCID3=m
+CONFIG_IP_DCCP_TFRC_LIB=m
+# CONFIG_IP_DCCP_CCID3_DEBUG is not set
+CONFIG_IP_DCCP_CCID3_RTO=100
+CONFIG_IP_SCTP=m
+# CONFIG_SCTP_DBG_MSG is not set
+# CONFIG_SCTP_DBG_OBJCNT is not set
+# CONFIG_SCTP_HMAC_NONE is not set
+# CONFIG_SCTP_HMAC_SHA1 is not set
+CONFIG_SCTP_HMAC_MD5=y
+CONFIG_TIPC=m
+CONFIG_TIPC_ADVANCED=y
+CONFIG_TIPC_ZONES=3
+CONFIG_TIPC_CLUSTERS=1
+CONFIG_TIPC_NODES=255
+CONFIG_TIPC_SLAVE_NODES=0
+CONFIG_TIPC_PORTS=8191
+CONFIG_TIPC_LOG=0
+# CONFIG_TIPC_DEBUG is not set
+CONFIG_ATM=m
+CONFIG_ATM_CLIP=m
+CONFIG_ATM_CLIP_NO_ICMP=y
+CONFIG_ATM_LANE=m
+CONFIG_ATM_MPOA=m
+CONFIG_ATM_BR2684=m
+CONFIG_ATM_BR2684_IPFILTER=y
+CONFIG_BRIDGE=m
+CONFIG_VLAN_8021Q=m
+CONFIG_DECNET=m
+CONFIG_DECNET_ROUTER=y
+CONFIG_LLC=y
+CONFIG_LLC2=m
+CONFIG_IPX=m
+CONFIG_IPX_INTERN=y
+CONFIG_ATALK=m
+CONFIG_DEV_APPLETALK=m
+CONFIG_IPDDP=m
+CONFIG_IPDDP_ENCAP=y
+CONFIG_IPDDP_DECAP=y
+CONFIG_X25=m
+CONFIG_LAPB=m
+CONFIG_ECONET=m
+CONFIG_ECONET_AUNUDP=y
+CONFIG_ECONET_NATIVE=y
+CONFIG_WAN_ROUTER=m
+
+#
+# QoS and/or fair queueing
+#
+CONFIG_NET_SCHED=y
+CONFIG_NET_SCH_FIFO=y
+
+#
+# Queueing/Scheduling
+#
+CONFIG_NET_SCH_CBQ=m
+CONFIG_NET_SCH_HTB=m
+CONFIG_NET_SCH_HFSC=m
+CONFIG_NET_SCH_ATM=m
+CONFIG_NET_SCH_PRIO=m
+# CONFIG_NET_SCH_RR is not set
+CONFIG_NET_SCH_RED=m
+CONFIG_NET_SCH_SFQ=m
+CONFIG_NET_SCH_TEQL=m
+CONFIG_NET_SCH_TBF=m
+CONFIG_NET_SCH_GRED=m
+CONFIG_NET_SCH_DSMARK=m
+CONFIG_NET_SCH_NETEM=m
+CONFIG_NET_SCH_INGRESS=m
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+CONFIG_NET_CLS_BASIC=m
+CONFIG_NET_CLS_TCINDEX=m
+CONFIG_NET_CLS_ROUTE4=m
+CONFIG_NET_CLS_ROUTE=y
+CONFIG_NET_CLS_FW=m
+CONFIG_NET_CLS_U32=m
+CONFIG_CLS_U32_PERF=y
+CONFIG_CLS_U32_MARK=y
+CONFIG_NET_CLS_RSVP=m
+CONFIG_NET_CLS_RSVP6=m
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+CONFIG_NET_EMATCH_CMP=m
+CONFIG_NET_EMATCH_NBYTE=m
+CONFIG_NET_EMATCH_U32=m
+CONFIG_NET_EMATCH_META=m
+CONFIG_NET_EMATCH_TEXT=m
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_ACT_POLICE=m
+CONFIG_NET_ACT_GACT=m
+CONFIG_GACT_PROB=y
+CONFIG_NET_ACT_MIRRED=m
+CONFIG_NET_ACT_IPT=m
+CONFIG_NET_ACT_PEDIT=m
+CONFIG_NET_ACT_SIMP=m
+# CONFIG_NET_CLS_POLICE is not set
+CONFIG_NET_CLS_IND=y
+
+#
+# Network testing
+#
+CONFIG_NET_PKTGEN=m
+CONFIG_HAMRADIO=y
+
+#
+# Packet Radio protocols
+#
+CONFIG_AX25=m
+CONFIG_AX25_DAMA_SLAVE=y
+CONFIG_NETROM=m
+CONFIG_ROSE=m
+
+#
+# AX.25 network device drivers
+#
+CONFIG_MKISS=m
+CONFIG_6PACK=m
+CONFIG_BPQETHER=m
+CONFIG_BAYCOM_SER_FDX=m
+CONFIG_BAYCOM_SER_HDX=m
+CONFIG_BAYCOM_PAR=m
+CONFIG_YAM=m
+CONFIG_IRDA=m
+
+#
+# IrDA protocols
+#
+CONFIG_IRLAN=m
+CONFIG_IRNET=m
+CONFIG_IRCOMM=m
+CONFIG_IRDA_ULTRA=y
+
+#
+# IrDA options
+#
+CONFIG_IRDA_CACHE_LAST_LSAP=y
+CONFIG_IRDA_FAST_RR=y
+# CONFIG_IRDA_DEBUG is not set
+
+#
+# Infrared-port device drivers
+#
+
+#
+# SIR device drivers
+#
+CONFIG_IRTTY_SIR=m
+
+#
+# Dongle support
+#
+CONFIG_DONGLE=y
+CONFIG_ESI_DONGLE=m
+CONFIG_ACTISYS_DONGLE=m
+CONFIG_TEKRAM_DONGLE=m
+CONFIG_TOIM3232_DONGLE=m
+CONFIG_LITELINK_DONGLE=m
+CONFIG_MA600_DONGLE=m
+CONFIG_GIRBIL_DONGLE=m
+CONFIG_MCP2120_DONGLE=m
+CONFIG_OLD_BELKIN_DONGLE=m
+CONFIG_ACT200L_DONGLE=m
+CONFIG_KINGSUN_DONGLE=m
+
+#
+# Old SIR device drivers
+#
+
+#
+# Old Serial dongle support
+#
+
+#
+# FIR device drivers
+#
+CONFIG_USB_IRDA=m
+CONFIG_SIGMATEL_FIR=m
+CONFIG_NSC_FIR=m
+CONFIG_WINBOND_FIR=m
+CONFIG_SMC_IRCC_FIR=m
+CONFIG_ALI_FIR=m
+CONFIG_VLSI_FIR=m
+CONFIG_VIA_FIR=m
+CONFIG_MCS_FIR=m
+CONFIG_BT=m
+CONFIG_BT_L2CAP=m
+CONFIG_BT_SCO=m
+CONFIG_BT_RFCOMM=m
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=m
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_CMTP=m
+CONFIG_BT_HIDP=m
+
+#
+# Bluetooth device drivers
+#
+CONFIG_BT_HCIUSB=m
+CONFIG_BT_HCIUSB_SCO=y
+CONFIG_BT_HCIUART=m
+CONFIG_BT_HCIUART_H4=y
+CONFIG_BT_HCIUART_BCSP=y
+CONFIG_BT_HCIBCM203X=m
+CONFIG_BT_HCIBPA10X=m
+CONFIG_BT_HCIBFUSB=m
+CONFIG_BT_HCIDTL1=m
+CONFIG_BT_HCIBT3C=m
+CONFIG_BT_HCIBLUECARD=m
+CONFIG_BT_HCIBTUART=m
+CONFIG_BT_HCIVHCI=m
+CONFIG_AF_RXRPC=m
+# CONFIG_AF_RXRPC_DEBUG is not set
+CONFIG_RXKAD=m
+CONFIG_FIB_RULES=y
+
+#
+# Wireless
+#
+CONFIG_CFG80211=y
+CONFIG_NL80211=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_MAC80211=m
+CONFIG_MAC80211_LEDS=y
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_DEBUG is not set
+CONFIG_IEEE80211=m
+# CONFIG_IEEE80211_DEBUG is not set
+CONFIG_IEEE80211_CRYPT_WEP=m
+CONFIG_IEEE80211_CRYPT_CCMP=m
+CONFIG_IEEE80211_CRYPT_TKIP=m
+CONFIG_IEEE80211_SOFTMAC=m
+# CONFIG_IEEE80211_SOFTMAC_DEBUG is not set
+CONFIG_IEEE80211_RADIOTAP=y
+CONFIG_RFKILL=m
+CONFIG_RFKILL_INPUT=m
+CONFIG_RFKILL_LEDS=y
+# CONFIG_NET_9P is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+# CONFIG_STANDALONE is not set
+# CONFIG_PREVENT_FIRMWARE_BUILD is not set
+CONFIG_FW_LOADER=y
+# CONFIG_SYS_HYPERVISOR is not set
+CONFIG_CONNECTOR=y
+CONFIG_PROC_EVENTS=y
+CONFIG_MTD=y
+CONFIG_MTD_DEBUG=y
+CONFIG_MTD_DEBUG_VERBOSE=0
+CONFIG_MTD_CONCAT=y
+CONFIG_MTD_PARTITIONS=y
+CONFIG_MTD_REDBOOT_PARTS=m
+CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-1
+CONFIG_MTD_REDBOOT_PARTS_UNALLOCATED=y
+CONFIG_MTD_REDBOOT_PARTS_READONLY=y
+CONFIG_MTD_CMDLINE_PARTS=y
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=m
+CONFIG_MTD_BLKDEVS=m
+CONFIG_MTD_BLOCK=m
+CONFIG_MTD_BLOCK_RO=m
+CONFIG_FTL=m
+CONFIG_NFTL=m
+CONFIG_NFTL_RW=y
+CONFIG_INFTL=m
+CONFIG_RFD_FTL=m
+CONFIG_SSFDC=m
+
+#
+# RAM/ROM/Flash chip drivers
+#
+CONFIG_MTD_CFI=m
+CONFIG_MTD_JEDECPROBE=m
+CONFIG_MTD_GEN_PROBE=m
+# CONFIG_MTD_CFI_ADV_OPTIONS is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+CONFIG_MTD_CFI_INTELEXT=m
+CONFIG_MTD_CFI_AMDSTD=m
+CONFIG_MTD_CFI_STAA=m
+CONFIG_MTD_CFI_UTIL=m
+CONFIG_MTD_RAM=m
+CONFIG_MTD_ROM=m
+CONFIG_MTD_ABSENT=m
+
+#
+# Mapping drivers for chip access
+#
+CONFIG_MTD_COMPLEX_MAPPINGS=y
+CONFIG_MTD_PHYSMAP=m
+CONFIG_MTD_PHYSMAP_START=0x8000000
+CONFIG_MTD_PHYSMAP_LEN=0x4000000
+CONFIG_MTD_PHYSMAP_BANKWIDTH=2
+CONFIG_MTD_PNC2000=m
+CONFIG_MTD_SC520CDP=m
+CONFIG_MTD_NETSC520=m
+CONFIG_MTD_TS5500=m
+CONFIG_MTD_SBC_GXX=m
+CONFIG_MTD_AMD76XROM=m
+CONFIG_MTD_ICHXROM=m
+CONFIG_MTD_ESB2ROM=m
+CONFIG_MTD_CK804XROM=m
+CONFIG_MTD_SCB2_FLASH=m
+CONFIG_MTD_NETtel=m
+CONFIG_MTD_DILNETPC=m
+CONFIG_MTD_DILNETPC_BOOTSIZE=0x80000
+CONFIG_MTD_L440GX=m
+CONFIG_MTD_PCI=m
+CONFIG_MTD_PLATRAM=m
+
+#
+# Self-contained MTD device drivers
+#
+CONFIG_MTD_PMC551=m
+# CONFIG_MTD_PMC551_BUGFIX is not set
+# CONFIG_MTD_PMC551_DEBUG is not set
+CONFIG_MTD_DATAFLASH=m
+CONFIG_MTD_M25P80=m
+CONFIG_MTD_SLRAM=m
+CONFIG_MTD_PHRAM=m
+CONFIG_MTD_MTDRAM=m
+CONFIG_MTDRAM_TOTAL_SIZE=4096
+CONFIG_MTDRAM_ERASE_SIZE=128
+CONFIG_MTD_BLOCK2MTD=m
+
+#
+# Disk-On-Chip Device Drivers
+#
+CONFIG_MTD_DOC2000=m
+CONFIG_MTD_DOC2001=m
+CONFIG_MTD_DOC2001PLUS=m
+CONFIG_MTD_DOCPROBE=m
+CONFIG_MTD_DOCECC=m
+CONFIG_MTD_DOCPROBE_ADVANCED=y
+CONFIG_MTD_DOCPROBE_ADDRESS=0x0000
+CONFIG_MTD_DOCPROBE_HIGH=y
+CONFIG_MTD_DOCPROBE_55AA=y
+CONFIG_MTD_NAND=m
+CONFIG_MTD_NAND_VERIFY_WRITE=y
+# CONFIG_MTD_NAND_ECC_SMC is not set
+# CONFIG_MTD_NAND_MUSEUM_IDS is not set
+CONFIG_MTD_NAND_IDS=m
+CONFIG_MTD_NAND_DISKONCHIP=m
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADVANCED=y
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS=0x0
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_HIGH=y
+CONFIG_MTD_NAND_DISKONCHIP_BBTWRITE=y
+CONFIG_MTD_NAND_CAFE=m
+CONFIG_MTD_NAND_NANDSIM=m
+CONFIG_MTD_NAND_PLATFORM=m
+CONFIG_MTD_ONENAND=m
+CONFIG_MTD_ONENAND_VERIFY_WRITE=y
+CONFIG_MTD_ONENAND_OTP=y
+
+#
+# UBI - Unsorted block images
+#
+CONFIG_MTD_UBI=m
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_RESERVE=1
+CONFIG_MTD_UBI_GLUEBI=y
+
+#
+# UBI debugging options
+#
+# CONFIG_MTD_UBI_DEBUG is not set
+CONFIG_PARPORT=y
+CONFIG_PARPORT_PC=y
+CONFIG_PARPORT_SERIAL=m
+CONFIG_PARPORT_PC_FIFO=y
+# CONFIG_PARPORT_PC_SUPERIO is not set
+CONFIG_PARPORT_PC_PCMCIA=m
+# CONFIG_PARPORT_GSC is not set
+CONFIG_PARPORT_AX88796=m
+CONFIG_PARPORT_1284=y
+CONFIG_PARPORT_NOT_PC=y
+CONFIG_PNP=y
+# CONFIG_PNP_DEBUG is not set
+
+#
+# Protocols
+#
+CONFIG_PNPACPI=y
+CONFIG_BLK_DEV=y
+CONFIG_BLK_DEV_FD=y
+CONFIG_PARIDE=y
+
+#
+# Parallel IDE high-level drivers
+#
+CONFIG_PARIDE_PD=m
+CONFIG_PARIDE_PCD=m
+CONFIG_PARIDE_PF=m
+CONFIG_PARIDE_PT=m
+CONFIG_PARIDE_PG=m
+
+#
+# Parallel IDE protocol modules
+#
+CONFIG_PARIDE_ATEN=m
+CONFIG_PARIDE_BPCK=m
+CONFIG_PARIDE_COMM=m
+CONFIG_PARIDE_DSTR=m
+CONFIG_PARIDE_FIT2=m
+CONFIG_PARIDE_FIT3=m
+CONFIG_PARIDE_EPAT=m
+CONFIG_PARIDE_EPATC8=y
+CONFIG_PARIDE_EPIA=m
+CONFIG_PARIDE_FRIQ=m
+CONFIG_PARIDE_FRPW=m
+CONFIG_PARIDE_KBIC=m
+CONFIG_PARIDE_KTTI=m
+CONFIG_PARIDE_ON20=m
+CONFIG_PARIDE_ON26=m
+CONFIG_BLK_CPQ_DA=y
+CONFIG_BLK_CPQ_CISS_DA=y
+CONFIG_CISS_SCSI_TAPE=y
+CONFIG_BLK_DEV_DAC960=y
+CONFIG_BLK_DEV_UMEM=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_CRYPTOLOOP=y
+CONFIG_BLK_DEV_NBD=m
+CONFIG_BLK_DEV_SX8=m
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=16384
+CONFIG_BLK_DEV_RAM_BLOCKSIZE=1024
+CONFIG_CDROM_PKTCDVD=y
+CONFIG_CDROM_PKTCDVD_BUFFERS=8
+CONFIG_CDROM_PKTCDVD_WCACHE=y
+CONFIG_ATA_OVER_ETH=m
+CONFIG_MISC_DEVICES=y
+CONFIG_IBM_ASM=m
+CONFIG_PHANTOM=m
+CONFIG_EEPROM_93CX6=m
+CONFIG_SGI_IOC4=m
+CONFIG_TIFM_CORE=m
+CONFIG_TIFM_7XX1=m
+CONFIG_ACER_ACPI=m
+CONFIG_FUJITSU_LAPTOP=m
+CONFIG_MSI_LAPTOP=m
+CONFIG_SONY_LAPTOP=m
+CONFIG_SONYPI_COMPAT=y
+CONFIG_THINKPAD_ACPI=m
+# CONFIG_THINKPAD_ACPI_DEBUG is not set
+CONFIG_THINKPAD_ACPI_BAY=y
+CONFIG_THINKPAD_EC=m
+CONFIG_TP_SMAPI=m
+CONFIG_IDE=y
+# CONFIG_BLK_DEV_IDE is not set
+# CONFIG_BLK_DEV_HD_ONLY is not set
+# CONFIG_BLK_DEV_HD is not set
+
+#
+# SCSI device support
+#
+CONFIG_RAID_ATTRS=y
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=m
+CONFIG_SCSI_NETLINK=y
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+CONFIG_CHR_DEV_ST=y
+CONFIG_CHR_DEV_OSST=y
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+CONFIG_CHR_DEV_SCH=m
+
+#
+# Some SCSI devices (e.g. CD jukebox) support multiple LUNs
+#
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+CONFIG_SCSI_LOGGING=y
+CONFIG_SCSI_SCAN_ASYNC=y
+CONFIG_SCSI_WAIT_SCAN=m
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=y
+CONFIG_SCSI_FC_ATTRS=y
+CONFIG_SCSI_ISCSI_ATTRS=y
+CONFIG_SCSI_SAS_ATTRS=y
+CONFIG_SCSI_SAS_LIBSAS=y
+# CONFIG_SCSI_SAS_ATA is not set
+# CONFIG_SCSI_SAS_LIBSAS_DEBUG is not set
+CONFIG_SCSI_LOWLEVEL=y
+CONFIG_ISCSI_TCP=y
+CONFIG_BLK_DEV_3W_XXXX_RAID=y
+CONFIG_SCSI_3W_9XXX=y
+CONFIG_SCSI_ACARD=y
+CONFIG_SCSI_AACRAID=y
+CONFIG_SCSI_AIC7XXX=y
+CONFIG_AIC7XXX_CMDS_PER_DEVICE=32
+CONFIG_AIC7XXX_RESET_DELAY_MS=15000
+# CONFIG_AIC7XXX_BUILD_FIRMWARE is not set
+CONFIG_AIC7XXX_DEBUG_ENABLE=y
+CONFIG_AIC7XXX_DEBUG_MASK=0
+CONFIG_AIC7XXX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC7XXX_OLD=y
+CONFIG_SCSI_AIC79XX=y
+CONFIG_AIC79XX_CMDS_PER_DEVICE=32
+CONFIG_AIC79XX_RESET_DELAY_MS=15000
+# CONFIG_AIC79XX_BUILD_FIRMWARE is not set
+CONFIG_AIC79XX_DEBUG_ENABLE=y
+CONFIG_AIC79XX_DEBUG_MASK=0
+CONFIG_AIC79XX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC94XX=y
+# CONFIG_AIC94XX_DEBUG is not set
+CONFIG_SCSI_ARCMSR=y
+CONFIG_MEGARAID_NEWGEN=y
+CONFIG_MEGARAID_MM=y
+CONFIG_MEGARAID_MAILBOX=y
+CONFIG_MEGARAID_LEGACY=y
+CONFIG_MEGARAID_SAS=y
+CONFIG_SCSI_HPTIOP=y
+CONFIG_SCSI_BUSLOGIC=y
+# CONFIG_SCSI_OMIT_FLASHPOINT is not set
+CONFIG_SCSI_DMX3191D=y
+CONFIG_SCSI_EATA=y
+CONFIG_SCSI_EATA_TAGGED_QUEUE=y
+CONFIG_SCSI_EATA_LINKED_COMMANDS=y
+CONFIG_SCSI_EATA_MAX_TAGS=16
+CONFIG_SCSI_FUTURE_DOMAIN=m
+CONFIG_SCSI_GDTH=y
+CONFIG_SCSI_IPS=y
+CONFIG_SCSI_INITIO=y
+CONFIG_SCSI_INIA100=y
+CONFIG_SCSI_PPA=m
+CONFIG_SCSI_IMM=m
+# CONFIG_SCSI_IZIP_EPP16 is not set
+# CONFIG_SCSI_IZIP_SLOW_CTR is not set
+CONFIG_SCSI_STEX=y
+CONFIG_SCSI_SYM53C8XX_2=y
+CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=1
+CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS=16
+CONFIG_SCSI_SYM53C8XX_MAX_TAGS=64
+CONFIG_SCSI_SYM53C8XX_MMIO=y
+CONFIG_SCSI_IPR=y
+CONFIG_SCSI_IPR_TRACE=y
+CONFIG_SCSI_IPR_DUMP=y
+CONFIG_SCSI_QLOGIC_1280=y
+CONFIG_SCSI_QLA_FC=y
+CONFIG_SCSI_QLA_ISCSI=y
+CONFIG_SCSI_LPFC=y
+CONFIG_SCSI_DC395x=y
+CONFIG_SCSI_DC390T=y
+# CONFIG_SCSI_DEBUG is not set
+CONFIG_SCSI_SRP=m
+# CONFIG_SCSI_LOWLEVEL_PCMCIA is not set
+CONFIG_ATA=y
+# CONFIG_ATA_NONSTANDARD is not set
+CONFIG_ATA_ACPI=y
+CONFIG_SATA_AHCI=y
+CONFIG_SATA_SVW=y
+CONFIG_ATA_PIIX=y
+CONFIG_SATA_MV=y
+CONFIG_SATA_NV=y
+CONFIG_PDC_ADMA=y
+CONFIG_SATA_QSTOR=y
+CONFIG_SATA_PROMISE=y
+CONFIG_SATA_SX4=y
+CONFIG_SATA_SIL=y
+CONFIG_SATA_SIL24=y
+CONFIG_SATA_SIS=y
+CONFIG_SATA_ULI=y
+CONFIG_SATA_VIA=y
+CONFIG_SATA_VITESSE=y
+CONFIG_SATA_INIC162X=y
+CONFIG_PATA_ALI=y
+CONFIG_PATA_AMD=y
+CONFIG_PATA_ARTOP=y
+CONFIG_PATA_ATIIXP=y
+CONFIG_PATA_CMD640_PCI=y
+CONFIG_PATA_CMD64X=y
+CONFIG_PATA_CS5520=y
+CONFIG_PATA_CS5530=y
+CONFIG_PATA_CYPRESS=y
+CONFIG_PATA_EFAR=y
+CONFIG_ATA_GENERIC=y
+CONFIG_PATA_HPT366=y
+CONFIG_PATA_HPT37X=y
+CONFIG_PATA_HPT3X2N=y
+CONFIG_PATA_HPT3X3=y
+CONFIG_PATA_HPT3X3_DMA=y
+CONFIG_PATA_IT821X=y
+CONFIG_PATA_IT8213=y
+CONFIG_PATA_JMICRON=y
+CONFIG_PATA_TRIFLEX=y
+CONFIG_PATA_MARVELL=y
+CONFIG_PATA_MPIIX=y
+CONFIG_PATA_OLDPIIX=y
+CONFIG_PATA_NETCELL=y
+CONFIG_PATA_NS87410=y
+CONFIG_PATA_OPTI=y
+CONFIG_PATA_OPTIDMA=y
+CONFIG_PATA_PCMCIA=m
+CONFIG_PATA_PDC_OLD=y
+CONFIG_PATA_RADISYS=y
+CONFIG_PATA_RZ1000=y
+CONFIG_PATA_SC1200=y
+CONFIG_PATA_SERVERWORKS=y
+CONFIG_PATA_PDC2027X=y
+CONFIG_PATA_SIL680=y
+CONFIG_PATA_SIS=y
+CONFIG_PATA_VIA=y
+CONFIG_PATA_WINBOND=y
+CONFIG_MD=y
+CONFIG_BLK_DEV_MD=y
+CONFIG_MD_LINEAR=y
+CONFIG_MD_RAID0=y
+CONFIG_MD_RAID1=y
+CONFIG_MD_RAID10=y
+CONFIG_MD_RAID456=y
+CONFIG_MD_RAID5_RESHAPE=y
+CONFIG_MD_MULTIPATH=y
+CONFIG_MD_FAULTY=y
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_CRYPT=y
+CONFIG_DM_SNAPSHOT=y
+CONFIG_DM_MIRROR=y
+CONFIG_DM_ZERO=y
+CONFIG_DM_MULTIPATH=m
+CONFIG_DM_MULTIPATH_EMC=m
+CONFIG_DM_MULTIPATH_RDAC=m
+CONFIG_DM_DELAY=m
+
+#
+# Fusion MPT device support
+#
+CONFIG_FUSION=y
+CONFIG_FUSION_SPI=y
+CONFIG_FUSION_FC=y
+CONFIG_FUSION_SAS=y
+CONFIG_FUSION_MAX_SGE=128
+CONFIG_FUSION_CTL=y
+CONFIG_FUSION_LAN=y
+CONFIG_FUSION_LOGGING=y
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+CONFIG_IEEE1394=y
+
+#
+# Subsystem Options
+#
+# CONFIG_IEEE1394_VERBOSEDEBUG is not set
+
+#
+# Controllers
+#
+CONFIG_IEEE1394_PCILYNX=m
+CONFIG_IEEE1394_OHCI1394=y
+
+#
+# Protocols
+#
+CONFIG_IEEE1394_VIDEO1394=m
+CONFIG_IEEE1394_SBP2=y
+# CONFIG_IEEE1394_SBP2_PHYS_DMA is not set
+# CONFIG_IEEE1394_ETH1394_ROM_ENTRY is not set
+# CONFIG_IEEE1394_ETH1394 is not set
+CONFIG_IEEE1394_DV1394=m
+CONFIG_IEEE1394_RAWIO=m
+CONFIG_I2O=y
+CONFIG_I2O_LCT_NOTIFY_ON_CHANGES=y
+CONFIG_I2O_EXT_ADAPTEC=y
+CONFIG_I2O_EXT_ADAPTEC_DMA64=y
+CONFIG_I2O_CONFIG=y
+CONFIG_I2O_CONFIG_OLD_IOCTL=y
+CONFIG_I2O_BUS=y
+CONFIG_I2O_BLOCK=y
+CONFIG_I2O_SCSI=y
+CONFIG_I2O_PROC=y
+CONFIG_MACINTOSH_DRIVERS=y
+CONFIG_MAC_EMUMOUSEBTN=y
+CONFIG_NETDEVICES=y
+# CONFIG_NETDEVICES_MULTIQUEUE is not set
+CONFIG_IFB=m
+CONFIG_DUMMY=m
+CONFIG_BONDING=m
+# CONFIG_MACVLAN is not set
+CONFIG_EQUALIZER=m
+CONFIG_TUN=m
+CONFIG_NET_SB1000=m
+CONFIG_ARCNET=m
+CONFIG_ARCNET_1201=m
+CONFIG_ARCNET_1051=m
+CONFIG_ARCNET_RAW=m
+CONFIG_ARCNET_CAP=m
+CONFIG_ARCNET_COM90xx=m
+CONFIG_ARCNET_COM90xxIO=m
+CONFIG_ARCNET_RIM_I=m
+CONFIG_ARCNET_COM20020=m
+CONFIG_ARCNET_COM20020_PCI=m
+CONFIG_PHYLIB=m
+
+#
+# MII PHY device drivers
+#
+CONFIG_MARVELL_PHY=m
+CONFIG_DAVICOM_PHY=m
+CONFIG_QSEMI_PHY=m
+CONFIG_LXT_PHY=m
+CONFIG_CICADA_PHY=m
+CONFIG_VITESSE_PHY=m
+CONFIG_SMSC_PHY=m
+CONFIG_BROADCOM_PHY=m
+# CONFIG_ICPLUS_PHY is not set
+CONFIG_FIXED_PHY=m
+CONFIG_FIXED_MII_10_FDX=y
+CONFIG_FIXED_MII_100_FDX=y
+CONFIG_NET_ETHERNET=y
+CONFIG_MII=y
+CONFIG_HAPPYMEAL=m
+CONFIG_SUNGEM=m
+CONFIG_CASSINI=m
+CONFIG_NET_VENDOR_3COM=y
+CONFIG_VORTEX=m
+CONFIG_TYPHOON=m
+CONFIG_NET_TULIP=y
+CONFIG_DE2104X=m
+CONFIG_TULIP=m
+# CONFIG_TULIP_MWI is not set
+# CONFIG_TULIP_MMIO is not set
+# CONFIG_TULIP_NAPI is not set
+CONFIG_DE4X5=m
+CONFIG_WINBOND_840=m
+CONFIG_DM9102=m
+CONFIG_ULI526X=m
+CONFIG_PCMCIA_XIRCOM=m
+CONFIG_HP100=y
+CONFIG_NET_PCI=y
+CONFIG_PCNET32=m
+# CONFIG_PCNET32_NAPI is not set
+CONFIG_AMD8111_ETH=m
+# CONFIG_AMD8111E_NAPI is not set
+CONFIG_ADAPTEC_STARFIRE=m
+# CONFIG_ADAPTEC_STARFIRE_NAPI is not set
+CONFIG_B44=m
+CONFIG_B44_PCI_AUTOSELECT=y
+CONFIG_B44_PCICORE_AUTOSELECT=y
+CONFIG_B44_PCI=y
+CONFIG_FORCEDETH=m
+# CONFIG_FORCEDETH_NAPI is not set
+CONFIG_DGRS=m
+CONFIG_EEPRO100=m
+CONFIG_E100=m
+CONFIG_FEALNX=m
+CONFIG_NATSEMI=m
+CONFIG_NE2K_PCI=m
+CONFIG_8139CP=m
+CONFIG_8139TOO=m
+# CONFIG_8139TOO_PIO is not set
+CONFIG_8139TOO_TUNE_TWISTER=y
+CONFIG_8139TOO_8129=y
+CONFIG_8139_OLD_RX_RESET=y
+CONFIG_SIS900=m
+CONFIG_EPIC100=m
+CONFIG_SUNDANCE=m
+# CONFIG_SUNDANCE_MMIO is not set
+CONFIG_VIA_RHINE=m
+# CONFIG_VIA_RHINE_MMIO is not set
+# CONFIG_VIA_RHINE_NAPI is not set
+CONFIG_SC92031=m
+CONFIG_NET_POCKET=y
+CONFIG_ATP=m
+CONFIG_DE600=m
+CONFIG_DE620=m
+CONFIG_NETDEV_1000=y
+CONFIG_ACENIC=m
+# CONFIG_ACENIC_OMIT_TIGON_I is not set
+CONFIG_DL2K=m
+CONFIG_E1000=m
+# CONFIG_E1000_NAPI is not set
+# CONFIG_E1000_DISABLE_PACKET_SPLIT is not set
+CONFIG_NS83820=m
+CONFIG_HAMACHI=m
+CONFIG_YELLOWFIN=m
+CONFIG_R8169=m
+# CONFIG_R8169_NAPI is not set
+CONFIG_R8169_VLAN=y
+CONFIG_SIS190=m
+CONFIG_SKGE=m
+CONFIG_SKY2=m
+# CONFIG_SKY2_DEBUG is not set
+CONFIG_SK98LIN=m
+CONFIG_VIA_VELOCITY=m
+CONFIG_TIGON3=m
+CONFIG_BNX2=m
+CONFIG_QLA3XXX=m
+CONFIG_ATL1=m
+CONFIG_NETDEV_10000=y
+CONFIG_CHELSIO_T1=m
+# CONFIG_CHELSIO_T1_1G is not set
+CONFIG_CHELSIO_T1_NAPI=y
+CONFIG_CHELSIO_T3=m
+CONFIG_IXGB=m
+# CONFIG_IXGB_NAPI is not set
+CONFIG_S2IO=m
+# CONFIG_S2IO_NAPI is not set
+CONFIG_MYRI10GE=m
+CONFIG_NETXEN_NIC=m
+CONFIG_MLX4_CORE=m
+CONFIG_MLX4_DEBUG=y
+CONFIG_TR=y
+CONFIG_IBMOL=m
+CONFIG_3C359=m
+CONFIG_TMS380TR=m
+CONFIG_TMSPCI=m
+CONFIG_ABYSS=m
+
+#
+# Wireless LAN
+#
+CONFIG_WLAN_PRE80211=y
+CONFIG_STRIP=m
+CONFIG_PCMCIA_WAVELAN=m
+CONFIG_PCMCIA_NETWAVE=m
+CONFIG_WLAN_80211=y
+CONFIG_PCMCIA_RAYCS=m
+CONFIG_IPW2100=m
+CONFIG_IPW2100_MONITOR=y
+# CONFIG_IPW2100_DEBUG is not set
+CONFIG_IPW2200=m
+CONFIG_IPW2200_MONITOR=y
+CONFIG_IPW2200_RADIOTAP=y
+CONFIG_IPW2200_PROMISCUOUS=y
+CONFIG_IPW2200_QOS=y
+# CONFIG_IPW2200_DEBUG is not set
+CONFIG_LIBERTAS=m
+CONFIG_LIBERTAS_USB=m
+CONFIG_LIBERTAS_CS=m
+# CONFIG_LIBERTAS_DEBUG is not set
+CONFIG_AIRO=m
+CONFIG_HERMES=m
+CONFIG_PLX_HERMES=m
+CONFIG_TMD_HERMES=m
+CONFIG_NORTEL_HERMES=m
+CONFIG_PCI_HERMES=m
+CONFIG_PCMCIA_HERMES=m
+CONFIG_PCMCIA_SPECTRUM=m
+CONFIG_ATMEL=m
+CONFIG_PCI_ATMEL=m
+CONFIG_PCMCIA_ATMEL=m
+CONFIG_USB_ATMEL=m
+CONFIG_AIRO_CS=m
+CONFIG_PCMCIA_WL3501=m
+CONFIG_PRISM54=m
+CONFIG_USB_ZD1201=m
+CONFIG_RTL8187=m
+CONFIG_ADM8211=m
+CONFIG_P54_COMMON=m
+CONFIG_P54_USB=m
+CONFIG_P54_PCI=m
+# CONFIG_ATH5K is not set
+CONFIG_HOSTAP=m
+CONFIG_HOSTAP_FIRMWARE=y
+CONFIG_HOSTAP_FIRMWARE_NVRAM=y
+CONFIG_HOSTAP_PLX=m
+CONFIG_HOSTAP_PCI=m
+CONFIG_HOSTAP_CS=m
+CONFIG_ACX=m
+CONFIG_ACX_PCI=y
+CONFIG_ACX_USB=y
+# CONFIG_BCM43XX is not set
+CONFIG_B43=m
+CONFIG_B43_PCI_AUTOSELECT=y
+CONFIG_B43_PCICORE_AUTOSELECT=y
+CONFIG_B43_PCMCIA=y
+CONFIG_B43_LEDS=y
+CONFIG_B43_RFKILL=y
+# CONFIG_B43_DEBUG is not set
+CONFIG_B43_DMA=y
+CONFIG_B43_PIO=y
+CONFIG_B43_DMA_AND_PIO_MODE=y
+# CONFIG_B43_DMA_MODE is not set
+# CONFIG_B43_PIO_MODE is not set
+CONFIG_B43LEGACY=m
+CONFIG_B43LEGACY_PCI_AUTOSELECT=y
+CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
+# CONFIG_B43LEGACY_DEBUG is not set
+CONFIG_B43LEGACY_DMA=y
+CONFIG_B43LEGACY_PIO=y
+CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
+# CONFIG_B43LEGACY_DMA_MODE is not set
+# CONFIG_B43LEGACY_PIO_MODE is not set
+CONFIG_ZD1211RW=m
+# CONFIG_ZD1211RW_DEBUG is not set
+CONFIG_RT2X00=m
+CONFIG_RT2X00_LIB=m
+CONFIG_RT2X00_LIB_PCI=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_RT2X00_LIB_RFKILL=y
+CONFIG_RT2400PCI=m
+CONFIG_RT2400PCI_RFKILL=y
+CONFIG_RT2500PCI=m
+CONFIG_RT2500PCI_RFKILL=y
+CONFIG_RT61PCI=m
+CONFIG_RT61PCI_RFKILL=y
+CONFIG_RT2500USB=m
+CONFIG_RT73USB=m
+# CONFIG_RT2X00_DEBUG is not set
+CONFIG_IWLWIFI=y
+# CONFIG_IWLWIFI_DEBUG is not set
+CONFIG_IWLWIFI_SENSITIVITY=y
+CONFIG_IWLWIFI_SPECTRUM_MEASUREMENT=y
+CONFIG_IWLWIFI_QOS=y
+CONFIG_IWL4965=m
+# CONFIG_IWL3945 is not set
+CONFIG_ZD1211RW_MAC80211=m
+# CONFIG_ZD1211RW_MAC80211_DEBUG is not set
+CONFIG_IPW3945=m
+# CONFIG_IPW3945_DEBUG is not set
+CONFIG_IPW3945_MONITOR=y
+CONFIG_IPW3945_PROMISCUOUS=y
+CONFIG_IPW3945_SIM_RX=y
+
+#
+# USB Network Adapters
+#
+CONFIG_USB_CATC=m
+CONFIG_USB_KAWETH=m
+CONFIG_USB_PEGASUS=m
+CONFIG_USB_RTL8150=m
+CONFIG_USB_USBNET_MII=m
+CONFIG_USB_USBNET=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_USB_NET_CDCETHER=m
+CONFIG_USB_NET_DM9601=m
+CONFIG_USB_NET_GL620A=m
+CONFIG_USB_NET_NET1080=m
+CONFIG_USB_NET_PLUSB=m
+CONFIG_USB_NET_MCS7830=m
+CONFIG_USB_NET_RNDIS_HOST=m
+CONFIG_USB_NET_CDC_SUBSET=m
+CONFIG_USB_ALI_M5632=y
+CONFIG_USB_AN2720=y
+CONFIG_USB_BELKIN=y
+CONFIG_USB_ARMLINUX=y
+CONFIG_USB_EPSON2888=y
+CONFIG_USB_KC2190=y
+CONFIG_USB_NET_ZAURUS=m
+CONFIG_NET_PCMCIA=y
+CONFIG_PCMCIA_3C589=m
+CONFIG_PCMCIA_3C574=m
+CONFIG_PCMCIA_FMVJ18X=m
+CONFIG_PCMCIA_PCNET=m
+CONFIG_PCMCIA_NMCLAN=m
+CONFIG_PCMCIA_SMC91C92=m
+CONFIG_PCMCIA_XIRC2PS=m
+CONFIG_PCMCIA_AXNET=m
+CONFIG_ARCNET_COM20020_CS=m
+CONFIG_WAN=y
+CONFIG_LANMEDIA=m
+CONFIG_HDLC=m
+CONFIG_HDLC_RAW=m
+CONFIG_HDLC_RAW_ETH=m
+CONFIG_HDLC_CISCO=m
+CONFIG_HDLC_FR=m
+CONFIG_HDLC_PPP=m
+CONFIG_HDLC_X25=m
+CONFIG_PCI200SYN=m
+CONFIG_WANXL=m
+# CONFIG_WANXL_BUILD_FIRMWARE is not set
+CONFIG_PC300=m
+# CONFIG_PC300_MLPPP is not set
+
+#
+# Cyclades-PC300 MLPPP support is disabled.
+#
+
+#
+# Refer to the file README.mlppp, provided by PC300 package.
+#
+# CONFIG_PC300TOO is not set
+CONFIG_FARSYNC=m
+CONFIG_DSCC4=m
+# CONFIG_DSCC4_PCISYNC is not set
+# CONFIG_DSCC4_PCI_RST is not set
+CONFIG_DLCI=m
+CONFIG_DLCI_MAX=8
+CONFIG_WAN_ROUTER_DRIVERS=m
+CONFIG_CYCLADES_SYNC=m
+CONFIG_CYCLOMX_X25=y
+CONFIG_LAPBETHER=m
+CONFIG_X25_ASY=m
+CONFIG_SBNI=m
+# CONFIG_SBNI_MULTILINE is not set
+CONFIG_ATM_DRIVERS=y
+# CONFIG_ATM_DUMMY is not set
+CONFIG_ATM_TCP=m
+CONFIG_ATM_LANAI=m
+CONFIG_ATM_ENI=m
+# CONFIG_ATM_ENI_DEBUG is not set
+# CONFIG_ATM_ENI_TUNE_BURST is not set
+CONFIG_ATM_FIRESTREAM=m
+CONFIG_ATM_ZATM=m
+# CONFIG_ATM_ZATM_DEBUG is not set
+CONFIG_ATM_IDT77252=m
+# CONFIG_ATM_IDT77252_DEBUG is not set
+# CONFIG_ATM_IDT77252_RCV_ALL is not set
+CONFIG_ATM_IDT77252_USE_SUNI=y
+CONFIG_ATM_AMBASSADOR=m
+# CONFIG_ATM_AMBASSADOR_DEBUG is not set
+CONFIG_ATM_HORIZON=m
+# CONFIG_ATM_HORIZON_DEBUG is not set
+CONFIG_ATM_FORE200E_MAYBE=m
+# CONFIG_ATM_FORE200E_PCA is not set
+CONFIG_ATM_HE=m
+# CONFIG_ATM_HE_USE_SUNI is not set
+CONFIG_FDDI=y
+CONFIG_DEFXX=m
+# CONFIG_DEFXX_MMIO is not set
+CONFIG_SKFP=m
+CONFIG_HIPPI=y
+CONFIG_ROADRUNNER=m
+# CONFIG_ROADRUNNER_LARGE_RINGS is not set
+CONFIG_PLIP=m
+CONFIG_PPP=m
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_ASYNC=m
+CONFIG_PPP_SYNC_TTY=m
+CONFIG_PPP_DEFLATE=m
+CONFIG_PPP_BSDCOMP=m
+CONFIG_PPP_MPPE=m
+CONFIG_PPPOE=m
+CONFIG_PPPOATM=m
+CONFIG_PPPOL2TP=m
+CONFIG_SLIP=m
+CONFIG_SLIP_COMPRESSED=y
+CONFIG_SLHC=m
+CONFIG_SLIP_SMART=y
+# CONFIG_SLIP_MODE_SLIP6 is not set
+CONFIG_NET_FC=y
+CONFIG_SHAPER=m
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+CONFIG_ISDN=m
+# CONFIG_ISDN_I4L is not set
+CONFIG_ISDN_CAPI=m
+# CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON is not set
+CONFIG_CAPI_TRACE=y
+CONFIG_ISDN_CAPI_MIDDLEWARE=y
+CONFIG_ISDN_CAPI_CAPI20=m
+CONFIG_ISDN_CAPI_CAPIFS_BOOL=y
+CONFIG_ISDN_CAPI_CAPIFS=m
+
+#
+# CAPI hardware drivers
+#
+CONFIG_CAPI_AVM=y
+CONFIG_ISDN_DRV_AVMB1_B1PCI=m
+CONFIG_ISDN_DRV_AVMB1_B1PCIV4=y
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=m
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=m
+CONFIG_ISDN_DRV_AVMB1_T1PCI=m
+CONFIG_ISDN_DRV_AVMB1_C4=m
+CONFIG_CAPI_EICON=y
+CONFIG_ISDN_DIVAS=m
+CONFIG_ISDN_DIVAS_BRIPCI=y
+CONFIG_ISDN_DIVAS_PRIPCI=y
+CONFIG_ISDN_DIVAS_DIVACAPI=m
+CONFIG_ISDN_DIVAS_USERIDI=m
+CONFIG_ISDN_DIVAS_MAINT=m
+CONFIG_PHONE=m
+CONFIG_PHONE_IXJ=m
+CONFIG_PHONE_IXJ_PCMCIA=m
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=y
+CONFIG_INPUT_POLLDEV=m
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_INPUT_JOYDEV=m
+CONFIG_INPUT_TSDEV=y
+CONFIG_INPUT_TSDEV_SCREEN_X=1024
+CONFIG_INPUT_TSDEV_SCREEN_Y=768
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_KEYBOARD_ATKBD=y
+CONFIG_KEYBOARD_SUNKBD=y
+CONFIG_KEYBOARD_LKKBD=y
+CONFIG_KEYBOARD_XTKBD=y
+CONFIG_KEYBOARD_NEWTON=y
+CONFIG_KEYBOARD_STOWAWAY=y
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_SERIAL=y
+CONFIG_MOUSE_APPLETOUCH=m
+CONFIG_MOUSE_VSXXXAA=m
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_JOYSTICK_ANALOG=m
+CONFIG_JOYSTICK_A3D=m
+CONFIG_JOYSTICK_ADI=m
+CONFIG_JOYSTICK_COBRA=m
+CONFIG_JOYSTICK_GF2K=m
+CONFIG_JOYSTICK_GRIP=m
+CONFIG_JOYSTICK_GRIP_MP=m
+CONFIG_JOYSTICK_GUILLEMOT=m
+CONFIG_JOYSTICK_INTERACT=m
+CONFIG_JOYSTICK_SIDEWINDER=m
+CONFIG_JOYSTICK_TMDC=m
+CONFIG_JOYSTICK_IFORCE=m
+CONFIG_JOYSTICK_IFORCE_USB=y
+CONFIG_JOYSTICK_IFORCE_232=y
+CONFIG_JOYSTICK_WARRIOR=m
+CONFIG_JOYSTICK_MAGELLAN=m
+CONFIG_JOYSTICK_SPACEORB=m
+CONFIG_JOYSTICK_SPACEBALL=m
+CONFIG_JOYSTICK_STINGER=m
+CONFIG_JOYSTICK_TWIDJOY=m
+CONFIG_JOYSTICK_DB9=m
+CONFIG_JOYSTICK_GAMECON=m
+CONFIG_JOYSTICK_TURBOGRAFX=m
+CONFIG_JOYSTICK_JOYDUMP=m
+CONFIG_JOYSTICK_XPAD=m
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_INPUT_TABLET=y
+CONFIG_TABLET_USB_ACECAD=m
+CONFIG_TABLET_USB_AIPTEK=m
+CONFIG_TABLET_USB_GTCO=m
+CONFIG_TABLET_USB_KBTAB=m
+CONFIG_TABLET_USB_WACOM=m
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_TOUCHSCREEN_ADS7846=m
+CONFIG_TOUCHSCREEN_FUJITSU=m
+CONFIG_TOUCHSCREEN_GUNZE=m
+CONFIG_TOUCHSCREEN_ELO=m
+CONFIG_TOUCHSCREEN_MTOUCH=m
+CONFIG_TOUCHSCREEN_MK712=m
+CONFIG_TOUCHSCREEN_PENMOUNT=m
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=m
+CONFIG_TOUCHSCREEN_TOUCHWIN=m
+CONFIG_TOUCHSCREEN_UCB1400=m
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=m
+CONFIG_TOUCHSCREEN_USB_EGALAX=y
+CONFIG_TOUCHSCREEN_USB_PANJIT=y
+CONFIG_TOUCHSCREEN_USB_3M=y
+CONFIG_TOUCHSCREEN_USB_ITM=y
+CONFIG_TOUCHSCREEN_USB_ETURBO=y
+CONFIG_TOUCHSCREEN_USB_GUNZE=y
+CONFIG_TOUCHSCREEN_USB_DMC_TSC10=y
+CONFIG_TOUCHSCREEN_USB_IRTOUCH=y
+CONFIG_INPUT_MISC=y
+CONFIG_INPUT_PCSPKR=m
+CONFIG_INPUT_ATLAS_BTNS=m
+CONFIG_INPUT_ATI_REMOTE=m
+CONFIG_INPUT_ATI_REMOTE2=m
+CONFIG_USB_APPLEIR=m
+CONFIG_INPUT_KEYSPAN_REMOTE=m
+CONFIG_INPUT_POWERMATE=m
+CONFIG_INPUT_YEALINK=m
+CONFIG_INPUT_UINPUT=m
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_I8042=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_CT82C710=y
+CONFIG_SERIO_PARKBD=y
+CONFIG_SERIO_PCIPS2=y
+CONFIG_SERIO_LIBPS2=y
+CONFIG_SERIO_RAW=m
+CONFIG_GAMEPORT=m
+CONFIG_GAMEPORT_NS558=m
+CONFIG_GAMEPORT_L4=m
+CONFIG_GAMEPORT_EMU10K1=m
+CONFIG_GAMEPORT_FM801=m
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_VT_CONSOLE=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_SERIAL_NONSTANDARD=y
+CONFIG_COMPUTONE=m
+CONFIG_ROCKETPORT=m
+CONFIG_CYCLADES=m
+# CONFIG_CYZ_INTR is not set
+CONFIG_DIGIEPCA=m
+CONFIG_MOXA_INTELLIO=m
+CONFIG_MOXA_SMARTIO=m
+CONFIG_MOXA_SMARTIO_NEW=m
+CONFIG_ISI=m
+CONFIG_SYNCLINK=m
+CONFIG_SYNCLINKMP=m
+CONFIG_SYNCLINK_GT=m
+CONFIG_N_HDLC=m
+CONFIG_SPECIALIX=m
+CONFIG_SPECIALIX_RTSCTS=y
+CONFIG_SX=m
+CONFIG_RIO=m
+CONFIG_RIO_OLDPCI=y
+CONFIG_STALDRV=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_8250=y
+# CONFIG_SERIAL_8250_CONSOLE is not set
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_SERIAL_8250_CS=m
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+CONFIG_SERIAL_8250_DETECT_IRQ=y
+CONFIG_SERIAL_8250_RSA=y
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_JSM=m
+CONFIG_UNIX98_PTYS=y
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+CONFIG_PRINTER=y
+CONFIG_LP_CONSOLE=y
+CONFIG_PPDEV=y
+CONFIG_TIPAR=m
+CONFIG_IPMI_HANDLER=m
+# CONFIG_IPMI_PANIC_EVENT is not set
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_IPMI_SI=m
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+CONFIG_SOFT_WATCHDOG=m
+CONFIG_ACQUIRE_WDT=m
+CONFIG_ADVANTECH_WDT=m
+CONFIG_ALIM1535_WDT=m
+CONFIG_ALIM7101_WDT=m
+CONFIG_SC520_WDT=m
+CONFIG_EUROTECH_WDT=m
+CONFIG_IB700_WDT=m
+CONFIG_IBMASR=m
+CONFIG_WAFER_WDT=m
+CONFIG_I6300ESB_WDT=m
+CONFIG_ITCO_WDT=m
+CONFIG_ITCO_VENDOR_SUPPORT=y
+CONFIG_SC1200_WDT=m
+CONFIG_PC87413_WDT=m
+CONFIG_60XX_WDT=m
+CONFIG_SBC8360_WDT=m
+CONFIG_CPU5_WDT=m
+CONFIG_SMSC37B787_WDT=m
+CONFIG_W83627HF_WDT=m
+CONFIG_W83697HF_WDT=m
+CONFIG_W83877F_WDT=m
+CONFIG_W83977F_WDT=m
+CONFIG_MACHZ_WDT=m
+CONFIG_SBC_EPX_C3_WATCHDOG=m
+
+#
+# PCI-based Watchdog Cards
+#
+CONFIG_PCIPCWATCHDOG=m
+CONFIG_WDTPCI=m
+CONFIG_WDT_501_PCI=y
+
+#
+# USB-based Watchdog Cards
+#
+CONFIG_USBPCWATCHDOG=m
+CONFIG_HW_RANDOM=y
+CONFIG_HW_RANDOM_INTEL=y
+CONFIG_HW_RANDOM_AMD=y
+CONFIG_NVRAM=m
+CONFIG_RTC=y
+CONFIG_R3964=m
+CONFIG_APPLICOM=m
+CONFIG_AGP=y
+CONFIG_AGP_AMD64=y
+CONFIG_AGP_INTEL=m
+CONFIG_AGP_SIS=m
+CONFIG_AGP_VIA=m
+CONFIG_DRM=m
+CONFIG_DRM_TDFX=m
+CONFIG_DRM_R128=m
+CONFIG_DRM_RADEON=m
+CONFIG_DRM_I810=m
+CONFIG_DRM_I830=m
+CONFIG_DRM_I915=m
+CONFIG_DRM_MGA=m
+CONFIG_DRM_SIS=m
+CONFIG_DRM_VIA=m
+CONFIG_DRM_SAVAGE=m
+
+#
+# PCMCIA character devices
+#
+CONFIG_SYNCLINK_CS=m
+CONFIG_CARDMAN_4000=m
+CONFIG_CARDMAN_4040=m
+CONFIG_MWAVE=m
+CONFIG_PC8736x_GPIO=m
+CONFIG_NSC_GPIO=m
+# CONFIG_RAW_DRIVER is not set
+CONFIG_HPET=y
+# CONFIG_HPET_RTC_IRQ is not set
+CONFIG_HPET_MMAP=y
+CONFIG_HANGCHECK_TIMER=m
+CONFIG_TCG_TPM=m
+CONFIG_TCG_TIS=m
+CONFIG_TCG_NSC=m
+CONFIG_TCG_ATMEL=m
+CONFIG_TCG_INFINEON=m
+CONFIG_TELCLOCK=m
+CONFIG_DEVPORT=y
+CONFIG_I2C=m
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_CHARDEV=m
+
+#
+# I2C Algorithms
+#
+CONFIG_I2C_ALGOBIT=m
+CONFIG_I2C_ALGOPCF=m
+CONFIG_I2C_ALGOPCA=m
+
+#
+# I2C Hardware Bus support
+#
+CONFIG_I2C_ALI1535=m
+CONFIG_I2C_ALI1563=m
+CONFIG_I2C_ALI15X3=m
+CONFIG_I2C_AMD756=m
+CONFIG_I2C_AMD756_S4882=m
+CONFIG_I2C_AMD8111=m
+CONFIG_I2C_I801=m
+CONFIG_I2C_I810=m
+CONFIG_I2C_PIIX4=m
+CONFIG_I2C_NFORCE2=m
+CONFIG_I2C_OCORES=m
+CONFIG_I2C_PARPORT=m
+CONFIG_I2C_PARPORT_LIGHT=m
+CONFIG_I2C_PROSAVAGE=m
+CONFIG_I2C_SAVAGE4=m
+CONFIG_I2C_SIMTEC=m
+CONFIG_I2C_SIS5595=m
+CONFIG_I2C_SIS630=m
+CONFIG_I2C_SIS96X=m
+CONFIG_I2C_TAOS_EVM=m
+CONFIG_I2C_STUB=m
+CONFIG_I2C_TINY_USB=m
+CONFIG_I2C_VIA=m
+CONFIG_I2C_VIAPRO=m
+CONFIG_I2C_VOODOO3=m
+
+#
+# Miscellaneous I2C Chip support
+#
+# CONFIG_SENSORS_DS1337 is not set
+# CONFIG_SENSORS_DS1374 is not set
+CONFIG_DS1682=m
+CONFIG_SENSORS_EEPROM=m
+CONFIG_SENSORS_PCF8574=m
+CONFIG_SENSORS_PCA9539=m
+CONFIG_SENSORS_PCF8591=m
+CONFIG_SENSORS_MAX6875=m
+CONFIG_SENSORS_TSL2550=m
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# CONFIG_I2C_DEBUG_CHIP is not set
+
+#
+# SPI support
+#
+CONFIG_SPI=y
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+CONFIG_SPI_BITBANG=m
+CONFIG_SPI_BUTTERFLY=m
+CONFIG_SPI_LM70_LLP=m
+
+#
+# SPI Protocol Masters
+#
+CONFIG_SPI_AT25=m
+CONFIG_SPI_SPIDEV=m
+CONFIG_SPI_TLE62X0=m
+CONFIG_W1=m
+CONFIG_W1_CON=y
+
+#
+# 1-wire Bus Masters
+#
+CONFIG_W1_MASTER_MATROX=m
+CONFIG_W1_MASTER_DS2490=m
+CONFIG_W1_MASTER_DS2482=m
+
+#
+# 1-wire Slaves
+#
+CONFIG_W1_SLAVE_THERM=m
+CONFIG_W1_SLAVE_SMEM=m
+CONFIG_W1_SLAVE_DS2433=m
+CONFIG_W1_SLAVE_DS2433_CRC=y
+CONFIG_W1_SLAVE_DS2760=m
+CONFIG_POWER_SUPPLY=m
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+CONFIG_PDA_POWER=m
+CONFIG_BATTERY_DS2760=m
+CONFIG_HWMON=y
+CONFIG_HWMON_VID=m
+CONFIG_SENSORS_ABITUGURU=m
+# CONFIG_SENSORS_ABITUGURU3 is not set
+CONFIG_SENSORS_AD7418=m
+CONFIG_SENSORS_ADM1021=m
+CONFIG_SENSORS_ADM1025=m
+CONFIG_SENSORS_ADM1026=m
+CONFIG_SENSORS_ADM1029=m
+CONFIG_SENSORS_ADM1031=m
+CONFIG_SENSORS_ADM9240=m
+CONFIG_SENSORS_K8TEMP=m
+CONFIG_SENSORS_ASB100=m
+CONFIG_SENSORS_ATXP1=m
+CONFIG_SENSORS_DS1621=m
+CONFIG_SENSORS_F71805F=m
+CONFIG_SENSORS_FSCHER=m
+CONFIG_SENSORS_FSCPOS=m
+CONFIG_SENSORS_GL518SM=m
+CONFIG_SENSORS_GL520SM=m
+CONFIG_SENSORS_CORETEMP=m
+CONFIG_SENSORS_IT87=m
+CONFIG_SENSORS_LM63=m
+CONFIG_SENSORS_LM70=m
+CONFIG_SENSORS_LM75=m
+CONFIG_SENSORS_LM77=m
+CONFIG_SENSORS_LM78=m
+CONFIG_SENSORS_LM80=m
+CONFIG_SENSORS_LM83=m
+CONFIG_SENSORS_LM85=m
+CONFIG_SENSORS_LM87=m
+CONFIG_SENSORS_LM90=m
+CONFIG_SENSORS_LM92=m
+# CONFIG_SENSORS_LM93 is not set
+CONFIG_SENSORS_MAX1619=m
+CONFIG_SENSORS_MAX6650=m
+CONFIG_SENSORS_PC87360=m
+CONFIG_SENSORS_PC87427=m
+CONFIG_SENSORS_SIS5595=m
+# CONFIG_SENSORS_DME1737 is not set
+CONFIG_SENSORS_SMSC47M1=m
+CONFIG_SENSORS_SMSC47M192=m
+CONFIG_SENSORS_SMSC47B397=m
+# CONFIG_SENSORS_THMC50 is not set
+CONFIG_SENSORS_VIA686A=m
+CONFIG_SENSORS_VT1211=m
+CONFIG_SENSORS_VT8231=m
+CONFIG_SENSORS_W83781D=m
+CONFIG_SENSORS_W83791D=m
+CONFIG_SENSORS_W83792D=m
+CONFIG_SENSORS_W83793=m
+CONFIG_SENSORS_W83L785TS=m
+CONFIG_SENSORS_W83627HF=m
+CONFIG_SENSORS_W83627EHF=m
+CONFIG_SENSORS_HDAPS=m
+CONFIG_SENSORS_APPLESMC=m
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Sonics Silicon Backplane
+#
+CONFIG_SSB_POSSIBLE=y
+CONFIG_SSB=m
+CONFIG_SSB_PCIHOST_POSSIBLE=y
+CONFIG_SSB_PCIHOST=y
+CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
+CONFIG_SSB_PCMCIAHOST=y
+CONFIG_SSB_DEBUG=y
+CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
+CONFIG_SSB_DRIVER_PCICORE=y
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_SM501=m
+
+#
+# Multimedia devices
+#
+CONFIG_VIDEO_DEV=m
+CONFIG_VIDEO_V4L1=y
+CONFIG_VIDEO_V4L1_COMPAT=y
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_HELPER_CHIPS_AUTO is not set
+
+#
+# Encoders/decoders and other helper chips
+#
+
+#
+# Audio decoders
+#
+CONFIG_VIDEO_TVAUDIO=m
+CONFIG_VIDEO_TDA7432=m
+CONFIG_VIDEO_TDA9840=m
+CONFIG_VIDEO_TDA9875=m
+CONFIG_VIDEO_TEA6415C=m
+CONFIG_VIDEO_TEA6420=m
+CONFIG_VIDEO_MSP3400=m
+CONFIG_VIDEO_CS53L32A=m
+CONFIG_VIDEO_TLV320AIC23B=m
+CONFIG_VIDEO_WM8775=m
+CONFIG_VIDEO_WM8739=m
+
+#
+# Video decoders
+#
+CONFIG_VIDEO_BT819=m
+CONFIG_VIDEO_BT856=m
+CONFIG_VIDEO_BT866=m
+CONFIG_VIDEO_KS0127=m
+CONFIG_VIDEO_OV7670=m
+CONFIG_VIDEO_SAA7110=m
+CONFIG_VIDEO_SAA7111=m
+CONFIG_VIDEO_SAA7114=m
+CONFIG_VIDEO_SAA711X=m
+CONFIG_VIDEO_SAA7191=m
+CONFIG_VIDEO_TVP5150=m
+CONFIG_VIDEO_VPX3220=m
+
+#
+# Video and audio decoders
+#
+CONFIG_VIDEO_CX25840=m
+
+#
+# MPEG video encoders
+#
+CONFIG_VIDEO_CX2341X=m
+
+#
+# Video encoders
+#
+CONFIG_VIDEO_SAA7127=m
+CONFIG_VIDEO_SAA7185=m
+CONFIG_VIDEO_ADV7170=m
+CONFIG_VIDEO_ADV7175=m
+
+#
+# Video improvement chips
+#
+CONFIG_VIDEO_UPD64031A=m
+CONFIG_VIDEO_UPD64083=m
+CONFIG_VIDEO_VIVI=m
+CONFIG_VIDEO_BT848=m
+CONFIG_VIDEO_BT848_DVB=y
+CONFIG_VIDEO_SAA6588=m
+CONFIG_VIDEO_BWQCAM=m
+CONFIG_VIDEO_CQCAM=m
+CONFIG_VIDEO_W9966=m
+CONFIG_VIDEO_CPIA=m
+CONFIG_VIDEO_CPIA_PP=m
+CONFIG_VIDEO_CPIA_USB=m
+CONFIG_VIDEO_CPIA2=m
+CONFIG_VIDEO_SAA5246A=m
+CONFIG_VIDEO_SAA5249=m
+CONFIG_TUNER_3036=m
+CONFIG_TUNER_TEA5761=y
+CONFIG_VIDEO_STRADIS=m
+CONFIG_VIDEO_ZORAN_ZR36060=m
+CONFIG_VIDEO_ZORAN=m
+CONFIG_VIDEO_ZORAN_BUZ=m
+CONFIG_VIDEO_ZORAN_DC10=m
+CONFIG_VIDEO_ZORAN_DC30=m
+CONFIG_VIDEO_ZORAN_LML33=m
+CONFIG_VIDEO_ZORAN_LML33R10=m
+CONFIG_VIDEO_ZORAN_AVS6EYES=m
+CONFIG_VIDEO_MEYE=m
+CONFIG_VIDEO_SAA7134=m
+CONFIG_VIDEO_SAA7134_ALSA=m
+CONFIG_VIDEO_SAA7134_DVB=m
+CONFIG_VIDEO_MXB=m
+CONFIG_VIDEO_DPC=m
+CONFIG_VIDEO_HEXIUM_ORION=m
+CONFIG_VIDEO_HEXIUM_GEMINI=m
+CONFIG_VIDEO_CX88=m
+CONFIG_VIDEO_CX88_ALSA=m
+CONFIG_VIDEO_CX88_BLACKBIRD=m
+CONFIG_VIDEO_CX88_DVB=m
+CONFIG_VIDEO_CX88_VP3054=m
+CONFIG_VIDEO_IVTV=m
+CONFIG_VIDEO_CAFE_CCIC=m
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_VIDEO_PVRUSB2=m
+CONFIG_VIDEO_PVRUSB2_29XXX=y
+CONFIG_VIDEO_PVRUSB2_24XXX=y
+CONFIG_VIDEO_PVRUSB2_SYSFS=y
+# CONFIG_VIDEO_PVRUSB2_DEBUGIFC is not set
+CONFIG_VIDEO_EM28XX=m
+CONFIG_VIDEO_USBVISION=m
+CONFIG_VIDEO_USBVIDEO=m
+CONFIG_USB_VICAM=m
+CONFIG_USB_IBMCAM=m
+CONFIG_USB_KONICAWC=m
+CONFIG_USB_QUICKCAM_MESSENGER=m
+CONFIG_USB_ET61X251=m
+CONFIG_VIDEO_OVCAMCHIP=m
+CONFIG_USB_W9968CF=m
+CONFIG_USB_OV511=m
+CONFIG_USB_SE401=m
+CONFIG_USB_SN9C102=m
+CONFIG_USB_STV680=m
+CONFIG_USB_ZC0301=m
+CONFIG_USB_PWC=m
+# CONFIG_USB_PWC_DEBUG is not set
+CONFIG_USB_ZR364XX=m
+CONFIG_RADIO_ADAPTERS=y
+CONFIG_RADIO_GEMTEK_PCI=m
+CONFIG_RADIO_MAXIRADIO=m
+CONFIG_RADIO_MAESTRO=m
+CONFIG_USB_DSBR=m
+CONFIG_DVB_CORE=y
+CONFIG_DVB_CORE_ATTACH=y
+CONFIG_DVB_CAPTURE_DRIVERS=y
+
+#
+# Supported SAA7146 based PCI Adapters
+#
+CONFIG_DVB_AV7110=m
+# CONFIG_DVB_AV7110_FIRMWARE is not set
+CONFIG_DVB_AV7110_OSD=y
+CONFIG_DVB_BUDGET=m
+CONFIG_DVB_BUDGET_CI=m
+CONFIG_DVB_BUDGET_AV=m
+CONFIG_DVB_BUDGET_PATCH=m
+
+#
+# Supported USB Adapters
+#
+CONFIG_DVB_USB=m
+# CONFIG_DVB_USB_DEBUG is not set
+CONFIG_DVB_USB_A800=m
+CONFIG_DVB_USB_DIBUSB_MB=m
+CONFIG_DVB_USB_DIBUSB_MB_FAULTY=y
+CONFIG_DVB_USB_DIBUSB_MC=m
+CONFIG_DVB_USB_DIB0700=m
+CONFIG_DVB_USB_UMT_010=m
+CONFIG_DVB_USB_CXUSB=m
+CONFIG_DVB_USB_M920X=m
+CONFIG_DVB_USB_GL861=m
+CONFIG_DVB_USB_AU6610=m
+CONFIG_DVB_USB_DIGITV=m
+CONFIG_DVB_USB_VP7045=m
+CONFIG_DVB_USB_VP702X=m
+CONFIG_DVB_USB_GP8PSK=m
+CONFIG_DVB_USB_NOVA_T_USB2=m
+CONFIG_DVB_USB_TTUSB2=m
+CONFIG_DVB_USB_DTT200U=m
+CONFIG_DVB_USB_OPERA1=m
+CONFIG_DVB_USB_AF9005=m
+CONFIG_DVB_USB_AF9005_REMOTE=m
+CONFIG_DVB_TTUSB_BUDGET=m
+CONFIG_DVB_TTUSB_DEC=m
+CONFIG_DVB_CINERGYT2=m
+# CONFIG_DVB_CINERGYT2_TUNING is not set
+
+#
+# Supported FlexCopII (B2C2) Adapters
+#
+CONFIG_DVB_B2C2_FLEXCOP=m
+CONFIG_DVB_B2C2_FLEXCOP_PCI=m
+CONFIG_DVB_B2C2_FLEXCOP_USB=m
+# CONFIG_DVB_B2C2_FLEXCOP_DEBUG is not set
+
+#
+# Supported BT878 Adapters
+#
+CONFIG_DVB_BT8XX=m
+
+#
+# Supported Pluto2 Adapters
+#
+CONFIG_DVB_PLUTO2=m
+
+#
+# Supported DVB Frontends
+#
+
+#
+# Customise DVB Frontends
+#
+CONFIG_DVB_FE_CUSTOMISE=y
+
+#
+# DVB-S (satellite) frontends
+#
+CONFIG_DVB_STV0299=m
+CONFIG_DVB_CX24110=m
+CONFIG_DVB_CX24123=m
+CONFIG_DVB_TDA8083=m
+CONFIG_DVB_MT312=m
+CONFIG_DVB_VES1X93=m
+CONFIG_DVB_S5H1420=m
+CONFIG_DVB_TDA10086=m
+
+#
+# DVB-T (terrestrial) frontends
+#
+CONFIG_DVB_SP8870=m
+CONFIG_DVB_SP887X=m
+CONFIG_DVB_CX22700=m
+CONFIG_DVB_CX22702=m
+CONFIG_DVB_L64781=m
+CONFIG_DVB_TDA1004X=m
+CONFIG_DVB_NXT6000=m
+CONFIG_DVB_MT352=m
+CONFIG_DVB_ZL10353=m
+CONFIG_DVB_DIB3000MB=m
+CONFIG_DVB_DIB3000MC=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_DVB_DIB7000P=m
+
+#
+# DVB-C (cable) frontends
+#
+CONFIG_DVB_VES1820=m
+CONFIG_DVB_TDA10021=m
+CONFIG_DVB_TDA10023=m
+CONFIG_DVB_STV0297=m
+
+#
+# ATSC (North American/Korean Terrestrial/Cable DTV) frontends
+#
+CONFIG_DVB_NXT200X=m
+CONFIG_DVB_OR51211=m
+CONFIG_DVB_OR51132=m
+CONFIG_DVB_BCM3510=m
+CONFIG_DVB_LGDT330X=m
+
+#
+# Tuners/PLL support
+#
+CONFIG_DVB_PLL=m
+CONFIG_DVB_TDA826X=m
+CONFIG_DVB_TDA827X=m
+CONFIG_DVB_TUNER_QT1010=m
+CONFIG_DVB_TUNER_MT2060=m
+
+#
+# Miscellaneous devices
+#
+CONFIG_DVB_LNBP21=m
+CONFIG_DVB_ISL6421=m
+CONFIG_DVB_TUA6100=m
+CONFIG_VIDEO_SAA7146=m
+CONFIG_VIDEO_SAA7146_VV=m
+CONFIG_VIDEO_TUNER=m
+CONFIG_VIDEO_BUF=m
+CONFIG_VIDEO_BUF_DVB=m
+CONFIG_VIDEO_BTCX=m
+CONFIG_VIDEO_IR_I2C=m
+CONFIG_VIDEO_IR=m
+CONFIG_VIDEO_TVEEPROM=m
+CONFIG_DAB=y
+CONFIG_USB_DABUSB=m
+
+#
+# Graphics support
+#
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=m
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_BACKLIGHT_PROGEAR=m
+
+#
+# Display device support
+#
+CONFIG_DISPLAY_SUPPORT=m
+
+#
+# Display hardware drivers
+#
+CONFIG_VGASTATE=m
+CONFIG_VIDEO_OUTPUT_CONTROL=m
+CONFIG_FB=y
+CONFIG_FIRMWARE_EDID=y
+CONFIG_FB_DDC=m
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+CONFIG_FB_SYS_FILLRECT=m
+CONFIG_FB_SYS_COPYAREA=m
+CONFIG_FB_SYS_IMAGEBLIT=m
+CONFIG_FB_SYS_FOPS=m
+CONFIG_FB_DEFERRED_IO=y
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+CONFIG_FB_BACKLIGHT=y
+CONFIG_FB_MODE_HELPERS=y
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+CONFIG_FB_CIRRUS=m
+CONFIG_FB_PM2=m
+# CONFIG_FB_PM2_FIFO_DISCONNECT is not set
+CONFIG_FB_CYBER2000=m
+CONFIG_FB_ARC=m
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+# CONFIG_FB_VGA16 is not set
+CONFIG_FB_VESA=y
+# CONFIG_FB_HECUBA is not set
+# CONFIG_FB_HGA is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_LE80578 is not set
+CONFIG_FB_INTEL=m
+# CONFIG_FB_INTEL_DEBUG is not set
+CONFIG_FB_INTEL_I2C=y
+# CONFIG_FB_MATROX is not set
+CONFIG_FB_RADEON=m
+CONFIG_FB_RADEON_I2C=y
+CONFIG_FB_RADEON_BACKLIGHT=y
+# CONFIG_FB_RADEON_DEBUG is not set
+CONFIG_FB_ATY128=m
+CONFIG_FB_ATY128_BACKLIGHT=y
+CONFIG_FB_ATY=m
+CONFIG_FB_ATY_CT=y
+CONFIG_FB_ATY_GENERIC_LCD=y
+CONFIG_FB_ATY_GX=y
+CONFIG_FB_ATY_BACKLIGHT=y
+# CONFIG_FB_S3 is not set
+CONFIG_FB_SAVAGE=m
+CONFIG_FB_SAVAGE_I2C=y
+CONFIG_FB_SAVAGE_ACCEL=y
+CONFIG_FB_SIS=m
+CONFIG_FB_SIS_300=y
+CONFIG_FB_SIS_315=y
+# CONFIG_FB_NEOMAGIC is not set
+CONFIG_FB_KYRO=m
+CONFIG_FB_3DFX=m
+CONFIG_FB_3DFX_ACCEL=y
+CONFIG_FB_VOODOO1=m
+# CONFIG_FB_VT8623 is not set
+CONFIG_FB_TRIDENT=m
+CONFIG_FB_TRIDENT_ACCEL=y
+# CONFIG_FB_ARK is not set
+# CONFIG_FB_PM3 is not set
+CONFIG_FB_GEODE=y
+CONFIG_FB_GEODE_LX=m
+CONFIG_FB_GEODE_GX=m
+# CONFIG_FB_GEODE_GX_SET_FBSIZE is not set
+CONFIG_FB_GEODE_GX1=m
+# CONFIG_FB_SM501 is not set
+# CONFIG_FB_VIRTUAL is not set
+
+#
+# Console display driver support
+#
+CONFIG_VGA_CONSOLE=y
+# CONFIG_VGACON_SOFT_SCROLLBACK is not set
+CONFIG_VIDEO_SELECT=y
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+# CONFIG_FB_CON_DECOR is not set
+CONFIG_FONTS=y
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+CONFIG_FONT_6x11=y
+CONFIG_FONT_7x14=y
+CONFIG_FONT_PEARL_8x8=y
+CONFIG_FONT_ACORN_8x8=y
+CONFIG_FONT_MINI_4x6=y
+CONFIG_FONT_SUN8x16=y
+CONFIG_FONT_SUN12x22=y
+CONFIG_FONT_10x18=y
+CONFIG_LOGO=y
+# CONFIG_LOGO_LINUX_MONO is not set
+# CONFIG_LOGO_LINUX_VGA16 is not set
+CONFIG_LOGO_LINUX_CLUT224=y
+
+#
+# Sound
+#
+CONFIG_SOUND=y
+
+#
+# Advanced Linux Sound Architecture
+#
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=m
+CONFIG_SND_RAWMIDI=m
+CONFIG_SND_SEQUENCER=m
+CONFIG_SND_SEQ_DUMMY=m
+CONFIG_SND_OSSEMUL=y
+CONFIG_SND_MIXER_OSS=y
+CONFIG_SND_PCM_OSS=y
+CONFIG_SND_PCM_OSS_PLUGINS=y
+CONFIG_SND_SEQUENCER_OSS=y
+CONFIG_SND_RTCTIMER=m
+CONFIG_SND_SEQ_RTCTIMER_DEFAULT=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+
+#
+# Generic devices
+#
+CONFIG_SND_MPU401_UART=m
+CONFIG_SND_OPL3_LIB=m
+CONFIG_SND_VX_LIB=m
+CONFIG_SND_AC97_CODEC=m
+CONFIG_SND_DUMMY=m
+CONFIG_SND_VIRMIDI=m
+CONFIG_SND_MTPAV=m
+CONFIG_SND_MTS64=m
+CONFIG_SND_SERIAL_U16550=m
+CONFIG_SND_MPU401=m
+CONFIG_SND_PORTMAN2X4=m
+CONFIG_SND_SB_COMMON=m
+CONFIG_SND_SB16_DSP=m
+
+#
+# PCI devices
+#
+CONFIG_SND_AD1889=m
+CONFIG_SND_ALS300=m
+CONFIG_SND_ALS4000=m
+CONFIG_SND_ALI5451=m
+CONFIG_SND_ATIIXP=m
+CONFIG_SND_ATIIXP_MODEM=m
+CONFIG_SND_AU8810=m
+CONFIG_SND_AU8820=m
+CONFIG_SND_AU8830=m
+CONFIG_SND_AZT3328=m
+CONFIG_SND_BT87X=m
+CONFIG_SND_BT87X_OVERCLOCK=y
+CONFIG_SND_CA0106=m
+CONFIG_SND_CMIPCI=m
+CONFIG_SND_CS4281=m
+CONFIG_SND_CS46XX=m
+CONFIG_SND_CS46XX_NEW_DSP=y
+CONFIG_SND_CS5530=m
+CONFIG_SND_DARLA20=m
+CONFIG_SND_GINA20=m
+CONFIG_SND_LAYLA20=m
+CONFIG_SND_DARLA24=m
+CONFIG_SND_GINA24=m
+CONFIG_SND_LAYLA24=m
+CONFIG_SND_MONA=m
+CONFIG_SND_MIA=m
+CONFIG_SND_ECHO3G=m
+CONFIG_SND_INDIGO=m
+CONFIG_SND_INDIGOIO=m
+CONFIG_SND_INDIGODJ=m
+CONFIG_SND_EMU10K1=m
+CONFIG_SND_EMU10K1X=m
+CONFIG_SND_ENS1370=m
+CONFIG_SND_ENS1371=m
+CONFIG_SND_ES1938=m
+CONFIG_SND_ES1968=m
+CONFIG_SND_FM801=m
+CONFIG_SND_FM801_TEA575X_BOOL=y
+CONFIG_SND_FM801_TEA575X=m
+CONFIG_SND_HDA_INTEL=m
+CONFIG_SND_HDSP=m
+CONFIG_SND_HDSPM=m
+CONFIG_SND_ICE1712=m
+CONFIG_SND_ICE1724=m
+CONFIG_SND_INTEL8X0=m
+CONFIG_SND_INTEL8X0M=m
+CONFIG_SND_KORG1212=m
+CONFIG_SND_KORG1212_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_MAESTRO3=m
+CONFIG_SND_MAESTRO3_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_MIXART=m
+CONFIG_SND_NM256=m
+CONFIG_SND_PCXHR=m
+CONFIG_SND_RIPTIDE=m
+CONFIG_SND_RME32=m
+CONFIG_SND_RME96=m
+CONFIG_SND_RME9652=m
+CONFIG_SND_SONICVIBES=m
+CONFIG_SND_TRIDENT=m
+CONFIG_SND_VIA82XX=m
+CONFIG_SND_VIA82XX_MODEM=m
+CONFIG_SND_VX222=m
+CONFIG_SND_YMFPCI=m
+CONFIG_SND_YMFPCI_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_AC97_POWER_SAVE=y
+
+#
+# USB devices
+#
+CONFIG_SND_USB_AUDIO=m
+CONFIG_SND_USB_USX2Y=m
+CONFIG_SND_USB_CAIAQ=m
+CONFIG_SND_USB_CAIAQ_INPUT=y
+
+#
+# PCMCIA devices
+#
+CONFIG_SND_VXPOCKET=m
+CONFIG_SND_PDAUDIOCF=m
+
+#
+# System on Chip audio support
+#
+CONFIG_SND_SOC=m
+
+#
+# SoC Audio support for SuperH
+#
+
+#
+# Open Sound System
+#
+# CONFIG_SOUND_PRIME is not set
+CONFIG_AC97_BUS=m
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HID_DEBUG is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+CONFIG_USB_HIDINPUT_POWERBOOK=y
+CONFIG_HID_FF=y
+CONFIG_HID_PID=y
+CONFIG_LOGITECH_FF=y
+CONFIG_PANTHERLORD_FF=y
+CONFIG_THRUSTMASTER_FF=y
+CONFIG_ZEROPLUS_FF=y
+CONFIG_USB_HIDDEV=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+CONFIG_USB_DEVICE_CLASS=y
+CONFIG_USB_DYNAMIC_MINORS=y
+CONFIG_USB_SUSPEND=y
+# CONFIG_USB_PERSIST is not set
+# CONFIG_USB_OTG is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_EHCI_HCD=m
+CONFIG_USB_EHCI_SPLIT_ISO=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+CONFIG_USB_ISP116X_HCD=m
+CONFIG_USB_OHCI_HCD=m
+CONFIG_USB_OHCI_HCD_SSB=y
+# CONFIG_USB_OHCI_BIG_ENDIAN_DESC is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_MMIO is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_UHCI_HCD=m
+CONFIG_USB_U132_HCD=m
+CONFIG_USB_SL811_HCD=m
+CONFIG_USB_SL811_CS=m
+# CONFIG_USB_R8A66597_HCD is not set
+
+#
+# USB Device Class drivers
+#
+CONFIG_USB_ACM=m
+CONFIG_USB_PRINTER=y
+
+#
+# NOTE: USB_STORAGE enables SCSI, and 'SCSI disk support'
+#
+
+#
+# may also be needed; see USB_STORAGE Help for more information
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+CONFIG_USB_STORAGE_DATAFAB=y
+CONFIG_USB_STORAGE_FREECOM=y
+CONFIG_USB_STORAGE_DPCM=y
+CONFIG_USB_STORAGE_USBAT=y
+CONFIG_USB_STORAGE_SDDR09=y
+CONFIG_USB_STORAGE_SDDR55=y
+CONFIG_USB_STORAGE_JUMPSHOT=y
+CONFIG_USB_STORAGE_ALAUDA=y
+CONFIG_USB_STORAGE_KARMA=y
+CONFIG_USB_LIBUSUAL=y
+
+#
+# USB Imaging devices
+#
+CONFIG_USB_MDC800=m
+CONFIG_USB_MICROTEK=m
+CONFIG_USB_MON=y
+
+#
+# USB port drivers
+#
+CONFIG_USB_USS720=m
+
+#
+# USB Serial Converter support
+#
+CONFIG_USB_SERIAL=m
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_SERIAL_AIRCABLE=m
+CONFIG_USB_SERIAL_AIRPRIME=m
+CONFIG_USB_SERIAL_ARK3116=m
+CONFIG_USB_SERIAL_BELKIN=m
+CONFIG_USB_SERIAL_WHITEHEAT=m
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=m
+CONFIG_USB_SERIAL_CP2101=m
+CONFIG_USB_SERIAL_CYPRESS_M8=m
+CONFIG_USB_SERIAL_EMPEG=m
+CONFIG_USB_SERIAL_FTDI_SIO=m
+CONFIG_USB_SERIAL_FUNSOFT=m
+CONFIG_USB_SERIAL_VISOR=m
+CONFIG_USB_SERIAL_IPAQ=m
+CONFIG_USB_SERIAL_IR=m
+CONFIG_USB_SERIAL_EDGEPORT=m
+CONFIG_USB_SERIAL_EDGEPORT_TI=m
+CONFIG_USB_SERIAL_GARMIN=m
+CONFIG_USB_SERIAL_IPW=m
+CONFIG_USB_SERIAL_KEYSPAN_PDA=m
+CONFIG_USB_SERIAL_KEYSPAN=m
+CONFIG_USB_SERIAL_KEYSPAN_MPR=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28X=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28XA=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28XB=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19=y
+CONFIG_USB_SERIAL_KEYSPAN_USA18X=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19W=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19QW=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19QI=y
+CONFIG_USB_SERIAL_KEYSPAN_USA49W=y
+CONFIG_USB_SERIAL_KEYSPAN_USA49WLC=y
+CONFIG_USB_SERIAL_KLSI=m
+CONFIG_USB_SERIAL_KOBIL_SCT=m
+CONFIG_USB_SERIAL_MCT_U232=m
+CONFIG_USB_SERIAL_MOS7720=m
+CONFIG_USB_SERIAL_MOS7840=m
+CONFIG_USB_SERIAL_NAVMAN=m
+CONFIG_USB_SERIAL_PL2303=m
+# CONFIG_USB_SERIAL_OTI6858 is not set
+CONFIG_USB_SERIAL_HP4X=m
+CONFIG_USB_SERIAL_SAFE=m
+CONFIG_USB_SERIAL_SAFE_PADDED=y
+CONFIG_USB_SERIAL_SIERRAWIRELESS=m
+CONFIG_USB_SERIAL_TI=m
+CONFIG_USB_SERIAL_CYBERJACK=m
+CONFIG_USB_SERIAL_XIRCOM=m
+CONFIG_USB_SERIAL_OPTION=m
+CONFIG_USB_SERIAL_OMNINET=m
+# CONFIG_USB_SERIAL_DEBUG is not set
+CONFIG_USB_EZUSB=y
+
+#
+# USB Miscellaneous drivers
+#
+CONFIG_USB_EMI62=m
+CONFIG_USB_EMI26=m
+CONFIG_USB_ADUTUX=m
+CONFIG_USB_AUERSWALD=m
+CONFIG_USB_RIO500=m
+CONFIG_USB_LEGOTOWER=m
+CONFIG_USB_LCD=m
+CONFIG_USB_BERRY_CHARGE=m
+CONFIG_USB_LED=m
+CONFIG_USB_CYPRESS_CY7C63=m
+CONFIG_USB_CYTHERM=m
+CONFIG_USB_PHIDGET=m
+CONFIG_USB_PHIDGETKIT=m
+CONFIG_USB_PHIDGETMOTORCONTROL=m
+CONFIG_USB_PHIDGETSERVO=m
+CONFIG_USB_IDMOUSE=m
+CONFIG_USB_FTDI_ELAN=m
+CONFIG_USB_APPLEDISPLAY=m
+CONFIG_USB_SISUSBVGA=m
+# CONFIG_USB_SISUSBVGA_CON is not set
+CONFIG_USB_LD=m
+CONFIG_USB_TRANCEVIBRATOR=m
+CONFIG_USB_IOWARRIOR=m
+CONFIG_USB_TEST=m
+
+#
+# USB DSL modem support
+#
+CONFIG_USB_ATM=m
+CONFIG_USB_SPEEDTOUCH=m
+CONFIG_USB_CXACRU=m
+CONFIG_USB_UEAGLEATM=m
+CONFIG_USB_XUSBATM=m
+
+#
+# USB Gadget Support
+#
+CONFIG_USB_GADGET=m
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+CONFIG_USB_GADGET_SELECTED=y
+# CONFIG_USB_GADGET_AMD5536UDC is not set
+# CONFIG_USB_GADGET_FSL_USB2 is not set
+CONFIG_USB_GADGET_NET2280=y
+CONFIG_USB_NET2280=m
+# CONFIG_USB_GADGET_PXA2XX is not set
+# CONFIG_USB_GADGET_M66592 is not set
+# CONFIG_USB_GADGET_GOKU is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+# CONFIG_USB_GADGET_S3C2410 is not set
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+CONFIG_USB_ETH=m
+# CONFIG_USB_ETH_RNDIS is not set
+CONFIG_USB_GADGETFS=m
+CONFIG_USB_FILE_STORAGE=m
+# CONFIG_USB_FILE_STORAGE_TEST is not set
+CONFIG_USB_G_SERIAL=m
+CONFIG_USB_MIDI_GADGET=m
+CONFIG_MMC=m
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_UNSAFE_RESUME is not set
+
+#
+# MMC/SD Card Drivers
+#
+CONFIG_MMC_BLOCK=m
+CONFIG_MMC_BLOCK_BOUNCE=y
+
+#
+# MMC/SD Host Controller Drivers
+#
+CONFIG_MMC_SDHCI=m
+CONFIG_MMC_WBSD=m
+CONFIG_MMC_TIFM_SD=m
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=m
+
+#
+# LED drivers
+#
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGERS=y
+CONFIG_LEDS_TRIGGER_TIMER=m
+CONFIG_LEDS_TRIGGER_HEARTBEAT=m
+CONFIG_INFINIBAND=m
+CONFIG_INFINIBAND_USER_MAD=m
+CONFIG_INFINIBAND_USER_ACCESS=m
+CONFIG_INFINIBAND_USER_MEM=y
+CONFIG_INFINIBAND_ADDR_TRANS=y
+CONFIG_INFINIBAND_MTHCA=m
+CONFIG_INFINIBAND_MTHCA_DEBUG=y
+CONFIG_INFINIBAND_IPATH=m
+CONFIG_INFINIBAND_AMSO1100=m
+# CONFIG_INFINIBAND_AMSO1100_DEBUG is not set
+CONFIG_INFINIBAND_CXGB3=m
+# CONFIG_INFINIBAND_CXGB3_DEBUG is not set
+CONFIG_MLX4_INFINIBAND=m
+CONFIG_INFINIBAND_IPOIB=m
+# CONFIG_INFINIBAND_IPOIB_CM is not set
+CONFIG_INFINIBAND_IPOIB_DEBUG=y
+# CONFIG_INFINIBAND_IPOIB_DEBUG_DATA is not set
+CONFIG_INFINIBAND_SRP=m
+CONFIG_INFINIBAND_ISER=m
+CONFIG_EDAC=y
+
+#
+# Reporting subsystems
+#
+# CONFIG_EDAC_DEBUG is not set
+CONFIG_EDAC_MM_EDAC=m
+CONFIG_EDAC_E752X=m
+# CONFIG_EDAC_I82975X is not set
+# CONFIG_EDAC_I5000 is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+CONFIG_RTC_INTF_DEV_UIE_EMUL=y
+CONFIG_RTC_DRV_TEST=m
+
+#
+# I2C RTC drivers
+#
+CONFIG_RTC_DRV_DS1307=m
+CONFIG_RTC_DRV_DS1672=m
+CONFIG_RTC_DRV_MAX6900=m
+CONFIG_RTC_DRV_RS5C372=m
+CONFIG_RTC_DRV_ISL1208=m
+CONFIG_RTC_DRV_X1205=m
+CONFIG_RTC_DRV_PCF8563=m
+CONFIG_RTC_DRV_PCF8583=m
+CONFIG_RTC_DRV_M41T80=m
+CONFIG_RTC_DRV_M41T80_WDT=y
+
+#
+# SPI RTC drivers
+#
+CONFIG_RTC_DRV_RS5C348=m
+CONFIG_RTC_DRV_MAX6902=m
+
+#
+# Platform RTC drivers
+#
+CONFIG_RTC_DRV_CMOS=m
+CONFIG_RTC_DRV_DS1553=m
+CONFIG_RTC_DRV_STK17TA8=m
+CONFIG_RTC_DRV_DS1742=m
+CONFIG_RTC_DRV_M48T86=m
+CONFIG_RTC_DRV_M48T59=m
+CONFIG_RTC_DRV_V3020=m
+
+#
+# on-CPU RTC drivers
+#
+
+#
+# DMA Engine support
+#
+CONFIG_DMA_ENGINE=y
+
+#
+# DMA Clients
+#
+CONFIG_NET_DMA=y
+
+#
+# DMA Devices
+#
+CONFIG_INTEL_IOATDMA=m
+CONFIG_AUXDISPLAY=y
+CONFIG_KS0108=m
+CONFIG_KS0108_PORT=0x378
+CONFIG_KS0108_DELAY=2
+CONFIG_CFAG12864B=m
+CONFIG_CFAG12864B_RATE=20
+CONFIG_VIRTUALIZATION=y
+CONFIG_KVM=y
+CONFIG_KVM_INTEL=m
+CONFIG_KVM_AMD=m
+
+#
+# Userspace I/O
+#
+CONFIG_UIO=m
+CONFIG_UIO_CIF=m
+
+#
+# Firmware Drivers
+#
+CONFIG_EDD=m
+CONFIG_DELL_RBU=m
+CONFIG_DCDBAS=y
+CONFIG_DMIID=y
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+CONFIG_EXT2_FS_XIP=y
+CONFIG_FS_XIP=y
+CONFIG_EXT3_FS=y
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_EXT4DEV_FS=y
+CONFIG_EXT4DEV_FS_XATTR=y
+CONFIG_EXT4DEV_FS_POSIX_ACL=y
+CONFIG_EXT4DEV_FS_SECURITY=y
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+CONFIG_REISERFS_FS=y
+# CONFIG_REISERFS_CHECK is not set
+CONFIG_REISERFS_PROC_INFO=y
+CONFIG_REISERFS_FS_XATTR=y
+CONFIG_REISERFS_FS_POSIX_ACL=y
+CONFIG_REISERFS_FS_SECURITY=y
+CONFIG_JFS_FS=y
+CONFIG_JFS_POSIX_ACL=y
+CONFIG_JFS_SECURITY=y
+# CONFIG_JFS_DEBUG is not set
+CONFIG_JFS_STATISTICS=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_XFS_FS=y
+CONFIG_XFS_QUOTA=y
+CONFIG_XFS_SECURITY=y
+CONFIG_XFS_POSIX_ACL=y
+CONFIG_XFS_RT=y
+CONFIG_GFS2_FS=m
+CONFIG_GFS2_FS_LOCKING_NOLOCK=m
+CONFIG_GFS2_FS_LOCKING_DLM=m
+CONFIG_OCFS2_FS=m
+CONFIG_OCFS2_DEBUG_MASKLOG=y
+CONFIG_MINIX_FS=m
+CONFIG_ROMFS_FS=y
+CONFIG_INOTIFY=y
+CONFIG_INOTIFY_USER=y
+CONFIG_QUOTA=y
+CONFIG_QFMT_V1=y
+CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
+CONFIG_DNOTIFY=y
+# CONFIG_AUTOFS_FS is not set
+CONFIG_AUTOFS4_FS=y
+CONFIG_FUSE_FS=y
+CONFIG_GENERIC_ACL=y
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=y
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=y
+CONFIG_UDF_NLS=y
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_NTFS_FS=y
+# CONFIG_NTFS_DEBUG is not set
+CONFIG_NTFS_RW=y
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_KCORE=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_RAMFS=y
+CONFIG_CONFIGFS_FS=m
+
+#
+# Layered filesystems
+#
+CONFIG_ECRYPT_FS=y
+CONFIG_UNION_FS=y
+CONFIG_UNION_FS_XATTR=y
+# CONFIG_UNION_FS_DEBUG is not set
+
+#
+# Miscellaneous filesystems
+#
+CONFIG_ADFS_FS=m
+# CONFIG_ADFS_FS_RW is not set
+CONFIG_AFFS_FS=m
+CONFIG_HFS_FS=y
+CONFIG_HFSPLUS_FS=y
+CONFIG_BEFS_FS=m
+# CONFIG_BEFS_DEBUG is not set
+CONFIG_BFS_FS=m
+CONFIG_EFS_FS=m
+CONFIG_JFFS2_FS=m
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+CONFIG_JFFS2_SUMMARY=y
+CONFIG_JFFS2_FS_XATTR=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_JFFS2_FS_SECURITY=y
+CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_JFFS2_ZLIB=y
+CONFIG_JFFS2_RTIME=y
+CONFIG_JFFS2_RUBIN=y
+# CONFIG_JFFS2_CMODE_NONE is not set
+CONFIG_JFFS2_CMODE_PRIORITY=y
+# CONFIG_JFFS2_CMODE_SIZE is not set
+CONFIG_CRAMFS=m
+CONFIG_SQUASHFS=y
+CONFIG_SQUASHFS_EMBEDDED=y
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+CONFIG_SQUASHFS_VMALLOC=y
+CONFIG_VXFS_FS=m
+CONFIG_HPFS_FS=y
+CONFIG_QNX4FS_FS=y
+CONFIG_SYSV_FS=y
+CONFIG_UFS_FS=y
+# CONFIG_UFS_FS_WRITE is not set
+# CONFIG_UFS_DEBUG is not set
+
+#
+# Network File Systems
+#
+CONFIG_NFS_FS=y
+CONFIG_NFS_V3=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+CONFIG_NFS_DIRECTIO=y
+CONFIG_NFSD=y
+CONFIG_NFSD_V2_ACL=y
+CONFIG_NFSD_V3=y
+CONFIG_NFSD_V3_ACL=y
+CONFIG_NFSD_V4=y
+CONFIG_NFSD_TCP=y
+CONFIG_ROOT_NFS=y
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_EXPORTFS=y
+CONFIG_NFS_ACL_SUPPORT=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+CONFIG_SUNRPC_GSS=y
+CONFIG_SUNRPC_BIND34=y
+CONFIG_RPCSEC_GSS_KRB5=y
+CONFIG_RPCSEC_GSS_SPKM3=m
+CONFIG_SMB_FS=y
+CONFIG_SMB_NLS_DEFAULT=y
+CONFIG_SMB_NLS_REMOTE="cp437"
+CONFIG_CIFS=y
+CONFIG_CIFS_STATS=y
+CONFIG_CIFS_STATS2=y
+CONFIG_CIFS_WEAK_PW_HASH=y
+CONFIG_CIFS_XATTR=y
+CONFIG_CIFS_POSIX=y
+# CONFIG_CIFS_DEBUG2 is not set
+CONFIG_CIFS_EXPERIMENTAL=y
+CONFIG_CIFS_UPCALL=y
+CONFIG_NCP_FS=m
+CONFIG_NCPFS_PACKET_SIGNING=y
+CONFIG_NCPFS_IOCTL_LOCKING=y
+CONFIG_NCPFS_STRONG=y
+CONFIG_NCPFS_NFS_NS=y
+CONFIG_NCPFS_OS2_NS=y
+CONFIG_NCPFS_SMALLDOS=y
+CONFIG_NCPFS_NLS=y
+CONFIG_NCPFS_EXTRAS=y
+CONFIG_CODA_FS=y
+CONFIG_CODA_FS_OLD_API=y
+CONFIG_AFS_FS=m
+# CONFIG_AFS_DEBUG is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_ACORN_PARTITION=y
+CONFIG_ACORN_PARTITION_CUMANA=y
+CONFIG_ACORN_PARTITION_EESOX=y
+CONFIG_ACORN_PARTITION_ICS=y
+CONFIG_ACORN_PARTITION_ADFS=y
+CONFIG_ACORN_PARTITION_POWERTEC=y
+CONFIG_ACORN_PARTITION_RISCIX=y
+CONFIG_OSF_PARTITION=y
+CONFIG_AMIGA_PARTITION=y
+CONFIG_ATARI_PARTITION=y
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+CONFIG_LDM_PARTITION=y
+CONFIG_LDM_DEBUG=y
+CONFIG_SGI_PARTITION=y
+CONFIG_ULTRIX_PARTITION=y
+CONFIG_SUN_PARTITION=y
+CONFIG_KARMA_PARTITION=y
+CONFIG_EFI_PARTITION=y
+CONFIG_SYSV68_PARTITION=y
+
+#
+# Native Language Support
+#
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=m
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ASCII=m
+CONFIG_NLS_ISO8859_1=m
+CONFIG_NLS_ISO8859_2=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_NLS_ISO8859_4=m
+CONFIG_NLS_ISO8859_5=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NLS_ISO8859_15=m
+CONFIG_NLS_KOI8_R=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_NLS_UTF8=y
+
+#
+# Distributed Lock Manager
+#
+CONFIG_DLM=m
+# CONFIG_DLM_DEBUG is not set
+
+#
+# Instrumentation Support
+#
+# CONFIG_PROFILING is not set
+# CONFIG_KPROBES is not set
+
+#
+# Kernel hacking
+#
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_PRINTK_TIME=y
+CONFIG_ENABLE_MUST_CHECK=y
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_UNUSED_SYMBOLS=y
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_KERNEL is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_KEYS_DEBUG_PROC_KEYS is not set
+CONFIG_SECURITY=y
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+CONFIG_SECURITY_CAPABILITIES=y
+CONFIG_SECURITY_ROOTPLUG=m
+CONFIG_SECURITY_SELINUX=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
+CONFIG_SECURITY_SELINUX_DISABLE=y
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_ENABLE_SECMARK_DEFAULT is not set
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+CONFIG_XOR_BLOCKS=y
+CONFIG_ASYNC_CORE=y
+CONFIG_ASYNC_MEMCPY=y
+CONFIG_ASYNC_XOR=y
+CONFIG_CRYPTO=y
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ABLKCIPHER=m
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_HMAC=y
+CONFIG_CRYPTO_XCBC=m
+CONFIG_CRYPTO_NULL=m
+CONFIG_CRYPTO_MD4=y
+CONFIG_CRYPTO_MD5=y
+CONFIG_CRYPTO_SHA1=m
+CONFIG_CRYPTO_SHA256=m
+CONFIG_CRYPTO_SHA512=m
+CONFIG_CRYPTO_WP512=m
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_GF128MUL=m
+CONFIG_CRYPTO_ECB=y
+CONFIG_CRYPTO_CBC=y
+CONFIG_CRYPTO_PCBC=m
+CONFIG_CRYPTO_LRW=m
+CONFIG_CRYPTO_CRYPTD=m
+CONFIG_CRYPTO_DES=y
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
+CONFIG_CRYPTO_TWOFISH_X86_64=m
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_CRYPTO_AES=y
+CONFIG_CRYPTO_AES_X86_64=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_ARC4=y
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_ANUBIS=m
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_LZF=m
+CONFIG_CRYPTO_MICHAEL_MIC=m
+CONFIG_CRYPTO_CRC32C=y
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_TEST=m
+CONFIG_CRYPTO_HW=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_CRC_CCITT=m
+CONFIG_CRC16=m
+CONFIG_CRC_ITU_T=m
+CONFIG_CRC32=y
+CONFIG_CRC7=m
+CONFIG_LIBCRC32C=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=m
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=m
+CONFIG_REED_SOLOMON_DEC16=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=m
+CONFIG_TEXTSEARCH_BM=m
+CONFIG_TEXTSEARCH_FSM=m
+CONFIG_PLIST=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CHECK_SIGNATURE=y
diff -urpN linux-2.6.23-sabayon/.config.bak testtry/.config.bak
--- linux-2.6.23-sabayon/.config.bak	1970-01-01 00:00:00.000000000 +0000
+++ testtry/.config.bak	2007-10-15 16:44:18.000000000 +0000
@@ -0,0 +1,3491 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.23-sabayon
+# Mon Oct 15 16:12:33 2007
+#
+CONFIG_X86_64=y
+CONFIG_64BIT=y
+CONFIG_X86=y
+CONFIG_GENERIC_TIME=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_NONIRQ_WAKEUP=y
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CMOS_UPDATE=y
+CONFIG_ZONE_DMA32=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_SEMAPHORE_SLEEPERS=y
+CONFIG_MMU=y
+CONFIG_ZONE_DMA=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_X86_CMPXCHG=y
+CONFIG_EARLY_PRINTK=y
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_GENERIC_IOMAP=y
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+CONFIG_ARCH_POPULATES_NODE_MAP=y
+CONFIG_DMI=y
+CONFIG_AUDIT_ARCH=y
+CONFIG_GENERIC_BUG=y
+# CONFIG_ARCH_HAS_ILOG2_U32 is not set
+# CONFIG_ARCH_HAS_ILOG2_U64 is not set
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+# CONFIG_USER_NS is not set
+CONFIG_AUDIT=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_LOG_BUF_SHIFT=15
+CONFIG_CPUSETS=y
+CONFIG_SYSFS_DEPRECATED=y
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+# CONFIG_EMBEDDED is not set
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_EXTRA_PASS is not set
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_ANON_INODES=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_RT_MUTEXES=y
+# CONFIG_TINY_SHMEM is not set
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_KMOD=y
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_BLK_DEV_IO_TRACE=y
+CONFIG_BLK_DEV_BSG=y
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_AS=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+# CONFIG_DEFAULT_AS is not set
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+
+#
+# Processor type and features
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_X86_PC=y
+# CONFIG_X86_VSMP is not set
+# CONFIG_MK8 is not set
+# CONFIG_MPSC is not set
+# CONFIG_MCORE2 is not set
+CONFIG_GENERIC_CPU=y
+CONFIG_X86_L1_CACHE_BYTES=128
+CONFIG_X86_L1_CACHE_SHIFT=7
+CONFIG_X86_INTERNODE_CACHE_BYTES=128
+CONFIG_X86_TSC=y
+CONFIG_X86_GOOD_APIC=y
+CONFIG_MICROCODE=m
+CONFIG_MICROCODE_OLD_INTERFACE=y
+CONFIG_X86_MSR=y
+CONFIG_X86_CPUID=y
+CONFIG_X86_HT=y
+CONFIG_X86_IO_APIC=y
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_MTRR=y
+CONFIG_SMP=y
+CONFIG_SCHED_SMT=y
+CONFIG_SCHED_MC=y
+# CONFIG_PREEMPT_NONE is not set
+CONFIG_PREEMPT_VOLUNTARY=y
+# CONFIG_PREEMPT is not set
+CONFIG_PREEMPT_BKL=y
+CONFIG_NUMA=y
+CONFIG_K8_NUMA=y
+CONFIG_NODES_SHIFT=6
+CONFIG_X86_64_ACPI_NUMA=y
+# CONFIG_NUMA_EMU is not set
+CONFIG_ARCH_DISCONTIGMEM_ENABLE=y
+CONFIG_ARCH_DISCONTIGMEM_DEFAULT=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_SELECT_MEMORY_MODEL=y
+# CONFIG_FLATMEM_MANUAL is not set
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_NEED_MULTIPLE_NODES=y
+CONFIG_HAVE_MEMORY_PRESENT=y
+# CONFIG_SPARSEMEM_STATIC is not set
+CONFIG_SPARSEMEM_EXTREME=y
+
+#
+# Memory hotplug is currently incompatible with Software Suspend
+#
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_MIGRATION=y
+CONFIG_RESOURCES_64BIT=y
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+CONFIG_HAVE_ARCH_EARLY_PFN_TO_NID=y
+CONFIG_NR_CPUS=8
+CONFIG_PHYSICAL_ALIGN=0x200000
+CONFIG_HOTPLUG_CPU=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_HPET_TIMER=y
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_IOMMU=y
+CONFIG_CALGARY_IOMMU=y
+CONFIG_CALGARY_IOMMU_ENABLED_BY_DEFAULT=y
+CONFIG_SWIOTLB=y
+CONFIG_X86_MCE=y
+CONFIG_X86_MCE_INTEL=y
+CONFIG_X86_MCE_AMD=y
+# CONFIG_KEXEC is not set
+# CONFIG_CRASH_DUMP is not set
+# CONFIG_RELOCATABLE is not set
+CONFIG_PHYSICAL_START=0x200000
+CONFIG_SECCOMP=y
+# CONFIG_CC_STACKPROTECTOR is not set
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_K8_NB=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_ISA_DMA_API=y
+CONFIG_GENERIC_PENDING_IRQ=y
+
+#
+# Power management options
+#
+CONFIG_PM=y
+CONFIG_PM_LEGACY=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_PM_SLEEP=y
+CONFIG_SUSPEND_SMP_POSSIBLE=y
+CONFIG_SUSPEND=y
+CONFIG_HIBERNATION_SMP_POSSIBLE=y
+CONFIG_HIBERNATION=y
+CONFIG_PM_STD_PARTITION=""
+CONFIG_TOI_CORE=y
+
+#
+# Image Storage (you need at least one allocator)
+#
+CONFIG_TOI_FILE=y
+CONFIG_TOI_SWAP=y
+
+#
+# General Options
+#
+CONFIG_TOI_CRYPTO=y
+CONFIG_TOI_USERUI=y
+CONFIG_TOI_USERUI_DEFAULT_PATH="/usr/local/sbin/tuxonice_fbsplash"
+# CONFIG_TOI_KEEP_IMAGE is not set
+CONFIG_TOI_REPLACE_SWSUSP=y
+CONFIG_TOI_CHECKSUM=y
+CONFIG_TOI_DEFAULT_WAIT=25
+CONFIG_TOI=y
+CONFIG_ACPI=y
+CONFIG_ACPI_SLEEP=y
+CONFIG_ACPI_PROCFS=y
+CONFIG_ACPI_PROC_EVENT=y
+CONFIG_ACPI_AC=m
+CONFIG_ACPI_BATTERY=m
+CONFIG_ACPI_BUTTON=y
+CONFIG_ACPI_VIDEO=m
+CONFIG_ACPI_FAN=y
+CONFIG_ACPI_DOCK=y
+CONFIG_ACPI_BAY=y
+CONFIG_ACPI_PROCESSOR=y
+CONFIG_ACPI_HOTPLUG_CPU=y
+CONFIG_ACPI_THERMAL=y
+CONFIG_ACPI_NUMA=y
+CONFIG_ACPI_ASUS=y
+CONFIG_ACPI_TOSHIBA=y
+# CONFIG_ACPI_CUSTOM_DSDT is not set
+CONFIG_ACPI_BLACKLIST_YEAR=0
+# CONFIG_ACPI_DEBUG is not set
+CONFIG_ACPI_EC=y
+CONFIG_ACPI_POWER=y
+CONFIG_ACPI_SYSTEM=y
+CONFIG_X86_PM_TIMER=y
+CONFIG_ACPI_CONTAINER=y
+CONFIG_ACPI_SBS=m
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+# CONFIG_CPU_FREQ_DEBUG is not set
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_STAT_DETAILS=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
+
+#
+# CPUFreq processor drivers
+#
+CONFIG_X86_POWERNOW_K8=y
+CONFIG_X86_POWERNOW_K8_ACPI=y
+CONFIG_X86_SPEEDSTEP_CENTRINO=m
+CONFIG_X86_ACPI_CPUFREQ=y
+
+#
+# shared options
+#
+# CONFIG_X86_ACPI_CPUFREQ_PROC_INTF is not set
+# CONFIG_X86_SPEEDSTEP_LIB is not set
+
+#
+# CPU idle PM support
+#
+CONFIG_CPU_IDLE=y
+
+#
+# Governors
+#
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+
+#
+# Bus options (PCI etc.)
+#
+CONFIG_PCI=y
+CONFIG_PCI_DIRECT=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_PCIEPORTBUS=y
+CONFIG_HOTPLUG_PCI_PCIE=m
+# CONFIG_HOTPLUG_PCI_PCIE_POLL_EVENT_MODE is not set
+CONFIG_PCIEAER=y
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_PCI_MSI=y
+CONFIG_HT_IRQ=y
+
+#
+# PCCARD (PCMCIA/CardBus) support
+#
+CONFIG_PCCARD=y
+# CONFIG_PCMCIA_DEBUG is not set
+CONFIG_PCMCIA=m
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_PCMCIA_IOCTL=y
+CONFIG_CARDBUS=y
+
+#
+# PC-card bridges
+#
+CONFIG_YENTA=m
+CONFIG_YENTA_O2=y
+CONFIG_YENTA_RICOH=y
+CONFIG_YENTA_TI=y
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_YENTA_TOSHIBA=y
+CONFIG_PD6729=m
+CONFIG_I82092=m
+CONFIG_PCCARD_NONSTATIC=m
+CONFIG_HOTPLUG_PCI=m
+CONFIG_HOTPLUG_PCI_FAKE=m
+CONFIG_HOTPLUG_PCI_ACPI=m
+CONFIG_HOTPLUG_PCI_ACPI_IBM=m
+CONFIG_HOTPLUG_PCI_CPCI=y
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=m
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=m
+CONFIG_HOTPLUG_PCI_SHPC=m
+
+#
+# Executable file formats / Emulations
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_BINFMT_MISC=y
+CONFIG_IA32_EMULATION=y
+CONFIG_IA32_AOUT=y
+CONFIG_COMPAT=y
+CONFIG_COMPAT_FOR_U64_ALIGNMENT=y
+CONFIG_SYSVIPC_COMPAT=y
+
+#
+# Networking
+#
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_PACKET_MMAP=y
+CONFIG_UNIX=y
+CONFIG_XFRM=y
+CONFIG_XFRM_USER=m
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_MIGRATE=y
+CONFIG_NET_KEY=m
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_ASK_IP_FIB_HASH=y
+# CONFIG_IP_FIB_TRIE is not set
+CONFIG_IP_FIB_HASH=y
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_IP_PNP_RARP=y
+CONFIG_NET_IPIP=m
+CONFIG_NET_IPGRE=m
+CONFIG_NET_IPGRE_BROADCAST=y
+CONFIG_IP_MROUTE=y
+CONFIG_IP_PIMSM_V1=y
+CONFIG_IP_PIMSM_V2=y
+CONFIG_ARPD=y
+CONFIG_SYN_COOKIES=y
+CONFIG_INET_AH=m
+CONFIG_INET_ESP=m
+CONFIG_INET_IPCOMP=m
+CONFIG_INET_XFRM_TUNNEL=m
+CONFIG_INET_TUNNEL=m
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_TCP_CONG_BIC=y
+CONFIG_TCP_CONG_CUBIC=m
+CONFIG_TCP_CONG_WESTWOOD=m
+CONFIG_TCP_CONG_HTCP=m
+CONFIG_TCP_CONG_HSTCP=m
+CONFIG_TCP_CONG_HYBLA=m
+CONFIG_TCP_CONG_VEGAS=m
+CONFIG_TCP_CONG_SCALABLE=m
+CONFIG_TCP_CONG_LP=m
+CONFIG_TCP_CONG_VENO=m
+CONFIG_TCP_CONG_YEAH=m
+CONFIG_TCP_CONG_ILLINOIS=m
+CONFIG_DEFAULT_BIC=y
+# CONFIG_DEFAULT_CUBIC is not set
+# CONFIG_DEFAULT_HTCP is not set
+# CONFIG_DEFAULT_VEGAS is not set
+# CONFIG_DEFAULT_WESTWOOD is not set
+# CONFIG_DEFAULT_RENO is not set
+CONFIG_DEFAULT_TCP_CONG="bic"
+CONFIG_TCP_MD5SIG=y
+CONFIG_IP_VS=m
+# CONFIG_IP_VS_DEBUG is not set
+CONFIG_IP_VS_TAB_BITS=12
+
+#
+# IPVS transport protocol load balancing support
+#
+CONFIG_IP_VS_PROTO_TCP=y
+CONFIG_IP_VS_PROTO_UDP=y
+CONFIG_IP_VS_PROTO_ESP=y
+CONFIG_IP_VS_PROTO_AH=y
+
+#
+# IPVS scheduler
+#
+CONFIG_IP_VS_RR=m
+CONFIG_IP_VS_WRR=m
+CONFIG_IP_VS_LC=m
+CONFIG_IP_VS_WLC=m
+CONFIG_IP_VS_LBLC=m
+CONFIG_IP_VS_LBLCR=m
+CONFIG_IP_VS_DH=m
+CONFIG_IP_VS_SH=m
+CONFIG_IP_VS_SED=m
+CONFIG_IP_VS_NQ=m
+
+#
+# IPVS application helper
+#
+CONFIG_IP_VS_FTP=m
+CONFIG_IPV6=m
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=m
+CONFIG_INET6_ESP=m
+CONFIG_INET6_IPCOMP=m
+CONFIG_IPV6_MIP6=m
+CONFIG_INET6_XFRM_TUNNEL=m
+CONFIG_INET6_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_TRANSPORT=m
+CONFIG_INET6_XFRM_MODE_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_BEET=m
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=m
+CONFIG_IPV6_SIT=m
+CONFIG_IPV6_TUNNEL=m
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+CONFIG_NETLABEL=y
+CONFIG_NETWORK_SECMARK=y
+CONFIG_NETFILTER=y
+CONFIG_NETFILTER_DEBUG=y
+CONFIG_BRIDGE_NETFILTER=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=m
+CONFIG_NETFILTER_NETLINK_QUEUE=m
+CONFIG_NETFILTER_NETLINK_LOG=m
+CONFIG_NF_CONNTRACK_ENABLED=m
+CONFIG_NF_CONNTRACK=m
+CONFIG_NF_CT_ACCT=y
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+CONFIG_NF_CT_PROTO_GRE=m
+CONFIG_NF_CT_PROTO_SCTP=m
+# CONFIG_NF_CT_PROTO_UDPLITE is not set
+CONFIG_NF_CONNTRACK_AMANDA=m
+CONFIG_NF_CONNTRACK_FTP=m
+CONFIG_NF_CONNTRACK_H323=m
+CONFIG_NF_CONNTRACK_IRC=m
+CONFIG_NF_CONNTRACK_NETBIOS_NS=m
+CONFIG_NF_CONNTRACK_PPTP=m
+CONFIG_NF_CONNTRACK_SANE=m
+CONFIG_NF_CONNTRACK_SIP=m
+CONFIG_NF_CONNTRACK_TFTP=m
+CONFIG_NF_CT_NETLINK=m
+CONFIG_NETFILTER_XTABLES=m
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
+CONFIG_NETFILTER_XT_TARGET_DSCP=m
+CONFIG_NETFILTER_XT_TARGET_MARK=m
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
+CONFIG_NETFILTER_XT_TARGET_NFLOG=m
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
+# CONFIG_NETFILTER_XT_TARGET_TRACE is not set
+CONFIG_NETFILTER_XT_TARGET_SECMARK=m
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
+# CONFIG_NETFILTER_XT_MATCH_CONNLIMIT is not set
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+CONFIG_NETFILTER_XT_MATCH_DCCP=m
+CONFIG_NETFILTER_XT_MATCH_DSCP=m
+CONFIG_NETFILTER_XT_MATCH_ESP=m
+CONFIG_NETFILTER_XT_MATCH_HELPER=m
+CONFIG_NETFILTER_XT_MATCH_LENGTH=m
+CONFIG_NETFILTER_XT_MATCH_LIMIT=m
+CONFIG_NETFILTER_XT_MATCH_MAC=m
+CONFIG_NETFILTER_XT_MATCH_MARK=m
+CONFIG_NETFILTER_XT_MATCH_POLICY=m
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA=m
+CONFIG_NETFILTER_XT_MATCH_REALM=m
+CONFIG_NETFILTER_XT_MATCH_SCTP=m
+CONFIG_NETFILTER_XT_MATCH_STATE=m
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
+CONFIG_NETFILTER_XT_MATCH_STRING=m
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
+# CONFIG_NETFILTER_XT_MATCH_U32 is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_CONNTRACK_IPV4=m
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_IP_NF_QUEUE=m
+CONFIG_IP_NF_IPTABLES=m
+CONFIG_IP_NF_MATCH_IPRANGE=m
+CONFIG_IP_NF_MATCH_TOS=m
+CONFIG_IP_NF_MATCH_RECENT=m
+CONFIG_IP_NF_MATCH_ECN=m
+CONFIG_IP_NF_MATCH_AH=m
+CONFIG_IP_NF_MATCH_TTL=m
+CONFIG_IP_NF_MATCH_OWNER=m
+CONFIG_IP_NF_MATCH_ADDRTYPE=m
+CONFIG_IP_NF_FILTER=m
+CONFIG_IP_NF_TARGET_REJECT=m
+CONFIG_IP_NF_TARGET_LOG=m
+CONFIG_IP_NF_TARGET_ULOG=m
+CONFIG_NF_NAT=m
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_IP_NF_TARGET_REDIRECT=m
+CONFIG_IP_NF_TARGET_NETMAP=m
+CONFIG_IP_NF_TARGET_SAME=m
+CONFIG_NF_NAT_SNMP_BASIC=m
+CONFIG_NF_NAT_PROTO_GRE=m
+CONFIG_NF_NAT_FTP=m
+CONFIG_NF_NAT_IRC=m
+CONFIG_NF_NAT_TFTP=m
+CONFIG_NF_NAT_AMANDA=m
+CONFIG_NF_NAT_PPTP=m
+CONFIG_NF_NAT_H323=m
+CONFIG_NF_NAT_SIP=m
+CONFIG_IP_NF_MANGLE=m
+CONFIG_IP_NF_TARGET_TOS=m
+CONFIG_IP_NF_TARGET_ECN=m
+CONFIG_IP_NF_TARGET_TTL=m
+CONFIG_IP_NF_TARGET_CLUSTERIP=m
+CONFIG_IP_NF_RAW=m
+CONFIG_IP_NF_ARPTABLES=m
+CONFIG_IP_NF_ARPFILTER=m
+CONFIG_IP_NF_ARP_MANGLE=m
+
+#
+# IPv6: Netfilter Configuration (EXPERIMENTAL)
+#
+CONFIG_NF_CONNTRACK_IPV6=m
+CONFIG_IP6_NF_QUEUE=m
+CONFIG_IP6_NF_IPTABLES=m
+CONFIG_IP6_NF_MATCH_RT=m
+CONFIG_IP6_NF_MATCH_OPTS=m
+CONFIG_IP6_NF_MATCH_FRAG=m
+CONFIG_IP6_NF_MATCH_HL=m
+CONFIG_IP6_NF_MATCH_OWNER=m
+CONFIG_IP6_NF_MATCH_IPV6HEADER=m
+CONFIG_IP6_NF_MATCH_AH=m
+CONFIG_IP6_NF_MATCH_MH=m
+CONFIG_IP6_NF_MATCH_EUI64=m
+CONFIG_IP6_NF_FILTER=m
+CONFIG_IP6_NF_TARGET_LOG=m
+CONFIG_IP6_NF_TARGET_REJECT=m
+CONFIG_IP6_NF_MANGLE=m
+CONFIG_IP6_NF_TARGET_HL=m
+CONFIG_IP6_NF_RAW=m
+
+#
+# DECnet: Netfilter Configuration
+#
+CONFIG_DECNET_NF_GRABULATOR=m
+
+#
+# Bridge: Netfilter Configuration
+#
+CONFIG_BRIDGE_NF_EBTABLES=m
+CONFIG_BRIDGE_EBT_BROUTE=m
+CONFIG_BRIDGE_EBT_T_FILTER=m
+CONFIG_BRIDGE_EBT_T_NAT=m
+CONFIG_BRIDGE_EBT_802_3=m
+CONFIG_BRIDGE_EBT_AMONG=m
+CONFIG_BRIDGE_EBT_ARP=m
+CONFIG_BRIDGE_EBT_IP=m
+CONFIG_BRIDGE_EBT_LIMIT=m
+CONFIG_BRIDGE_EBT_MARK=m
+CONFIG_BRIDGE_EBT_PKTTYPE=m
+CONFIG_BRIDGE_EBT_STP=m
+CONFIG_BRIDGE_EBT_VLAN=m
+CONFIG_BRIDGE_EBT_ARPREPLY=m
+CONFIG_BRIDGE_EBT_DNAT=m
+CONFIG_BRIDGE_EBT_MARK_T=m
+CONFIG_BRIDGE_EBT_REDIRECT=m
+CONFIG_BRIDGE_EBT_SNAT=m
+CONFIG_BRIDGE_EBT_LOG=m
+CONFIG_BRIDGE_EBT_ULOG=m
+CONFIG_IP_DCCP=m
+CONFIG_INET_DCCP_DIAG=m
+CONFIG_IP_DCCP_ACKVEC=y
+
+#
+# DCCP CCIDs Configuration (EXPERIMENTAL)
+#
+CONFIG_IP_DCCP_CCID2=m
+# CONFIG_IP_DCCP_CCID2_DEBUG is not set
+CONFIG_IP_DCCP_CCID3=m
+CONFIG_IP_DCCP_TFRC_LIB=m
+# CONFIG_IP_DCCP_CCID3_DEBUG is not set
+CONFIG_IP_DCCP_CCID3_RTO=100
+CONFIG_IP_SCTP=m
+# CONFIG_SCTP_DBG_MSG is not set
+# CONFIG_SCTP_DBG_OBJCNT is not set
+# CONFIG_SCTP_HMAC_NONE is not set
+# CONFIG_SCTP_HMAC_SHA1 is not set
+CONFIG_SCTP_HMAC_MD5=y
+CONFIG_TIPC=m
+CONFIG_TIPC_ADVANCED=y
+CONFIG_TIPC_ZONES=3
+CONFIG_TIPC_CLUSTERS=1
+CONFIG_TIPC_NODES=255
+CONFIG_TIPC_SLAVE_NODES=0
+CONFIG_TIPC_PORTS=8191
+CONFIG_TIPC_LOG=0
+# CONFIG_TIPC_DEBUG is not set
+CONFIG_ATM=m
+CONFIG_ATM_CLIP=m
+CONFIG_ATM_CLIP_NO_ICMP=y
+CONFIG_ATM_LANE=m
+CONFIG_ATM_MPOA=m
+CONFIG_ATM_BR2684=m
+CONFIG_ATM_BR2684_IPFILTER=y
+CONFIG_BRIDGE=m
+CONFIG_VLAN_8021Q=m
+CONFIG_DECNET=m
+CONFIG_DECNET_ROUTER=y
+CONFIG_LLC=y
+CONFIG_LLC2=m
+CONFIG_IPX=m
+CONFIG_IPX_INTERN=y
+CONFIG_ATALK=m
+CONFIG_DEV_APPLETALK=m
+CONFIG_IPDDP=m
+CONFIG_IPDDP_ENCAP=y
+CONFIG_IPDDP_DECAP=y
+CONFIG_X25=m
+CONFIG_LAPB=m
+CONFIG_ECONET=m
+CONFIG_ECONET_AUNUDP=y
+CONFIG_ECONET_NATIVE=y
+CONFIG_WAN_ROUTER=m
+
+#
+# QoS and/or fair queueing
+#
+CONFIG_NET_SCHED=y
+CONFIG_NET_SCH_FIFO=y
+
+#
+# Queueing/Scheduling
+#
+CONFIG_NET_SCH_CBQ=m
+CONFIG_NET_SCH_HTB=m
+CONFIG_NET_SCH_HFSC=m
+CONFIG_NET_SCH_ATM=m
+CONFIG_NET_SCH_PRIO=m
+# CONFIG_NET_SCH_RR is not set
+CONFIG_NET_SCH_RED=m
+CONFIG_NET_SCH_SFQ=m
+CONFIG_NET_SCH_TEQL=m
+CONFIG_NET_SCH_TBF=m
+CONFIG_NET_SCH_GRED=m
+CONFIG_NET_SCH_DSMARK=m
+CONFIG_NET_SCH_NETEM=m
+CONFIG_NET_SCH_INGRESS=m
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+CONFIG_NET_CLS_BASIC=m
+CONFIG_NET_CLS_TCINDEX=m
+CONFIG_NET_CLS_ROUTE4=m
+CONFIG_NET_CLS_ROUTE=y
+CONFIG_NET_CLS_FW=m
+CONFIG_NET_CLS_U32=m
+CONFIG_CLS_U32_PERF=y
+CONFIG_CLS_U32_MARK=y
+CONFIG_NET_CLS_RSVP=m
+CONFIG_NET_CLS_RSVP6=m
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+CONFIG_NET_EMATCH_CMP=m
+CONFIG_NET_EMATCH_NBYTE=m
+CONFIG_NET_EMATCH_U32=m
+CONFIG_NET_EMATCH_META=m
+CONFIG_NET_EMATCH_TEXT=m
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_ACT_POLICE=m
+CONFIG_NET_ACT_GACT=m
+CONFIG_GACT_PROB=y
+CONFIG_NET_ACT_MIRRED=m
+CONFIG_NET_ACT_IPT=m
+CONFIG_NET_ACT_PEDIT=m
+CONFIG_NET_ACT_SIMP=m
+# CONFIG_NET_CLS_POLICE is not set
+CONFIG_NET_CLS_IND=y
+
+#
+# Network testing
+#
+CONFIG_NET_PKTGEN=m
+CONFIG_HAMRADIO=y
+
+#
+# Packet Radio protocols
+#
+CONFIG_AX25=m
+CONFIG_AX25_DAMA_SLAVE=y
+CONFIG_NETROM=m
+CONFIG_ROSE=m
+
+#
+# AX.25 network device drivers
+#
+CONFIG_MKISS=m
+CONFIG_6PACK=m
+CONFIG_BPQETHER=m
+CONFIG_BAYCOM_SER_FDX=m
+CONFIG_BAYCOM_SER_HDX=m
+CONFIG_BAYCOM_PAR=m
+CONFIG_YAM=m
+CONFIG_IRDA=m
+
+#
+# IrDA protocols
+#
+CONFIG_IRLAN=m
+CONFIG_IRNET=m
+CONFIG_IRCOMM=m
+CONFIG_IRDA_ULTRA=y
+
+#
+# IrDA options
+#
+CONFIG_IRDA_CACHE_LAST_LSAP=y
+CONFIG_IRDA_FAST_RR=y
+# CONFIG_IRDA_DEBUG is not set
+
+#
+# Infrared-port device drivers
+#
+
+#
+# SIR device drivers
+#
+CONFIG_IRTTY_SIR=m
+
+#
+# Dongle support
+#
+CONFIG_DONGLE=y
+CONFIG_ESI_DONGLE=m
+CONFIG_ACTISYS_DONGLE=m
+CONFIG_TEKRAM_DONGLE=m
+CONFIG_TOIM3232_DONGLE=m
+CONFIG_LITELINK_DONGLE=m
+CONFIG_MA600_DONGLE=m
+CONFIG_GIRBIL_DONGLE=m
+CONFIG_MCP2120_DONGLE=m
+CONFIG_OLD_BELKIN_DONGLE=m
+CONFIG_ACT200L_DONGLE=m
+CONFIG_KINGSUN_DONGLE=m
+
+#
+# Old SIR device drivers
+#
+
+#
+# Old Serial dongle support
+#
+
+#
+# FIR device drivers
+#
+CONFIG_USB_IRDA=m
+CONFIG_SIGMATEL_FIR=m
+CONFIG_NSC_FIR=m
+CONFIG_WINBOND_FIR=m
+CONFIG_SMC_IRCC_FIR=m
+CONFIG_ALI_FIR=m
+CONFIG_VLSI_FIR=m
+CONFIG_VIA_FIR=m
+CONFIG_MCS_FIR=m
+CONFIG_BT=m
+CONFIG_BT_L2CAP=m
+CONFIG_BT_SCO=m
+CONFIG_BT_RFCOMM=m
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=m
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_CMTP=m
+CONFIG_BT_HIDP=m
+
+#
+# Bluetooth device drivers
+#
+CONFIG_BT_HCIUSB=m
+CONFIG_BT_HCIUSB_SCO=y
+CONFIG_BT_HCIUART=m
+CONFIG_BT_HCIUART_H4=y
+CONFIG_BT_HCIUART_BCSP=y
+CONFIG_BT_HCIBCM203X=m
+CONFIG_BT_HCIBPA10X=m
+CONFIG_BT_HCIBFUSB=m
+CONFIG_BT_HCIDTL1=m
+CONFIG_BT_HCIBT3C=m
+CONFIG_BT_HCIBLUECARD=m
+CONFIG_BT_HCIBTUART=m
+CONFIG_BT_HCIVHCI=m
+CONFIG_AF_RXRPC=m
+# CONFIG_AF_RXRPC_DEBUG is not set
+CONFIG_RXKAD=m
+CONFIG_FIB_RULES=y
+
+#
+# Wireless
+#
+CONFIG_CFG80211=y
+CONFIG_NL80211=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_MAC80211=m
+CONFIG_MAC80211_LEDS=y
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_DEBUG is not set
+CONFIG_IEEE80211=m
+# CONFIG_IEEE80211_DEBUG is not set
+CONFIG_IEEE80211_CRYPT_WEP=m
+CONFIG_IEEE80211_CRYPT_CCMP=m
+CONFIG_IEEE80211_CRYPT_TKIP=m
+CONFIG_IEEE80211_SOFTMAC=m
+# CONFIG_IEEE80211_SOFTMAC_DEBUG is not set
+CONFIG_IEEE80211_RADIOTAP=y
+CONFIG_RFKILL=m
+CONFIG_RFKILL_INPUT=m
+CONFIG_RFKILL_LEDS=y
+# CONFIG_NET_9P is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+# CONFIG_STANDALONE is not set
+# CONFIG_PREVENT_FIRMWARE_BUILD is not set
+CONFIG_FW_LOADER=y
+# CONFIG_SYS_HYPERVISOR is not set
+CONFIG_CONNECTOR=y
+CONFIG_PROC_EVENTS=y
+CONFIG_MTD=y
+CONFIG_MTD_DEBUG=y
+CONFIG_MTD_DEBUG_VERBOSE=0
+CONFIG_MTD_CONCAT=y
+CONFIG_MTD_PARTITIONS=y
+CONFIG_MTD_REDBOOT_PARTS=m
+CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-1
+CONFIG_MTD_REDBOOT_PARTS_UNALLOCATED=y
+CONFIG_MTD_REDBOOT_PARTS_READONLY=y
+CONFIG_MTD_CMDLINE_PARTS=y
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=m
+CONFIG_MTD_BLKDEVS=m
+CONFIG_MTD_BLOCK=m
+CONFIG_MTD_BLOCK_RO=m
+CONFIG_FTL=m
+CONFIG_NFTL=m
+CONFIG_NFTL_RW=y
+CONFIG_INFTL=m
+CONFIG_RFD_FTL=m
+CONFIG_SSFDC=m
+
+#
+# RAM/ROM/Flash chip drivers
+#
+CONFIG_MTD_CFI=m
+CONFIG_MTD_JEDECPROBE=m
+CONFIG_MTD_GEN_PROBE=m
+# CONFIG_MTD_CFI_ADV_OPTIONS is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+CONFIG_MTD_CFI_INTELEXT=m
+CONFIG_MTD_CFI_AMDSTD=m
+CONFIG_MTD_CFI_STAA=m
+CONFIG_MTD_CFI_UTIL=m
+CONFIG_MTD_RAM=m
+CONFIG_MTD_ROM=m
+CONFIG_MTD_ABSENT=m
+
+#
+# Mapping drivers for chip access
+#
+CONFIG_MTD_COMPLEX_MAPPINGS=y
+CONFIG_MTD_PHYSMAP=m
+CONFIG_MTD_PHYSMAP_START=0x8000000
+CONFIG_MTD_PHYSMAP_LEN=0x4000000
+CONFIG_MTD_PHYSMAP_BANKWIDTH=2
+CONFIG_MTD_PNC2000=m
+CONFIG_MTD_SC520CDP=m
+CONFIG_MTD_NETSC520=m
+CONFIG_MTD_TS5500=m
+CONFIG_MTD_SBC_GXX=m
+CONFIG_MTD_AMD76XROM=m
+CONFIG_MTD_ICHXROM=m
+CONFIG_MTD_ESB2ROM=m
+CONFIG_MTD_CK804XROM=m
+CONFIG_MTD_SCB2_FLASH=m
+CONFIG_MTD_NETtel=m
+CONFIG_MTD_DILNETPC=m
+CONFIG_MTD_DILNETPC_BOOTSIZE=0x80000
+CONFIG_MTD_L440GX=m
+CONFIG_MTD_PCI=m
+CONFIG_MTD_PLATRAM=m
+
+#
+# Self-contained MTD device drivers
+#
+CONFIG_MTD_PMC551=m
+# CONFIG_MTD_PMC551_BUGFIX is not set
+# CONFIG_MTD_PMC551_DEBUG is not set
+CONFIG_MTD_DATAFLASH=m
+CONFIG_MTD_M25P80=m
+CONFIG_MTD_SLRAM=m
+CONFIG_MTD_PHRAM=m
+CONFIG_MTD_MTDRAM=m
+CONFIG_MTDRAM_TOTAL_SIZE=4096
+CONFIG_MTDRAM_ERASE_SIZE=128
+CONFIG_MTD_BLOCK2MTD=m
+
+#
+# Disk-On-Chip Device Drivers
+#
+CONFIG_MTD_DOC2000=m
+CONFIG_MTD_DOC2001=m
+CONFIG_MTD_DOC2001PLUS=m
+CONFIG_MTD_DOCPROBE=m
+CONFIG_MTD_DOCECC=m
+CONFIG_MTD_DOCPROBE_ADVANCED=y
+CONFIG_MTD_DOCPROBE_ADDRESS=0x0000
+CONFIG_MTD_DOCPROBE_HIGH=y
+CONFIG_MTD_DOCPROBE_55AA=y
+CONFIG_MTD_NAND=m
+CONFIG_MTD_NAND_VERIFY_WRITE=y
+# CONFIG_MTD_NAND_ECC_SMC is not set
+# CONFIG_MTD_NAND_MUSEUM_IDS is not set
+CONFIG_MTD_NAND_IDS=m
+CONFIG_MTD_NAND_DISKONCHIP=m
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADVANCED=y
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS=0x0
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_HIGH=y
+CONFIG_MTD_NAND_DISKONCHIP_BBTWRITE=y
+CONFIG_MTD_NAND_CAFE=m
+CONFIG_MTD_NAND_NANDSIM=m
+CONFIG_MTD_NAND_PLATFORM=m
+CONFIG_MTD_ONENAND=m
+CONFIG_MTD_ONENAND_VERIFY_WRITE=y
+CONFIG_MTD_ONENAND_OTP=y
+
+#
+# UBI - Unsorted block images
+#
+CONFIG_MTD_UBI=m
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_RESERVE=1
+CONFIG_MTD_UBI_GLUEBI=y
+
+#
+# UBI debugging options
+#
+# CONFIG_MTD_UBI_DEBUG is not set
+CONFIG_PARPORT=y
+CONFIG_PARPORT_PC=y
+CONFIG_PARPORT_SERIAL=m
+CONFIG_PARPORT_PC_FIFO=y
+# CONFIG_PARPORT_PC_SUPERIO is not set
+CONFIG_PARPORT_PC_PCMCIA=m
+# CONFIG_PARPORT_GSC is not set
+CONFIG_PARPORT_AX88796=m
+CONFIG_PARPORT_1284=y
+CONFIG_PARPORT_NOT_PC=y
+CONFIG_PNP=y
+# CONFIG_PNP_DEBUG is not set
+
+#
+# Protocols
+#
+CONFIG_PNPACPI=y
+CONFIG_BLK_DEV=y
+CONFIG_BLK_DEV_FD=y
+CONFIG_PARIDE=y
+
+#
+# Parallel IDE high-level drivers
+#
+CONFIG_PARIDE_PD=m
+CONFIG_PARIDE_PCD=m
+CONFIG_PARIDE_PF=m
+CONFIG_PARIDE_PT=m
+CONFIG_PARIDE_PG=m
+
+#
+# Parallel IDE protocol modules
+#
+CONFIG_PARIDE_ATEN=m
+CONFIG_PARIDE_BPCK=m
+CONFIG_PARIDE_COMM=m
+CONFIG_PARIDE_DSTR=m
+CONFIG_PARIDE_FIT2=m
+CONFIG_PARIDE_FIT3=m
+CONFIG_PARIDE_EPAT=m
+CONFIG_PARIDE_EPATC8=y
+CONFIG_PARIDE_EPIA=m
+CONFIG_PARIDE_FRIQ=m
+CONFIG_PARIDE_FRPW=m
+CONFIG_PARIDE_KBIC=m
+CONFIG_PARIDE_KTTI=m
+CONFIG_PARIDE_ON20=m
+CONFIG_PARIDE_ON26=m
+CONFIG_BLK_CPQ_DA=y
+CONFIG_BLK_CPQ_CISS_DA=y
+CONFIG_CISS_SCSI_TAPE=y
+CONFIG_BLK_DEV_DAC960=y
+CONFIG_BLK_DEV_UMEM=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_CRYPTOLOOP=y
+CONFIG_BLK_DEV_NBD=m
+CONFIG_BLK_DEV_SX8=m
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=16384
+CONFIG_BLK_DEV_RAM_BLOCKSIZE=1024
+CONFIG_CDROM_PKTCDVD=y
+CONFIG_CDROM_PKTCDVD_BUFFERS=8
+CONFIG_CDROM_PKTCDVD_WCACHE=y
+CONFIG_ATA_OVER_ETH=m
+CONFIG_MISC_DEVICES=y
+CONFIG_IBM_ASM=m
+CONFIG_PHANTOM=m
+CONFIG_EEPROM_93CX6=m
+CONFIG_SGI_IOC4=m
+CONFIG_TIFM_CORE=m
+CONFIG_TIFM_7XX1=m
+CONFIG_ACER_ACPI=m
+CONFIG_FUJITSU_LAPTOP=m
+CONFIG_MSI_LAPTOP=m
+CONFIG_SONY_LAPTOP=m
+CONFIG_SONYPI_COMPAT=y
+CONFIG_THINKPAD_ACPI=m
+# CONFIG_THINKPAD_ACPI_DEBUG is not set
+CONFIG_THINKPAD_ACPI_BAY=y
+CONFIG_THINKPAD_EC=m
+CONFIG_TP_SMAPI=m
+CONFIG_IDE=y
+# CONFIG_BLK_DEV_IDE is not set
+# CONFIG_BLK_DEV_HD_ONLY is not set
+# CONFIG_BLK_DEV_HD is not set
+
+#
+# SCSI device support
+#
+CONFIG_RAID_ATTRS=y
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=m
+CONFIG_SCSI_NETLINK=y
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+CONFIG_CHR_DEV_ST=y
+CONFIG_CHR_DEV_OSST=y
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+CONFIG_CHR_DEV_SCH=m
+
+#
+# Some SCSI devices (e.g. CD jukebox) support multiple LUNs
+#
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+CONFIG_SCSI_LOGGING=y
+CONFIG_SCSI_SCAN_ASYNC=y
+CONFIG_SCSI_WAIT_SCAN=m
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=y
+CONFIG_SCSI_FC_ATTRS=y
+CONFIG_SCSI_ISCSI_ATTRS=y
+CONFIG_SCSI_SAS_ATTRS=y
+CONFIG_SCSI_SAS_LIBSAS=y
+# CONFIG_SCSI_SAS_ATA is not set
+# CONFIG_SCSI_SAS_LIBSAS_DEBUG is not set
+CONFIG_SCSI_LOWLEVEL=y
+CONFIG_ISCSI_TCP=y
+CONFIG_BLK_DEV_3W_XXXX_RAID=y
+CONFIG_SCSI_3W_9XXX=y
+CONFIG_SCSI_ACARD=y
+CONFIG_SCSI_AACRAID=y
+CONFIG_SCSI_AIC7XXX=y
+CONFIG_AIC7XXX_CMDS_PER_DEVICE=32
+CONFIG_AIC7XXX_RESET_DELAY_MS=15000
+# CONFIG_AIC7XXX_BUILD_FIRMWARE is not set
+CONFIG_AIC7XXX_DEBUG_ENABLE=y
+CONFIG_AIC7XXX_DEBUG_MASK=0
+CONFIG_AIC7XXX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC7XXX_OLD=y
+CONFIG_SCSI_AIC79XX=y
+CONFIG_AIC79XX_CMDS_PER_DEVICE=32
+CONFIG_AIC79XX_RESET_DELAY_MS=15000
+# CONFIG_AIC79XX_BUILD_FIRMWARE is not set
+CONFIG_AIC79XX_DEBUG_ENABLE=y
+CONFIG_AIC79XX_DEBUG_MASK=0
+CONFIG_AIC79XX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC94XX=y
+# CONFIG_AIC94XX_DEBUG is not set
+CONFIG_SCSI_ARCMSR=y
+CONFIG_MEGARAID_NEWGEN=y
+CONFIG_MEGARAID_MM=y
+CONFIG_MEGARAID_MAILBOX=y
+CONFIG_MEGARAID_LEGACY=y
+CONFIG_MEGARAID_SAS=y
+CONFIG_SCSI_HPTIOP=y
+CONFIG_SCSI_BUSLOGIC=y
+# CONFIG_SCSI_OMIT_FLASHPOINT is not set
+CONFIG_SCSI_DMX3191D=y
+CONFIG_SCSI_EATA=y
+CONFIG_SCSI_EATA_TAGGED_QUEUE=y
+CONFIG_SCSI_EATA_LINKED_COMMANDS=y
+CONFIG_SCSI_EATA_MAX_TAGS=16
+CONFIG_SCSI_FUTURE_DOMAIN=m
+CONFIG_SCSI_GDTH=y
+CONFIG_SCSI_IPS=y
+CONFIG_SCSI_INITIO=y
+CONFIG_SCSI_INIA100=y
+CONFIG_SCSI_PPA=m
+CONFIG_SCSI_IMM=m
+# CONFIG_SCSI_IZIP_EPP16 is not set
+# CONFIG_SCSI_IZIP_SLOW_CTR is not set
+CONFIG_SCSI_STEX=y
+CONFIG_SCSI_SYM53C8XX_2=y
+CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=1
+CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS=16
+CONFIG_SCSI_SYM53C8XX_MAX_TAGS=64
+CONFIG_SCSI_SYM53C8XX_MMIO=y
+CONFIG_SCSI_IPR=y
+CONFIG_SCSI_IPR_TRACE=y
+CONFIG_SCSI_IPR_DUMP=y
+CONFIG_SCSI_QLOGIC_1280=y
+CONFIG_SCSI_QLA_FC=y
+CONFIG_SCSI_QLA_ISCSI=y
+CONFIG_SCSI_LPFC=y
+CONFIG_SCSI_DC395x=y
+CONFIG_SCSI_DC390T=y
+# CONFIG_SCSI_DEBUG is not set
+CONFIG_SCSI_SRP=m
+# CONFIG_SCSI_LOWLEVEL_PCMCIA is not set
+CONFIG_ATA=y
+# CONFIG_ATA_NONSTANDARD is not set
+CONFIG_ATA_ACPI=y
+CONFIG_SATA_AHCI=y
+CONFIG_SATA_SVW=y
+CONFIG_ATA_PIIX=y
+CONFIG_SATA_MV=y
+CONFIG_SATA_NV=y
+CONFIG_PDC_ADMA=y
+CONFIG_SATA_QSTOR=y
+CONFIG_SATA_PROMISE=y
+CONFIG_SATA_SX4=y
+CONFIG_SATA_SIL=y
+CONFIG_SATA_SIL24=y
+CONFIG_SATA_SIS=y
+CONFIG_SATA_ULI=y
+CONFIG_SATA_VIA=y
+CONFIG_SATA_VITESSE=y
+CONFIG_SATA_INIC162X=y
+CONFIG_PATA_ALI=y
+CONFIG_PATA_AMD=y
+CONFIG_PATA_ARTOP=y
+CONFIG_PATA_ATIIXP=y
+CONFIG_PATA_CMD640_PCI=y
+CONFIG_PATA_CMD64X=y
+CONFIG_PATA_CS5520=y
+CONFIG_PATA_CS5530=y
+CONFIG_PATA_CYPRESS=y
+CONFIG_PATA_EFAR=y
+CONFIG_ATA_GENERIC=y
+CONFIG_PATA_HPT366=y
+CONFIG_PATA_HPT37X=y
+CONFIG_PATA_HPT3X2N=y
+CONFIG_PATA_HPT3X3=y
+CONFIG_PATA_HPT3X3_DMA=y
+CONFIG_PATA_IT821X=y
+CONFIG_PATA_IT8213=y
+CONFIG_PATA_JMICRON=y
+CONFIG_PATA_TRIFLEX=y
+CONFIG_PATA_MARVELL=y
+CONFIG_PATA_MPIIX=y
+CONFIG_PATA_OLDPIIX=y
+CONFIG_PATA_NETCELL=y
+CONFIG_PATA_NS87410=y
+CONFIG_PATA_OPTI=y
+CONFIG_PATA_OPTIDMA=y
+CONFIG_PATA_PCMCIA=m
+CONFIG_PATA_PDC_OLD=y
+CONFIG_PATA_RADISYS=y
+CONFIG_PATA_RZ1000=y
+CONFIG_PATA_SC1200=y
+CONFIG_PATA_SERVERWORKS=y
+CONFIG_PATA_PDC2027X=y
+CONFIG_PATA_SIL680=y
+CONFIG_PATA_SIS=y
+CONFIG_PATA_VIA=y
+CONFIG_PATA_WINBOND=y
+CONFIG_MD=y
+CONFIG_BLK_DEV_MD=y
+CONFIG_MD_LINEAR=y
+CONFIG_MD_RAID0=y
+CONFIG_MD_RAID1=y
+CONFIG_MD_RAID10=y
+CONFIG_MD_RAID456=y
+CONFIG_MD_RAID5_RESHAPE=y
+CONFIG_MD_MULTIPATH=y
+CONFIG_MD_FAULTY=y
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_CRYPT=y
+CONFIG_DM_SNAPSHOT=y
+CONFIG_DM_MIRROR=y
+CONFIG_DM_ZERO=y
+CONFIG_DM_MULTIPATH=m
+CONFIG_DM_MULTIPATH_EMC=m
+CONFIG_DM_MULTIPATH_RDAC=m
+CONFIG_DM_DELAY=m
+
+#
+# Fusion MPT device support
+#
+CONFIG_FUSION=y
+CONFIG_FUSION_SPI=y
+CONFIG_FUSION_FC=y
+CONFIG_FUSION_SAS=y
+CONFIG_FUSION_MAX_SGE=128
+CONFIG_FUSION_CTL=y
+CONFIG_FUSION_LAN=y
+CONFIG_FUSION_LOGGING=y
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+CONFIG_IEEE1394=y
+
+#
+# Subsystem Options
+#
+# CONFIG_IEEE1394_VERBOSEDEBUG is not set
+
+#
+# Controllers
+#
+CONFIG_IEEE1394_PCILYNX=m
+CONFIG_IEEE1394_OHCI1394=y
+
+#
+# Protocols
+#
+CONFIG_IEEE1394_VIDEO1394=m
+CONFIG_IEEE1394_SBP2=y
+# CONFIG_IEEE1394_SBP2_PHYS_DMA is not set
+# CONFIG_IEEE1394_ETH1394_ROM_ENTRY is not set
+# CONFIG_IEEE1394_ETH1394 is not set
+CONFIG_IEEE1394_DV1394=m
+CONFIG_IEEE1394_RAWIO=m
+CONFIG_I2O=y
+CONFIG_I2O_LCT_NOTIFY_ON_CHANGES=y
+CONFIG_I2O_EXT_ADAPTEC=y
+CONFIG_I2O_EXT_ADAPTEC_DMA64=y
+CONFIG_I2O_CONFIG=y
+CONFIG_I2O_CONFIG_OLD_IOCTL=y
+CONFIG_I2O_BUS=y
+CONFIG_I2O_BLOCK=y
+CONFIG_I2O_SCSI=y
+CONFIG_I2O_PROC=y
+CONFIG_MACINTOSH_DRIVERS=y
+CONFIG_MAC_EMUMOUSEBTN=y
+CONFIG_NETDEVICES=y
+# CONFIG_NETDEVICES_MULTIQUEUE is not set
+CONFIG_IFB=m
+CONFIG_DUMMY=m
+CONFIG_BONDING=m
+# CONFIG_MACVLAN is not set
+CONFIG_EQUALIZER=m
+CONFIG_TUN=m
+CONFIG_NET_SB1000=m
+CONFIG_ARCNET=m
+CONFIG_ARCNET_1201=m
+CONFIG_ARCNET_1051=m
+CONFIG_ARCNET_RAW=m
+CONFIG_ARCNET_CAP=m
+CONFIG_ARCNET_COM90xx=m
+CONFIG_ARCNET_COM90xxIO=m
+CONFIG_ARCNET_RIM_I=m
+CONFIG_ARCNET_COM20020=m
+CONFIG_ARCNET_COM20020_PCI=m
+CONFIG_PHYLIB=m
+
+#
+# MII PHY device drivers
+#
+CONFIG_MARVELL_PHY=m
+CONFIG_DAVICOM_PHY=m
+CONFIG_QSEMI_PHY=m
+CONFIG_LXT_PHY=m
+CONFIG_CICADA_PHY=m
+CONFIG_VITESSE_PHY=m
+CONFIG_SMSC_PHY=m
+CONFIG_BROADCOM_PHY=m
+# CONFIG_ICPLUS_PHY is not set
+CONFIG_FIXED_PHY=m
+CONFIG_FIXED_MII_10_FDX=y
+CONFIG_FIXED_MII_100_FDX=y
+CONFIG_NET_ETHERNET=y
+CONFIG_MII=y
+CONFIG_HAPPYMEAL=m
+CONFIG_SUNGEM=m
+CONFIG_CASSINI=m
+CONFIG_NET_VENDOR_3COM=y
+CONFIG_VORTEX=m
+CONFIG_TYPHOON=m
+CONFIG_NET_TULIP=y
+CONFIG_DE2104X=m
+CONFIG_TULIP=m
+# CONFIG_TULIP_MWI is not set
+# CONFIG_TULIP_MMIO is not set
+# CONFIG_TULIP_NAPI is not set
+CONFIG_DE4X5=m
+CONFIG_WINBOND_840=m
+CONFIG_DM9102=m
+CONFIG_ULI526X=m
+CONFIG_PCMCIA_XIRCOM=m
+CONFIG_HP100=y
+CONFIG_NET_PCI=y
+CONFIG_PCNET32=m
+# CONFIG_PCNET32_NAPI is not set
+CONFIG_AMD8111_ETH=m
+# CONFIG_AMD8111E_NAPI is not set
+CONFIG_ADAPTEC_STARFIRE=m
+# CONFIG_ADAPTEC_STARFIRE_NAPI is not set
+CONFIG_B44=m
+CONFIG_B44_PCI_AUTOSELECT=y
+CONFIG_B44_PCICORE_AUTOSELECT=y
+CONFIG_B44_PCI=y
+CONFIG_FORCEDETH=m
+# CONFIG_FORCEDETH_NAPI is not set
+CONFIG_DGRS=m
+CONFIG_EEPRO100=m
+CONFIG_E100=m
+CONFIG_FEALNX=m
+CONFIG_NATSEMI=m
+CONFIG_NE2K_PCI=m
+CONFIG_8139CP=m
+CONFIG_8139TOO=m
+# CONFIG_8139TOO_PIO is not set
+CONFIG_8139TOO_TUNE_TWISTER=y
+CONFIG_8139TOO_8129=y
+CONFIG_8139_OLD_RX_RESET=y
+CONFIG_SIS900=m
+CONFIG_EPIC100=m
+CONFIG_SUNDANCE=m
+# CONFIG_SUNDANCE_MMIO is not set
+CONFIG_VIA_RHINE=m
+# CONFIG_VIA_RHINE_MMIO is not set
+# CONFIG_VIA_RHINE_NAPI is not set
+CONFIG_SC92031=m
+CONFIG_NET_POCKET=y
+CONFIG_ATP=m
+CONFIG_DE600=m
+CONFIG_DE620=m
+CONFIG_NETDEV_1000=y
+CONFIG_ACENIC=m
+# CONFIG_ACENIC_OMIT_TIGON_I is not set
+CONFIG_DL2K=m
+CONFIG_E1000=m
+# CONFIG_E1000_NAPI is not set
+# CONFIG_E1000_DISABLE_PACKET_SPLIT is not set
+CONFIG_NS83820=m
+CONFIG_HAMACHI=m
+CONFIG_YELLOWFIN=m
+CONFIG_R8169=m
+# CONFIG_R8169_NAPI is not set
+CONFIG_R8169_VLAN=y
+CONFIG_SIS190=m
+CONFIG_SKGE=m
+CONFIG_SKY2=m
+# CONFIG_SKY2_DEBUG is not set
+CONFIG_SK98LIN=m
+CONFIG_VIA_VELOCITY=m
+CONFIG_TIGON3=m
+CONFIG_BNX2=m
+CONFIG_QLA3XXX=m
+CONFIG_ATL1=m
+CONFIG_NETDEV_10000=y
+CONFIG_CHELSIO_T1=m
+# CONFIG_CHELSIO_T1_1G is not set
+CONFIG_CHELSIO_T1_NAPI=y
+CONFIG_CHELSIO_T3=m
+CONFIG_IXGB=m
+# CONFIG_IXGB_NAPI is not set
+CONFIG_S2IO=m
+# CONFIG_S2IO_NAPI is not set
+CONFIG_MYRI10GE=m
+CONFIG_NETXEN_NIC=m
+CONFIG_MLX4_CORE=m
+CONFIG_MLX4_DEBUG=y
+CONFIG_TR=y
+CONFIG_IBMOL=m
+CONFIG_3C359=m
+CONFIG_TMS380TR=m
+CONFIG_TMSPCI=m
+CONFIG_ABYSS=m
+
+#
+# Wireless LAN
+#
+CONFIG_WLAN_PRE80211=y
+CONFIG_STRIP=m
+CONFIG_PCMCIA_WAVELAN=m
+CONFIG_PCMCIA_NETWAVE=m
+CONFIG_WLAN_80211=y
+CONFIG_PCMCIA_RAYCS=m
+CONFIG_IPW2100=m
+CONFIG_IPW2100_MONITOR=y
+# CONFIG_IPW2100_DEBUG is not set
+CONFIG_IPW2200=m
+CONFIG_IPW2200_MONITOR=y
+CONFIG_IPW2200_RADIOTAP=y
+CONFIG_IPW2200_PROMISCUOUS=y
+CONFIG_IPW2200_QOS=y
+# CONFIG_IPW2200_DEBUG is not set
+CONFIG_LIBERTAS=m
+CONFIG_LIBERTAS_USB=m
+CONFIG_LIBERTAS_CS=m
+# CONFIG_LIBERTAS_DEBUG is not set
+CONFIG_AIRO=m
+CONFIG_HERMES=m
+CONFIG_PLX_HERMES=m
+CONFIG_TMD_HERMES=m
+CONFIG_NORTEL_HERMES=m
+CONFIG_PCI_HERMES=m
+CONFIG_PCMCIA_HERMES=m
+CONFIG_PCMCIA_SPECTRUM=m
+CONFIG_ATMEL=m
+CONFIG_PCI_ATMEL=m
+CONFIG_PCMCIA_ATMEL=m
+CONFIG_USB_ATMEL=m
+CONFIG_AIRO_CS=m
+CONFIG_PCMCIA_WL3501=m
+CONFIG_PRISM54=m
+CONFIG_USB_ZD1201=m
+CONFIG_RTL8187=m
+CONFIG_ADM8211=m
+CONFIG_P54_COMMON=m
+CONFIG_P54_USB=m
+CONFIG_P54_PCI=m
+CONFIG_ATH5K=m
+CONFIG_HOSTAP=m
+CONFIG_HOSTAP_FIRMWARE=y
+CONFIG_HOSTAP_FIRMWARE_NVRAM=y
+CONFIG_HOSTAP_PLX=m
+CONFIG_HOSTAP_PCI=m
+CONFIG_HOSTAP_CS=m
+CONFIG_ACX=m
+CONFIG_ACX_PCI=y
+CONFIG_ACX_USB=y
+# CONFIG_BCM43XX is not set
+CONFIG_B43=m
+CONFIG_B43_PCI_AUTOSELECT=y
+CONFIG_B43_PCICORE_AUTOSELECT=y
+CONFIG_B43_PCMCIA=y
+CONFIG_B43_LEDS=y
+CONFIG_B43_RFKILL=y
+# CONFIG_B43_DEBUG is not set
+CONFIG_B43_DMA=y
+CONFIG_B43_PIO=y
+CONFIG_B43_DMA_AND_PIO_MODE=y
+# CONFIG_B43_DMA_MODE is not set
+# CONFIG_B43_PIO_MODE is not set
+CONFIG_B43LEGACY=m
+CONFIG_B43LEGACY_PCI_AUTOSELECT=y
+CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
+# CONFIG_B43LEGACY_DEBUG is not set
+CONFIG_B43LEGACY_DMA=y
+CONFIG_B43LEGACY_PIO=y
+CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
+# CONFIG_B43LEGACY_DMA_MODE is not set
+# CONFIG_B43LEGACY_PIO_MODE is not set
+CONFIG_ZD1211RW=m
+# CONFIG_ZD1211RW_DEBUG is not set
+CONFIG_RT2X00=m
+CONFIG_RT2X00_LIB=m
+CONFIG_RT2X00_LIB_PCI=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_RT2X00_LIB_RFKILL=y
+CONFIG_RT2400PCI=m
+CONFIG_RT2400PCI_RFKILL=y
+CONFIG_RT2500PCI=m
+CONFIG_RT2500PCI_RFKILL=y
+CONFIG_RT61PCI=m
+CONFIG_RT61PCI_RFKILL=y
+CONFIG_RT2500USB=m
+CONFIG_RT73USB=m
+# CONFIG_RT2X00_DEBUG is not set
+CONFIG_IWLWIFI=y
+# CONFIG_IWLWIFI_DEBUG is not set
+CONFIG_IWLWIFI_SENSITIVITY=y
+CONFIG_IWLWIFI_SPECTRUM_MEASUREMENT=y
+CONFIG_IWLWIFI_QOS=y
+CONFIG_IWL4965=m
+# CONFIG_IWL3945 is not set
+CONFIG_ZD1211RW_MAC80211=m
+# CONFIG_ZD1211RW_MAC80211_DEBUG is not set
+CONFIG_IPW3945=m
+# CONFIG_IPW3945_DEBUG is not set
+CONFIG_IPW3945_MONITOR=y
+CONFIG_IPW3945_PROMISCUOUS=y
+CONFIG_IPW3945_SIM_RX=y
+
+#
+# USB Network Adapters
+#
+CONFIG_USB_CATC=m
+CONFIG_USB_KAWETH=m
+CONFIG_USB_PEGASUS=m
+CONFIG_USB_RTL8150=m
+CONFIG_USB_USBNET_MII=m
+CONFIG_USB_USBNET=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_USB_NET_CDCETHER=m
+CONFIG_USB_NET_DM9601=m
+CONFIG_USB_NET_GL620A=m
+CONFIG_USB_NET_NET1080=m
+CONFIG_USB_NET_PLUSB=m
+CONFIG_USB_NET_MCS7830=m
+CONFIG_USB_NET_RNDIS_HOST=m
+CONFIG_USB_NET_CDC_SUBSET=m
+CONFIG_USB_ALI_M5632=y
+CONFIG_USB_AN2720=y
+CONFIG_USB_BELKIN=y
+CONFIG_USB_ARMLINUX=y
+CONFIG_USB_EPSON2888=y
+CONFIG_USB_KC2190=y
+CONFIG_USB_NET_ZAURUS=m
+CONFIG_NET_PCMCIA=y
+CONFIG_PCMCIA_3C589=m
+CONFIG_PCMCIA_3C574=m
+CONFIG_PCMCIA_FMVJ18X=m
+CONFIG_PCMCIA_PCNET=m
+CONFIG_PCMCIA_NMCLAN=m
+CONFIG_PCMCIA_SMC91C92=m
+CONFIG_PCMCIA_XIRC2PS=m
+CONFIG_PCMCIA_AXNET=m
+CONFIG_ARCNET_COM20020_CS=m
+CONFIG_WAN=y
+CONFIG_LANMEDIA=m
+CONFIG_HDLC=m
+CONFIG_HDLC_RAW=m
+CONFIG_HDLC_RAW_ETH=m
+CONFIG_HDLC_CISCO=m
+CONFIG_HDLC_FR=m
+CONFIG_HDLC_PPP=m
+CONFIG_HDLC_X25=m
+CONFIG_PCI200SYN=m
+CONFIG_WANXL=m
+# CONFIG_WANXL_BUILD_FIRMWARE is not set
+CONFIG_PC300=m
+# CONFIG_PC300_MLPPP is not set
+
+#
+# Cyclades-PC300 MLPPP support is disabled.
+#
+
+#
+# Refer to the file README.mlppp, provided by PC300 package.
+#
+# CONFIG_PC300TOO is not set
+CONFIG_FARSYNC=m
+CONFIG_DSCC4=m
+# CONFIG_DSCC4_PCISYNC is not set
+# CONFIG_DSCC4_PCI_RST is not set
+CONFIG_DLCI=m
+CONFIG_DLCI_MAX=8
+CONFIG_WAN_ROUTER_DRIVERS=m
+CONFIG_CYCLADES_SYNC=m
+CONFIG_CYCLOMX_X25=y
+CONFIG_LAPBETHER=m
+CONFIG_X25_ASY=m
+CONFIG_SBNI=m
+# CONFIG_SBNI_MULTILINE is not set
+CONFIG_ATM_DRIVERS=y
+# CONFIG_ATM_DUMMY is not set
+CONFIG_ATM_TCP=m
+CONFIG_ATM_LANAI=m
+CONFIG_ATM_ENI=m
+# CONFIG_ATM_ENI_DEBUG is not set
+# CONFIG_ATM_ENI_TUNE_BURST is not set
+CONFIG_ATM_FIRESTREAM=m
+CONFIG_ATM_ZATM=m
+# CONFIG_ATM_ZATM_DEBUG is not set
+CONFIG_ATM_IDT77252=m
+# CONFIG_ATM_IDT77252_DEBUG is not set
+# CONFIG_ATM_IDT77252_RCV_ALL is not set
+CONFIG_ATM_IDT77252_USE_SUNI=y
+CONFIG_ATM_AMBASSADOR=m
+# CONFIG_ATM_AMBASSADOR_DEBUG is not set
+CONFIG_ATM_HORIZON=m
+# CONFIG_ATM_HORIZON_DEBUG is not set
+CONFIG_ATM_FORE200E_MAYBE=m
+# CONFIG_ATM_FORE200E_PCA is not set
+CONFIG_ATM_HE=m
+# CONFIG_ATM_HE_USE_SUNI is not set
+CONFIG_FDDI=y
+CONFIG_DEFXX=m
+# CONFIG_DEFXX_MMIO is not set
+CONFIG_SKFP=m
+CONFIG_HIPPI=y
+CONFIG_ROADRUNNER=m
+# CONFIG_ROADRUNNER_LARGE_RINGS is not set
+CONFIG_PLIP=m
+CONFIG_PPP=m
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_ASYNC=m
+CONFIG_PPP_SYNC_TTY=m
+CONFIG_PPP_DEFLATE=m
+CONFIG_PPP_BSDCOMP=m
+CONFIG_PPP_MPPE=m
+CONFIG_PPPOE=m
+CONFIG_PPPOATM=m
+CONFIG_PPPOL2TP=m
+CONFIG_SLIP=m
+CONFIG_SLIP_COMPRESSED=y
+CONFIG_SLHC=m
+CONFIG_SLIP_SMART=y
+# CONFIG_SLIP_MODE_SLIP6 is not set
+CONFIG_NET_FC=y
+CONFIG_SHAPER=m
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+CONFIG_ISDN=m
+# CONFIG_ISDN_I4L is not set
+CONFIG_ISDN_CAPI=m
+# CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON is not set
+CONFIG_CAPI_TRACE=y
+CONFIG_ISDN_CAPI_MIDDLEWARE=y
+CONFIG_ISDN_CAPI_CAPI20=m
+CONFIG_ISDN_CAPI_CAPIFS_BOOL=y
+CONFIG_ISDN_CAPI_CAPIFS=m
+
+#
+# CAPI hardware drivers
+#
+CONFIG_CAPI_AVM=y
+CONFIG_ISDN_DRV_AVMB1_B1PCI=m
+CONFIG_ISDN_DRV_AVMB1_B1PCIV4=y
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=m
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=m
+CONFIG_ISDN_DRV_AVMB1_T1PCI=m
+CONFIG_ISDN_DRV_AVMB1_C4=m
+CONFIG_CAPI_EICON=y
+CONFIG_ISDN_DIVAS=m
+CONFIG_ISDN_DIVAS_BRIPCI=y
+CONFIG_ISDN_DIVAS_PRIPCI=y
+CONFIG_ISDN_DIVAS_DIVACAPI=m
+CONFIG_ISDN_DIVAS_USERIDI=m
+CONFIG_ISDN_DIVAS_MAINT=m
+CONFIG_PHONE=m
+CONFIG_PHONE_IXJ=m
+CONFIG_PHONE_IXJ_PCMCIA=m
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=y
+CONFIG_INPUT_POLLDEV=m
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_INPUT_JOYDEV=m
+CONFIG_INPUT_TSDEV=y
+CONFIG_INPUT_TSDEV_SCREEN_X=1024
+CONFIG_INPUT_TSDEV_SCREEN_Y=768
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_KEYBOARD_ATKBD=y
+CONFIG_KEYBOARD_SUNKBD=y
+CONFIG_KEYBOARD_LKKBD=y
+CONFIG_KEYBOARD_XTKBD=y
+CONFIG_KEYBOARD_NEWTON=y
+CONFIG_KEYBOARD_STOWAWAY=y
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_SERIAL=y
+CONFIG_MOUSE_APPLETOUCH=m
+CONFIG_MOUSE_VSXXXAA=m
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_JOYSTICK_ANALOG=m
+CONFIG_JOYSTICK_A3D=m
+CONFIG_JOYSTICK_ADI=m
+CONFIG_JOYSTICK_COBRA=m
+CONFIG_JOYSTICK_GF2K=m
+CONFIG_JOYSTICK_GRIP=m
+CONFIG_JOYSTICK_GRIP_MP=m
+CONFIG_JOYSTICK_GUILLEMOT=m
+CONFIG_JOYSTICK_INTERACT=m
+CONFIG_JOYSTICK_SIDEWINDER=m
+CONFIG_JOYSTICK_TMDC=m
+CONFIG_JOYSTICK_IFORCE=m
+CONFIG_JOYSTICK_IFORCE_USB=y
+CONFIG_JOYSTICK_IFORCE_232=y
+CONFIG_JOYSTICK_WARRIOR=m
+CONFIG_JOYSTICK_MAGELLAN=m
+CONFIG_JOYSTICK_SPACEORB=m
+CONFIG_JOYSTICK_SPACEBALL=m
+CONFIG_JOYSTICK_STINGER=m
+CONFIG_JOYSTICK_TWIDJOY=m
+CONFIG_JOYSTICK_DB9=m
+CONFIG_JOYSTICK_GAMECON=m
+CONFIG_JOYSTICK_TURBOGRAFX=m
+CONFIG_JOYSTICK_JOYDUMP=m
+CONFIG_JOYSTICK_XPAD=m
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_INPUT_TABLET=y
+CONFIG_TABLET_USB_ACECAD=m
+CONFIG_TABLET_USB_AIPTEK=m
+CONFIG_TABLET_USB_GTCO=m
+CONFIG_TABLET_USB_KBTAB=m
+CONFIG_TABLET_USB_WACOM=m
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_TOUCHSCREEN_ADS7846=m
+CONFIG_TOUCHSCREEN_FUJITSU=m
+CONFIG_TOUCHSCREEN_GUNZE=m
+CONFIG_TOUCHSCREEN_ELO=m
+CONFIG_TOUCHSCREEN_MTOUCH=m
+CONFIG_TOUCHSCREEN_MK712=m
+CONFIG_TOUCHSCREEN_PENMOUNT=m
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=m
+CONFIG_TOUCHSCREEN_TOUCHWIN=m
+CONFIG_TOUCHSCREEN_UCB1400=m
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=m
+CONFIG_TOUCHSCREEN_USB_EGALAX=y
+CONFIG_TOUCHSCREEN_USB_PANJIT=y
+CONFIG_TOUCHSCREEN_USB_3M=y
+CONFIG_TOUCHSCREEN_USB_ITM=y
+CONFIG_TOUCHSCREEN_USB_ETURBO=y
+CONFIG_TOUCHSCREEN_USB_GUNZE=y
+CONFIG_TOUCHSCREEN_USB_DMC_TSC10=y
+CONFIG_TOUCHSCREEN_USB_IRTOUCH=y
+CONFIG_INPUT_MISC=y
+CONFIG_INPUT_PCSPKR=m
+CONFIG_INPUT_ATLAS_BTNS=m
+CONFIG_INPUT_ATI_REMOTE=m
+CONFIG_INPUT_ATI_REMOTE2=m
+CONFIG_USB_APPLEIR=m
+CONFIG_INPUT_KEYSPAN_REMOTE=m
+CONFIG_INPUT_POWERMATE=m
+CONFIG_INPUT_YEALINK=m
+CONFIG_INPUT_UINPUT=m
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_I8042=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_CT82C710=y
+CONFIG_SERIO_PARKBD=y
+CONFIG_SERIO_PCIPS2=y
+CONFIG_SERIO_LIBPS2=y
+CONFIG_SERIO_RAW=m
+CONFIG_GAMEPORT=m
+CONFIG_GAMEPORT_NS558=m
+CONFIG_GAMEPORT_L4=m
+CONFIG_GAMEPORT_EMU10K1=m
+CONFIG_GAMEPORT_FM801=m
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_VT_CONSOLE=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_SERIAL_NONSTANDARD=y
+CONFIG_COMPUTONE=m
+CONFIG_ROCKETPORT=m
+CONFIG_CYCLADES=m
+# CONFIG_CYZ_INTR is not set
+CONFIG_DIGIEPCA=m
+CONFIG_MOXA_INTELLIO=m
+CONFIG_MOXA_SMARTIO=m
+CONFIG_MOXA_SMARTIO_NEW=m
+CONFIG_ISI=m
+CONFIG_SYNCLINK=m
+CONFIG_SYNCLINKMP=m
+CONFIG_SYNCLINK_GT=m
+CONFIG_N_HDLC=m
+CONFIG_SPECIALIX=m
+CONFIG_SPECIALIX_RTSCTS=y
+CONFIG_SX=m
+CONFIG_RIO=m
+CONFIG_RIO_OLDPCI=y
+CONFIG_STALDRV=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_8250=y
+# CONFIG_SERIAL_8250_CONSOLE is not set
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_SERIAL_8250_CS=m
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+CONFIG_SERIAL_8250_DETECT_IRQ=y
+CONFIG_SERIAL_8250_RSA=y
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_JSM=m
+CONFIG_UNIX98_PTYS=y
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+CONFIG_PRINTER=y
+CONFIG_LP_CONSOLE=y
+CONFIG_PPDEV=y
+CONFIG_TIPAR=m
+CONFIG_IPMI_HANDLER=m
+# CONFIG_IPMI_PANIC_EVENT is not set
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_IPMI_SI=m
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+CONFIG_SOFT_WATCHDOG=m
+CONFIG_ACQUIRE_WDT=m
+CONFIG_ADVANTECH_WDT=m
+CONFIG_ALIM1535_WDT=m
+CONFIG_ALIM7101_WDT=m
+CONFIG_SC520_WDT=m
+CONFIG_EUROTECH_WDT=m
+CONFIG_IB700_WDT=m
+CONFIG_IBMASR=m
+CONFIG_WAFER_WDT=m
+CONFIG_I6300ESB_WDT=m
+CONFIG_ITCO_WDT=m
+CONFIG_ITCO_VENDOR_SUPPORT=y
+CONFIG_SC1200_WDT=m
+CONFIG_PC87413_WDT=m
+CONFIG_60XX_WDT=m
+CONFIG_SBC8360_WDT=m
+CONFIG_CPU5_WDT=m
+CONFIG_SMSC37B787_WDT=m
+CONFIG_W83627HF_WDT=m
+CONFIG_W83697HF_WDT=m
+CONFIG_W83877F_WDT=m
+CONFIG_W83977F_WDT=m
+CONFIG_MACHZ_WDT=m
+CONFIG_SBC_EPX_C3_WATCHDOG=m
+
+#
+# PCI-based Watchdog Cards
+#
+CONFIG_PCIPCWATCHDOG=m
+CONFIG_WDTPCI=m
+CONFIG_WDT_501_PCI=y
+
+#
+# USB-based Watchdog Cards
+#
+CONFIG_USBPCWATCHDOG=m
+CONFIG_HW_RANDOM=y
+CONFIG_HW_RANDOM_INTEL=y
+CONFIG_HW_RANDOM_AMD=y
+CONFIG_NVRAM=m
+CONFIG_RTC=y
+CONFIG_R3964=m
+CONFIG_APPLICOM=m
+CONFIG_AGP=y
+CONFIG_AGP_AMD64=y
+CONFIG_AGP_INTEL=m
+CONFIG_AGP_SIS=m
+CONFIG_AGP_VIA=m
+CONFIG_DRM=m
+CONFIG_DRM_TDFX=m
+CONFIG_DRM_R128=m
+CONFIG_DRM_RADEON=m
+CONFIG_DRM_I810=m
+CONFIG_DRM_I830=m
+CONFIG_DRM_I915=m
+CONFIG_DRM_MGA=m
+CONFIG_DRM_SIS=m
+CONFIG_DRM_VIA=m
+CONFIG_DRM_SAVAGE=m
+
+#
+# PCMCIA character devices
+#
+CONFIG_SYNCLINK_CS=m
+CONFIG_CARDMAN_4000=m
+CONFIG_CARDMAN_4040=m
+CONFIG_MWAVE=m
+CONFIG_PC8736x_GPIO=m
+CONFIG_NSC_GPIO=m
+# CONFIG_RAW_DRIVER is not set
+CONFIG_HPET=y
+# CONFIG_HPET_RTC_IRQ is not set
+CONFIG_HPET_MMAP=y
+CONFIG_HANGCHECK_TIMER=m
+CONFIG_TCG_TPM=m
+CONFIG_TCG_TIS=m
+CONFIG_TCG_NSC=m
+CONFIG_TCG_ATMEL=m
+CONFIG_TCG_INFINEON=m
+CONFIG_TELCLOCK=m
+CONFIG_DEVPORT=y
+CONFIG_I2C=m
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_CHARDEV=m
+
+#
+# I2C Algorithms
+#
+CONFIG_I2C_ALGOBIT=m
+CONFIG_I2C_ALGOPCF=m
+CONFIG_I2C_ALGOPCA=m
+
+#
+# I2C Hardware Bus support
+#
+CONFIG_I2C_ALI1535=m
+CONFIG_I2C_ALI1563=m
+CONFIG_I2C_ALI15X3=m
+CONFIG_I2C_AMD756=m
+CONFIG_I2C_AMD756_S4882=m
+CONFIG_I2C_AMD8111=m
+CONFIG_I2C_I801=m
+CONFIG_I2C_I810=m
+CONFIG_I2C_PIIX4=m
+CONFIG_I2C_NFORCE2=m
+CONFIG_I2C_OCORES=m
+CONFIG_I2C_PARPORT=m
+CONFIG_I2C_PARPORT_LIGHT=m
+CONFIG_I2C_PROSAVAGE=m
+CONFIG_I2C_SAVAGE4=m
+CONFIG_I2C_SIMTEC=m
+CONFIG_I2C_SIS5595=m
+CONFIG_I2C_SIS630=m
+CONFIG_I2C_SIS96X=m
+CONFIG_I2C_TAOS_EVM=m
+CONFIG_I2C_STUB=m
+CONFIG_I2C_TINY_USB=m
+CONFIG_I2C_VIA=m
+CONFIG_I2C_VIAPRO=m
+CONFIG_I2C_VOODOO3=m
+
+#
+# Miscellaneous I2C Chip support
+#
+# CONFIG_SENSORS_DS1337 is not set
+# CONFIG_SENSORS_DS1374 is not set
+CONFIG_DS1682=m
+CONFIG_SENSORS_EEPROM=m
+CONFIG_SENSORS_PCF8574=m
+CONFIG_SENSORS_PCA9539=m
+CONFIG_SENSORS_PCF8591=m
+CONFIG_SENSORS_MAX6875=m
+CONFIG_SENSORS_TSL2550=m
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# CONFIG_I2C_DEBUG_CHIP is not set
+
+#
+# SPI support
+#
+CONFIG_SPI=y
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+CONFIG_SPI_BITBANG=m
+CONFIG_SPI_BUTTERFLY=m
+CONFIG_SPI_LM70_LLP=m
+
+#
+# SPI Protocol Masters
+#
+CONFIG_SPI_AT25=m
+CONFIG_SPI_SPIDEV=m
+CONFIG_SPI_TLE62X0=m
+CONFIG_W1=m
+CONFIG_W1_CON=y
+
+#
+# 1-wire Bus Masters
+#
+CONFIG_W1_MASTER_MATROX=m
+CONFIG_W1_MASTER_DS2490=m
+CONFIG_W1_MASTER_DS2482=m
+
+#
+# 1-wire Slaves
+#
+CONFIG_W1_SLAVE_THERM=m
+CONFIG_W1_SLAVE_SMEM=m
+CONFIG_W1_SLAVE_DS2433=m
+CONFIG_W1_SLAVE_DS2433_CRC=y
+CONFIG_W1_SLAVE_DS2760=m
+CONFIG_POWER_SUPPLY=m
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+CONFIG_PDA_POWER=m
+CONFIG_BATTERY_DS2760=m
+CONFIG_HWMON=y
+CONFIG_HWMON_VID=m
+CONFIG_SENSORS_ABITUGURU=m
+# CONFIG_SENSORS_ABITUGURU3 is not set
+CONFIG_SENSORS_AD7418=m
+CONFIG_SENSORS_ADM1021=m
+CONFIG_SENSORS_ADM1025=m
+CONFIG_SENSORS_ADM1026=m
+CONFIG_SENSORS_ADM1029=m
+CONFIG_SENSORS_ADM1031=m
+CONFIG_SENSORS_ADM9240=m
+CONFIG_SENSORS_K8TEMP=m
+CONFIG_SENSORS_ASB100=m
+CONFIG_SENSORS_ATXP1=m
+CONFIG_SENSORS_DS1621=m
+CONFIG_SENSORS_F71805F=m
+CONFIG_SENSORS_FSCHER=m
+CONFIG_SENSORS_FSCPOS=m
+CONFIG_SENSORS_GL518SM=m
+CONFIG_SENSORS_GL520SM=m
+CONFIG_SENSORS_CORETEMP=m
+CONFIG_SENSORS_IT87=m
+CONFIG_SENSORS_LM63=m
+CONFIG_SENSORS_LM70=m
+CONFIG_SENSORS_LM75=m
+CONFIG_SENSORS_LM77=m
+CONFIG_SENSORS_LM78=m
+CONFIG_SENSORS_LM80=m
+CONFIG_SENSORS_LM83=m
+CONFIG_SENSORS_LM85=m
+CONFIG_SENSORS_LM87=m
+CONFIG_SENSORS_LM90=m
+CONFIG_SENSORS_LM92=m
+# CONFIG_SENSORS_LM93 is not set
+CONFIG_SENSORS_MAX1619=m
+CONFIG_SENSORS_MAX6650=m
+CONFIG_SENSORS_PC87360=m
+CONFIG_SENSORS_PC87427=m
+CONFIG_SENSORS_SIS5595=m
+# CONFIG_SENSORS_DME1737 is not set
+CONFIG_SENSORS_SMSC47M1=m
+CONFIG_SENSORS_SMSC47M192=m
+CONFIG_SENSORS_SMSC47B397=m
+# CONFIG_SENSORS_THMC50 is not set
+CONFIG_SENSORS_VIA686A=m
+CONFIG_SENSORS_VT1211=m
+CONFIG_SENSORS_VT8231=m
+CONFIG_SENSORS_W83781D=m
+CONFIG_SENSORS_W83791D=m
+CONFIG_SENSORS_W83792D=m
+CONFIG_SENSORS_W83793=m
+CONFIG_SENSORS_W83L785TS=m
+CONFIG_SENSORS_W83627HF=m
+CONFIG_SENSORS_W83627EHF=m
+CONFIG_SENSORS_HDAPS=m
+CONFIG_SENSORS_APPLESMC=m
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Sonics Silicon Backplane
+#
+CONFIG_SSB_POSSIBLE=y
+CONFIG_SSB=m
+CONFIG_SSB_PCIHOST_POSSIBLE=y
+CONFIG_SSB_PCIHOST=y
+CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
+CONFIG_SSB_PCMCIAHOST=y
+CONFIG_SSB_DEBUG=y
+CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
+CONFIG_SSB_DRIVER_PCICORE=y
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_SM501=m
+
+#
+# Multimedia devices
+#
+CONFIG_VIDEO_DEV=m
+CONFIG_VIDEO_V4L1=y
+CONFIG_VIDEO_V4L1_COMPAT=y
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_HELPER_CHIPS_AUTO is not set
+
+#
+# Encoders/decoders and other helper chips
+#
+
+#
+# Audio decoders
+#
+CONFIG_VIDEO_TVAUDIO=m
+CONFIG_VIDEO_TDA7432=m
+CONFIG_VIDEO_TDA9840=m
+CONFIG_VIDEO_TDA9875=m
+CONFIG_VIDEO_TEA6415C=m
+CONFIG_VIDEO_TEA6420=m
+CONFIG_VIDEO_MSP3400=m
+CONFIG_VIDEO_CS53L32A=m
+CONFIG_VIDEO_TLV320AIC23B=m
+CONFIG_VIDEO_WM8775=m
+CONFIG_VIDEO_WM8739=m
+
+#
+# Video decoders
+#
+CONFIG_VIDEO_BT819=m
+CONFIG_VIDEO_BT856=m
+CONFIG_VIDEO_BT866=m
+CONFIG_VIDEO_KS0127=m
+CONFIG_VIDEO_OV7670=m
+CONFIG_VIDEO_SAA7110=m
+CONFIG_VIDEO_SAA7111=m
+CONFIG_VIDEO_SAA7114=m
+CONFIG_VIDEO_SAA711X=m
+CONFIG_VIDEO_SAA7191=m
+CONFIG_VIDEO_TVP5150=m
+CONFIG_VIDEO_VPX3220=m
+
+#
+# Video and audio decoders
+#
+CONFIG_VIDEO_CX25840=m
+
+#
+# MPEG video encoders
+#
+CONFIG_VIDEO_CX2341X=m
+
+#
+# Video encoders
+#
+CONFIG_VIDEO_SAA7127=m
+CONFIG_VIDEO_SAA7185=m
+CONFIG_VIDEO_ADV7170=m
+CONFIG_VIDEO_ADV7175=m
+
+#
+# Video improvement chips
+#
+CONFIG_VIDEO_UPD64031A=m
+CONFIG_VIDEO_UPD64083=m
+CONFIG_VIDEO_VIVI=m
+CONFIG_VIDEO_BT848=m
+CONFIG_VIDEO_BT848_DVB=y
+CONFIG_VIDEO_SAA6588=m
+CONFIG_VIDEO_BWQCAM=m
+CONFIG_VIDEO_CQCAM=m
+CONFIG_VIDEO_W9966=m
+CONFIG_VIDEO_CPIA=m
+CONFIG_VIDEO_CPIA_PP=m
+CONFIG_VIDEO_CPIA_USB=m
+CONFIG_VIDEO_CPIA2=m
+CONFIG_VIDEO_SAA5246A=m
+CONFIG_VIDEO_SAA5249=m
+CONFIG_TUNER_3036=m
+CONFIG_TUNER_TEA5761=y
+CONFIG_VIDEO_STRADIS=m
+CONFIG_VIDEO_ZORAN_ZR36060=m
+CONFIG_VIDEO_ZORAN=m
+CONFIG_VIDEO_ZORAN_BUZ=m
+CONFIG_VIDEO_ZORAN_DC10=m
+CONFIG_VIDEO_ZORAN_DC30=m
+CONFIG_VIDEO_ZORAN_LML33=m
+CONFIG_VIDEO_ZORAN_LML33R10=m
+CONFIG_VIDEO_ZORAN_AVS6EYES=m
+CONFIG_VIDEO_MEYE=m
+CONFIG_VIDEO_SAA7134=m
+CONFIG_VIDEO_SAA7134_ALSA=m
+CONFIG_VIDEO_SAA7134_DVB=m
+CONFIG_VIDEO_MXB=m
+CONFIG_VIDEO_DPC=m
+CONFIG_VIDEO_HEXIUM_ORION=m
+CONFIG_VIDEO_HEXIUM_GEMINI=m
+CONFIG_VIDEO_CX88=m
+CONFIG_VIDEO_CX88_ALSA=m
+CONFIG_VIDEO_CX88_BLACKBIRD=m
+CONFIG_VIDEO_CX88_DVB=m
+CONFIG_VIDEO_CX88_VP3054=m
+CONFIG_VIDEO_IVTV=m
+CONFIG_VIDEO_CAFE_CCIC=m
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_VIDEO_PVRUSB2=m
+CONFIG_VIDEO_PVRUSB2_29XXX=y
+CONFIG_VIDEO_PVRUSB2_24XXX=y
+CONFIG_VIDEO_PVRUSB2_SYSFS=y
+# CONFIG_VIDEO_PVRUSB2_DEBUGIFC is not set
+CONFIG_VIDEO_EM28XX=m
+CONFIG_VIDEO_USBVISION=m
+CONFIG_VIDEO_USBVIDEO=m
+CONFIG_USB_VICAM=m
+CONFIG_USB_IBMCAM=m
+CONFIG_USB_KONICAWC=m
+CONFIG_USB_QUICKCAM_MESSENGER=m
+CONFIG_USB_ET61X251=m
+CONFIG_VIDEO_OVCAMCHIP=m
+CONFIG_USB_W9968CF=m
+CONFIG_USB_OV511=m
+CONFIG_USB_SE401=m
+CONFIG_USB_SN9C102=m
+CONFIG_USB_STV680=m
+CONFIG_USB_ZC0301=m
+CONFIG_USB_PWC=m
+# CONFIG_USB_PWC_DEBUG is not set
+CONFIG_USB_ZR364XX=m
+CONFIG_RADIO_ADAPTERS=y
+CONFIG_RADIO_GEMTEK_PCI=m
+CONFIG_RADIO_MAXIRADIO=m
+CONFIG_RADIO_MAESTRO=m
+CONFIG_USB_DSBR=m
+CONFIG_DVB_CORE=y
+CONFIG_DVB_CORE_ATTACH=y
+CONFIG_DVB_CAPTURE_DRIVERS=y
+
+#
+# Supported SAA7146 based PCI Adapters
+#
+CONFIG_DVB_AV7110=m
+# CONFIG_DVB_AV7110_FIRMWARE is not set
+CONFIG_DVB_AV7110_OSD=y
+CONFIG_DVB_BUDGET=m
+CONFIG_DVB_BUDGET_CI=m
+CONFIG_DVB_BUDGET_AV=m
+CONFIG_DVB_BUDGET_PATCH=m
+
+#
+# Supported USB Adapters
+#
+CONFIG_DVB_USB=m
+# CONFIG_DVB_USB_DEBUG is not set
+CONFIG_DVB_USB_A800=m
+CONFIG_DVB_USB_DIBUSB_MB=m
+CONFIG_DVB_USB_DIBUSB_MB_FAULTY=y
+CONFIG_DVB_USB_DIBUSB_MC=m
+CONFIG_DVB_USB_DIB0700=m
+CONFIG_DVB_USB_UMT_010=m
+CONFIG_DVB_USB_CXUSB=m
+CONFIG_DVB_USB_M920X=m
+CONFIG_DVB_USB_GL861=m
+CONFIG_DVB_USB_AU6610=m
+CONFIG_DVB_USB_DIGITV=m
+CONFIG_DVB_USB_VP7045=m
+CONFIG_DVB_USB_VP702X=m
+CONFIG_DVB_USB_GP8PSK=m
+CONFIG_DVB_USB_NOVA_T_USB2=m
+CONFIG_DVB_USB_TTUSB2=m
+CONFIG_DVB_USB_DTT200U=m
+CONFIG_DVB_USB_OPERA1=m
+CONFIG_DVB_USB_AF9005=m
+CONFIG_DVB_USB_AF9005_REMOTE=m
+CONFIG_DVB_TTUSB_BUDGET=m
+CONFIG_DVB_TTUSB_DEC=m
+CONFIG_DVB_CINERGYT2=m
+# CONFIG_DVB_CINERGYT2_TUNING is not set
+
+#
+# Supported FlexCopII (B2C2) Adapters
+#
+CONFIG_DVB_B2C2_FLEXCOP=m
+CONFIG_DVB_B2C2_FLEXCOP_PCI=m
+CONFIG_DVB_B2C2_FLEXCOP_USB=m
+# CONFIG_DVB_B2C2_FLEXCOP_DEBUG is not set
+
+#
+# Supported BT878 Adapters
+#
+CONFIG_DVB_BT8XX=m
+
+#
+# Supported Pluto2 Adapters
+#
+CONFIG_DVB_PLUTO2=m
+
+#
+# Supported DVB Frontends
+#
+
+#
+# Customise DVB Frontends
+#
+CONFIG_DVB_FE_CUSTOMISE=y
+
+#
+# DVB-S (satellite) frontends
+#
+CONFIG_DVB_STV0299=m
+CONFIG_DVB_CX24110=m
+CONFIG_DVB_CX24123=m
+CONFIG_DVB_TDA8083=m
+CONFIG_DVB_MT312=m
+CONFIG_DVB_VES1X93=m
+CONFIG_DVB_S5H1420=m
+CONFIG_DVB_TDA10086=m
+
+#
+# DVB-T (terrestrial) frontends
+#
+CONFIG_DVB_SP8870=m
+CONFIG_DVB_SP887X=m
+CONFIG_DVB_CX22700=m
+CONFIG_DVB_CX22702=m
+CONFIG_DVB_L64781=m
+CONFIG_DVB_TDA1004X=m
+CONFIG_DVB_NXT6000=m
+CONFIG_DVB_MT352=m
+CONFIG_DVB_ZL10353=m
+CONFIG_DVB_DIB3000MB=m
+CONFIG_DVB_DIB3000MC=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_DVB_DIB7000P=m
+
+#
+# DVB-C (cable) frontends
+#
+CONFIG_DVB_VES1820=m
+CONFIG_DVB_TDA10021=m
+CONFIG_DVB_TDA10023=m
+CONFIG_DVB_STV0297=m
+
+#
+# ATSC (North American/Korean Terrestrial/Cable DTV) frontends
+#
+CONFIG_DVB_NXT200X=m
+CONFIG_DVB_OR51211=m
+CONFIG_DVB_OR51132=m
+CONFIG_DVB_BCM3510=m
+CONFIG_DVB_LGDT330X=m
+
+#
+# Tuners/PLL support
+#
+CONFIG_DVB_PLL=m
+CONFIG_DVB_TDA826X=m
+CONFIG_DVB_TDA827X=m
+CONFIG_DVB_TUNER_QT1010=m
+CONFIG_DVB_TUNER_MT2060=m
+
+#
+# Miscellaneous devices
+#
+CONFIG_DVB_LNBP21=m
+CONFIG_DVB_ISL6421=m
+CONFIG_DVB_TUA6100=m
+CONFIG_VIDEO_SAA7146=m
+CONFIG_VIDEO_SAA7146_VV=m
+CONFIG_VIDEO_TUNER=m
+CONFIG_VIDEO_BUF=m
+CONFIG_VIDEO_BUF_DVB=m
+CONFIG_VIDEO_BTCX=m
+CONFIG_VIDEO_IR_I2C=m
+CONFIG_VIDEO_IR=m
+CONFIG_VIDEO_TVEEPROM=m
+CONFIG_DAB=y
+CONFIG_USB_DABUSB=m
+
+#
+# Graphics support
+#
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=m
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_BACKLIGHT_PROGEAR=m
+
+#
+# Display device support
+#
+CONFIG_DISPLAY_SUPPORT=m
+
+#
+# Display hardware drivers
+#
+CONFIG_VGASTATE=m
+CONFIG_VIDEO_OUTPUT_CONTROL=m
+CONFIG_FB=y
+CONFIG_FIRMWARE_EDID=y
+CONFIG_FB_DDC=m
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+CONFIG_FB_SYS_FILLRECT=m
+CONFIG_FB_SYS_COPYAREA=m
+CONFIG_FB_SYS_IMAGEBLIT=m
+CONFIG_FB_SYS_FOPS=m
+CONFIG_FB_DEFERRED_IO=y
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+CONFIG_FB_BACKLIGHT=y
+CONFIG_FB_MODE_HELPERS=y
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+CONFIG_FB_CIRRUS=m
+CONFIG_FB_PM2=m
+# CONFIG_FB_PM2_FIFO_DISCONNECT is not set
+CONFIG_FB_CYBER2000=m
+CONFIG_FB_ARC=m
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+# CONFIG_FB_VGA16 is not set
+CONFIG_FB_VESA=y
+# CONFIG_FB_HECUBA is not set
+# CONFIG_FB_HGA is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_LE80578 is not set
+CONFIG_FB_INTEL=m
+# CONFIG_FB_INTEL_DEBUG is not set
+CONFIG_FB_INTEL_I2C=y
+# CONFIG_FB_MATROX is not set
+CONFIG_FB_RADEON=m
+CONFIG_FB_RADEON_I2C=y
+CONFIG_FB_RADEON_BACKLIGHT=y
+# CONFIG_FB_RADEON_DEBUG is not set
+CONFIG_FB_ATY128=m
+CONFIG_FB_ATY128_BACKLIGHT=y
+CONFIG_FB_ATY=m
+CONFIG_FB_ATY_CT=y
+CONFIG_FB_ATY_GENERIC_LCD=y
+CONFIG_FB_ATY_GX=y
+CONFIG_FB_ATY_BACKLIGHT=y
+# CONFIG_FB_S3 is not set
+CONFIG_FB_SAVAGE=m
+CONFIG_FB_SAVAGE_I2C=y
+CONFIG_FB_SAVAGE_ACCEL=y
+CONFIG_FB_SIS=m
+CONFIG_FB_SIS_300=y
+CONFIG_FB_SIS_315=y
+# CONFIG_FB_NEOMAGIC is not set
+CONFIG_FB_KYRO=m
+CONFIG_FB_3DFX=m
+CONFIG_FB_3DFX_ACCEL=y
+CONFIG_FB_VOODOO1=m
+# CONFIG_FB_VT8623 is not set
+CONFIG_FB_TRIDENT=m
+CONFIG_FB_TRIDENT_ACCEL=y
+# CONFIG_FB_ARK is not set
+# CONFIG_FB_PM3 is not set
+CONFIG_FB_GEODE=y
+CONFIG_FB_GEODE_LX=m
+CONFIG_FB_GEODE_GX=m
+# CONFIG_FB_GEODE_GX_SET_FBSIZE is not set
+CONFIG_FB_GEODE_GX1=m
+# CONFIG_FB_SM501 is not set
+# CONFIG_FB_VIRTUAL is not set
+
+#
+# Console display driver support
+#
+CONFIG_VGA_CONSOLE=y
+# CONFIG_VGACON_SOFT_SCROLLBACK is not set
+CONFIG_VIDEO_SELECT=y
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+# CONFIG_FB_CON_DECOR is not set
+CONFIG_FONTS=y
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+CONFIG_FONT_6x11=y
+CONFIG_FONT_7x14=y
+CONFIG_FONT_PEARL_8x8=y
+CONFIG_FONT_ACORN_8x8=y
+CONFIG_FONT_MINI_4x6=y
+CONFIG_FONT_SUN8x16=y
+CONFIG_FONT_SUN12x22=y
+CONFIG_FONT_10x18=y
+CONFIG_LOGO=y
+# CONFIG_LOGO_LINUX_MONO is not set
+# CONFIG_LOGO_LINUX_VGA16 is not set
+CONFIG_LOGO_LINUX_CLUT224=y
+
+#
+# Sound
+#
+CONFIG_SOUND=y
+
+#
+# Advanced Linux Sound Architecture
+#
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=m
+CONFIG_SND_RAWMIDI=m
+CONFIG_SND_SEQUENCER=m
+CONFIG_SND_SEQ_DUMMY=m
+CONFIG_SND_OSSEMUL=y
+CONFIG_SND_MIXER_OSS=y
+CONFIG_SND_PCM_OSS=y
+CONFIG_SND_PCM_OSS_PLUGINS=y
+CONFIG_SND_SEQUENCER_OSS=y
+CONFIG_SND_RTCTIMER=m
+CONFIG_SND_SEQ_RTCTIMER_DEFAULT=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+
+#
+# Generic devices
+#
+CONFIG_SND_MPU401_UART=m
+CONFIG_SND_OPL3_LIB=m
+CONFIG_SND_VX_LIB=m
+CONFIG_SND_AC97_CODEC=m
+CONFIG_SND_DUMMY=m
+CONFIG_SND_VIRMIDI=m
+CONFIG_SND_MTPAV=m
+CONFIG_SND_MTS64=m
+CONFIG_SND_SERIAL_U16550=m
+CONFIG_SND_MPU401=m
+CONFIG_SND_PORTMAN2X4=m
+CONFIG_SND_SB_COMMON=m
+CONFIG_SND_SB16_DSP=m
+
+#
+# PCI devices
+#
+CONFIG_SND_AD1889=m
+CONFIG_SND_ALS300=m
+CONFIG_SND_ALS4000=m
+CONFIG_SND_ALI5451=m
+CONFIG_SND_ATIIXP=m
+CONFIG_SND_ATIIXP_MODEM=m
+CONFIG_SND_AU8810=m
+CONFIG_SND_AU8820=m
+CONFIG_SND_AU8830=m
+CONFIG_SND_AZT3328=m
+CONFIG_SND_BT87X=m
+CONFIG_SND_BT87X_OVERCLOCK=y
+CONFIG_SND_CA0106=m
+CONFIG_SND_CMIPCI=m
+CONFIG_SND_CS4281=m
+CONFIG_SND_CS46XX=m
+CONFIG_SND_CS46XX_NEW_DSP=y
+CONFIG_SND_CS5530=m
+CONFIG_SND_DARLA20=m
+CONFIG_SND_GINA20=m
+CONFIG_SND_LAYLA20=m
+CONFIG_SND_DARLA24=m
+CONFIG_SND_GINA24=m
+CONFIG_SND_LAYLA24=m
+CONFIG_SND_MONA=m
+CONFIG_SND_MIA=m
+CONFIG_SND_ECHO3G=m
+CONFIG_SND_INDIGO=m
+CONFIG_SND_INDIGOIO=m
+CONFIG_SND_INDIGODJ=m
+CONFIG_SND_EMU10K1=m
+CONFIG_SND_EMU10K1X=m
+CONFIG_SND_ENS1370=m
+CONFIG_SND_ENS1371=m
+CONFIG_SND_ES1938=m
+CONFIG_SND_ES1968=m
+CONFIG_SND_FM801=m
+CONFIG_SND_FM801_TEA575X_BOOL=y
+CONFIG_SND_FM801_TEA575X=m
+CONFIG_SND_HDA_INTEL=m
+CONFIG_SND_HDSP=m
+CONFIG_SND_HDSPM=m
+CONFIG_SND_ICE1712=m
+CONFIG_SND_ICE1724=m
+CONFIG_SND_INTEL8X0=m
+CONFIG_SND_INTEL8X0M=m
+CONFIG_SND_KORG1212=m
+CONFIG_SND_KORG1212_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_MAESTRO3=m
+CONFIG_SND_MAESTRO3_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_MIXART=m
+CONFIG_SND_NM256=m
+CONFIG_SND_PCXHR=m
+CONFIG_SND_RIPTIDE=m
+CONFIG_SND_RME32=m
+CONFIG_SND_RME96=m
+CONFIG_SND_RME9652=m
+CONFIG_SND_SONICVIBES=m
+CONFIG_SND_TRIDENT=m
+CONFIG_SND_VIA82XX=m
+CONFIG_SND_VIA82XX_MODEM=m
+CONFIG_SND_VX222=m
+CONFIG_SND_YMFPCI=m
+CONFIG_SND_YMFPCI_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_AC97_POWER_SAVE=y
+
+#
+# USB devices
+#
+CONFIG_SND_USB_AUDIO=m
+CONFIG_SND_USB_USX2Y=m
+CONFIG_SND_USB_CAIAQ=m
+CONFIG_SND_USB_CAIAQ_INPUT=y
+
+#
+# PCMCIA devices
+#
+CONFIG_SND_VXPOCKET=m
+CONFIG_SND_PDAUDIOCF=m
+
+#
+# System on Chip audio support
+#
+CONFIG_SND_SOC=m
+
+#
+# SoC Audio support for SuperH
+#
+
+#
+# Open Sound System
+#
+# CONFIG_SOUND_PRIME is not set
+CONFIG_AC97_BUS=m
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HID_DEBUG is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+CONFIG_USB_HIDINPUT_POWERBOOK=y
+CONFIG_HID_FF=y
+CONFIG_HID_PID=y
+CONFIG_LOGITECH_FF=y
+CONFIG_PANTHERLORD_FF=y
+CONFIG_THRUSTMASTER_FF=y
+CONFIG_ZEROPLUS_FF=y
+CONFIG_USB_HIDDEV=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+CONFIG_USB_DEVICE_CLASS=y
+CONFIG_USB_DYNAMIC_MINORS=y
+CONFIG_USB_SUSPEND=y
+# CONFIG_USB_PERSIST is not set
+# CONFIG_USB_OTG is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_EHCI_HCD=m
+CONFIG_USB_EHCI_SPLIT_ISO=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+CONFIG_USB_ISP116X_HCD=m
+CONFIG_USB_OHCI_HCD=m
+CONFIG_USB_OHCI_HCD_SSB=y
+# CONFIG_USB_OHCI_BIG_ENDIAN_DESC is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_MMIO is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_UHCI_HCD=m
+CONFIG_USB_U132_HCD=m
+CONFIG_USB_SL811_HCD=m
+CONFIG_USB_SL811_CS=m
+# CONFIG_USB_R8A66597_HCD is not set
+
+#
+# USB Device Class drivers
+#
+CONFIG_USB_ACM=m
+CONFIG_USB_PRINTER=y
+
+#
+# NOTE: USB_STORAGE enables SCSI, and 'SCSI disk support'
+#
+
+#
+# may also be needed; see USB_STORAGE Help for more information
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+CONFIG_USB_STORAGE_DATAFAB=y
+CONFIG_USB_STORAGE_FREECOM=y
+CONFIG_USB_STORAGE_DPCM=y
+CONFIG_USB_STORAGE_USBAT=y
+CONFIG_USB_STORAGE_SDDR09=y
+CONFIG_USB_STORAGE_SDDR55=y
+CONFIG_USB_STORAGE_JUMPSHOT=y
+CONFIG_USB_STORAGE_ALAUDA=y
+CONFIG_USB_STORAGE_KARMA=y
+CONFIG_USB_LIBUSUAL=y
+
+#
+# USB Imaging devices
+#
+CONFIG_USB_MDC800=m
+CONFIG_USB_MICROTEK=m
+CONFIG_USB_MON=y
+
+#
+# USB port drivers
+#
+CONFIG_USB_USS720=m
+
+#
+# USB Serial Converter support
+#
+CONFIG_USB_SERIAL=m
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_SERIAL_AIRCABLE=m
+CONFIG_USB_SERIAL_AIRPRIME=m
+CONFIG_USB_SERIAL_ARK3116=m
+CONFIG_USB_SERIAL_BELKIN=m
+CONFIG_USB_SERIAL_WHITEHEAT=m
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=m
+CONFIG_USB_SERIAL_CP2101=m
+CONFIG_USB_SERIAL_CYPRESS_M8=m
+CONFIG_USB_SERIAL_EMPEG=m
+CONFIG_USB_SERIAL_FTDI_SIO=m
+CONFIG_USB_SERIAL_FUNSOFT=m
+CONFIG_USB_SERIAL_VISOR=m
+CONFIG_USB_SERIAL_IPAQ=m
+CONFIG_USB_SERIAL_IR=m
+CONFIG_USB_SERIAL_EDGEPORT=m
+CONFIG_USB_SERIAL_EDGEPORT_TI=m
+CONFIG_USB_SERIAL_GARMIN=m
+CONFIG_USB_SERIAL_IPW=m
+CONFIG_USB_SERIAL_KEYSPAN_PDA=m
+CONFIG_USB_SERIAL_KEYSPAN=m
+CONFIG_USB_SERIAL_KEYSPAN_MPR=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28X=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28XA=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28XB=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19=y
+CONFIG_USB_SERIAL_KEYSPAN_USA18X=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19W=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19QW=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19QI=y
+CONFIG_USB_SERIAL_KEYSPAN_USA49W=y
+CONFIG_USB_SERIAL_KEYSPAN_USA49WLC=y
+CONFIG_USB_SERIAL_KLSI=m
+CONFIG_USB_SERIAL_KOBIL_SCT=m
+CONFIG_USB_SERIAL_MCT_U232=m
+CONFIG_USB_SERIAL_MOS7720=m
+CONFIG_USB_SERIAL_MOS7840=m
+CONFIG_USB_SERIAL_NAVMAN=m
+CONFIG_USB_SERIAL_PL2303=m
+# CONFIG_USB_SERIAL_OTI6858 is not set
+CONFIG_USB_SERIAL_HP4X=m
+CONFIG_USB_SERIAL_SAFE=m
+CONFIG_USB_SERIAL_SAFE_PADDED=y
+CONFIG_USB_SERIAL_SIERRAWIRELESS=m
+CONFIG_USB_SERIAL_TI=m
+CONFIG_USB_SERIAL_CYBERJACK=m
+CONFIG_USB_SERIAL_XIRCOM=m
+CONFIG_USB_SERIAL_OPTION=m
+CONFIG_USB_SERIAL_OMNINET=m
+# CONFIG_USB_SERIAL_DEBUG is not set
+CONFIG_USB_EZUSB=y
+
+#
+# USB Miscellaneous drivers
+#
+CONFIG_USB_EMI62=m
+CONFIG_USB_EMI26=m
+CONFIG_USB_ADUTUX=m
+CONFIG_USB_AUERSWALD=m
+CONFIG_USB_RIO500=m
+CONFIG_USB_LEGOTOWER=m
+CONFIG_USB_LCD=m
+CONFIG_USB_BERRY_CHARGE=m
+CONFIG_USB_LED=m
+CONFIG_USB_CYPRESS_CY7C63=m
+CONFIG_USB_CYTHERM=m
+CONFIG_USB_PHIDGET=m
+CONFIG_USB_PHIDGETKIT=m
+CONFIG_USB_PHIDGETMOTORCONTROL=m
+CONFIG_USB_PHIDGETSERVO=m
+CONFIG_USB_IDMOUSE=m
+CONFIG_USB_FTDI_ELAN=m
+CONFIG_USB_APPLEDISPLAY=m
+CONFIG_USB_SISUSBVGA=m
+# CONFIG_USB_SISUSBVGA_CON is not set
+CONFIG_USB_LD=m
+CONFIG_USB_TRANCEVIBRATOR=m
+CONFIG_USB_IOWARRIOR=m
+CONFIG_USB_TEST=m
+
+#
+# USB DSL modem support
+#
+CONFIG_USB_ATM=m
+CONFIG_USB_SPEEDTOUCH=m
+CONFIG_USB_CXACRU=m
+CONFIG_USB_UEAGLEATM=m
+CONFIG_USB_XUSBATM=m
+
+#
+# USB Gadget Support
+#
+CONFIG_USB_GADGET=m
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+CONFIG_USB_GADGET_SELECTED=y
+# CONFIG_USB_GADGET_AMD5536UDC is not set
+# CONFIG_USB_GADGET_FSL_USB2 is not set
+CONFIG_USB_GADGET_NET2280=y
+CONFIG_USB_NET2280=m
+# CONFIG_USB_GADGET_PXA2XX is not set
+# CONFIG_USB_GADGET_M66592 is not set
+# CONFIG_USB_GADGET_GOKU is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+# CONFIG_USB_GADGET_S3C2410 is not set
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+CONFIG_USB_ETH=m
+# CONFIG_USB_ETH_RNDIS is not set
+CONFIG_USB_GADGETFS=m
+CONFIG_USB_FILE_STORAGE=m
+# CONFIG_USB_FILE_STORAGE_TEST is not set
+CONFIG_USB_G_SERIAL=m
+CONFIG_USB_MIDI_GADGET=m
+CONFIG_MMC=m
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_UNSAFE_RESUME is not set
+
+#
+# MMC/SD Card Drivers
+#
+CONFIG_MMC_BLOCK=m
+CONFIG_MMC_BLOCK_BOUNCE=y
+
+#
+# MMC/SD Host Controller Drivers
+#
+CONFIG_MMC_SDHCI=m
+CONFIG_MMC_WBSD=m
+CONFIG_MMC_TIFM_SD=m
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=m
+
+#
+# LED drivers
+#
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGERS=y
+CONFIG_LEDS_TRIGGER_TIMER=m
+CONFIG_LEDS_TRIGGER_HEARTBEAT=m
+CONFIG_INFINIBAND=m
+CONFIG_INFINIBAND_USER_MAD=m
+CONFIG_INFINIBAND_USER_ACCESS=m
+CONFIG_INFINIBAND_USER_MEM=y
+CONFIG_INFINIBAND_ADDR_TRANS=y
+CONFIG_INFINIBAND_MTHCA=m
+CONFIG_INFINIBAND_MTHCA_DEBUG=y
+CONFIG_INFINIBAND_IPATH=m
+CONFIG_INFINIBAND_AMSO1100=m
+# CONFIG_INFINIBAND_AMSO1100_DEBUG is not set
+CONFIG_INFINIBAND_CXGB3=m
+# CONFIG_INFINIBAND_CXGB3_DEBUG is not set
+CONFIG_MLX4_INFINIBAND=m
+CONFIG_INFINIBAND_IPOIB=m
+# CONFIG_INFINIBAND_IPOIB_CM is not set
+CONFIG_INFINIBAND_IPOIB_DEBUG=y
+# CONFIG_INFINIBAND_IPOIB_DEBUG_DATA is not set
+CONFIG_INFINIBAND_SRP=m
+CONFIG_INFINIBAND_ISER=m
+CONFIG_EDAC=y
+
+#
+# Reporting subsystems
+#
+# CONFIG_EDAC_DEBUG is not set
+CONFIG_EDAC_MM_EDAC=m
+CONFIG_EDAC_E752X=m
+# CONFIG_EDAC_I82975X is not set
+# CONFIG_EDAC_I5000 is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+CONFIG_RTC_INTF_DEV_UIE_EMUL=y
+CONFIG_RTC_DRV_TEST=m
+
+#
+# I2C RTC drivers
+#
+CONFIG_RTC_DRV_DS1307=m
+CONFIG_RTC_DRV_DS1672=m
+CONFIG_RTC_DRV_MAX6900=m
+CONFIG_RTC_DRV_RS5C372=m
+CONFIG_RTC_DRV_ISL1208=m
+CONFIG_RTC_DRV_X1205=m
+CONFIG_RTC_DRV_PCF8563=m
+CONFIG_RTC_DRV_PCF8583=m
+CONFIG_RTC_DRV_M41T80=m
+CONFIG_RTC_DRV_M41T80_WDT=y
+
+#
+# SPI RTC drivers
+#
+CONFIG_RTC_DRV_RS5C348=m
+CONFIG_RTC_DRV_MAX6902=m
+
+#
+# Platform RTC drivers
+#
+CONFIG_RTC_DRV_CMOS=m
+CONFIG_RTC_DRV_DS1553=m
+CONFIG_RTC_DRV_STK17TA8=m
+CONFIG_RTC_DRV_DS1742=m
+CONFIG_RTC_DRV_M48T86=m
+CONFIG_RTC_DRV_M48T59=m
+CONFIG_RTC_DRV_V3020=m
+
+#
+# on-CPU RTC drivers
+#
+
+#
+# DMA Engine support
+#
+CONFIG_DMA_ENGINE=y
+
+#
+# DMA Clients
+#
+CONFIG_NET_DMA=y
+
+#
+# DMA Devices
+#
+CONFIG_INTEL_IOATDMA=m
+CONFIG_AUXDISPLAY=y
+CONFIG_KS0108=m
+CONFIG_KS0108_PORT=0x378
+CONFIG_KS0108_DELAY=2
+CONFIG_CFAG12864B=m
+CONFIG_CFAG12864B_RATE=20
+CONFIG_VIRTUALIZATION=y
+CONFIG_KVM=y
+CONFIG_KVM_INTEL=m
+CONFIG_KVM_AMD=m
+
+#
+# Userspace I/O
+#
+CONFIG_UIO=m
+CONFIG_UIO_CIF=m
+
+#
+# Firmware Drivers
+#
+CONFIG_EDD=m
+CONFIG_DELL_RBU=m
+CONFIG_DCDBAS=y
+CONFIG_DMIID=y
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+CONFIG_EXT2_FS_XIP=y
+CONFIG_FS_XIP=y
+CONFIG_EXT3_FS=y
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_EXT4DEV_FS=y
+CONFIG_EXT4DEV_FS_XATTR=y
+CONFIG_EXT4DEV_FS_POSIX_ACL=y
+CONFIG_EXT4DEV_FS_SECURITY=y
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+CONFIG_REISERFS_FS=y
+# CONFIG_REISERFS_CHECK is not set
+CONFIG_REISERFS_PROC_INFO=y
+CONFIG_REISERFS_FS_XATTR=y
+CONFIG_REISERFS_FS_POSIX_ACL=y
+CONFIG_REISERFS_FS_SECURITY=y
+CONFIG_JFS_FS=y
+CONFIG_JFS_POSIX_ACL=y
+CONFIG_JFS_SECURITY=y
+# CONFIG_JFS_DEBUG is not set
+CONFIG_JFS_STATISTICS=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_XFS_FS=y
+CONFIG_XFS_QUOTA=y
+CONFIG_XFS_SECURITY=y
+CONFIG_XFS_POSIX_ACL=y
+CONFIG_XFS_RT=y
+CONFIG_GFS2_FS=m
+CONFIG_GFS2_FS_LOCKING_NOLOCK=m
+CONFIG_GFS2_FS_LOCKING_DLM=m
+CONFIG_OCFS2_FS=m
+CONFIG_OCFS2_DEBUG_MASKLOG=y
+CONFIG_MINIX_FS=m
+CONFIG_ROMFS_FS=y
+CONFIG_INOTIFY=y
+CONFIG_INOTIFY_USER=y
+CONFIG_QUOTA=y
+CONFIG_QFMT_V1=y
+CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
+CONFIG_DNOTIFY=y
+# CONFIG_AUTOFS_FS is not set
+CONFIG_AUTOFS4_FS=y
+CONFIG_FUSE_FS=y
+CONFIG_GENERIC_ACL=y
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=y
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=y
+CONFIG_UDF_NLS=y
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_NTFS_FS=y
+# CONFIG_NTFS_DEBUG is not set
+CONFIG_NTFS_RW=y
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_KCORE=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_RAMFS=y
+CONFIG_CONFIGFS_FS=m
+
+#
+# Layered filesystems
+#
+CONFIG_ECRYPT_FS=y
+CONFIG_UNION_FS=y
+CONFIG_UNION_FS_XATTR=y
+# CONFIG_UNION_FS_DEBUG is not set
+
+#
+# Miscellaneous filesystems
+#
+CONFIG_ADFS_FS=m
+# CONFIG_ADFS_FS_RW is not set
+CONFIG_AFFS_FS=m
+CONFIG_HFS_FS=y
+CONFIG_HFSPLUS_FS=y
+CONFIG_BEFS_FS=m
+# CONFIG_BEFS_DEBUG is not set
+CONFIG_BFS_FS=m
+CONFIG_EFS_FS=m
+CONFIG_JFFS2_FS=m
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+CONFIG_JFFS2_SUMMARY=y
+CONFIG_JFFS2_FS_XATTR=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_JFFS2_FS_SECURITY=y
+CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_JFFS2_ZLIB=y
+CONFIG_JFFS2_RTIME=y
+CONFIG_JFFS2_RUBIN=y
+# CONFIG_JFFS2_CMODE_NONE is not set
+CONFIG_JFFS2_CMODE_PRIORITY=y
+# CONFIG_JFFS2_CMODE_SIZE is not set
+CONFIG_CRAMFS=m
+CONFIG_SQUASHFS=y
+CONFIG_SQUASHFS_EMBEDDED=y
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+CONFIG_SQUASHFS_VMALLOC=y
+CONFIG_VXFS_FS=m
+CONFIG_HPFS_FS=y
+CONFIG_QNX4FS_FS=y
+CONFIG_SYSV_FS=y
+CONFIG_UFS_FS=y
+# CONFIG_UFS_FS_WRITE is not set
+# CONFIG_UFS_DEBUG is not set
+
+#
+# Network File Systems
+#
+CONFIG_NFS_FS=y
+CONFIG_NFS_V3=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+CONFIG_NFS_DIRECTIO=y
+CONFIG_NFSD=y
+CONFIG_NFSD_V2_ACL=y
+CONFIG_NFSD_V3=y
+CONFIG_NFSD_V3_ACL=y
+CONFIG_NFSD_V4=y
+CONFIG_NFSD_TCP=y
+CONFIG_ROOT_NFS=y
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_EXPORTFS=y
+CONFIG_NFS_ACL_SUPPORT=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+CONFIG_SUNRPC_GSS=y
+CONFIG_SUNRPC_BIND34=y
+CONFIG_RPCSEC_GSS_KRB5=y
+CONFIG_RPCSEC_GSS_SPKM3=m
+CONFIG_SMB_FS=y
+CONFIG_SMB_NLS_DEFAULT=y
+CONFIG_SMB_NLS_REMOTE="cp437"
+CONFIG_CIFS=y
+CONFIG_CIFS_STATS=y
+CONFIG_CIFS_STATS2=y
+CONFIG_CIFS_WEAK_PW_HASH=y
+CONFIG_CIFS_XATTR=y
+CONFIG_CIFS_POSIX=y
+# CONFIG_CIFS_DEBUG2 is not set
+CONFIG_CIFS_EXPERIMENTAL=y
+CONFIG_CIFS_UPCALL=y
+CONFIG_NCP_FS=m
+CONFIG_NCPFS_PACKET_SIGNING=y
+CONFIG_NCPFS_IOCTL_LOCKING=y
+CONFIG_NCPFS_STRONG=y
+CONFIG_NCPFS_NFS_NS=y
+CONFIG_NCPFS_OS2_NS=y
+CONFIG_NCPFS_SMALLDOS=y
+CONFIG_NCPFS_NLS=y
+CONFIG_NCPFS_EXTRAS=y
+CONFIG_CODA_FS=y
+CONFIG_CODA_FS_OLD_API=y
+CONFIG_AFS_FS=m
+# CONFIG_AFS_DEBUG is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_ACORN_PARTITION=y
+CONFIG_ACORN_PARTITION_CUMANA=y
+CONFIG_ACORN_PARTITION_EESOX=y
+CONFIG_ACORN_PARTITION_ICS=y
+CONFIG_ACORN_PARTITION_ADFS=y
+CONFIG_ACORN_PARTITION_POWERTEC=y
+CONFIG_ACORN_PARTITION_RISCIX=y
+CONFIG_OSF_PARTITION=y
+CONFIG_AMIGA_PARTITION=y
+CONFIG_ATARI_PARTITION=y
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+CONFIG_LDM_PARTITION=y
+CONFIG_LDM_DEBUG=y
+CONFIG_SGI_PARTITION=y
+CONFIG_ULTRIX_PARTITION=y
+CONFIG_SUN_PARTITION=y
+CONFIG_KARMA_PARTITION=y
+CONFIG_EFI_PARTITION=y
+CONFIG_SYSV68_PARTITION=y
+
+#
+# Native Language Support
+#
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=m
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ASCII=m
+CONFIG_NLS_ISO8859_1=m
+CONFIG_NLS_ISO8859_2=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_NLS_ISO8859_4=m
+CONFIG_NLS_ISO8859_5=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NLS_ISO8859_15=m
+CONFIG_NLS_KOI8_R=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_NLS_UTF8=y
+
+#
+# Distributed Lock Manager
+#
+CONFIG_DLM=m
+# CONFIG_DLM_DEBUG is not set
+
+#
+# Instrumentation Support
+#
+# CONFIG_PROFILING is not set
+# CONFIG_KPROBES is not set
+
+#
+# Kernel hacking
+#
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_PRINTK_TIME=y
+CONFIG_ENABLE_MUST_CHECK=y
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_UNUSED_SYMBOLS=y
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_KERNEL is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_KEYS_DEBUG_PROC_KEYS is not set
+CONFIG_SECURITY=y
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+CONFIG_SECURITY_CAPABILITIES=y
+CONFIG_SECURITY_ROOTPLUG=m
+CONFIG_SECURITY_SELINUX=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
+CONFIG_SECURITY_SELINUX_DISABLE=y
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_ENABLE_SECMARK_DEFAULT is not set
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+CONFIG_XOR_BLOCKS=y
+CONFIG_ASYNC_CORE=y
+CONFIG_ASYNC_MEMCPY=y
+CONFIG_ASYNC_XOR=y
+CONFIG_CRYPTO=y
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ABLKCIPHER=m
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_HMAC=y
+CONFIG_CRYPTO_XCBC=m
+CONFIG_CRYPTO_NULL=m
+CONFIG_CRYPTO_MD4=y
+CONFIG_CRYPTO_MD5=y
+CONFIG_CRYPTO_SHA1=m
+CONFIG_CRYPTO_SHA256=m
+CONFIG_CRYPTO_SHA512=m
+CONFIG_CRYPTO_WP512=m
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_GF128MUL=m
+CONFIG_CRYPTO_ECB=y
+CONFIG_CRYPTO_CBC=y
+CONFIG_CRYPTO_PCBC=m
+CONFIG_CRYPTO_LRW=m
+CONFIG_CRYPTO_CRYPTD=m
+CONFIG_CRYPTO_DES=y
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
+CONFIG_CRYPTO_TWOFISH_X86_64=m
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_CRYPTO_AES=y
+CONFIG_CRYPTO_AES_X86_64=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_ARC4=y
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_ANUBIS=m
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_LZF=m
+CONFIG_CRYPTO_MICHAEL_MIC=m
+CONFIG_CRYPTO_CRC32C=y
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_TEST=m
+CONFIG_CRYPTO_HW=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_CRC_CCITT=m
+CONFIG_CRC16=m
+CONFIG_CRC_ITU_T=m
+CONFIG_CRC32=y
+CONFIG_CRC7=m
+CONFIG_LIBCRC32C=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=m
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=m
+CONFIG_REED_SOLOMON_DEC16=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=m
+CONFIG_TEXTSEARCH_BM=m
+CONFIG_TEXTSEARCH_FSM=m
+CONFIG_PLIST=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CHECK_SIGNATURE=y
diff -urpN linux-2.6.23-sabayon/.config.old testtry/.config.old
--- linux-2.6.23-sabayon/.config.old	1970-01-01 00:00:00.000000000 +0000
+++ testtry/.config.old	2007-10-15 16:44:24.000000000 +0000
@@ -0,0 +1,3491 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.23-sabayon
+# Mon Oct 15 16:44:24 2007
+#
+CONFIG_X86_64=y
+CONFIG_64BIT=y
+CONFIG_X86=y
+CONFIG_GENERIC_TIME=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_NONIRQ_WAKEUP=y
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CMOS_UPDATE=y
+CONFIG_ZONE_DMA32=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_SEMAPHORE_SLEEPERS=y
+CONFIG_MMU=y
+CONFIG_ZONE_DMA=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_X86_CMPXCHG=y
+CONFIG_EARLY_PRINTK=y
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_GENERIC_IOMAP=y
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+CONFIG_ARCH_POPULATES_NODE_MAP=y
+CONFIG_DMI=y
+CONFIG_AUDIT_ARCH=y
+CONFIG_GENERIC_BUG=y
+# CONFIG_ARCH_HAS_ILOG2_U32 is not set
+# CONFIG_ARCH_HAS_ILOG2_U64 is not set
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+# CONFIG_USER_NS is not set
+CONFIG_AUDIT=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_LOG_BUF_SHIFT=15
+CONFIG_CPUSETS=y
+CONFIG_SYSFS_DEPRECATED=y
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+# CONFIG_EMBEDDED is not set
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_EXTRA_PASS is not set
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_ANON_INODES=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_RT_MUTEXES=y
+# CONFIG_TINY_SHMEM is not set
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_KMOD=y
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_BLK_DEV_IO_TRACE=y
+CONFIG_BLK_DEV_BSG=y
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_AS=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+# CONFIG_DEFAULT_AS is not set
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+
+#
+# Processor type and features
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_X86_PC=y
+# CONFIG_X86_VSMP is not set
+# CONFIG_MK8 is not set
+# CONFIG_MPSC is not set
+# CONFIG_MCORE2 is not set
+CONFIG_GENERIC_CPU=y
+CONFIG_X86_L1_CACHE_BYTES=128
+CONFIG_X86_L1_CACHE_SHIFT=7
+CONFIG_X86_INTERNODE_CACHE_BYTES=128
+CONFIG_X86_TSC=y
+CONFIG_X86_GOOD_APIC=y
+CONFIG_MICROCODE=m
+CONFIG_MICROCODE_OLD_INTERFACE=y
+CONFIG_X86_MSR=y
+CONFIG_X86_CPUID=y
+CONFIG_X86_HT=y
+CONFIG_X86_IO_APIC=y
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_MTRR=y
+CONFIG_SMP=y
+CONFIG_SCHED_SMT=y
+CONFIG_SCHED_MC=y
+# CONFIG_PREEMPT_NONE is not set
+CONFIG_PREEMPT_VOLUNTARY=y
+# CONFIG_PREEMPT is not set
+CONFIG_PREEMPT_BKL=y
+CONFIG_NUMA=y
+CONFIG_K8_NUMA=y
+CONFIG_NODES_SHIFT=6
+CONFIG_X86_64_ACPI_NUMA=y
+# CONFIG_NUMA_EMU is not set
+CONFIG_ARCH_DISCONTIGMEM_ENABLE=y
+CONFIG_ARCH_DISCONTIGMEM_DEFAULT=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_SELECT_MEMORY_MODEL=y
+# CONFIG_FLATMEM_MANUAL is not set
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_NEED_MULTIPLE_NODES=y
+CONFIG_HAVE_MEMORY_PRESENT=y
+# CONFIG_SPARSEMEM_STATIC is not set
+CONFIG_SPARSEMEM_EXTREME=y
+
+#
+# Memory hotplug is currently incompatible with Software Suspend
+#
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_MIGRATION=y
+CONFIG_RESOURCES_64BIT=y
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+CONFIG_HAVE_ARCH_EARLY_PFN_TO_NID=y
+CONFIG_NR_CPUS=8
+CONFIG_PHYSICAL_ALIGN=0x200000
+CONFIG_HOTPLUG_CPU=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_HPET_TIMER=y
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_IOMMU=y
+CONFIG_CALGARY_IOMMU=y
+CONFIG_CALGARY_IOMMU_ENABLED_BY_DEFAULT=y
+CONFIG_SWIOTLB=y
+CONFIG_X86_MCE=y
+CONFIG_X86_MCE_INTEL=y
+CONFIG_X86_MCE_AMD=y
+# CONFIG_KEXEC is not set
+# CONFIG_CRASH_DUMP is not set
+# CONFIG_RELOCATABLE is not set
+CONFIG_PHYSICAL_START=0x200000
+CONFIG_SECCOMP=y
+# CONFIG_CC_STACKPROTECTOR is not set
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_K8_NB=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_ISA_DMA_API=y
+CONFIG_GENERIC_PENDING_IRQ=y
+
+#
+# Power management options
+#
+CONFIG_PM=y
+CONFIG_PM_LEGACY=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_PM_SLEEP=y
+CONFIG_SUSPEND_SMP_POSSIBLE=y
+CONFIG_SUSPEND=y
+CONFIG_HIBERNATION_SMP_POSSIBLE=y
+CONFIG_HIBERNATION=y
+CONFIG_PM_STD_PARTITION=""
+CONFIG_TOI_CORE=y
+
+#
+# Image Storage (you need at least one allocator)
+#
+CONFIG_TOI_FILE=y
+CONFIG_TOI_SWAP=y
+
+#
+# General Options
+#
+CONFIG_TOI_CRYPTO=y
+CONFIG_TOI_USERUI=y
+CONFIG_TOI_USERUI_DEFAULT_PATH="/usr/local/sbin/tuxonice_fbsplash"
+# CONFIG_TOI_KEEP_IMAGE is not set
+CONFIG_TOI_REPLACE_SWSUSP=y
+CONFIG_TOI_CHECKSUM=y
+CONFIG_TOI_DEFAULT_WAIT=25
+CONFIG_TOI=y
+CONFIG_ACPI=y
+CONFIG_ACPI_SLEEP=y
+CONFIG_ACPI_PROCFS=y
+CONFIG_ACPI_PROC_EVENT=y
+CONFIG_ACPI_AC=m
+CONFIG_ACPI_BATTERY=m
+CONFIG_ACPI_BUTTON=y
+CONFIG_ACPI_VIDEO=m
+CONFIG_ACPI_FAN=y
+CONFIG_ACPI_DOCK=y
+CONFIG_ACPI_BAY=y
+CONFIG_ACPI_PROCESSOR=y
+CONFIG_ACPI_HOTPLUG_CPU=y
+CONFIG_ACPI_THERMAL=y
+CONFIG_ACPI_NUMA=y
+CONFIG_ACPI_ASUS=y
+CONFIG_ACPI_TOSHIBA=y
+# CONFIG_ACPI_CUSTOM_DSDT is not set
+CONFIG_ACPI_BLACKLIST_YEAR=0
+# CONFIG_ACPI_DEBUG is not set
+CONFIG_ACPI_EC=y
+CONFIG_ACPI_POWER=y
+CONFIG_ACPI_SYSTEM=y
+CONFIG_X86_PM_TIMER=y
+CONFIG_ACPI_CONTAINER=y
+CONFIG_ACPI_SBS=m
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+# CONFIG_CPU_FREQ_DEBUG is not set
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_STAT_DETAILS=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
+
+#
+# CPUFreq processor drivers
+#
+CONFIG_X86_POWERNOW_K8=y
+CONFIG_X86_POWERNOW_K8_ACPI=y
+CONFIG_X86_SPEEDSTEP_CENTRINO=m
+CONFIG_X86_ACPI_CPUFREQ=y
+
+#
+# shared options
+#
+# CONFIG_X86_ACPI_CPUFREQ_PROC_INTF is not set
+# CONFIG_X86_SPEEDSTEP_LIB is not set
+
+#
+# CPU idle PM support
+#
+CONFIG_CPU_IDLE=y
+
+#
+# Governors
+#
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+
+#
+# Bus options (PCI etc.)
+#
+CONFIG_PCI=y
+CONFIG_PCI_DIRECT=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_PCIEPORTBUS=y
+CONFIG_HOTPLUG_PCI_PCIE=m
+# CONFIG_HOTPLUG_PCI_PCIE_POLL_EVENT_MODE is not set
+CONFIG_PCIEAER=y
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_PCI_MSI=y
+CONFIG_HT_IRQ=y
+
+#
+# PCCARD (PCMCIA/CardBus) support
+#
+CONFIG_PCCARD=y
+# CONFIG_PCMCIA_DEBUG is not set
+CONFIG_PCMCIA=m
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_PCMCIA_IOCTL=y
+CONFIG_CARDBUS=y
+
+#
+# PC-card bridges
+#
+CONFIG_YENTA=m
+CONFIG_YENTA_O2=y
+CONFIG_YENTA_RICOH=y
+CONFIG_YENTA_TI=y
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_YENTA_TOSHIBA=y
+CONFIG_PD6729=m
+CONFIG_I82092=m
+CONFIG_PCCARD_NONSTATIC=m
+CONFIG_HOTPLUG_PCI=m
+CONFIG_HOTPLUG_PCI_FAKE=m
+CONFIG_HOTPLUG_PCI_ACPI=m
+CONFIG_HOTPLUG_PCI_ACPI_IBM=m
+CONFIG_HOTPLUG_PCI_CPCI=y
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=m
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=m
+CONFIG_HOTPLUG_PCI_SHPC=m
+
+#
+# Executable file formats / Emulations
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_BINFMT_MISC=y
+CONFIG_IA32_EMULATION=y
+CONFIG_IA32_AOUT=y
+CONFIG_COMPAT=y
+CONFIG_COMPAT_FOR_U64_ALIGNMENT=y
+CONFIG_SYSVIPC_COMPAT=y
+
+#
+# Networking
+#
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_PACKET_MMAP=y
+CONFIG_UNIX=y
+CONFIG_XFRM=y
+CONFIG_XFRM_USER=m
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_MIGRATE=y
+CONFIG_NET_KEY=m
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_ASK_IP_FIB_HASH=y
+# CONFIG_IP_FIB_TRIE is not set
+CONFIG_IP_FIB_HASH=y
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_IP_PNP_RARP=y
+CONFIG_NET_IPIP=m
+CONFIG_NET_IPGRE=m
+CONFIG_NET_IPGRE_BROADCAST=y
+CONFIG_IP_MROUTE=y
+CONFIG_IP_PIMSM_V1=y
+CONFIG_IP_PIMSM_V2=y
+CONFIG_ARPD=y
+CONFIG_SYN_COOKIES=y
+CONFIG_INET_AH=m
+CONFIG_INET_ESP=m
+CONFIG_INET_IPCOMP=m
+CONFIG_INET_XFRM_TUNNEL=m
+CONFIG_INET_TUNNEL=m
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_TCP_CONG_BIC=y
+CONFIG_TCP_CONG_CUBIC=m
+CONFIG_TCP_CONG_WESTWOOD=m
+CONFIG_TCP_CONG_HTCP=m
+CONFIG_TCP_CONG_HSTCP=m
+CONFIG_TCP_CONG_HYBLA=m
+CONFIG_TCP_CONG_VEGAS=m
+CONFIG_TCP_CONG_SCALABLE=m
+CONFIG_TCP_CONG_LP=m
+CONFIG_TCP_CONG_VENO=m
+CONFIG_TCP_CONG_YEAH=m
+CONFIG_TCP_CONG_ILLINOIS=m
+CONFIG_DEFAULT_BIC=y
+# CONFIG_DEFAULT_CUBIC is not set
+# CONFIG_DEFAULT_HTCP is not set
+# CONFIG_DEFAULT_VEGAS is not set
+# CONFIG_DEFAULT_WESTWOOD is not set
+# CONFIG_DEFAULT_RENO is not set
+CONFIG_DEFAULT_TCP_CONG="bic"
+CONFIG_TCP_MD5SIG=y
+CONFIG_IP_VS=m
+# CONFIG_IP_VS_DEBUG is not set
+CONFIG_IP_VS_TAB_BITS=12
+
+#
+# IPVS transport protocol load balancing support
+#
+CONFIG_IP_VS_PROTO_TCP=y
+CONFIG_IP_VS_PROTO_UDP=y
+CONFIG_IP_VS_PROTO_ESP=y
+CONFIG_IP_VS_PROTO_AH=y
+
+#
+# IPVS scheduler
+#
+CONFIG_IP_VS_RR=m
+CONFIG_IP_VS_WRR=m
+CONFIG_IP_VS_LC=m
+CONFIG_IP_VS_WLC=m
+CONFIG_IP_VS_LBLC=m
+CONFIG_IP_VS_LBLCR=m
+CONFIG_IP_VS_DH=m
+CONFIG_IP_VS_SH=m
+CONFIG_IP_VS_SED=m
+CONFIG_IP_VS_NQ=m
+
+#
+# IPVS application helper
+#
+CONFIG_IP_VS_FTP=m
+CONFIG_IPV6=m
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=m
+CONFIG_INET6_ESP=m
+CONFIG_INET6_IPCOMP=m
+CONFIG_IPV6_MIP6=m
+CONFIG_INET6_XFRM_TUNNEL=m
+CONFIG_INET6_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_TRANSPORT=m
+CONFIG_INET6_XFRM_MODE_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_BEET=m
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=m
+CONFIG_IPV6_SIT=m
+CONFIG_IPV6_TUNNEL=m
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+CONFIG_NETLABEL=y
+CONFIG_NETWORK_SECMARK=y
+CONFIG_NETFILTER=y
+CONFIG_NETFILTER_DEBUG=y
+CONFIG_BRIDGE_NETFILTER=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=m
+CONFIG_NETFILTER_NETLINK_QUEUE=m
+CONFIG_NETFILTER_NETLINK_LOG=m
+CONFIG_NF_CONNTRACK_ENABLED=m
+CONFIG_NF_CONNTRACK=m
+CONFIG_NF_CT_ACCT=y
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+CONFIG_NF_CT_PROTO_GRE=m
+CONFIG_NF_CT_PROTO_SCTP=m
+# CONFIG_NF_CT_PROTO_UDPLITE is not set
+CONFIG_NF_CONNTRACK_AMANDA=m
+CONFIG_NF_CONNTRACK_FTP=m
+CONFIG_NF_CONNTRACK_H323=m
+CONFIG_NF_CONNTRACK_IRC=m
+CONFIG_NF_CONNTRACK_NETBIOS_NS=m
+CONFIG_NF_CONNTRACK_PPTP=m
+CONFIG_NF_CONNTRACK_SANE=m
+CONFIG_NF_CONNTRACK_SIP=m
+CONFIG_NF_CONNTRACK_TFTP=m
+CONFIG_NF_CT_NETLINK=m
+CONFIG_NETFILTER_XTABLES=m
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
+CONFIG_NETFILTER_XT_TARGET_DSCP=m
+CONFIG_NETFILTER_XT_TARGET_MARK=m
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
+CONFIG_NETFILTER_XT_TARGET_NFLOG=m
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
+# CONFIG_NETFILTER_XT_TARGET_TRACE is not set
+CONFIG_NETFILTER_XT_TARGET_SECMARK=m
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
+# CONFIG_NETFILTER_XT_MATCH_CONNLIMIT is not set
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+CONFIG_NETFILTER_XT_MATCH_DCCP=m
+CONFIG_NETFILTER_XT_MATCH_DSCP=m
+CONFIG_NETFILTER_XT_MATCH_ESP=m
+CONFIG_NETFILTER_XT_MATCH_HELPER=m
+CONFIG_NETFILTER_XT_MATCH_LENGTH=m
+CONFIG_NETFILTER_XT_MATCH_LIMIT=m
+CONFIG_NETFILTER_XT_MATCH_MAC=m
+CONFIG_NETFILTER_XT_MATCH_MARK=m
+CONFIG_NETFILTER_XT_MATCH_POLICY=m
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA=m
+CONFIG_NETFILTER_XT_MATCH_REALM=m
+CONFIG_NETFILTER_XT_MATCH_SCTP=m
+CONFIG_NETFILTER_XT_MATCH_STATE=m
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
+CONFIG_NETFILTER_XT_MATCH_STRING=m
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
+# CONFIG_NETFILTER_XT_MATCH_U32 is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_CONNTRACK_IPV4=m
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_IP_NF_QUEUE=m
+CONFIG_IP_NF_IPTABLES=m
+CONFIG_IP_NF_MATCH_IPRANGE=m
+CONFIG_IP_NF_MATCH_TOS=m
+CONFIG_IP_NF_MATCH_RECENT=m
+CONFIG_IP_NF_MATCH_ECN=m
+CONFIG_IP_NF_MATCH_AH=m
+CONFIG_IP_NF_MATCH_TTL=m
+CONFIG_IP_NF_MATCH_OWNER=m
+CONFIG_IP_NF_MATCH_ADDRTYPE=m
+CONFIG_IP_NF_FILTER=m
+CONFIG_IP_NF_TARGET_REJECT=m
+CONFIG_IP_NF_TARGET_LOG=m
+CONFIG_IP_NF_TARGET_ULOG=m
+CONFIG_NF_NAT=m
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_IP_NF_TARGET_REDIRECT=m
+CONFIG_IP_NF_TARGET_NETMAP=m
+CONFIG_IP_NF_TARGET_SAME=m
+CONFIG_NF_NAT_SNMP_BASIC=m
+CONFIG_NF_NAT_PROTO_GRE=m
+CONFIG_NF_NAT_FTP=m
+CONFIG_NF_NAT_IRC=m
+CONFIG_NF_NAT_TFTP=m
+CONFIG_NF_NAT_AMANDA=m
+CONFIG_NF_NAT_PPTP=m
+CONFIG_NF_NAT_H323=m
+CONFIG_NF_NAT_SIP=m
+CONFIG_IP_NF_MANGLE=m
+CONFIG_IP_NF_TARGET_TOS=m
+CONFIG_IP_NF_TARGET_ECN=m
+CONFIG_IP_NF_TARGET_TTL=m
+CONFIG_IP_NF_TARGET_CLUSTERIP=m
+CONFIG_IP_NF_RAW=m
+CONFIG_IP_NF_ARPTABLES=m
+CONFIG_IP_NF_ARPFILTER=m
+CONFIG_IP_NF_ARP_MANGLE=m
+
+#
+# IPv6: Netfilter Configuration (EXPERIMENTAL)
+#
+CONFIG_NF_CONNTRACK_IPV6=m
+CONFIG_IP6_NF_QUEUE=m
+CONFIG_IP6_NF_IPTABLES=m
+CONFIG_IP6_NF_MATCH_RT=m
+CONFIG_IP6_NF_MATCH_OPTS=m
+CONFIG_IP6_NF_MATCH_FRAG=m
+CONFIG_IP6_NF_MATCH_HL=m
+CONFIG_IP6_NF_MATCH_OWNER=m
+CONFIG_IP6_NF_MATCH_IPV6HEADER=m
+CONFIG_IP6_NF_MATCH_AH=m
+CONFIG_IP6_NF_MATCH_MH=m
+CONFIG_IP6_NF_MATCH_EUI64=m
+CONFIG_IP6_NF_FILTER=m
+CONFIG_IP6_NF_TARGET_LOG=m
+CONFIG_IP6_NF_TARGET_REJECT=m
+CONFIG_IP6_NF_MANGLE=m
+CONFIG_IP6_NF_TARGET_HL=m
+CONFIG_IP6_NF_RAW=m
+
+#
+# DECnet: Netfilter Configuration
+#
+CONFIG_DECNET_NF_GRABULATOR=m
+
+#
+# Bridge: Netfilter Configuration
+#
+CONFIG_BRIDGE_NF_EBTABLES=m
+CONFIG_BRIDGE_EBT_BROUTE=m
+CONFIG_BRIDGE_EBT_T_FILTER=m
+CONFIG_BRIDGE_EBT_T_NAT=m
+CONFIG_BRIDGE_EBT_802_3=m
+CONFIG_BRIDGE_EBT_AMONG=m
+CONFIG_BRIDGE_EBT_ARP=m
+CONFIG_BRIDGE_EBT_IP=m
+CONFIG_BRIDGE_EBT_LIMIT=m
+CONFIG_BRIDGE_EBT_MARK=m
+CONFIG_BRIDGE_EBT_PKTTYPE=m
+CONFIG_BRIDGE_EBT_STP=m
+CONFIG_BRIDGE_EBT_VLAN=m
+CONFIG_BRIDGE_EBT_ARPREPLY=m
+CONFIG_BRIDGE_EBT_DNAT=m
+CONFIG_BRIDGE_EBT_MARK_T=m
+CONFIG_BRIDGE_EBT_REDIRECT=m
+CONFIG_BRIDGE_EBT_SNAT=m
+CONFIG_BRIDGE_EBT_LOG=m
+CONFIG_BRIDGE_EBT_ULOG=m
+CONFIG_IP_DCCP=m
+CONFIG_INET_DCCP_DIAG=m
+CONFIG_IP_DCCP_ACKVEC=y
+
+#
+# DCCP CCIDs Configuration (EXPERIMENTAL)
+#
+CONFIG_IP_DCCP_CCID2=m
+# CONFIG_IP_DCCP_CCID2_DEBUG is not set
+CONFIG_IP_DCCP_CCID3=m
+CONFIG_IP_DCCP_TFRC_LIB=m
+# CONFIG_IP_DCCP_CCID3_DEBUG is not set
+CONFIG_IP_DCCP_CCID3_RTO=100
+CONFIG_IP_SCTP=m
+# CONFIG_SCTP_DBG_MSG is not set
+# CONFIG_SCTP_DBG_OBJCNT is not set
+# CONFIG_SCTP_HMAC_NONE is not set
+# CONFIG_SCTP_HMAC_SHA1 is not set
+CONFIG_SCTP_HMAC_MD5=y
+CONFIG_TIPC=m
+CONFIG_TIPC_ADVANCED=y
+CONFIG_TIPC_ZONES=3
+CONFIG_TIPC_CLUSTERS=1
+CONFIG_TIPC_NODES=255
+CONFIG_TIPC_SLAVE_NODES=0
+CONFIG_TIPC_PORTS=8191
+CONFIG_TIPC_LOG=0
+# CONFIG_TIPC_DEBUG is not set
+CONFIG_ATM=m
+CONFIG_ATM_CLIP=m
+CONFIG_ATM_CLIP_NO_ICMP=y
+CONFIG_ATM_LANE=m
+CONFIG_ATM_MPOA=m
+CONFIG_ATM_BR2684=m
+CONFIG_ATM_BR2684_IPFILTER=y
+CONFIG_BRIDGE=m
+CONFIG_VLAN_8021Q=m
+CONFIG_DECNET=m
+CONFIG_DECNET_ROUTER=y
+CONFIG_LLC=y
+CONFIG_LLC2=m
+CONFIG_IPX=m
+CONFIG_IPX_INTERN=y
+CONFIG_ATALK=m
+CONFIG_DEV_APPLETALK=m
+CONFIG_IPDDP=m
+CONFIG_IPDDP_ENCAP=y
+CONFIG_IPDDP_DECAP=y
+CONFIG_X25=m
+CONFIG_LAPB=m
+CONFIG_ECONET=m
+CONFIG_ECONET_AUNUDP=y
+CONFIG_ECONET_NATIVE=y
+CONFIG_WAN_ROUTER=m
+
+#
+# QoS and/or fair queueing
+#
+CONFIG_NET_SCHED=y
+CONFIG_NET_SCH_FIFO=y
+
+#
+# Queueing/Scheduling
+#
+CONFIG_NET_SCH_CBQ=m
+CONFIG_NET_SCH_HTB=m
+CONFIG_NET_SCH_HFSC=m
+CONFIG_NET_SCH_ATM=m
+CONFIG_NET_SCH_PRIO=m
+# CONFIG_NET_SCH_RR is not set
+CONFIG_NET_SCH_RED=m
+CONFIG_NET_SCH_SFQ=m
+CONFIG_NET_SCH_TEQL=m
+CONFIG_NET_SCH_TBF=m
+CONFIG_NET_SCH_GRED=m
+CONFIG_NET_SCH_DSMARK=m
+CONFIG_NET_SCH_NETEM=m
+CONFIG_NET_SCH_INGRESS=m
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+CONFIG_NET_CLS_BASIC=m
+CONFIG_NET_CLS_TCINDEX=m
+CONFIG_NET_CLS_ROUTE4=m
+CONFIG_NET_CLS_ROUTE=y
+CONFIG_NET_CLS_FW=m
+CONFIG_NET_CLS_U32=m
+CONFIG_CLS_U32_PERF=y
+CONFIG_CLS_U32_MARK=y
+CONFIG_NET_CLS_RSVP=m
+CONFIG_NET_CLS_RSVP6=m
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+CONFIG_NET_EMATCH_CMP=m
+CONFIG_NET_EMATCH_NBYTE=m
+CONFIG_NET_EMATCH_U32=m
+CONFIG_NET_EMATCH_META=m
+CONFIG_NET_EMATCH_TEXT=m
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_ACT_POLICE=m
+CONFIG_NET_ACT_GACT=m
+CONFIG_GACT_PROB=y
+CONFIG_NET_ACT_MIRRED=m
+CONFIG_NET_ACT_IPT=m
+CONFIG_NET_ACT_PEDIT=m
+CONFIG_NET_ACT_SIMP=m
+# CONFIG_NET_CLS_POLICE is not set
+CONFIG_NET_CLS_IND=y
+
+#
+# Network testing
+#
+CONFIG_NET_PKTGEN=m
+CONFIG_HAMRADIO=y
+
+#
+# Packet Radio protocols
+#
+CONFIG_AX25=m
+CONFIG_AX25_DAMA_SLAVE=y
+CONFIG_NETROM=m
+CONFIG_ROSE=m
+
+#
+# AX.25 network device drivers
+#
+CONFIG_MKISS=m
+CONFIG_6PACK=m
+CONFIG_BPQETHER=m
+CONFIG_BAYCOM_SER_FDX=m
+CONFIG_BAYCOM_SER_HDX=m
+CONFIG_BAYCOM_PAR=m
+CONFIG_YAM=m
+CONFIG_IRDA=m
+
+#
+# IrDA protocols
+#
+CONFIG_IRLAN=m
+CONFIG_IRNET=m
+CONFIG_IRCOMM=m
+CONFIG_IRDA_ULTRA=y
+
+#
+# IrDA options
+#
+CONFIG_IRDA_CACHE_LAST_LSAP=y
+CONFIG_IRDA_FAST_RR=y
+# CONFIG_IRDA_DEBUG is not set
+
+#
+# Infrared-port device drivers
+#
+
+#
+# SIR device drivers
+#
+CONFIG_IRTTY_SIR=m
+
+#
+# Dongle support
+#
+CONFIG_DONGLE=y
+CONFIG_ESI_DONGLE=m
+CONFIG_ACTISYS_DONGLE=m
+CONFIG_TEKRAM_DONGLE=m
+CONFIG_TOIM3232_DONGLE=m
+CONFIG_LITELINK_DONGLE=m
+CONFIG_MA600_DONGLE=m
+CONFIG_GIRBIL_DONGLE=m
+CONFIG_MCP2120_DONGLE=m
+CONFIG_OLD_BELKIN_DONGLE=m
+CONFIG_ACT200L_DONGLE=m
+CONFIG_KINGSUN_DONGLE=m
+
+#
+# Old SIR device drivers
+#
+
+#
+# Old Serial dongle support
+#
+
+#
+# FIR device drivers
+#
+CONFIG_USB_IRDA=m
+CONFIG_SIGMATEL_FIR=m
+CONFIG_NSC_FIR=m
+CONFIG_WINBOND_FIR=m
+CONFIG_SMC_IRCC_FIR=m
+CONFIG_ALI_FIR=m
+CONFIG_VLSI_FIR=m
+CONFIG_VIA_FIR=m
+CONFIG_MCS_FIR=m
+CONFIG_BT=m
+CONFIG_BT_L2CAP=m
+CONFIG_BT_SCO=m
+CONFIG_BT_RFCOMM=m
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=m
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_CMTP=m
+CONFIG_BT_HIDP=m
+
+#
+# Bluetooth device drivers
+#
+CONFIG_BT_HCIUSB=m
+CONFIG_BT_HCIUSB_SCO=y
+CONFIG_BT_HCIUART=m
+CONFIG_BT_HCIUART_H4=y
+CONFIG_BT_HCIUART_BCSP=y
+CONFIG_BT_HCIBCM203X=m
+CONFIG_BT_HCIBPA10X=m
+CONFIG_BT_HCIBFUSB=m
+CONFIG_BT_HCIDTL1=m
+CONFIG_BT_HCIBT3C=m
+CONFIG_BT_HCIBLUECARD=m
+CONFIG_BT_HCIBTUART=m
+CONFIG_BT_HCIVHCI=m
+CONFIG_AF_RXRPC=m
+# CONFIG_AF_RXRPC_DEBUG is not set
+CONFIG_RXKAD=m
+CONFIG_FIB_RULES=y
+
+#
+# Wireless
+#
+CONFIG_CFG80211=y
+CONFIG_NL80211=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_MAC80211=m
+CONFIG_MAC80211_LEDS=y
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_DEBUG is not set
+CONFIG_IEEE80211=m
+# CONFIG_IEEE80211_DEBUG is not set
+CONFIG_IEEE80211_CRYPT_WEP=m
+CONFIG_IEEE80211_CRYPT_CCMP=m
+CONFIG_IEEE80211_CRYPT_TKIP=m
+CONFIG_IEEE80211_SOFTMAC=m
+# CONFIG_IEEE80211_SOFTMAC_DEBUG is not set
+CONFIG_IEEE80211_RADIOTAP=y
+CONFIG_RFKILL=m
+CONFIG_RFKILL_INPUT=m
+CONFIG_RFKILL_LEDS=y
+# CONFIG_NET_9P is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+# CONFIG_STANDALONE is not set
+# CONFIG_PREVENT_FIRMWARE_BUILD is not set
+CONFIG_FW_LOADER=y
+# CONFIG_SYS_HYPERVISOR is not set
+CONFIG_CONNECTOR=y
+CONFIG_PROC_EVENTS=y
+CONFIG_MTD=y
+CONFIG_MTD_DEBUG=y
+CONFIG_MTD_DEBUG_VERBOSE=0
+CONFIG_MTD_CONCAT=y
+CONFIG_MTD_PARTITIONS=y
+CONFIG_MTD_REDBOOT_PARTS=m
+CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-1
+CONFIG_MTD_REDBOOT_PARTS_UNALLOCATED=y
+CONFIG_MTD_REDBOOT_PARTS_READONLY=y
+CONFIG_MTD_CMDLINE_PARTS=y
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=m
+CONFIG_MTD_BLKDEVS=m
+CONFIG_MTD_BLOCK=m
+CONFIG_MTD_BLOCK_RO=m
+CONFIG_FTL=m
+CONFIG_NFTL=m
+CONFIG_NFTL_RW=y
+CONFIG_INFTL=m
+CONFIG_RFD_FTL=m
+CONFIG_SSFDC=m
+
+#
+# RAM/ROM/Flash chip drivers
+#
+CONFIG_MTD_CFI=m
+CONFIG_MTD_JEDECPROBE=m
+CONFIG_MTD_GEN_PROBE=m
+# CONFIG_MTD_CFI_ADV_OPTIONS is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+CONFIG_MTD_CFI_INTELEXT=m
+CONFIG_MTD_CFI_AMDSTD=m
+CONFIG_MTD_CFI_STAA=m
+CONFIG_MTD_CFI_UTIL=m
+CONFIG_MTD_RAM=m
+CONFIG_MTD_ROM=m
+CONFIG_MTD_ABSENT=m
+
+#
+# Mapping drivers for chip access
+#
+CONFIG_MTD_COMPLEX_MAPPINGS=y
+CONFIG_MTD_PHYSMAP=m
+CONFIG_MTD_PHYSMAP_START=0x8000000
+CONFIG_MTD_PHYSMAP_LEN=0x4000000
+CONFIG_MTD_PHYSMAP_BANKWIDTH=2
+CONFIG_MTD_PNC2000=m
+CONFIG_MTD_SC520CDP=m
+CONFIG_MTD_NETSC520=m
+CONFIG_MTD_TS5500=m
+CONFIG_MTD_SBC_GXX=m
+CONFIG_MTD_AMD76XROM=m
+CONFIG_MTD_ICHXROM=m
+CONFIG_MTD_ESB2ROM=m
+CONFIG_MTD_CK804XROM=m
+CONFIG_MTD_SCB2_FLASH=m
+CONFIG_MTD_NETtel=m
+CONFIG_MTD_DILNETPC=m
+CONFIG_MTD_DILNETPC_BOOTSIZE=0x80000
+CONFIG_MTD_L440GX=m
+CONFIG_MTD_PCI=m
+CONFIG_MTD_PLATRAM=m
+
+#
+# Self-contained MTD device drivers
+#
+CONFIG_MTD_PMC551=m
+# CONFIG_MTD_PMC551_BUGFIX is not set
+# CONFIG_MTD_PMC551_DEBUG is not set
+CONFIG_MTD_DATAFLASH=m
+CONFIG_MTD_M25P80=m
+CONFIG_MTD_SLRAM=m
+CONFIG_MTD_PHRAM=m
+CONFIG_MTD_MTDRAM=m
+CONFIG_MTDRAM_TOTAL_SIZE=4096
+CONFIG_MTDRAM_ERASE_SIZE=128
+CONFIG_MTD_BLOCK2MTD=m
+
+#
+# Disk-On-Chip Device Drivers
+#
+CONFIG_MTD_DOC2000=m
+CONFIG_MTD_DOC2001=m
+CONFIG_MTD_DOC2001PLUS=m
+CONFIG_MTD_DOCPROBE=m
+CONFIG_MTD_DOCECC=m
+CONFIG_MTD_DOCPROBE_ADVANCED=y
+CONFIG_MTD_DOCPROBE_ADDRESS=0x0000
+CONFIG_MTD_DOCPROBE_HIGH=y
+CONFIG_MTD_DOCPROBE_55AA=y
+CONFIG_MTD_NAND=m
+CONFIG_MTD_NAND_VERIFY_WRITE=y
+# CONFIG_MTD_NAND_ECC_SMC is not set
+# CONFIG_MTD_NAND_MUSEUM_IDS is not set
+CONFIG_MTD_NAND_IDS=m
+CONFIG_MTD_NAND_DISKONCHIP=m
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADVANCED=y
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS=0x0
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_HIGH=y
+CONFIG_MTD_NAND_DISKONCHIP_BBTWRITE=y
+CONFIG_MTD_NAND_CAFE=m
+CONFIG_MTD_NAND_NANDSIM=m
+CONFIG_MTD_NAND_PLATFORM=m
+CONFIG_MTD_ONENAND=m
+CONFIG_MTD_ONENAND_VERIFY_WRITE=y
+CONFIG_MTD_ONENAND_OTP=y
+
+#
+# UBI - Unsorted block images
+#
+CONFIG_MTD_UBI=m
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_RESERVE=1
+CONFIG_MTD_UBI_GLUEBI=y
+
+#
+# UBI debugging options
+#
+# CONFIG_MTD_UBI_DEBUG is not set
+CONFIG_PARPORT=y
+CONFIG_PARPORT_PC=y
+CONFIG_PARPORT_SERIAL=m
+CONFIG_PARPORT_PC_FIFO=y
+# CONFIG_PARPORT_PC_SUPERIO is not set
+CONFIG_PARPORT_PC_PCMCIA=m
+# CONFIG_PARPORT_GSC is not set
+CONFIG_PARPORT_AX88796=m
+CONFIG_PARPORT_1284=y
+CONFIG_PARPORT_NOT_PC=y
+CONFIG_PNP=y
+# CONFIG_PNP_DEBUG is not set
+
+#
+# Protocols
+#
+CONFIG_PNPACPI=y
+CONFIG_BLK_DEV=y
+CONFIG_BLK_DEV_FD=y
+CONFIG_PARIDE=y
+
+#
+# Parallel IDE high-level drivers
+#
+CONFIG_PARIDE_PD=m
+CONFIG_PARIDE_PCD=m
+CONFIG_PARIDE_PF=m
+CONFIG_PARIDE_PT=m
+CONFIG_PARIDE_PG=m
+
+#
+# Parallel IDE protocol modules
+#
+CONFIG_PARIDE_ATEN=m
+CONFIG_PARIDE_BPCK=m
+CONFIG_PARIDE_COMM=m
+CONFIG_PARIDE_DSTR=m
+CONFIG_PARIDE_FIT2=m
+CONFIG_PARIDE_FIT3=m
+CONFIG_PARIDE_EPAT=m
+CONFIG_PARIDE_EPATC8=y
+CONFIG_PARIDE_EPIA=m
+CONFIG_PARIDE_FRIQ=m
+CONFIG_PARIDE_FRPW=m
+CONFIG_PARIDE_KBIC=m
+CONFIG_PARIDE_KTTI=m
+CONFIG_PARIDE_ON20=m
+CONFIG_PARIDE_ON26=m
+CONFIG_BLK_CPQ_DA=y
+CONFIG_BLK_CPQ_CISS_DA=y
+CONFIG_CISS_SCSI_TAPE=y
+CONFIG_BLK_DEV_DAC960=y
+CONFIG_BLK_DEV_UMEM=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_CRYPTOLOOP=y
+CONFIG_BLK_DEV_NBD=m
+CONFIG_BLK_DEV_SX8=m
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=16384
+CONFIG_BLK_DEV_RAM_BLOCKSIZE=1024
+CONFIG_CDROM_PKTCDVD=y
+CONFIG_CDROM_PKTCDVD_BUFFERS=8
+CONFIG_CDROM_PKTCDVD_WCACHE=y
+CONFIG_ATA_OVER_ETH=m
+CONFIG_MISC_DEVICES=y
+CONFIG_IBM_ASM=m
+CONFIG_PHANTOM=m
+CONFIG_EEPROM_93CX6=m
+CONFIG_SGI_IOC4=m
+CONFIG_TIFM_CORE=m
+CONFIG_TIFM_7XX1=m
+CONFIG_ACER_ACPI=m
+CONFIG_FUJITSU_LAPTOP=m
+CONFIG_MSI_LAPTOP=m
+CONFIG_SONY_LAPTOP=m
+CONFIG_SONYPI_COMPAT=y
+CONFIG_THINKPAD_ACPI=m
+# CONFIG_THINKPAD_ACPI_DEBUG is not set
+CONFIG_THINKPAD_ACPI_BAY=y
+CONFIG_THINKPAD_EC=m
+CONFIG_TP_SMAPI=m
+CONFIG_IDE=y
+# CONFIG_BLK_DEV_IDE is not set
+# CONFIG_BLK_DEV_HD_ONLY is not set
+# CONFIG_BLK_DEV_HD is not set
+
+#
+# SCSI device support
+#
+CONFIG_RAID_ATTRS=y
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=m
+CONFIG_SCSI_NETLINK=y
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+CONFIG_CHR_DEV_ST=y
+CONFIG_CHR_DEV_OSST=y
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+CONFIG_CHR_DEV_SCH=m
+
+#
+# Some SCSI devices (e.g. CD jukebox) support multiple LUNs
+#
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+CONFIG_SCSI_LOGGING=y
+CONFIG_SCSI_SCAN_ASYNC=y
+CONFIG_SCSI_WAIT_SCAN=m
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=y
+CONFIG_SCSI_FC_ATTRS=y
+CONFIG_SCSI_ISCSI_ATTRS=y
+CONFIG_SCSI_SAS_ATTRS=y
+CONFIG_SCSI_SAS_LIBSAS=y
+# CONFIG_SCSI_SAS_ATA is not set
+# CONFIG_SCSI_SAS_LIBSAS_DEBUG is not set
+CONFIG_SCSI_LOWLEVEL=y
+CONFIG_ISCSI_TCP=y
+CONFIG_BLK_DEV_3W_XXXX_RAID=y
+CONFIG_SCSI_3W_9XXX=y
+CONFIG_SCSI_ACARD=y
+CONFIG_SCSI_AACRAID=y
+CONFIG_SCSI_AIC7XXX=y
+CONFIG_AIC7XXX_CMDS_PER_DEVICE=32
+CONFIG_AIC7XXX_RESET_DELAY_MS=15000
+# CONFIG_AIC7XXX_BUILD_FIRMWARE is not set
+CONFIG_AIC7XXX_DEBUG_ENABLE=y
+CONFIG_AIC7XXX_DEBUG_MASK=0
+CONFIG_AIC7XXX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC7XXX_OLD=y
+CONFIG_SCSI_AIC79XX=y
+CONFIG_AIC79XX_CMDS_PER_DEVICE=32
+CONFIG_AIC79XX_RESET_DELAY_MS=15000
+# CONFIG_AIC79XX_BUILD_FIRMWARE is not set
+CONFIG_AIC79XX_DEBUG_ENABLE=y
+CONFIG_AIC79XX_DEBUG_MASK=0
+CONFIG_AIC79XX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC94XX=y
+# CONFIG_AIC94XX_DEBUG is not set
+CONFIG_SCSI_ARCMSR=y
+CONFIG_MEGARAID_NEWGEN=y
+CONFIG_MEGARAID_MM=y
+CONFIG_MEGARAID_MAILBOX=y
+CONFIG_MEGARAID_LEGACY=y
+CONFIG_MEGARAID_SAS=y
+CONFIG_SCSI_HPTIOP=y
+CONFIG_SCSI_BUSLOGIC=y
+# CONFIG_SCSI_OMIT_FLASHPOINT is not set
+CONFIG_SCSI_DMX3191D=y
+CONFIG_SCSI_EATA=y
+CONFIG_SCSI_EATA_TAGGED_QUEUE=y
+CONFIG_SCSI_EATA_LINKED_COMMANDS=y
+CONFIG_SCSI_EATA_MAX_TAGS=16
+CONFIG_SCSI_FUTURE_DOMAIN=m
+CONFIG_SCSI_GDTH=y
+CONFIG_SCSI_IPS=y
+CONFIG_SCSI_INITIO=y
+CONFIG_SCSI_INIA100=y
+CONFIG_SCSI_PPA=m
+CONFIG_SCSI_IMM=m
+# CONFIG_SCSI_IZIP_EPP16 is not set
+# CONFIG_SCSI_IZIP_SLOW_CTR is not set
+CONFIG_SCSI_STEX=y
+CONFIG_SCSI_SYM53C8XX_2=y
+CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=1
+CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS=16
+CONFIG_SCSI_SYM53C8XX_MAX_TAGS=64
+CONFIG_SCSI_SYM53C8XX_MMIO=y
+CONFIG_SCSI_IPR=y
+CONFIG_SCSI_IPR_TRACE=y
+CONFIG_SCSI_IPR_DUMP=y
+CONFIG_SCSI_QLOGIC_1280=y
+CONFIG_SCSI_QLA_FC=y
+CONFIG_SCSI_QLA_ISCSI=y
+CONFIG_SCSI_LPFC=y
+CONFIG_SCSI_DC395x=y
+CONFIG_SCSI_DC390T=y
+# CONFIG_SCSI_DEBUG is not set
+CONFIG_SCSI_SRP=m
+# CONFIG_SCSI_LOWLEVEL_PCMCIA is not set
+CONFIG_ATA=y
+# CONFIG_ATA_NONSTANDARD is not set
+CONFIG_ATA_ACPI=y
+CONFIG_SATA_AHCI=y
+CONFIG_SATA_SVW=y
+CONFIG_ATA_PIIX=y
+CONFIG_SATA_MV=y
+CONFIG_SATA_NV=y
+CONFIG_PDC_ADMA=y
+CONFIG_SATA_QSTOR=y
+CONFIG_SATA_PROMISE=y
+CONFIG_SATA_SX4=y
+CONFIG_SATA_SIL=y
+CONFIG_SATA_SIL24=y
+CONFIG_SATA_SIS=y
+CONFIG_SATA_ULI=y
+CONFIG_SATA_VIA=y
+CONFIG_SATA_VITESSE=y
+CONFIG_SATA_INIC162X=y
+CONFIG_PATA_ALI=y
+CONFIG_PATA_AMD=y
+CONFIG_PATA_ARTOP=y
+CONFIG_PATA_ATIIXP=y
+CONFIG_PATA_CMD640_PCI=y
+CONFIG_PATA_CMD64X=y
+CONFIG_PATA_CS5520=y
+CONFIG_PATA_CS5530=y
+CONFIG_PATA_CYPRESS=y
+CONFIG_PATA_EFAR=y
+CONFIG_ATA_GENERIC=y
+CONFIG_PATA_HPT366=y
+CONFIG_PATA_HPT37X=y
+CONFIG_PATA_HPT3X2N=y
+CONFIG_PATA_HPT3X3=y
+CONFIG_PATA_HPT3X3_DMA=y
+CONFIG_PATA_IT821X=y
+CONFIG_PATA_IT8213=y
+CONFIG_PATA_JMICRON=y
+CONFIG_PATA_TRIFLEX=y
+CONFIG_PATA_MARVELL=y
+CONFIG_PATA_MPIIX=y
+CONFIG_PATA_OLDPIIX=y
+CONFIG_PATA_NETCELL=y
+CONFIG_PATA_NS87410=y
+CONFIG_PATA_OPTI=y
+CONFIG_PATA_OPTIDMA=y
+CONFIG_PATA_PCMCIA=m
+CONFIG_PATA_PDC_OLD=y
+CONFIG_PATA_RADISYS=y
+CONFIG_PATA_RZ1000=y
+CONFIG_PATA_SC1200=y
+CONFIG_PATA_SERVERWORKS=y
+CONFIG_PATA_PDC2027X=y
+CONFIG_PATA_SIL680=y
+CONFIG_PATA_SIS=y
+CONFIG_PATA_VIA=y
+CONFIG_PATA_WINBOND=y
+CONFIG_MD=y
+CONFIG_BLK_DEV_MD=y
+CONFIG_MD_LINEAR=y
+CONFIG_MD_RAID0=y
+CONFIG_MD_RAID1=y
+CONFIG_MD_RAID10=y
+CONFIG_MD_RAID456=y
+CONFIG_MD_RAID5_RESHAPE=y
+CONFIG_MD_MULTIPATH=y
+CONFIG_MD_FAULTY=y
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_CRYPT=y
+CONFIG_DM_SNAPSHOT=y
+CONFIG_DM_MIRROR=y
+CONFIG_DM_ZERO=y
+CONFIG_DM_MULTIPATH=m
+CONFIG_DM_MULTIPATH_EMC=m
+CONFIG_DM_MULTIPATH_RDAC=m
+CONFIG_DM_DELAY=m
+
+#
+# Fusion MPT device support
+#
+CONFIG_FUSION=y
+CONFIG_FUSION_SPI=y
+CONFIG_FUSION_FC=y
+CONFIG_FUSION_SAS=y
+CONFIG_FUSION_MAX_SGE=128
+CONFIG_FUSION_CTL=y
+CONFIG_FUSION_LAN=y
+CONFIG_FUSION_LOGGING=y
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+CONFIG_IEEE1394=y
+
+#
+# Subsystem Options
+#
+# CONFIG_IEEE1394_VERBOSEDEBUG is not set
+
+#
+# Controllers
+#
+CONFIG_IEEE1394_PCILYNX=m
+CONFIG_IEEE1394_OHCI1394=y
+
+#
+# Protocols
+#
+CONFIG_IEEE1394_VIDEO1394=m
+CONFIG_IEEE1394_SBP2=y
+# CONFIG_IEEE1394_SBP2_PHYS_DMA is not set
+# CONFIG_IEEE1394_ETH1394_ROM_ENTRY is not set
+# CONFIG_IEEE1394_ETH1394 is not set
+CONFIG_IEEE1394_DV1394=m
+CONFIG_IEEE1394_RAWIO=m
+CONFIG_I2O=y
+CONFIG_I2O_LCT_NOTIFY_ON_CHANGES=y
+CONFIG_I2O_EXT_ADAPTEC=y
+CONFIG_I2O_EXT_ADAPTEC_DMA64=y
+CONFIG_I2O_CONFIG=y
+CONFIG_I2O_CONFIG_OLD_IOCTL=y
+CONFIG_I2O_BUS=y
+CONFIG_I2O_BLOCK=y
+CONFIG_I2O_SCSI=y
+CONFIG_I2O_PROC=y
+CONFIG_MACINTOSH_DRIVERS=y
+CONFIG_MAC_EMUMOUSEBTN=y
+CONFIG_NETDEVICES=y
+# CONFIG_NETDEVICES_MULTIQUEUE is not set
+CONFIG_IFB=m
+CONFIG_DUMMY=m
+CONFIG_BONDING=m
+# CONFIG_MACVLAN is not set
+CONFIG_EQUALIZER=m
+CONFIG_TUN=m
+CONFIG_NET_SB1000=m
+CONFIG_ARCNET=m
+CONFIG_ARCNET_1201=m
+CONFIG_ARCNET_1051=m
+CONFIG_ARCNET_RAW=m
+CONFIG_ARCNET_CAP=m
+CONFIG_ARCNET_COM90xx=m
+CONFIG_ARCNET_COM90xxIO=m
+CONFIG_ARCNET_RIM_I=m
+CONFIG_ARCNET_COM20020=m
+CONFIG_ARCNET_COM20020_PCI=m
+CONFIG_PHYLIB=m
+
+#
+# MII PHY device drivers
+#
+CONFIG_MARVELL_PHY=m
+CONFIG_DAVICOM_PHY=m
+CONFIG_QSEMI_PHY=m
+CONFIG_LXT_PHY=m
+CONFIG_CICADA_PHY=m
+CONFIG_VITESSE_PHY=m
+CONFIG_SMSC_PHY=m
+CONFIG_BROADCOM_PHY=m
+# CONFIG_ICPLUS_PHY is not set
+CONFIG_FIXED_PHY=m
+CONFIG_FIXED_MII_10_FDX=y
+CONFIG_FIXED_MII_100_FDX=y
+CONFIG_NET_ETHERNET=y
+CONFIG_MII=y
+CONFIG_HAPPYMEAL=m
+CONFIG_SUNGEM=m
+CONFIG_CASSINI=m
+CONFIG_NET_VENDOR_3COM=y
+CONFIG_VORTEX=m
+CONFIG_TYPHOON=m
+CONFIG_NET_TULIP=y
+CONFIG_DE2104X=m
+CONFIG_TULIP=m
+# CONFIG_TULIP_MWI is not set
+# CONFIG_TULIP_MMIO is not set
+# CONFIG_TULIP_NAPI is not set
+CONFIG_DE4X5=m
+CONFIG_WINBOND_840=m
+CONFIG_DM9102=m
+CONFIG_ULI526X=m
+CONFIG_PCMCIA_XIRCOM=m
+CONFIG_HP100=y
+CONFIG_NET_PCI=y
+CONFIG_PCNET32=m
+# CONFIG_PCNET32_NAPI is not set
+CONFIG_AMD8111_ETH=m
+# CONFIG_AMD8111E_NAPI is not set
+CONFIG_ADAPTEC_STARFIRE=m
+# CONFIG_ADAPTEC_STARFIRE_NAPI is not set
+CONFIG_B44=m
+CONFIG_B44_PCI_AUTOSELECT=y
+CONFIG_B44_PCICORE_AUTOSELECT=y
+CONFIG_B44_PCI=y
+CONFIG_FORCEDETH=m
+# CONFIG_FORCEDETH_NAPI is not set
+CONFIG_DGRS=m
+CONFIG_EEPRO100=m
+CONFIG_E100=m
+CONFIG_FEALNX=m
+CONFIG_NATSEMI=m
+CONFIG_NE2K_PCI=m
+CONFIG_8139CP=m
+CONFIG_8139TOO=m
+# CONFIG_8139TOO_PIO is not set
+CONFIG_8139TOO_TUNE_TWISTER=y
+CONFIG_8139TOO_8129=y
+CONFIG_8139_OLD_RX_RESET=y
+CONFIG_SIS900=m
+CONFIG_EPIC100=m
+CONFIG_SUNDANCE=m
+# CONFIG_SUNDANCE_MMIO is not set
+CONFIG_VIA_RHINE=m
+# CONFIG_VIA_RHINE_MMIO is not set
+# CONFIG_VIA_RHINE_NAPI is not set
+CONFIG_SC92031=m
+CONFIG_NET_POCKET=y
+CONFIG_ATP=m
+CONFIG_DE600=m
+CONFIG_DE620=m
+CONFIG_NETDEV_1000=y
+CONFIG_ACENIC=m
+# CONFIG_ACENIC_OMIT_TIGON_I is not set
+CONFIG_DL2K=m
+CONFIG_E1000=m
+# CONFIG_E1000_NAPI is not set
+# CONFIG_E1000_DISABLE_PACKET_SPLIT is not set
+CONFIG_NS83820=m
+CONFIG_HAMACHI=m
+CONFIG_YELLOWFIN=m
+CONFIG_R8169=m
+# CONFIG_R8169_NAPI is not set
+CONFIG_R8169_VLAN=y
+CONFIG_SIS190=m
+CONFIG_SKGE=m
+CONFIG_SKY2=m
+# CONFIG_SKY2_DEBUG is not set
+CONFIG_SK98LIN=m
+CONFIG_VIA_VELOCITY=m
+CONFIG_TIGON3=m
+CONFIG_BNX2=m
+CONFIG_QLA3XXX=m
+CONFIG_ATL1=m
+CONFIG_NETDEV_10000=y
+CONFIG_CHELSIO_T1=m
+# CONFIG_CHELSIO_T1_1G is not set
+CONFIG_CHELSIO_T1_NAPI=y
+CONFIG_CHELSIO_T3=m
+CONFIG_IXGB=m
+# CONFIG_IXGB_NAPI is not set
+CONFIG_S2IO=m
+# CONFIG_S2IO_NAPI is not set
+CONFIG_MYRI10GE=m
+CONFIG_NETXEN_NIC=m
+CONFIG_MLX4_CORE=m
+CONFIG_MLX4_DEBUG=y
+CONFIG_TR=y
+CONFIG_IBMOL=m
+CONFIG_3C359=m
+CONFIG_TMS380TR=m
+CONFIG_TMSPCI=m
+CONFIG_ABYSS=m
+
+#
+# Wireless LAN
+#
+CONFIG_WLAN_PRE80211=y
+CONFIG_STRIP=m
+CONFIG_PCMCIA_WAVELAN=m
+CONFIG_PCMCIA_NETWAVE=m
+CONFIG_WLAN_80211=y
+CONFIG_PCMCIA_RAYCS=m
+CONFIG_IPW2100=m
+CONFIG_IPW2100_MONITOR=y
+# CONFIG_IPW2100_DEBUG is not set
+CONFIG_IPW2200=m
+CONFIG_IPW2200_MONITOR=y
+CONFIG_IPW2200_RADIOTAP=y
+CONFIG_IPW2200_PROMISCUOUS=y
+CONFIG_IPW2200_QOS=y
+# CONFIG_IPW2200_DEBUG is not set
+CONFIG_LIBERTAS=m
+CONFIG_LIBERTAS_USB=m
+CONFIG_LIBERTAS_CS=m
+# CONFIG_LIBERTAS_DEBUG is not set
+CONFIG_AIRO=m
+CONFIG_HERMES=m
+CONFIG_PLX_HERMES=m
+CONFIG_TMD_HERMES=m
+CONFIG_NORTEL_HERMES=m
+CONFIG_PCI_HERMES=m
+CONFIG_PCMCIA_HERMES=m
+CONFIG_PCMCIA_SPECTRUM=m
+CONFIG_ATMEL=m
+CONFIG_PCI_ATMEL=m
+CONFIG_PCMCIA_ATMEL=m
+CONFIG_USB_ATMEL=m
+CONFIG_AIRO_CS=m
+CONFIG_PCMCIA_WL3501=m
+CONFIG_PRISM54=m
+CONFIG_USB_ZD1201=m
+CONFIG_RTL8187=m
+CONFIG_ADM8211=m
+CONFIG_P54_COMMON=m
+CONFIG_P54_USB=m
+CONFIG_P54_PCI=m
+CONFIG_ATH5K=m
+CONFIG_HOSTAP=m
+CONFIG_HOSTAP_FIRMWARE=y
+CONFIG_HOSTAP_FIRMWARE_NVRAM=y
+CONFIG_HOSTAP_PLX=m
+CONFIG_HOSTAP_PCI=m
+CONFIG_HOSTAP_CS=m
+CONFIG_ACX=m
+CONFIG_ACX_PCI=y
+CONFIG_ACX_USB=y
+# CONFIG_BCM43XX is not set
+CONFIG_B43=m
+CONFIG_B43_PCI_AUTOSELECT=y
+CONFIG_B43_PCICORE_AUTOSELECT=y
+CONFIG_B43_PCMCIA=y
+CONFIG_B43_LEDS=y
+CONFIG_B43_RFKILL=y
+# CONFIG_B43_DEBUG is not set
+CONFIG_B43_DMA=y
+CONFIG_B43_PIO=y
+CONFIG_B43_DMA_AND_PIO_MODE=y
+# CONFIG_B43_DMA_MODE is not set
+# CONFIG_B43_PIO_MODE is not set
+CONFIG_B43LEGACY=m
+CONFIG_B43LEGACY_PCI_AUTOSELECT=y
+CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
+# CONFIG_B43LEGACY_DEBUG is not set
+CONFIG_B43LEGACY_DMA=y
+CONFIG_B43LEGACY_PIO=y
+CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
+# CONFIG_B43LEGACY_DMA_MODE is not set
+# CONFIG_B43LEGACY_PIO_MODE is not set
+CONFIG_ZD1211RW=m
+# CONFIG_ZD1211RW_DEBUG is not set
+CONFIG_RT2X00=m
+CONFIG_RT2X00_LIB=m
+CONFIG_RT2X00_LIB_PCI=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_RT2X00_LIB_RFKILL=y
+CONFIG_RT2400PCI=m
+CONFIG_RT2400PCI_RFKILL=y
+CONFIG_RT2500PCI=m
+CONFIG_RT2500PCI_RFKILL=y
+CONFIG_RT61PCI=m
+CONFIG_RT61PCI_RFKILL=y
+CONFIG_RT2500USB=m
+CONFIG_RT73USB=m
+# CONFIG_RT2X00_DEBUG is not set
+CONFIG_IWLWIFI=y
+# CONFIG_IWLWIFI_DEBUG is not set
+CONFIG_IWLWIFI_SENSITIVITY=y
+CONFIG_IWLWIFI_SPECTRUM_MEASUREMENT=y
+CONFIG_IWLWIFI_QOS=y
+CONFIG_IWL4965=m
+# CONFIG_IWL3945 is not set
+CONFIG_ZD1211RW_MAC80211=m
+# CONFIG_ZD1211RW_MAC80211_DEBUG is not set
+CONFIG_IPW3945=m
+# CONFIG_IPW3945_DEBUG is not set
+CONFIG_IPW3945_MONITOR=y
+CONFIG_IPW3945_PROMISCUOUS=y
+CONFIG_IPW3945_SIM_RX=y
+
+#
+# USB Network Adapters
+#
+CONFIG_USB_CATC=m
+CONFIG_USB_KAWETH=m
+CONFIG_USB_PEGASUS=m
+CONFIG_USB_RTL8150=m
+CONFIG_USB_USBNET_MII=m
+CONFIG_USB_USBNET=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_USB_NET_CDCETHER=m
+CONFIG_USB_NET_DM9601=m
+CONFIG_USB_NET_GL620A=m
+CONFIG_USB_NET_NET1080=m
+CONFIG_USB_NET_PLUSB=m
+CONFIG_USB_NET_MCS7830=m
+CONFIG_USB_NET_RNDIS_HOST=m
+CONFIG_USB_NET_CDC_SUBSET=m
+CONFIG_USB_ALI_M5632=y
+CONFIG_USB_AN2720=y
+CONFIG_USB_BELKIN=y
+CONFIG_USB_ARMLINUX=y
+CONFIG_USB_EPSON2888=y
+CONFIG_USB_KC2190=y
+CONFIG_USB_NET_ZAURUS=m
+CONFIG_NET_PCMCIA=y
+CONFIG_PCMCIA_3C589=m
+CONFIG_PCMCIA_3C574=m
+CONFIG_PCMCIA_FMVJ18X=m
+CONFIG_PCMCIA_PCNET=m
+CONFIG_PCMCIA_NMCLAN=m
+CONFIG_PCMCIA_SMC91C92=m
+CONFIG_PCMCIA_XIRC2PS=m
+CONFIG_PCMCIA_AXNET=m
+CONFIG_ARCNET_COM20020_CS=m
+CONFIG_WAN=y
+CONFIG_LANMEDIA=m
+CONFIG_HDLC=m
+CONFIG_HDLC_RAW=m
+CONFIG_HDLC_RAW_ETH=m
+CONFIG_HDLC_CISCO=m
+CONFIG_HDLC_FR=m
+CONFIG_HDLC_PPP=m
+CONFIG_HDLC_X25=m
+CONFIG_PCI200SYN=m
+CONFIG_WANXL=m
+# CONFIG_WANXL_BUILD_FIRMWARE is not set
+CONFIG_PC300=m
+# CONFIG_PC300_MLPPP is not set
+
+#
+# Cyclades-PC300 MLPPP support is disabled.
+#
+
+#
+# Refer to the file README.mlppp, provided by PC300 package.
+#
+# CONFIG_PC300TOO is not set
+CONFIG_FARSYNC=m
+CONFIG_DSCC4=m
+# CONFIG_DSCC4_PCISYNC is not set
+# CONFIG_DSCC4_PCI_RST is not set
+CONFIG_DLCI=m
+CONFIG_DLCI_MAX=8
+CONFIG_WAN_ROUTER_DRIVERS=m
+CONFIG_CYCLADES_SYNC=m
+CONFIG_CYCLOMX_X25=y
+CONFIG_LAPBETHER=m
+CONFIG_X25_ASY=m
+CONFIG_SBNI=m
+# CONFIG_SBNI_MULTILINE is not set
+CONFIG_ATM_DRIVERS=y
+# CONFIG_ATM_DUMMY is not set
+CONFIG_ATM_TCP=m
+CONFIG_ATM_LANAI=m
+CONFIG_ATM_ENI=m
+# CONFIG_ATM_ENI_DEBUG is not set
+# CONFIG_ATM_ENI_TUNE_BURST is not set
+CONFIG_ATM_FIRESTREAM=m
+CONFIG_ATM_ZATM=m
+# CONFIG_ATM_ZATM_DEBUG is not set
+CONFIG_ATM_IDT77252=m
+# CONFIG_ATM_IDT77252_DEBUG is not set
+# CONFIG_ATM_IDT77252_RCV_ALL is not set
+CONFIG_ATM_IDT77252_USE_SUNI=y
+CONFIG_ATM_AMBASSADOR=m
+# CONFIG_ATM_AMBASSADOR_DEBUG is not set
+CONFIG_ATM_HORIZON=m
+# CONFIG_ATM_HORIZON_DEBUG is not set
+CONFIG_ATM_FORE200E_MAYBE=m
+# CONFIG_ATM_FORE200E_PCA is not set
+CONFIG_ATM_HE=m
+# CONFIG_ATM_HE_USE_SUNI is not set
+CONFIG_FDDI=y
+CONFIG_DEFXX=m
+# CONFIG_DEFXX_MMIO is not set
+CONFIG_SKFP=m
+CONFIG_HIPPI=y
+CONFIG_ROADRUNNER=m
+# CONFIG_ROADRUNNER_LARGE_RINGS is not set
+CONFIG_PLIP=m
+CONFIG_PPP=m
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_ASYNC=m
+CONFIG_PPP_SYNC_TTY=m
+CONFIG_PPP_DEFLATE=m
+CONFIG_PPP_BSDCOMP=m
+CONFIG_PPP_MPPE=m
+CONFIG_PPPOE=m
+CONFIG_PPPOATM=m
+CONFIG_PPPOL2TP=m
+CONFIG_SLIP=m
+CONFIG_SLIP_COMPRESSED=y
+CONFIG_SLHC=m
+CONFIG_SLIP_SMART=y
+# CONFIG_SLIP_MODE_SLIP6 is not set
+CONFIG_NET_FC=y
+CONFIG_SHAPER=m
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+CONFIG_ISDN=m
+# CONFIG_ISDN_I4L is not set
+CONFIG_ISDN_CAPI=m
+# CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON is not set
+CONFIG_CAPI_TRACE=y
+CONFIG_ISDN_CAPI_MIDDLEWARE=y
+CONFIG_ISDN_CAPI_CAPI20=m
+CONFIG_ISDN_CAPI_CAPIFS_BOOL=y
+CONFIG_ISDN_CAPI_CAPIFS=m
+
+#
+# CAPI hardware drivers
+#
+CONFIG_CAPI_AVM=y
+CONFIG_ISDN_DRV_AVMB1_B1PCI=m
+CONFIG_ISDN_DRV_AVMB1_B1PCIV4=y
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=m
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=m
+CONFIG_ISDN_DRV_AVMB1_T1PCI=m
+CONFIG_ISDN_DRV_AVMB1_C4=m
+CONFIG_CAPI_EICON=y
+CONFIG_ISDN_DIVAS=m
+CONFIG_ISDN_DIVAS_BRIPCI=y
+CONFIG_ISDN_DIVAS_PRIPCI=y
+CONFIG_ISDN_DIVAS_DIVACAPI=m
+CONFIG_ISDN_DIVAS_USERIDI=m
+CONFIG_ISDN_DIVAS_MAINT=m
+CONFIG_PHONE=m
+CONFIG_PHONE_IXJ=m
+CONFIG_PHONE_IXJ_PCMCIA=m
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=y
+CONFIG_INPUT_POLLDEV=m
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_INPUT_JOYDEV=m
+CONFIG_INPUT_TSDEV=y
+CONFIG_INPUT_TSDEV_SCREEN_X=1024
+CONFIG_INPUT_TSDEV_SCREEN_Y=768
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_KEYBOARD_ATKBD=y
+CONFIG_KEYBOARD_SUNKBD=y
+CONFIG_KEYBOARD_LKKBD=y
+CONFIG_KEYBOARD_XTKBD=y
+CONFIG_KEYBOARD_NEWTON=y
+CONFIG_KEYBOARD_STOWAWAY=y
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_SERIAL=y
+CONFIG_MOUSE_APPLETOUCH=m
+CONFIG_MOUSE_VSXXXAA=m
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_JOYSTICK_ANALOG=m
+CONFIG_JOYSTICK_A3D=m
+CONFIG_JOYSTICK_ADI=m
+CONFIG_JOYSTICK_COBRA=m
+CONFIG_JOYSTICK_GF2K=m
+CONFIG_JOYSTICK_GRIP=m
+CONFIG_JOYSTICK_GRIP_MP=m
+CONFIG_JOYSTICK_GUILLEMOT=m
+CONFIG_JOYSTICK_INTERACT=m
+CONFIG_JOYSTICK_SIDEWINDER=m
+CONFIG_JOYSTICK_TMDC=m
+CONFIG_JOYSTICK_IFORCE=m
+CONFIG_JOYSTICK_IFORCE_USB=y
+CONFIG_JOYSTICK_IFORCE_232=y
+CONFIG_JOYSTICK_WARRIOR=m
+CONFIG_JOYSTICK_MAGELLAN=m
+CONFIG_JOYSTICK_SPACEORB=m
+CONFIG_JOYSTICK_SPACEBALL=m
+CONFIG_JOYSTICK_STINGER=m
+CONFIG_JOYSTICK_TWIDJOY=m
+CONFIG_JOYSTICK_DB9=m
+CONFIG_JOYSTICK_GAMECON=m
+CONFIG_JOYSTICK_TURBOGRAFX=m
+CONFIG_JOYSTICK_JOYDUMP=m
+CONFIG_JOYSTICK_XPAD=m
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_INPUT_TABLET=y
+CONFIG_TABLET_USB_ACECAD=m
+CONFIG_TABLET_USB_AIPTEK=m
+CONFIG_TABLET_USB_GTCO=m
+CONFIG_TABLET_USB_KBTAB=m
+CONFIG_TABLET_USB_WACOM=m
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_TOUCHSCREEN_ADS7846=m
+CONFIG_TOUCHSCREEN_FUJITSU=m
+CONFIG_TOUCHSCREEN_GUNZE=m
+CONFIG_TOUCHSCREEN_ELO=m
+CONFIG_TOUCHSCREEN_MTOUCH=m
+CONFIG_TOUCHSCREEN_MK712=m
+CONFIG_TOUCHSCREEN_PENMOUNT=m
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=m
+CONFIG_TOUCHSCREEN_TOUCHWIN=m
+CONFIG_TOUCHSCREEN_UCB1400=m
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=m
+CONFIG_TOUCHSCREEN_USB_EGALAX=y
+CONFIG_TOUCHSCREEN_USB_PANJIT=y
+CONFIG_TOUCHSCREEN_USB_3M=y
+CONFIG_TOUCHSCREEN_USB_ITM=y
+CONFIG_TOUCHSCREEN_USB_ETURBO=y
+CONFIG_TOUCHSCREEN_USB_GUNZE=y
+CONFIG_TOUCHSCREEN_USB_DMC_TSC10=y
+CONFIG_TOUCHSCREEN_USB_IRTOUCH=y
+CONFIG_INPUT_MISC=y
+CONFIG_INPUT_PCSPKR=m
+CONFIG_INPUT_ATLAS_BTNS=m
+CONFIG_INPUT_ATI_REMOTE=m
+CONFIG_INPUT_ATI_REMOTE2=m
+CONFIG_USB_APPLEIR=m
+CONFIG_INPUT_KEYSPAN_REMOTE=m
+CONFIG_INPUT_POWERMATE=m
+CONFIG_INPUT_YEALINK=m
+CONFIG_INPUT_UINPUT=m
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_I8042=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_CT82C710=y
+CONFIG_SERIO_PARKBD=y
+CONFIG_SERIO_PCIPS2=y
+CONFIG_SERIO_LIBPS2=y
+CONFIG_SERIO_RAW=m
+CONFIG_GAMEPORT=m
+CONFIG_GAMEPORT_NS558=m
+CONFIG_GAMEPORT_L4=m
+CONFIG_GAMEPORT_EMU10K1=m
+CONFIG_GAMEPORT_FM801=m
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_VT_CONSOLE=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_SERIAL_NONSTANDARD=y
+CONFIG_COMPUTONE=m
+CONFIG_ROCKETPORT=m
+CONFIG_CYCLADES=m
+# CONFIG_CYZ_INTR is not set
+CONFIG_DIGIEPCA=m
+CONFIG_MOXA_INTELLIO=m
+CONFIG_MOXA_SMARTIO=m
+CONFIG_MOXA_SMARTIO_NEW=m
+CONFIG_ISI=m
+CONFIG_SYNCLINK=m
+CONFIG_SYNCLINKMP=m
+CONFIG_SYNCLINK_GT=m
+CONFIG_N_HDLC=m
+CONFIG_SPECIALIX=m
+CONFIG_SPECIALIX_RTSCTS=y
+CONFIG_SX=m
+CONFIG_RIO=m
+CONFIG_RIO_OLDPCI=y
+CONFIG_STALDRV=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_8250=y
+# CONFIG_SERIAL_8250_CONSOLE is not set
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_SERIAL_8250_CS=m
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+CONFIG_SERIAL_8250_DETECT_IRQ=y
+CONFIG_SERIAL_8250_RSA=y
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_JSM=m
+CONFIG_UNIX98_PTYS=y
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+CONFIG_PRINTER=y
+CONFIG_LP_CONSOLE=y
+CONFIG_PPDEV=y
+CONFIG_TIPAR=m
+CONFIG_IPMI_HANDLER=m
+# CONFIG_IPMI_PANIC_EVENT is not set
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_IPMI_SI=m
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+CONFIG_SOFT_WATCHDOG=m
+CONFIG_ACQUIRE_WDT=m
+CONFIG_ADVANTECH_WDT=m
+CONFIG_ALIM1535_WDT=m
+CONFIG_ALIM7101_WDT=m
+CONFIG_SC520_WDT=m
+CONFIG_EUROTECH_WDT=m
+CONFIG_IB700_WDT=m
+CONFIG_IBMASR=m
+CONFIG_WAFER_WDT=m
+CONFIG_I6300ESB_WDT=m
+CONFIG_ITCO_WDT=m
+CONFIG_ITCO_VENDOR_SUPPORT=y
+CONFIG_SC1200_WDT=m
+CONFIG_PC87413_WDT=m
+CONFIG_60XX_WDT=m
+CONFIG_SBC8360_WDT=m
+CONFIG_CPU5_WDT=m
+CONFIG_SMSC37B787_WDT=m
+CONFIG_W83627HF_WDT=m
+CONFIG_W83697HF_WDT=m
+CONFIG_W83877F_WDT=m
+CONFIG_W83977F_WDT=m
+CONFIG_MACHZ_WDT=m
+CONFIG_SBC_EPX_C3_WATCHDOG=m
+
+#
+# PCI-based Watchdog Cards
+#
+CONFIG_PCIPCWATCHDOG=m
+CONFIG_WDTPCI=m
+CONFIG_WDT_501_PCI=y
+
+#
+# USB-based Watchdog Cards
+#
+CONFIG_USBPCWATCHDOG=m
+CONFIG_HW_RANDOM=y
+CONFIG_HW_RANDOM_INTEL=y
+CONFIG_HW_RANDOM_AMD=y
+CONFIG_NVRAM=m
+CONFIG_RTC=y
+CONFIG_R3964=m
+CONFIG_APPLICOM=m
+CONFIG_AGP=y
+CONFIG_AGP_AMD64=y
+CONFIG_AGP_INTEL=m
+CONFIG_AGP_SIS=m
+CONFIG_AGP_VIA=m
+CONFIG_DRM=m
+CONFIG_DRM_TDFX=m
+CONFIG_DRM_R128=m
+CONFIG_DRM_RADEON=m
+CONFIG_DRM_I810=m
+CONFIG_DRM_I830=m
+CONFIG_DRM_I915=m
+CONFIG_DRM_MGA=m
+CONFIG_DRM_SIS=m
+CONFIG_DRM_VIA=m
+CONFIG_DRM_SAVAGE=m
+
+#
+# PCMCIA character devices
+#
+CONFIG_SYNCLINK_CS=m
+CONFIG_CARDMAN_4000=m
+CONFIG_CARDMAN_4040=m
+CONFIG_MWAVE=m
+CONFIG_PC8736x_GPIO=m
+CONFIG_NSC_GPIO=m
+# CONFIG_RAW_DRIVER is not set
+CONFIG_HPET=y
+# CONFIG_HPET_RTC_IRQ is not set
+CONFIG_HPET_MMAP=y
+CONFIG_HANGCHECK_TIMER=m
+CONFIG_TCG_TPM=m
+CONFIG_TCG_TIS=m
+CONFIG_TCG_NSC=m
+CONFIG_TCG_ATMEL=m
+CONFIG_TCG_INFINEON=m
+CONFIG_TELCLOCK=m
+CONFIG_DEVPORT=y
+CONFIG_I2C=m
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_CHARDEV=m
+
+#
+# I2C Algorithms
+#
+CONFIG_I2C_ALGOBIT=m
+CONFIG_I2C_ALGOPCF=m
+CONFIG_I2C_ALGOPCA=m
+
+#
+# I2C Hardware Bus support
+#
+CONFIG_I2C_ALI1535=m
+CONFIG_I2C_ALI1563=m
+CONFIG_I2C_ALI15X3=m
+CONFIG_I2C_AMD756=m
+CONFIG_I2C_AMD756_S4882=m
+CONFIG_I2C_AMD8111=m
+CONFIG_I2C_I801=m
+CONFIG_I2C_I810=m
+CONFIG_I2C_PIIX4=m
+CONFIG_I2C_NFORCE2=m
+CONFIG_I2C_OCORES=m
+CONFIG_I2C_PARPORT=m
+CONFIG_I2C_PARPORT_LIGHT=m
+CONFIG_I2C_PROSAVAGE=m
+CONFIG_I2C_SAVAGE4=m
+CONFIG_I2C_SIMTEC=m
+CONFIG_I2C_SIS5595=m
+CONFIG_I2C_SIS630=m
+CONFIG_I2C_SIS96X=m
+CONFIG_I2C_TAOS_EVM=m
+CONFIG_I2C_STUB=m
+CONFIG_I2C_TINY_USB=m
+CONFIG_I2C_VIA=m
+CONFIG_I2C_VIAPRO=m
+CONFIG_I2C_VOODOO3=m
+
+#
+# Miscellaneous I2C Chip support
+#
+# CONFIG_SENSORS_DS1337 is not set
+# CONFIG_SENSORS_DS1374 is not set
+CONFIG_DS1682=m
+CONFIG_SENSORS_EEPROM=m
+CONFIG_SENSORS_PCF8574=m
+CONFIG_SENSORS_PCA9539=m
+CONFIG_SENSORS_PCF8591=m
+CONFIG_SENSORS_MAX6875=m
+CONFIG_SENSORS_TSL2550=m
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# CONFIG_I2C_DEBUG_CHIP is not set
+
+#
+# SPI support
+#
+CONFIG_SPI=y
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+CONFIG_SPI_BITBANG=m
+CONFIG_SPI_BUTTERFLY=m
+CONFIG_SPI_LM70_LLP=m
+
+#
+# SPI Protocol Masters
+#
+CONFIG_SPI_AT25=m
+CONFIG_SPI_SPIDEV=m
+CONFIG_SPI_TLE62X0=m
+CONFIG_W1=m
+CONFIG_W1_CON=y
+
+#
+# 1-wire Bus Masters
+#
+CONFIG_W1_MASTER_MATROX=m
+CONFIG_W1_MASTER_DS2490=m
+CONFIG_W1_MASTER_DS2482=m
+
+#
+# 1-wire Slaves
+#
+CONFIG_W1_SLAVE_THERM=m
+CONFIG_W1_SLAVE_SMEM=m
+CONFIG_W1_SLAVE_DS2433=m
+CONFIG_W1_SLAVE_DS2433_CRC=y
+CONFIG_W1_SLAVE_DS2760=m
+CONFIG_POWER_SUPPLY=m
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+CONFIG_PDA_POWER=m
+CONFIG_BATTERY_DS2760=m
+CONFIG_HWMON=y
+CONFIG_HWMON_VID=m
+CONFIG_SENSORS_ABITUGURU=m
+# CONFIG_SENSORS_ABITUGURU3 is not set
+CONFIG_SENSORS_AD7418=m
+CONFIG_SENSORS_ADM1021=m
+CONFIG_SENSORS_ADM1025=m
+CONFIG_SENSORS_ADM1026=m
+CONFIG_SENSORS_ADM1029=m
+CONFIG_SENSORS_ADM1031=m
+CONFIG_SENSORS_ADM9240=m
+CONFIG_SENSORS_K8TEMP=m
+CONFIG_SENSORS_ASB100=m
+CONFIG_SENSORS_ATXP1=m
+CONFIG_SENSORS_DS1621=m
+CONFIG_SENSORS_F71805F=m
+CONFIG_SENSORS_FSCHER=m
+CONFIG_SENSORS_FSCPOS=m
+CONFIG_SENSORS_GL518SM=m
+CONFIG_SENSORS_GL520SM=m
+CONFIG_SENSORS_CORETEMP=m
+CONFIG_SENSORS_IT87=m
+CONFIG_SENSORS_LM63=m
+CONFIG_SENSORS_LM70=m
+CONFIG_SENSORS_LM75=m
+CONFIG_SENSORS_LM77=m
+CONFIG_SENSORS_LM78=m
+CONFIG_SENSORS_LM80=m
+CONFIG_SENSORS_LM83=m
+CONFIG_SENSORS_LM85=m
+CONFIG_SENSORS_LM87=m
+CONFIG_SENSORS_LM90=m
+CONFIG_SENSORS_LM92=m
+# CONFIG_SENSORS_LM93 is not set
+CONFIG_SENSORS_MAX1619=m
+CONFIG_SENSORS_MAX6650=m
+CONFIG_SENSORS_PC87360=m
+CONFIG_SENSORS_PC87427=m
+CONFIG_SENSORS_SIS5595=m
+# CONFIG_SENSORS_DME1737 is not set
+CONFIG_SENSORS_SMSC47M1=m
+CONFIG_SENSORS_SMSC47M192=m
+CONFIG_SENSORS_SMSC47B397=m
+# CONFIG_SENSORS_THMC50 is not set
+CONFIG_SENSORS_VIA686A=m
+CONFIG_SENSORS_VT1211=m
+CONFIG_SENSORS_VT8231=m
+CONFIG_SENSORS_W83781D=m
+CONFIG_SENSORS_W83791D=m
+CONFIG_SENSORS_W83792D=m
+CONFIG_SENSORS_W83793=m
+CONFIG_SENSORS_W83L785TS=m
+CONFIG_SENSORS_W83627HF=m
+CONFIG_SENSORS_W83627EHF=m
+CONFIG_SENSORS_HDAPS=m
+CONFIG_SENSORS_APPLESMC=m
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Sonics Silicon Backplane
+#
+CONFIG_SSB_POSSIBLE=y
+CONFIG_SSB=m
+CONFIG_SSB_PCIHOST_POSSIBLE=y
+CONFIG_SSB_PCIHOST=y
+CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
+CONFIG_SSB_PCMCIAHOST=y
+CONFIG_SSB_DEBUG=y
+CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
+CONFIG_SSB_DRIVER_PCICORE=y
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_SM501=m
+
+#
+# Multimedia devices
+#
+CONFIG_VIDEO_DEV=m
+CONFIG_VIDEO_V4L1=y
+CONFIG_VIDEO_V4L1_COMPAT=y
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_HELPER_CHIPS_AUTO is not set
+
+#
+# Encoders/decoders and other helper chips
+#
+
+#
+# Audio decoders
+#
+CONFIG_VIDEO_TVAUDIO=m
+CONFIG_VIDEO_TDA7432=m
+CONFIG_VIDEO_TDA9840=m
+CONFIG_VIDEO_TDA9875=m
+CONFIG_VIDEO_TEA6415C=m
+CONFIG_VIDEO_TEA6420=m
+CONFIG_VIDEO_MSP3400=m
+CONFIG_VIDEO_CS53L32A=m
+CONFIG_VIDEO_TLV320AIC23B=m
+CONFIG_VIDEO_WM8775=m
+CONFIG_VIDEO_WM8739=m
+
+#
+# Video decoders
+#
+CONFIG_VIDEO_BT819=m
+CONFIG_VIDEO_BT856=m
+CONFIG_VIDEO_BT866=m
+CONFIG_VIDEO_KS0127=m
+CONFIG_VIDEO_OV7670=m
+CONFIG_VIDEO_SAA7110=m
+CONFIG_VIDEO_SAA7111=m
+CONFIG_VIDEO_SAA7114=m
+CONFIG_VIDEO_SAA711X=m
+CONFIG_VIDEO_SAA7191=m
+CONFIG_VIDEO_TVP5150=m
+CONFIG_VIDEO_VPX3220=m
+
+#
+# Video and audio decoders
+#
+CONFIG_VIDEO_CX25840=m
+
+#
+# MPEG video encoders
+#
+CONFIG_VIDEO_CX2341X=m
+
+#
+# Video encoders
+#
+CONFIG_VIDEO_SAA7127=m
+CONFIG_VIDEO_SAA7185=m
+CONFIG_VIDEO_ADV7170=m
+CONFIG_VIDEO_ADV7175=m
+
+#
+# Video improvement chips
+#
+CONFIG_VIDEO_UPD64031A=m
+CONFIG_VIDEO_UPD64083=m
+CONFIG_VIDEO_VIVI=m
+CONFIG_VIDEO_BT848=m
+CONFIG_VIDEO_BT848_DVB=y
+CONFIG_VIDEO_SAA6588=m
+CONFIG_VIDEO_BWQCAM=m
+CONFIG_VIDEO_CQCAM=m
+CONFIG_VIDEO_W9966=m
+CONFIG_VIDEO_CPIA=m
+CONFIG_VIDEO_CPIA_PP=m
+CONFIG_VIDEO_CPIA_USB=m
+CONFIG_VIDEO_CPIA2=m
+CONFIG_VIDEO_SAA5246A=m
+CONFIG_VIDEO_SAA5249=m
+CONFIG_TUNER_3036=m
+CONFIG_TUNER_TEA5761=y
+CONFIG_VIDEO_STRADIS=m
+CONFIG_VIDEO_ZORAN_ZR36060=m
+CONFIG_VIDEO_ZORAN=m
+CONFIG_VIDEO_ZORAN_BUZ=m
+CONFIG_VIDEO_ZORAN_DC10=m
+CONFIG_VIDEO_ZORAN_DC30=m
+CONFIG_VIDEO_ZORAN_LML33=m
+CONFIG_VIDEO_ZORAN_LML33R10=m
+CONFIG_VIDEO_ZORAN_AVS6EYES=m
+CONFIG_VIDEO_MEYE=m
+CONFIG_VIDEO_SAA7134=m
+CONFIG_VIDEO_SAA7134_ALSA=m
+CONFIG_VIDEO_SAA7134_DVB=m
+CONFIG_VIDEO_MXB=m
+CONFIG_VIDEO_DPC=m
+CONFIG_VIDEO_HEXIUM_ORION=m
+CONFIG_VIDEO_HEXIUM_GEMINI=m
+CONFIG_VIDEO_CX88=m
+CONFIG_VIDEO_CX88_ALSA=m
+CONFIG_VIDEO_CX88_BLACKBIRD=m
+CONFIG_VIDEO_CX88_DVB=m
+CONFIG_VIDEO_CX88_VP3054=m
+CONFIG_VIDEO_IVTV=m
+CONFIG_VIDEO_CAFE_CCIC=m
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_VIDEO_PVRUSB2=m
+CONFIG_VIDEO_PVRUSB2_29XXX=y
+CONFIG_VIDEO_PVRUSB2_24XXX=y
+CONFIG_VIDEO_PVRUSB2_SYSFS=y
+# CONFIG_VIDEO_PVRUSB2_DEBUGIFC is not set
+CONFIG_VIDEO_EM28XX=m
+CONFIG_VIDEO_USBVISION=m
+CONFIG_VIDEO_USBVIDEO=m
+CONFIG_USB_VICAM=m
+CONFIG_USB_IBMCAM=m
+CONFIG_USB_KONICAWC=m
+CONFIG_USB_QUICKCAM_MESSENGER=m
+CONFIG_USB_ET61X251=m
+CONFIG_VIDEO_OVCAMCHIP=m
+CONFIG_USB_W9968CF=m
+CONFIG_USB_OV511=m
+CONFIG_USB_SE401=m
+CONFIG_USB_SN9C102=m
+CONFIG_USB_STV680=m
+CONFIG_USB_ZC0301=m
+CONFIG_USB_PWC=m
+# CONFIG_USB_PWC_DEBUG is not set
+CONFIG_USB_ZR364XX=m
+CONFIG_RADIO_ADAPTERS=y
+CONFIG_RADIO_GEMTEK_PCI=m
+CONFIG_RADIO_MAXIRADIO=m
+CONFIG_RADIO_MAESTRO=m
+CONFIG_USB_DSBR=m
+CONFIG_DVB_CORE=y
+CONFIG_DVB_CORE_ATTACH=y
+CONFIG_DVB_CAPTURE_DRIVERS=y
+
+#
+# Supported SAA7146 based PCI Adapters
+#
+CONFIG_DVB_AV7110=m
+# CONFIG_DVB_AV7110_FIRMWARE is not set
+CONFIG_DVB_AV7110_OSD=y
+CONFIG_DVB_BUDGET=m
+CONFIG_DVB_BUDGET_CI=m
+CONFIG_DVB_BUDGET_AV=m
+CONFIG_DVB_BUDGET_PATCH=m
+
+#
+# Supported USB Adapters
+#
+CONFIG_DVB_USB=m
+# CONFIG_DVB_USB_DEBUG is not set
+CONFIG_DVB_USB_A800=m
+CONFIG_DVB_USB_DIBUSB_MB=m
+CONFIG_DVB_USB_DIBUSB_MB_FAULTY=y
+CONFIG_DVB_USB_DIBUSB_MC=m
+CONFIG_DVB_USB_DIB0700=m
+CONFIG_DVB_USB_UMT_010=m
+CONFIG_DVB_USB_CXUSB=m
+CONFIG_DVB_USB_M920X=m
+CONFIG_DVB_USB_GL861=m
+CONFIG_DVB_USB_AU6610=m
+CONFIG_DVB_USB_DIGITV=m
+CONFIG_DVB_USB_VP7045=m
+CONFIG_DVB_USB_VP702X=m
+CONFIG_DVB_USB_GP8PSK=m
+CONFIG_DVB_USB_NOVA_T_USB2=m
+CONFIG_DVB_USB_TTUSB2=m
+CONFIG_DVB_USB_DTT200U=m
+CONFIG_DVB_USB_OPERA1=m
+CONFIG_DVB_USB_AF9005=m
+CONFIG_DVB_USB_AF9005_REMOTE=m
+CONFIG_DVB_TTUSB_BUDGET=m
+CONFIG_DVB_TTUSB_DEC=m
+CONFIG_DVB_CINERGYT2=m
+# CONFIG_DVB_CINERGYT2_TUNING is not set
+
+#
+# Supported FlexCopII (B2C2) Adapters
+#
+CONFIG_DVB_B2C2_FLEXCOP=m
+CONFIG_DVB_B2C2_FLEXCOP_PCI=m
+CONFIG_DVB_B2C2_FLEXCOP_USB=m
+# CONFIG_DVB_B2C2_FLEXCOP_DEBUG is not set
+
+#
+# Supported BT878 Adapters
+#
+CONFIG_DVB_BT8XX=m
+
+#
+# Supported Pluto2 Adapters
+#
+CONFIG_DVB_PLUTO2=m
+
+#
+# Supported DVB Frontends
+#
+
+#
+# Customise DVB Frontends
+#
+CONFIG_DVB_FE_CUSTOMISE=y
+
+#
+# DVB-S (satellite) frontends
+#
+CONFIG_DVB_STV0299=m
+CONFIG_DVB_CX24110=m
+CONFIG_DVB_CX24123=m
+CONFIG_DVB_TDA8083=m
+CONFIG_DVB_MT312=m
+CONFIG_DVB_VES1X93=m
+CONFIG_DVB_S5H1420=m
+CONFIG_DVB_TDA10086=m
+
+#
+# DVB-T (terrestrial) frontends
+#
+CONFIG_DVB_SP8870=m
+CONFIG_DVB_SP887X=m
+CONFIG_DVB_CX22700=m
+CONFIG_DVB_CX22702=m
+CONFIG_DVB_L64781=m
+CONFIG_DVB_TDA1004X=m
+CONFIG_DVB_NXT6000=m
+CONFIG_DVB_MT352=m
+CONFIG_DVB_ZL10353=m
+CONFIG_DVB_DIB3000MB=m
+CONFIG_DVB_DIB3000MC=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_DVB_DIB7000P=m
+
+#
+# DVB-C (cable) frontends
+#
+CONFIG_DVB_VES1820=m
+CONFIG_DVB_TDA10021=m
+CONFIG_DVB_TDA10023=m
+CONFIG_DVB_STV0297=m
+
+#
+# ATSC (North American/Korean Terrestrial/Cable DTV) frontends
+#
+CONFIG_DVB_NXT200X=m
+CONFIG_DVB_OR51211=m
+CONFIG_DVB_OR51132=m
+CONFIG_DVB_BCM3510=m
+CONFIG_DVB_LGDT330X=m
+
+#
+# Tuners/PLL support
+#
+CONFIG_DVB_PLL=m
+CONFIG_DVB_TDA826X=m
+CONFIG_DVB_TDA827X=m
+CONFIG_DVB_TUNER_QT1010=m
+CONFIG_DVB_TUNER_MT2060=m
+
+#
+# Miscellaneous devices
+#
+CONFIG_DVB_LNBP21=m
+CONFIG_DVB_ISL6421=m
+CONFIG_DVB_TUA6100=m
+CONFIG_VIDEO_SAA7146=m
+CONFIG_VIDEO_SAA7146_VV=m
+CONFIG_VIDEO_TUNER=m
+CONFIG_VIDEO_BUF=m
+CONFIG_VIDEO_BUF_DVB=m
+CONFIG_VIDEO_BTCX=m
+CONFIG_VIDEO_IR_I2C=m
+CONFIG_VIDEO_IR=m
+CONFIG_VIDEO_TVEEPROM=m
+CONFIG_DAB=y
+CONFIG_USB_DABUSB=m
+
+#
+# Graphics support
+#
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=m
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_BACKLIGHT_PROGEAR=m
+
+#
+# Display device support
+#
+CONFIG_DISPLAY_SUPPORT=m
+
+#
+# Display hardware drivers
+#
+CONFIG_VGASTATE=m
+CONFIG_VIDEO_OUTPUT_CONTROL=m
+CONFIG_FB=y
+CONFIG_FIRMWARE_EDID=y
+CONFIG_FB_DDC=m
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+CONFIG_FB_SYS_FILLRECT=m
+CONFIG_FB_SYS_COPYAREA=m
+CONFIG_FB_SYS_IMAGEBLIT=m
+CONFIG_FB_SYS_FOPS=m
+CONFIG_FB_DEFERRED_IO=y
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+CONFIG_FB_BACKLIGHT=y
+CONFIG_FB_MODE_HELPERS=y
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+CONFIG_FB_CIRRUS=m
+CONFIG_FB_PM2=m
+# CONFIG_FB_PM2_FIFO_DISCONNECT is not set
+CONFIG_FB_CYBER2000=m
+CONFIG_FB_ARC=m
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+# CONFIG_FB_VGA16 is not set
+CONFIG_FB_VESA=y
+# CONFIG_FB_HECUBA is not set
+# CONFIG_FB_HGA is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_LE80578 is not set
+CONFIG_FB_INTEL=m
+# CONFIG_FB_INTEL_DEBUG is not set
+CONFIG_FB_INTEL_I2C=y
+# CONFIG_FB_MATROX is not set
+CONFIG_FB_RADEON=m
+CONFIG_FB_RADEON_I2C=y
+CONFIG_FB_RADEON_BACKLIGHT=y
+# CONFIG_FB_RADEON_DEBUG is not set
+CONFIG_FB_ATY128=m
+CONFIG_FB_ATY128_BACKLIGHT=y
+CONFIG_FB_ATY=m
+CONFIG_FB_ATY_CT=y
+CONFIG_FB_ATY_GENERIC_LCD=y
+CONFIG_FB_ATY_GX=y
+CONFIG_FB_ATY_BACKLIGHT=y
+# CONFIG_FB_S3 is not set
+CONFIG_FB_SAVAGE=m
+CONFIG_FB_SAVAGE_I2C=y
+CONFIG_FB_SAVAGE_ACCEL=y
+CONFIG_FB_SIS=m
+CONFIG_FB_SIS_300=y
+CONFIG_FB_SIS_315=y
+# CONFIG_FB_NEOMAGIC is not set
+CONFIG_FB_KYRO=m
+CONFIG_FB_3DFX=m
+CONFIG_FB_3DFX_ACCEL=y
+CONFIG_FB_VOODOO1=m
+# CONFIG_FB_VT8623 is not set
+CONFIG_FB_TRIDENT=m
+CONFIG_FB_TRIDENT_ACCEL=y
+# CONFIG_FB_ARK is not set
+# CONFIG_FB_PM3 is not set
+CONFIG_FB_GEODE=y
+CONFIG_FB_GEODE_LX=m
+CONFIG_FB_GEODE_GX=m
+# CONFIG_FB_GEODE_GX_SET_FBSIZE is not set
+CONFIG_FB_GEODE_GX1=m
+# CONFIG_FB_SM501 is not set
+# CONFIG_FB_VIRTUAL is not set
+
+#
+# Console display driver support
+#
+CONFIG_VGA_CONSOLE=y
+# CONFIG_VGACON_SOFT_SCROLLBACK is not set
+CONFIG_VIDEO_SELECT=y
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+# CONFIG_FB_CON_DECOR is not set
+CONFIG_FONTS=y
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+CONFIG_FONT_6x11=y
+CONFIG_FONT_7x14=y
+CONFIG_FONT_PEARL_8x8=y
+CONFIG_FONT_ACORN_8x8=y
+CONFIG_FONT_MINI_4x6=y
+CONFIG_FONT_SUN8x16=y
+CONFIG_FONT_SUN12x22=y
+CONFIG_FONT_10x18=y
+CONFIG_LOGO=y
+# CONFIG_LOGO_LINUX_MONO is not set
+# CONFIG_LOGO_LINUX_VGA16 is not set
+CONFIG_LOGO_LINUX_CLUT224=y
+
+#
+# Sound
+#
+CONFIG_SOUND=y
+
+#
+# Advanced Linux Sound Architecture
+#
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=m
+CONFIG_SND_RAWMIDI=m
+CONFIG_SND_SEQUENCER=m
+CONFIG_SND_SEQ_DUMMY=m
+CONFIG_SND_OSSEMUL=y
+CONFIG_SND_MIXER_OSS=y
+CONFIG_SND_PCM_OSS=y
+CONFIG_SND_PCM_OSS_PLUGINS=y
+CONFIG_SND_SEQUENCER_OSS=y
+CONFIG_SND_RTCTIMER=m
+CONFIG_SND_SEQ_RTCTIMER_DEFAULT=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+
+#
+# Generic devices
+#
+CONFIG_SND_MPU401_UART=m
+CONFIG_SND_OPL3_LIB=m
+CONFIG_SND_VX_LIB=m
+CONFIG_SND_AC97_CODEC=m
+CONFIG_SND_DUMMY=m
+CONFIG_SND_VIRMIDI=m
+CONFIG_SND_MTPAV=m
+CONFIG_SND_MTS64=m
+CONFIG_SND_SERIAL_U16550=m
+CONFIG_SND_MPU401=m
+CONFIG_SND_PORTMAN2X4=m
+CONFIG_SND_SB_COMMON=m
+CONFIG_SND_SB16_DSP=m
+
+#
+# PCI devices
+#
+CONFIG_SND_AD1889=m
+CONFIG_SND_ALS300=m
+CONFIG_SND_ALS4000=m
+CONFIG_SND_ALI5451=m
+CONFIG_SND_ATIIXP=m
+CONFIG_SND_ATIIXP_MODEM=m
+CONFIG_SND_AU8810=m
+CONFIG_SND_AU8820=m
+CONFIG_SND_AU8830=m
+CONFIG_SND_AZT3328=m
+CONFIG_SND_BT87X=m
+CONFIG_SND_BT87X_OVERCLOCK=y
+CONFIG_SND_CA0106=m
+CONFIG_SND_CMIPCI=m
+CONFIG_SND_CS4281=m
+CONFIG_SND_CS46XX=m
+CONFIG_SND_CS46XX_NEW_DSP=y
+CONFIG_SND_CS5530=m
+CONFIG_SND_DARLA20=m
+CONFIG_SND_GINA20=m
+CONFIG_SND_LAYLA20=m
+CONFIG_SND_DARLA24=m
+CONFIG_SND_GINA24=m
+CONFIG_SND_LAYLA24=m
+CONFIG_SND_MONA=m
+CONFIG_SND_MIA=m
+CONFIG_SND_ECHO3G=m
+CONFIG_SND_INDIGO=m
+CONFIG_SND_INDIGOIO=m
+CONFIG_SND_INDIGODJ=m
+CONFIG_SND_EMU10K1=m
+CONFIG_SND_EMU10K1X=m
+CONFIG_SND_ENS1370=m
+CONFIG_SND_ENS1371=m
+CONFIG_SND_ES1938=m
+CONFIG_SND_ES1968=m
+CONFIG_SND_FM801=m
+CONFIG_SND_FM801_TEA575X_BOOL=y
+CONFIG_SND_FM801_TEA575X=m
+CONFIG_SND_HDA_INTEL=m
+CONFIG_SND_HDSP=m
+CONFIG_SND_HDSPM=m
+CONFIG_SND_ICE1712=m
+CONFIG_SND_ICE1724=m
+CONFIG_SND_INTEL8X0=m
+CONFIG_SND_INTEL8X0M=m
+CONFIG_SND_KORG1212=m
+CONFIG_SND_KORG1212_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_MAESTRO3=m
+CONFIG_SND_MAESTRO3_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_MIXART=m
+CONFIG_SND_NM256=m
+CONFIG_SND_PCXHR=m
+CONFIG_SND_RIPTIDE=m
+CONFIG_SND_RME32=m
+CONFIG_SND_RME96=m
+CONFIG_SND_RME9652=m
+CONFIG_SND_SONICVIBES=m
+CONFIG_SND_TRIDENT=m
+CONFIG_SND_VIA82XX=m
+CONFIG_SND_VIA82XX_MODEM=m
+CONFIG_SND_VX222=m
+CONFIG_SND_YMFPCI=m
+CONFIG_SND_YMFPCI_FIRMWARE_IN_KERNEL=y
+CONFIG_SND_AC97_POWER_SAVE=y
+
+#
+# USB devices
+#
+CONFIG_SND_USB_AUDIO=m
+CONFIG_SND_USB_USX2Y=m
+CONFIG_SND_USB_CAIAQ=m
+CONFIG_SND_USB_CAIAQ_INPUT=y
+
+#
+# PCMCIA devices
+#
+CONFIG_SND_VXPOCKET=m
+CONFIG_SND_PDAUDIOCF=m
+
+#
+# System on Chip audio support
+#
+CONFIG_SND_SOC=m
+
+#
+# SoC Audio support for SuperH
+#
+
+#
+# Open Sound System
+#
+# CONFIG_SOUND_PRIME is not set
+CONFIG_AC97_BUS=m
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HID_DEBUG is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+CONFIG_USB_HIDINPUT_POWERBOOK=y
+CONFIG_HID_FF=y
+CONFIG_HID_PID=y
+CONFIG_LOGITECH_FF=y
+CONFIG_PANTHERLORD_FF=y
+CONFIG_THRUSTMASTER_FF=y
+CONFIG_ZEROPLUS_FF=y
+CONFIG_USB_HIDDEV=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+CONFIG_USB_DEVICE_CLASS=y
+CONFIG_USB_DYNAMIC_MINORS=y
+CONFIG_USB_SUSPEND=y
+# CONFIG_USB_PERSIST is not set
+# CONFIG_USB_OTG is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_EHCI_HCD=m
+CONFIG_USB_EHCI_SPLIT_ISO=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+CONFIG_USB_ISP116X_HCD=m
+CONFIG_USB_OHCI_HCD=m
+CONFIG_USB_OHCI_HCD_SSB=y
+# CONFIG_USB_OHCI_BIG_ENDIAN_DESC is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_MMIO is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_UHCI_HCD=m
+CONFIG_USB_U132_HCD=m
+CONFIG_USB_SL811_HCD=m
+CONFIG_USB_SL811_CS=m
+# CONFIG_USB_R8A66597_HCD is not set
+
+#
+# USB Device Class drivers
+#
+CONFIG_USB_ACM=m
+CONFIG_USB_PRINTER=y
+
+#
+# NOTE: USB_STORAGE enables SCSI, and 'SCSI disk support'
+#
+
+#
+# may also be needed; see USB_STORAGE Help for more information
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+CONFIG_USB_STORAGE_DATAFAB=y
+CONFIG_USB_STORAGE_FREECOM=y
+CONFIG_USB_STORAGE_DPCM=y
+CONFIG_USB_STORAGE_USBAT=y
+CONFIG_USB_STORAGE_SDDR09=y
+CONFIG_USB_STORAGE_SDDR55=y
+CONFIG_USB_STORAGE_JUMPSHOT=y
+CONFIG_USB_STORAGE_ALAUDA=y
+CONFIG_USB_STORAGE_KARMA=y
+CONFIG_USB_LIBUSUAL=y
+
+#
+# USB Imaging devices
+#
+CONFIG_USB_MDC800=m
+CONFIG_USB_MICROTEK=m
+CONFIG_USB_MON=y
+
+#
+# USB port drivers
+#
+CONFIG_USB_USS720=m
+
+#
+# USB Serial Converter support
+#
+CONFIG_USB_SERIAL=m
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_SERIAL_AIRCABLE=m
+CONFIG_USB_SERIAL_AIRPRIME=m
+CONFIG_USB_SERIAL_ARK3116=m
+CONFIG_USB_SERIAL_BELKIN=m
+CONFIG_USB_SERIAL_WHITEHEAT=m
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=m
+CONFIG_USB_SERIAL_CP2101=m
+CONFIG_USB_SERIAL_CYPRESS_M8=m
+CONFIG_USB_SERIAL_EMPEG=m
+CONFIG_USB_SERIAL_FTDI_SIO=m
+CONFIG_USB_SERIAL_FUNSOFT=m
+CONFIG_USB_SERIAL_VISOR=m
+CONFIG_USB_SERIAL_IPAQ=m
+CONFIG_USB_SERIAL_IR=m
+CONFIG_USB_SERIAL_EDGEPORT=m
+CONFIG_USB_SERIAL_EDGEPORT_TI=m
+CONFIG_USB_SERIAL_GARMIN=m
+CONFIG_USB_SERIAL_IPW=m
+CONFIG_USB_SERIAL_KEYSPAN_PDA=m
+CONFIG_USB_SERIAL_KEYSPAN=m
+CONFIG_USB_SERIAL_KEYSPAN_MPR=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28X=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28XA=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28XB=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19=y
+CONFIG_USB_SERIAL_KEYSPAN_USA18X=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19W=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19QW=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19QI=y
+CONFIG_USB_SERIAL_KEYSPAN_USA49W=y
+CONFIG_USB_SERIAL_KEYSPAN_USA49WLC=y
+CONFIG_USB_SERIAL_KLSI=m
+CONFIG_USB_SERIAL_KOBIL_SCT=m
+CONFIG_USB_SERIAL_MCT_U232=m
+CONFIG_USB_SERIAL_MOS7720=m
+CONFIG_USB_SERIAL_MOS7840=m
+CONFIG_USB_SERIAL_NAVMAN=m
+CONFIG_USB_SERIAL_PL2303=m
+# CONFIG_USB_SERIAL_OTI6858 is not set
+CONFIG_USB_SERIAL_HP4X=m
+CONFIG_USB_SERIAL_SAFE=m
+CONFIG_USB_SERIAL_SAFE_PADDED=y
+CONFIG_USB_SERIAL_SIERRAWIRELESS=m
+CONFIG_USB_SERIAL_TI=m
+CONFIG_USB_SERIAL_CYBERJACK=m
+CONFIG_USB_SERIAL_XIRCOM=m
+CONFIG_USB_SERIAL_OPTION=m
+CONFIG_USB_SERIAL_OMNINET=m
+# CONFIG_USB_SERIAL_DEBUG is not set
+CONFIG_USB_EZUSB=y
+
+#
+# USB Miscellaneous drivers
+#
+CONFIG_USB_EMI62=m
+CONFIG_USB_EMI26=m
+CONFIG_USB_ADUTUX=m
+CONFIG_USB_AUERSWALD=m
+CONFIG_USB_RIO500=m
+CONFIG_USB_LEGOTOWER=m
+CONFIG_USB_LCD=m
+CONFIG_USB_BERRY_CHARGE=m
+CONFIG_USB_LED=m
+CONFIG_USB_CYPRESS_CY7C63=m
+CONFIG_USB_CYTHERM=m
+CONFIG_USB_PHIDGET=m
+CONFIG_USB_PHIDGETKIT=m
+CONFIG_USB_PHIDGETMOTORCONTROL=m
+CONFIG_USB_PHIDGETSERVO=m
+CONFIG_USB_IDMOUSE=m
+CONFIG_USB_FTDI_ELAN=m
+CONFIG_USB_APPLEDISPLAY=m
+CONFIG_USB_SISUSBVGA=m
+# CONFIG_USB_SISUSBVGA_CON is not set
+CONFIG_USB_LD=m
+CONFIG_USB_TRANCEVIBRATOR=m
+CONFIG_USB_IOWARRIOR=m
+CONFIG_USB_TEST=m
+
+#
+# USB DSL modem support
+#
+CONFIG_USB_ATM=m
+CONFIG_USB_SPEEDTOUCH=m
+CONFIG_USB_CXACRU=m
+CONFIG_USB_UEAGLEATM=m
+CONFIG_USB_XUSBATM=m
+
+#
+# USB Gadget Support
+#
+CONFIG_USB_GADGET=m
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+CONFIG_USB_GADGET_SELECTED=y
+# CONFIG_USB_GADGET_AMD5536UDC is not set
+# CONFIG_USB_GADGET_FSL_USB2 is not set
+CONFIG_USB_GADGET_NET2280=y
+CONFIG_USB_NET2280=m
+# CONFIG_USB_GADGET_PXA2XX is not set
+# CONFIG_USB_GADGET_M66592 is not set
+# CONFIG_USB_GADGET_GOKU is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+# CONFIG_USB_GADGET_S3C2410 is not set
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+CONFIG_USB_ETH=m
+# CONFIG_USB_ETH_RNDIS is not set
+CONFIG_USB_GADGETFS=m
+CONFIG_USB_FILE_STORAGE=m
+# CONFIG_USB_FILE_STORAGE_TEST is not set
+CONFIG_USB_G_SERIAL=m
+CONFIG_USB_MIDI_GADGET=m
+CONFIG_MMC=m
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_UNSAFE_RESUME is not set
+
+#
+# MMC/SD Card Drivers
+#
+CONFIG_MMC_BLOCK=m
+CONFIG_MMC_BLOCK_BOUNCE=y
+
+#
+# MMC/SD Host Controller Drivers
+#
+CONFIG_MMC_SDHCI=m
+CONFIG_MMC_WBSD=m
+CONFIG_MMC_TIFM_SD=m
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=m
+
+#
+# LED drivers
+#
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGERS=y
+CONFIG_LEDS_TRIGGER_TIMER=m
+CONFIG_LEDS_TRIGGER_HEARTBEAT=m
+CONFIG_INFINIBAND=m
+CONFIG_INFINIBAND_USER_MAD=m
+CONFIG_INFINIBAND_USER_ACCESS=m
+CONFIG_INFINIBAND_USER_MEM=y
+CONFIG_INFINIBAND_ADDR_TRANS=y
+CONFIG_INFINIBAND_MTHCA=m
+CONFIG_INFINIBAND_MTHCA_DEBUG=y
+CONFIG_INFINIBAND_IPATH=m
+CONFIG_INFINIBAND_AMSO1100=m
+# CONFIG_INFINIBAND_AMSO1100_DEBUG is not set
+CONFIG_INFINIBAND_CXGB3=m
+# CONFIG_INFINIBAND_CXGB3_DEBUG is not set
+CONFIG_MLX4_INFINIBAND=m
+CONFIG_INFINIBAND_IPOIB=m
+# CONFIG_INFINIBAND_IPOIB_CM is not set
+CONFIG_INFINIBAND_IPOIB_DEBUG=y
+# CONFIG_INFINIBAND_IPOIB_DEBUG_DATA is not set
+CONFIG_INFINIBAND_SRP=m
+CONFIG_INFINIBAND_ISER=m
+CONFIG_EDAC=y
+
+#
+# Reporting subsystems
+#
+# CONFIG_EDAC_DEBUG is not set
+CONFIG_EDAC_MM_EDAC=m
+CONFIG_EDAC_E752X=m
+# CONFIG_EDAC_I82975X is not set
+# CONFIG_EDAC_I5000 is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+CONFIG_RTC_INTF_DEV_UIE_EMUL=y
+CONFIG_RTC_DRV_TEST=m
+
+#
+# I2C RTC drivers
+#
+CONFIG_RTC_DRV_DS1307=m
+CONFIG_RTC_DRV_DS1672=m
+CONFIG_RTC_DRV_MAX6900=m
+CONFIG_RTC_DRV_RS5C372=m
+CONFIG_RTC_DRV_ISL1208=m
+CONFIG_RTC_DRV_X1205=m
+CONFIG_RTC_DRV_PCF8563=m
+CONFIG_RTC_DRV_PCF8583=m
+CONFIG_RTC_DRV_M41T80=m
+CONFIG_RTC_DRV_M41T80_WDT=y
+
+#
+# SPI RTC drivers
+#
+CONFIG_RTC_DRV_RS5C348=m
+CONFIG_RTC_DRV_MAX6902=m
+
+#
+# Platform RTC drivers
+#
+CONFIG_RTC_DRV_CMOS=m
+CONFIG_RTC_DRV_DS1553=m
+CONFIG_RTC_DRV_STK17TA8=m
+CONFIG_RTC_DRV_DS1742=m
+CONFIG_RTC_DRV_M48T86=m
+CONFIG_RTC_DRV_M48T59=m
+CONFIG_RTC_DRV_V3020=m
+
+#
+# on-CPU RTC drivers
+#
+
+#
+# DMA Engine support
+#
+CONFIG_DMA_ENGINE=y
+
+#
+# DMA Clients
+#
+CONFIG_NET_DMA=y
+
+#
+# DMA Devices
+#
+CONFIG_INTEL_IOATDMA=m
+CONFIG_AUXDISPLAY=y
+CONFIG_KS0108=m
+CONFIG_KS0108_PORT=0x378
+CONFIG_KS0108_DELAY=2
+CONFIG_CFAG12864B=m
+CONFIG_CFAG12864B_RATE=20
+CONFIG_VIRTUALIZATION=y
+CONFIG_KVM=y
+CONFIG_KVM_INTEL=m
+CONFIG_KVM_AMD=m
+
+#
+# Userspace I/O
+#
+CONFIG_UIO=m
+CONFIG_UIO_CIF=m
+
+#
+# Firmware Drivers
+#
+CONFIG_EDD=m
+CONFIG_DELL_RBU=m
+CONFIG_DCDBAS=y
+CONFIG_DMIID=y
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+CONFIG_EXT2_FS_XIP=y
+CONFIG_FS_XIP=y
+CONFIG_EXT3_FS=y
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_EXT4DEV_FS=y
+CONFIG_EXT4DEV_FS_XATTR=y
+CONFIG_EXT4DEV_FS_POSIX_ACL=y
+CONFIG_EXT4DEV_FS_SECURITY=y
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+CONFIG_REISERFS_FS=y
+# CONFIG_REISERFS_CHECK is not set
+CONFIG_REISERFS_PROC_INFO=y
+CONFIG_REISERFS_FS_XATTR=y
+CONFIG_REISERFS_FS_POSIX_ACL=y
+CONFIG_REISERFS_FS_SECURITY=y
+CONFIG_JFS_FS=y
+CONFIG_JFS_POSIX_ACL=y
+CONFIG_JFS_SECURITY=y
+# CONFIG_JFS_DEBUG is not set
+CONFIG_JFS_STATISTICS=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_XFS_FS=y
+CONFIG_XFS_QUOTA=y
+CONFIG_XFS_SECURITY=y
+CONFIG_XFS_POSIX_ACL=y
+CONFIG_XFS_RT=y
+CONFIG_GFS2_FS=m
+CONFIG_GFS2_FS_LOCKING_NOLOCK=m
+CONFIG_GFS2_FS_LOCKING_DLM=m
+CONFIG_OCFS2_FS=m
+CONFIG_OCFS2_DEBUG_MASKLOG=y
+CONFIG_MINIX_FS=m
+CONFIG_ROMFS_FS=y
+CONFIG_INOTIFY=y
+CONFIG_INOTIFY_USER=y
+CONFIG_QUOTA=y
+CONFIG_QFMT_V1=y
+CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
+CONFIG_DNOTIFY=y
+# CONFIG_AUTOFS_FS is not set
+CONFIG_AUTOFS4_FS=y
+CONFIG_FUSE_FS=y
+CONFIG_GENERIC_ACL=y
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=y
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=y
+CONFIG_UDF_NLS=y
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_NTFS_FS=y
+# CONFIG_NTFS_DEBUG is not set
+CONFIG_NTFS_RW=y
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_KCORE=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_RAMFS=y
+CONFIG_CONFIGFS_FS=m
+
+#
+# Layered filesystems
+#
+CONFIG_ECRYPT_FS=y
+CONFIG_UNION_FS=y
+CONFIG_UNION_FS_XATTR=y
+# CONFIG_UNION_FS_DEBUG is not set
+
+#
+# Miscellaneous filesystems
+#
+CONFIG_ADFS_FS=m
+# CONFIG_ADFS_FS_RW is not set
+CONFIG_AFFS_FS=m
+CONFIG_HFS_FS=y
+CONFIG_HFSPLUS_FS=y
+CONFIG_BEFS_FS=m
+# CONFIG_BEFS_DEBUG is not set
+CONFIG_BFS_FS=m
+CONFIG_EFS_FS=m
+CONFIG_JFFS2_FS=m
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+CONFIG_JFFS2_SUMMARY=y
+CONFIG_JFFS2_FS_XATTR=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_JFFS2_FS_SECURITY=y
+CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_JFFS2_ZLIB=y
+CONFIG_JFFS2_RTIME=y
+CONFIG_JFFS2_RUBIN=y
+# CONFIG_JFFS2_CMODE_NONE is not set
+CONFIG_JFFS2_CMODE_PRIORITY=y
+# CONFIG_JFFS2_CMODE_SIZE is not set
+CONFIG_CRAMFS=m
+CONFIG_SQUASHFS=y
+CONFIG_SQUASHFS_EMBEDDED=y
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+CONFIG_SQUASHFS_VMALLOC=y
+CONFIG_VXFS_FS=m
+CONFIG_HPFS_FS=y
+CONFIG_QNX4FS_FS=y
+CONFIG_SYSV_FS=y
+CONFIG_UFS_FS=y
+# CONFIG_UFS_FS_WRITE is not set
+# CONFIG_UFS_DEBUG is not set
+
+#
+# Network File Systems
+#
+CONFIG_NFS_FS=y
+CONFIG_NFS_V3=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+CONFIG_NFS_DIRECTIO=y
+CONFIG_NFSD=y
+CONFIG_NFSD_V2_ACL=y
+CONFIG_NFSD_V3=y
+CONFIG_NFSD_V3_ACL=y
+CONFIG_NFSD_V4=y
+CONFIG_NFSD_TCP=y
+CONFIG_ROOT_NFS=y
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_EXPORTFS=y
+CONFIG_NFS_ACL_SUPPORT=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+CONFIG_SUNRPC_GSS=y
+CONFIG_SUNRPC_BIND34=y
+CONFIG_RPCSEC_GSS_KRB5=y
+CONFIG_RPCSEC_GSS_SPKM3=m
+CONFIG_SMB_FS=y
+CONFIG_SMB_NLS_DEFAULT=y
+CONFIG_SMB_NLS_REMOTE="cp437"
+CONFIG_CIFS=y
+CONFIG_CIFS_STATS=y
+CONFIG_CIFS_STATS2=y
+CONFIG_CIFS_WEAK_PW_HASH=y
+CONFIG_CIFS_XATTR=y
+CONFIG_CIFS_POSIX=y
+# CONFIG_CIFS_DEBUG2 is not set
+CONFIG_CIFS_EXPERIMENTAL=y
+CONFIG_CIFS_UPCALL=y
+CONFIG_NCP_FS=m
+CONFIG_NCPFS_PACKET_SIGNING=y
+CONFIG_NCPFS_IOCTL_LOCKING=y
+CONFIG_NCPFS_STRONG=y
+CONFIG_NCPFS_NFS_NS=y
+CONFIG_NCPFS_OS2_NS=y
+CONFIG_NCPFS_SMALLDOS=y
+CONFIG_NCPFS_NLS=y
+CONFIG_NCPFS_EXTRAS=y
+CONFIG_CODA_FS=y
+CONFIG_CODA_FS_OLD_API=y
+CONFIG_AFS_FS=m
+# CONFIG_AFS_DEBUG is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_ACORN_PARTITION=y
+CONFIG_ACORN_PARTITION_CUMANA=y
+CONFIG_ACORN_PARTITION_EESOX=y
+CONFIG_ACORN_PARTITION_ICS=y
+CONFIG_ACORN_PARTITION_ADFS=y
+CONFIG_ACORN_PARTITION_POWERTEC=y
+CONFIG_ACORN_PARTITION_RISCIX=y
+CONFIG_OSF_PARTITION=y
+CONFIG_AMIGA_PARTITION=y
+CONFIG_ATARI_PARTITION=y
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+CONFIG_LDM_PARTITION=y
+CONFIG_LDM_DEBUG=y
+CONFIG_SGI_PARTITION=y
+CONFIG_ULTRIX_PARTITION=y
+CONFIG_SUN_PARTITION=y
+CONFIG_KARMA_PARTITION=y
+CONFIG_EFI_PARTITION=y
+CONFIG_SYSV68_PARTITION=y
+
+#
+# Native Language Support
+#
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=m
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ASCII=m
+CONFIG_NLS_ISO8859_1=m
+CONFIG_NLS_ISO8859_2=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_NLS_ISO8859_4=m
+CONFIG_NLS_ISO8859_5=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NLS_ISO8859_15=m
+CONFIG_NLS_KOI8_R=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_NLS_UTF8=y
+
+#
+# Distributed Lock Manager
+#
+CONFIG_DLM=m
+# CONFIG_DLM_DEBUG is not set
+
+#
+# Instrumentation Support
+#
+# CONFIG_PROFILING is not set
+# CONFIG_KPROBES is not set
+
+#
+# Kernel hacking
+#
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_PRINTK_TIME=y
+CONFIG_ENABLE_MUST_CHECK=y
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_UNUSED_SYMBOLS=y
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_KERNEL is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_KEYS_DEBUG_PROC_KEYS is not set
+CONFIG_SECURITY=y
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+CONFIG_SECURITY_CAPABILITIES=y
+CONFIG_SECURITY_ROOTPLUG=m
+CONFIG_SECURITY_SELINUX=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
+CONFIG_SECURITY_SELINUX_DISABLE=y
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_ENABLE_SECMARK_DEFAULT is not set
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+CONFIG_XOR_BLOCKS=y
+CONFIG_ASYNC_CORE=y
+CONFIG_ASYNC_MEMCPY=y
+CONFIG_ASYNC_XOR=y
+CONFIG_CRYPTO=y
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ABLKCIPHER=m
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_HMAC=y
+CONFIG_CRYPTO_XCBC=m
+CONFIG_CRYPTO_NULL=m
+CONFIG_CRYPTO_MD4=y
+CONFIG_CRYPTO_MD5=y
+CONFIG_CRYPTO_SHA1=m
+CONFIG_CRYPTO_SHA256=m
+CONFIG_CRYPTO_SHA512=m
+CONFIG_CRYPTO_WP512=m
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_GF128MUL=m
+CONFIG_CRYPTO_ECB=y
+CONFIG_CRYPTO_CBC=y
+CONFIG_CRYPTO_PCBC=m
+CONFIG_CRYPTO_LRW=m
+CONFIG_CRYPTO_CRYPTD=m
+CONFIG_CRYPTO_DES=y
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
+CONFIG_CRYPTO_TWOFISH_X86_64=m
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_CRYPTO_AES=y
+CONFIG_CRYPTO_AES_X86_64=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_ARC4=y
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_ANUBIS=m
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_LZF=m
+CONFIG_CRYPTO_MICHAEL_MIC=m
+CONFIG_CRYPTO_CRC32C=y
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_TEST=m
+CONFIG_CRYPTO_HW=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_CRC_CCITT=m
+CONFIG_CRC16=m
+CONFIG_CRC_ITU_T=m
+CONFIG_CRC32=y
+CONFIG_CRC7=m
+CONFIG_LIBCRC32C=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=m
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=m
+CONFIG_REED_SOLOMON_DEC16=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=m
+CONFIG_TEXTSEARCH_BM=m
+CONFIG_TEXTSEARCH_FSM=m
+CONFIG_PLIST=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CHECK_SIGNATURE=y
diff -urpN linux-2.6.23-sabayon/Documentation/thinkpad-acpi.txt testtry/Documentation/thinkpad-acpi.txt
--- linux-2.6.23-sabayon/Documentation/thinkpad-acpi.txt	2007-10-15 14:50:10.000000000 +0000
+++ testtry/Documentation/thinkpad-acpi.txt	2007-10-15 14:51:53.000000000 +0000
@@ -105,10 +105,15 @@ The version of thinkpad-acpi's sysfs int
 as a driver attribute (see below).
 
 Sysfs driver attributes are on the driver's sysfs attribute space,
-for 2.6.20 this is /sys/bus/platform/drivers/thinkpad_acpi/.
+for 2.6.23 this is /sys/bus/platform/drivers/thinkpad_acpi/ and
+/sys/bus/platform/drivers/thinkpad_hwmon/
 
-Sysfs device attributes are on the driver's sysfs attribute space,
-for 2.6.20 this is /sys/devices/platform/thinkpad_acpi/.
+Sysfs device attributes are on the thinkpad_acpi device sysfs attribute
+space, for 2.6.23 this is /sys/devices/platform/thinkpad_acpi/.
+
+Sysfs device attributes for the sensors and fan are on the
+thinkpad_hwmon device's sysfs attribute space, but you should locate it
+looking for a hwmon device with the name attribute of "thinkpad".
 
 Driver version
 --------------
@@ -766,7 +771,7 @@ Temperature sensors
 -------------------
 
 procfs: /proc/acpi/ibm/thermal
-sysfs device attributes: (hwmon) temp*_input
+sysfs device attributes: (hwmon "thinkpad") temp*_input
 
 Most ThinkPads include six or more separate temperature sensors but only
 expose the CPU temperature through the standard ACPI methods.  This
@@ -989,7 +994,9 @@ Fan control and monitoring: fan speed, f
 ---------------------------------------------------------
 
 procfs: /proc/acpi/ibm/fan
-sysfs device attributes: (hwmon) fan_input, pwm1, pwm1_enable
+sysfs device attributes: (hwmon "thinkpad") fan1_input, pwm1,
+			  pwm1_enable
+sysfs hwmon driver attributes: fan_watchdog
 
 NOTE NOTE NOTE: fan control operations are disabled by default for
 safety reasons.  To enable them, the module parameter "fan_control=1"
@@ -1131,7 +1138,7 @@ hwmon device attribute fan1_input:
 	which can take up to two minutes.  May return rubbish on older
 	ThinkPads.
 
-driver attribute fan_watchdog:
+hwmon driver attribute fan_watchdog:
 	Fan safety watchdog timer interval, in seconds.  Minimum is
 	1 second, maximum is 120 seconds.  0 disables the watchdog.
 
@@ -1233,3 +1240,9 @@ Sysfs interface changelog:
 		layer, the radio switch generates input event EV_RADIO,
 		and the driver enables hot key handling by default in
 		the firmware.
+
+0x020000:	ABI fix: added a separate hwmon platform device and
+		driver, which must be located by name (thinkpad)
+		and the hwmon class for libsensors4 (lm-sensors 3)
+		compatibility.  Moved all hwmon attributes to this
+		new platform device.
diff -urpN linux-2.6.23-sabayon/drivers/acpi/ac.c testtry/drivers/acpi/ac.c
--- linux-2.6.23-sabayon/drivers/acpi/ac.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/ac.c	2007-10-15 14:51:53.000000000 +0000
@@ -29,6 +29,7 @@
 #include <linux/types.h>
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
+#include <linux/power_supply.h>
 #include <acpi/acpi_bus.h>
 #include <acpi/acpi_drivers.h>
 
@@ -72,16 +73,37 @@ static struct acpi_driver acpi_ac_driver
 };
 
 struct acpi_ac {
+	struct power_supply charger;
 	struct acpi_device * device;
 	unsigned long state;
 };
 
+#define to_acpi_ac(x) container_of(x, struct acpi_ac, charger);
+
 static const struct file_operations acpi_ac_fops = {
 	.open = acpi_ac_open_fs,
 	.read = seq_read,
 	.llseek = seq_lseek,
 	.release = single_release,
 };
+static int get_ac_property(struct power_supply *psy,
+			   enum power_supply_property psp,
+			   union power_supply_propval *val)
+{
+	struct acpi_ac *ac = to_acpi_ac(psy);
+	switch (psp) {
+	case POWER_SUPPLY_PROP_ONLINE:
+		val->intval = ac->state;
+		break;
+	default:
+		return -EINVAL;
+	}
+	return 0;
+}
+
+static enum power_supply_property ac_props[] = {
+	POWER_SUPPLY_PROP_ONLINE,
+};
 
 /* --------------------------------------------------------------------------
                                AC Adapter Management
@@ -208,6 +230,7 @@ static void acpi_ac_notify(acpi_handle h
 		acpi_bus_generate_netlink_event(device->pnp.device_class,
 						  device->dev.bus_id, event,
 						  (u32) ac->state);
+		kobject_uevent(&ac->charger.dev->kobj, KOBJ_CHANGE);
 		break;
 	default:
 		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
@@ -244,7 +267,12 @@ static int acpi_ac_add(struct acpi_devic
 	result = acpi_ac_add_fs(device);
 	if (result)
 		goto end;
-
+	ac->charger.name = acpi_device_bid(device);
+	ac->charger.type = POWER_SUPPLY_TYPE_MAINS;
+	ac->charger.properties = ac_props;
+	ac->charger.num_properties = ARRAY_SIZE(ac_props);
+	ac->charger.get_property = get_ac_property;
+	power_supply_register(&ac->device->dev, &ac->charger);
 	status = acpi_install_notify_handler(device->handle,
 					     ACPI_ALL_NOTIFY, acpi_ac_notify,
 					     ac);
@@ -279,7 +307,8 @@ static int acpi_ac_remove(struct acpi_de
 
 	status = acpi_remove_notify_handler(device->handle,
 					    ACPI_ALL_NOTIFY, acpi_ac_notify);
-
+	if (ac->charger.dev)
+		power_supply_unregister(&ac->charger);
 	acpi_ac_remove_fs(device);
 
 	kfree(ac);
diff -urpN linux-2.6.23-sabayon/drivers/acpi/battery.c testtry/drivers/acpi/battery.c
--- linux-2.6.23-sabayon/drivers/acpi/battery.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/battery.c	2007-10-15 14:51:53.000000000 +0000
@@ -1,6 +1,8 @@
 /*
- *  acpi_battery.c - ACPI Battery Driver ($Revision: 37 $)
+ *  battery.c - ACPI Battery Driver (Revision: 2.0)
  *
+ *  Copyright (C) 2007 Alexey Starikovskiy <astarikovskiy@suse.de>
+ *  Copyright (C) 2004-2007 Vladimir Lebedev <vladimir.p.lebedev@intel.com>
  *  Copyright (C) 2001, 2002 Andy Grover <andrew.grover@intel.com>
  *  Copyright (C) 2001, 2002 Paul Diefenbaugh <paul.s.diefenbaugh@intel.com>
  *
@@ -27,244 +29,288 @@
 #include <linux/module.h>
 #include <linux/init.h>
 #include <linux/types.h>
+#include <linux/jiffies.h>
+
+#ifdef CONFIG_ACPI_PROCFS
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
 #include <asm/uaccess.h>
+#endif
 
 #include <acpi/acpi_bus.h>
 #include <acpi/acpi_drivers.h>
 
-#define ACPI_BATTERY_VALUE_UNKNOWN 0xFFFFFFFF
+#include <linux/power_supply.h>
 
-#define ACPI_BATTERY_FORMAT_BIF	"NNNNNNNNNSSSS"
-#define ACPI_BATTERY_FORMAT_BST	"NNNN"
+#define ACPI_BATTERY_VALUE_UNKNOWN 0xFFFFFFFF
 
 #define ACPI_BATTERY_COMPONENT		0x00040000
 #define ACPI_BATTERY_CLASS		"battery"
 #define ACPI_BATTERY_DEVICE_NAME	"Battery"
 #define ACPI_BATTERY_NOTIFY_STATUS	0x80
 #define ACPI_BATTERY_NOTIFY_INFO	0x81
-#define ACPI_BATTERY_UNITS_WATTS	"mW"
-#define ACPI_BATTERY_UNITS_AMPS		"mA"
 
 #define _COMPONENT		ACPI_BATTERY_COMPONENT
 
-#define ACPI_BATTERY_UPDATE_TIME	0
-
-#define ACPI_BATTERY_NONE_UPDATE	0
-#define ACPI_BATTERY_EASY_UPDATE	1
-#define ACPI_BATTERY_INIT_UPDATE	2
-
 ACPI_MODULE_NAME("battery");
 
 MODULE_AUTHOR("Paul Diefenbaugh");
+MODULE_AUTHOR("Alexey Starikovskiy <astarikovskiy@suse.de>");
 MODULE_DESCRIPTION("ACPI Battery Driver");
 MODULE_LICENSE("GPL");
 
-static unsigned int update_time = ACPI_BATTERY_UPDATE_TIME;
-
-/* 0 - every time, > 0 - by update_time */
-module_param(update_time, uint, 0644);
+static unsigned int cache_time = 1000;
+module_param(cache_time, uint, 0644);
+MODULE_PARM_DESC(cache_time, "cache time in milliseconds");
 
+#ifdef CONFIG_ACPI_PROCFS
 extern struct proc_dir_entry *acpi_lock_battery_dir(void);
 extern void *acpi_unlock_battery_dir(struct proc_dir_entry *acpi_battery_dir);
 
-static int acpi_battery_add(struct acpi_device *device);
-static int acpi_battery_remove(struct acpi_device *device, int type);
-static int acpi_battery_resume(struct acpi_device *device);
+enum acpi_battery_files {
+	info_tag = 0,
+	state_tag,
+	alarm_tag,
+	ACPI_BATTERY_NUMFILES,
+};
+
+#endif
 
 static const struct acpi_device_id battery_device_ids[] = {
 	{"PNP0C0A", 0},
 	{"", 0},
 };
-MODULE_DEVICE_TABLE(acpi, battery_device_ids);
-
-static struct acpi_driver acpi_battery_driver = {
-	.name = "battery",
-	.class = ACPI_BATTERY_CLASS,
-	.ids = battery_device_ids,
-	.ops = {
-		.add = acpi_battery_add,
-		.resume = acpi_battery_resume,
-		.remove = acpi_battery_remove,
-		},
-};
 
-struct acpi_battery_state {
-	acpi_integer state;
-	acpi_integer present_rate;
-	acpi_integer remaining_capacity;
-	acpi_integer present_voltage;
-};
-
-struct acpi_battery_info {
-	acpi_integer power_unit;
-	acpi_integer design_capacity;
-	acpi_integer last_full_capacity;
-	acpi_integer battery_technology;
-	acpi_integer design_voltage;
-	acpi_integer design_capacity_warning;
-	acpi_integer design_capacity_low;
-	acpi_integer battery_capacity_granularity_1;
-	acpi_integer battery_capacity_granularity_2;
-	acpi_string model_number;
-	acpi_string serial_number;
-	acpi_string battery_type;
-	acpi_string oem_info;
-};
-
-enum acpi_battery_files{
-	ACPI_BATTERY_INFO = 0,
-	ACPI_BATTERY_STATE,
-	ACPI_BATTERY_ALARM,
-	ACPI_BATTERY_NUMFILES,
-};
+MODULE_DEVICE_TABLE(acpi, battery_device_ids);
 
-struct acpi_battery_flags {
-	u8 battery_present_prev;
-	u8 alarm_present;
-	u8 init_update;
-	u8 update[ACPI_BATTERY_NUMFILES];
-	u8 power_unit;
-};
 
 struct acpi_battery {
-	struct mutex mutex;
+	struct mutex lock;
+	struct power_supply bat;
 	struct acpi_device *device;
-	struct acpi_battery_flags flags;
-	struct acpi_buffer bif_data;
-	struct acpi_buffer bst_data;
-	unsigned long alarm;
-	unsigned long update_time[ACPI_BATTERY_NUMFILES];
+	unsigned long update_time;
+	int current_now;
+	int capacity_now;
+	int voltage_now;
+	int design_capacity;
+	int full_charge_capacity;
+	int technology;
+	int design_voltage;
+	int design_capacity_warning;
+	int design_capacity_low;
+	int capacity_granularity_1;
+	int capacity_granularity_2;
+	int alarm;
+	char model_number[32];
+	char serial_number[32];
+	char type[32];
+	char oem_info[32];
+	int state;
+	int power_unit;
+	u8 alarm_present;
 };
 
+#define to_acpi_battery(x) container_of(x, struct acpi_battery, bat);
+
 inline int acpi_battery_present(struct acpi_battery *battery)
 {
 	return battery->device->status.battery_present;
 }
-inline char *acpi_battery_power_units(struct acpi_battery *battery)
+
+static int acpi_battery_technology(struct acpi_battery *battery)
 {
-	if (battery->flags.power_unit)
-		return ACPI_BATTERY_UNITS_AMPS;
-	else
-		return ACPI_BATTERY_UNITS_WATTS;
+	if (!strcasecmp("NiCd", battery->type))
+		return POWER_SUPPLY_TECHNOLOGY_NiCd;
+	if (!strcasecmp("NiMH", battery->type))
+		return POWER_SUPPLY_TECHNOLOGY_NiMH;
+	if (!strcasecmp("LION", battery->type))
+		return POWER_SUPPLY_TECHNOLOGY_LION;
+	if (!strcasecmp("LiP", battery->type))
+		return POWER_SUPPLY_TECHNOLOGY_LIPO;
+	return POWER_SUPPLY_TECHNOLOGY_UNKNOWN;
+}
+
+static int acpi_battery_get_property(struct power_supply *psy,
+				     enum power_supply_property psp,
+				     union power_supply_propval *val)
+{
+	struct acpi_battery *battery = to_acpi_battery(psy);
+
+	if ((!acpi_battery_present(battery)) &&
+	     psp != POWER_SUPPLY_PROP_PRESENT)
+		return -ENODEV;
+	switch (psp) {
+	case POWER_SUPPLY_PROP_STATUS:
+		if (battery->state & 0x01)
+			val->intval = POWER_SUPPLY_STATUS_DISCHARGING;
+		else if (battery->state & 0x02)
+			val->intval = POWER_SUPPLY_STATUS_CHARGING;
+		else if (battery->state == 0)
+			val->intval = POWER_SUPPLY_STATUS_FULL;
+		break;
+	case POWER_SUPPLY_PROP_PRESENT:
+		val->intval = acpi_battery_present(battery);
+		break;
+	case POWER_SUPPLY_PROP_TECHNOLOGY:
+		val->intval = acpi_battery_technology(battery);
+		break;
+	case POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN:
+		val->intval = battery->design_voltage * 1000;
+		break;
+	case POWER_SUPPLY_PROP_VOLTAGE_NOW:
+		val->intval = battery->voltage_now * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CURRENT_NOW:
+		val->intval = battery->current_now * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN:
+	case POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN:
+		val->intval = battery->design_capacity * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CHARGE_FULL:
+	case POWER_SUPPLY_PROP_ENERGY_FULL:
+		val->intval = battery->full_charge_capacity * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CHARGE_NOW:
+	case POWER_SUPPLY_PROP_ENERGY_NOW:
+		val->intval = battery->capacity_now * 1000;
+		break;
+	case POWER_SUPPLY_PROP_MODEL_NAME:
+		val->strval = battery->model_number;
+		break;
+	case POWER_SUPPLY_PROP_MANUFACTURER:
+		val->strval = battery->oem_info;
+		break;
+	default:
+		return -EINVAL;
+	}
+	return 0;
 }
 
-inline acpi_handle acpi_battery_handle(struct acpi_battery *battery)
+static enum power_supply_property charge_battery_props[] = {
+	POWER_SUPPLY_PROP_STATUS,
+	POWER_SUPPLY_PROP_PRESENT,
+	POWER_SUPPLY_PROP_TECHNOLOGY,
+	POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN,
+	POWER_SUPPLY_PROP_VOLTAGE_NOW,
+	POWER_SUPPLY_PROP_CURRENT_NOW,
+	POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN,
+	POWER_SUPPLY_PROP_CHARGE_FULL,
+	POWER_SUPPLY_PROP_CHARGE_NOW,
+	POWER_SUPPLY_PROP_MODEL_NAME,
+	POWER_SUPPLY_PROP_MANUFACTURER,
+};
+
+static enum power_supply_property energy_battery_props[] = {
+	POWER_SUPPLY_PROP_STATUS,
+	POWER_SUPPLY_PROP_PRESENT,
+	POWER_SUPPLY_PROP_TECHNOLOGY,
+	POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN,
+	POWER_SUPPLY_PROP_VOLTAGE_NOW,
+	POWER_SUPPLY_PROP_CURRENT_NOW,
+	POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN,
+	POWER_SUPPLY_PROP_ENERGY_FULL,
+	POWER_SUPPLY_PROP_ENERGY_NOW,
+	POWER_SUPPLY_PROP_MODEL_NAME,
+	POWER_SUPPLY_PROP_MANUFACTURER,
+};
+
+#ifdef CONFIG_ACPI_PROCFS
+inline char *acpi_battery_units(struct acpi_battery *battery)
 {
-	return battery->device->handle;
+	return (battery->power_unit)?"mA":"mW";
 }
+#endif
 
 /* --------------------------------------------------------------------------
                                Battery Management
    -------------------------------------------------------------------------- */
+struct acpi_offsets {
+	size_t offset;		/* offset inside struct acpi_sbs_battery */
+	u8 mode;		/* int or string? */
+};
 
-static void acpi_battery_check_result(struct acpi_battery *battery, int result)
-{
-	if (!battery)
-		return;
-
-	if (result) {
-		battery->flags.init_update = 1;
-	}
-}
-
-static int acpi_battery_extract_package(struct acpi_battery *battery,
-					union acpi_object *package,
-					struct acpi_buffer *format,
-					struct acpi_buffer *data,
-					char *package_name)
-{
-	acpi_status status = AE_OK;
-	struct acpi_buffer data_null = { 0, NULL };
+static struct acpi_offsets state_offsets[] = {
+	{offsetof(struct acpi_battery, state), 0},
+	{offsetof(struct acpi_battery, current_now), 0},
+	{offsetof(struct acpi_battery, capacity_now), 0},
+	{offsetof(struct acpi_battery, voltage_now), 0},
+};
 
-	status = acpi_extract_package(package, format, &data_null);
-	if (status != AE_BUFFER_OVERFLOW) {
-		ACPI_EXCEPTION((AE_INFO, status, "Extracting size %s",
-				package_name));
-		return -ENODEV;
-	}
+static struct acpi_offsets info_offsets[] = {
+	{offsetof(struct acpi_battery, power_unit), 0},
+	{offsetof(struct acpi_battery, design_capacity), 0},
+	{offsetof(struct acpi_battery, full_charge_capacity), 0},
+	{offsetof(struct acpi_battery, technology), 0},
+	{offsetof(struct acpi_battery, design_voltage), 0},
+	{offsetof(struct acpi_battery, design_capacity_warning), 0},
+	{offsetof(struct acpi_battery, design_capacity_low), 0},
+	{offsetof(struct acpi_battery, capacity_granularity_1), 0},
+	{offsetof(struct acpi_battery, capacity_granularity_2), 0},
+	{offsetof(struct acpi_battery, model_number), 1},
+	{offsetof(struct acpi_battery, serial_number), 1},
+	{offsetof(struct acpi_battery, type), 1},
+	{offsetof(struct acpi_battery, oem_info), 1},
+};
 
-	if (data_null.length != data->length) {
-		kfree(data->pointer);
-		data->pointer = kzalloc(data_null.length, GFP_KERNEL);
-		if (!data->pointer) {
-			ACPI_EXCEPTION((AE_INFO, AE_NO_MEMORY, "kzalloc()"));
-			return -ENOMEM;
+static int extract_package(struct acpi_battery *battery,
+			   union acpi_object *package,
+			   struct acpi_offsets *offsets, int num)
+{
+	int i, *x;
+	union acpi_object *element;
+	if (package->type != ACPI_TYPE_PACKAGE)
+		return -EFAULT;
+	for (i = 0; i < num; ++i) {
+		if (package->package.count <= i)
+			return -EFAULT;
+		element = &package->package.elements[i];
+		if (offsets[i].mode) {
+			if (element->type != ACPI_TYPE_STRING &&
+			    element->type != ACPI_TYPE_BUFFER)
+				return -EFAULT;
+			strncpy((u8 *)battery + offsets[i].offset,
+				element->string.pointer, 32);
+		} else {
+			if (element->type != ACPI_TYPE_INTEGER)
+				return -EFAULT;
+			x = (int *)((u8 *)battery + offsets[i].offset);
+			*x = element->integer.value;
 		}
-		data->length = data_null.length;
-	}
-
-	status = acpi_extract_package(package, format, data);
-	if (ACPI_FAILURE(status)) {
-		ACPI_EXCEPTION((AE_INFO, status, "Extracting %s",
-				package_name));
-		return -ENODEV;
 	}
-
 	return 0;
 }
 
 static int acpi_battery_get_status(struct acpi_battery *battery)
 {
-	int result = 0;
-
-	result = acpi_bus_get_status(battery->device);
-	if (result) {
+	if (acpi_bus_get_status(battery->device)) {
 		ACPI_EXCEPTION((AE_INFO, AE_ERROR, "Evaluating _STA"));
 		return -ENODEV;
 	}
-	return result;
+	return 0;
 }
 
 static int acpi_battery_get_info(struct acpi_battery *battery)
 {
-	int result = 0;
+	int result = -EFAULT;
 	acpi_status status = 0;
 	struct acpi_buffer buffer = { ACPI_ALLOCATE_BUFFER, NULL };
-	struct acpi_buffer format = { sizeof(ACPI_BATTERY_FORMAT_BIF),
-		ACPI_BATTERY_FORMAT_BIF
-	};
-	union acpi_object *package = NULL;
-	struct acpi_buffer *data = NULL;
-	struct acpi_battery_info *bif = NULL;
-
-	battery->update_time[ACPI_BATTERY_INFO] = get_seconds();
 
 	if (!acpi_battery_present(battery))
 		return 0;
+	mutex_lock(&battery->lock);
+	status = acpi_evaluate_object(battery->device->handle, "_BIF",
+				      NULL, &buffer);
+	mutex_unlock(&battery->lock);
 
-	/* Evaluate _BIF */
-
-	status =
-	    acpi_evaluate_object(acpi_battery_handle(battery), "_BIF", NULL,
-				 &buffer);
 	if (ACPI_FAILURE(status)) {
 		ACPI_EXCEPTION((AE_INFO, status, "Evaluating _BIF"));
 		return -ENODEV;
 	}
 
-	package = buffer.pointer;
-
-	data = &battery->bif_data;
-
-	/* Extract Package Data */
-
-	result =
-	    acpi_battery_extract_package(battery, package, &format, data,
-					 "_BIF");
-	if (result)
-		goto end;
-
-      end:
-
+	result = extract_package(battery, buffer.pointer,
+				 info_offsets, ARRAY_SIZE(info_offsets));
 	kfree(buffer.pointer);
-
-	if (!result) {
-		bif = data->pointer;
-		battery->flags.power_unit = bif->power_unit;
-	}
-
 	return result;
 }
 
@@ -273,342 +319,203 @@ static int acpi_battery_get_state(struct
 	int result = 0;
 	acpi_status status = 0;
 	struct acpi_buffer buffer = { ACPI_ALLOCATE_BUFFER, NULL };
-	struct acpi_buffer format = { sizeof(ACPI_BATTERY_FORMAT_BST),
-		ACPI_BATTERY_FORMAT_BST
-	};
-	union acpi_object *package = NULL;
-	struct acpi_buffer *data = NULL;
-
-	battery->update_time[ACPI_BATTERY_STATE] = get_seconds();
 
 	if (!acpi_battery_present(battery))
 		return 0;
 
-	/* Evaluate _BST */
+	if (battery->update_time &&
+	    time_before(jiffies, battery->update_time +
+			msecs_to_jiffies(cache_time)))
+		return 0;
+
+	mutex_lock(&battery->lock);
+	status = acpi_evaluate_object(battery->device->handle, "_BST",
+				      NULL, &buffer);
+	mutex_unlock(&battery->lock);
 
-	status =
-	    acpi_evaluate_object(acpi_battery_handle(battery), "_BST", NULL,
-				 &buffer);
 	if (ACPI_FAILURE(status)) {
 		ACPI_EXCEPTION((AE_INFO, status, "Evaluating _BST"));
 		return -ENODEV;
 	}
 
-	package = buffer.pointer;
-
-	data = &battery->bst_data;
-
-	/* Extract Package Data */
-
-	result =
-	    acpi_battery_extract_package(battery, package, &format, data,
-					 "_BST");
-	if (result)
-		goto end;
-
-      end:
+	result = extract_package(battery, buffer.pointer,
+				 state_offsets, ARRAY_SIZE(state_offsets));
+	battery->update_time = jiffies;
 	kfree(buffer.pointer);
-
 	return result;
 }
 
-static int acpi_battery_get_alarm(struct acpi_battery *battery)
-{
-	battery->update_time[ACPI_BATTERY_ALARM] = get_seconds();
-
-	return 0;
-}
-
-static int acpi_battery_set_alarm(struct acpi_battery *battery,
-				  unsigned long alarm)
+static int acpi_battery_set_alarm(struct acpi_battery *battery)
 {
 	acpi_status status = 0;
-	union acpi_object arg0 = { ACPI_TYPE_INTEGER };
+	union acpi_object arg0 = { .type = ACPI_TYPE_INTEGER };
 	struct acpi_object_list arg_list = { 1, &arg0 };
 
-	battery->update_time[ACPI_BATTERY_ALARM] = get_seconds();
-
-	if (!acpi_battery_present(battery))
-		return -ENODEV;
-
-	if (!battery->flags.alarm_present)
+	if (!acpi_battery_present(battery)|| !battery->alarm_present)
 		return -ENODEV;
 
-	arg0.integer.value = alarm;
+	arg0.integer.value = battery->alarm;
 
-	status =
-	    acpi_evaluate_object(acpi_battery_handle(battery), "_BTP",
+	mutex_lock(&battery->lock);
+	status = acpi_evaluate_object(battery->device->handle, "_BTP",
 				 &arg_list, NULL);
+	mutex_unlock(&battery->lock);
+
 	if (ACPI_FAILURE(status))
 		return -ENODEV;
 
-	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Alarm set to %d\n", (u32) alarm));
-
-	battery->alarm = alarm;
-
+	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Alarm set to %d\n", battery->alarm));
 	return 0;
 }
 
 static int acpi_battery_init_alarm(struct acpi_battery *battery)
 {
-	int result = 0;
 	acpi_status status = AE_OK;
 	acpi_handle handle = NULL;
-	struct acpi_battery_info *bif = battery->bif_data.pointer;
-	unsigned long alarm = battery->alarm;
 
 	/* See if alarms are supported, and if so, set default */
-
-	status = acpi_get_handle(acpi_battery_handle(battery), "_BTP", &handle);
-	if (ACPI_SUCCESS(status)) {
-		battery->flags.alarm_present = 1;
-		if (!alarm && bif) {
-			alarm = bif->design_capacity_warning;
-		}
-		result = acpi_battery_set_alarm(battery, alarm);
-		if (result)
-			goto end;
-	} else {
-		battery->flags.alarm_present = 0;
+	status = acpi_get_handle(battery->device->handle, "_BTP", &handle);
+	if (ACPI_FAILURE(status)) {
+		battery->alarm_present = 0;
+		return 0;
 	}
-
-      end:
-
-	return result;
+	battery->alarm_present = 1;
+	if (!battery->alarm)
+		battery->alarm = battery->design_capacity_warning;
+	return acpi_battery_set_alarm(battery);
 }
 
-static int acpi_battery_init_update(struct acpi_battery *battery)
+static int acpi_battery_update(struct acpi_battery *battery)
 {
-	int result = 0;
-
-	result = acpi_battery_get_status(battery);
-	if (result)
+	int saved_present = acpi_battery_present(battery);
+	int result = acpi_battery_get_status(battery);
+	if (result || !acpi_battery_present(battery))
 		return result;
-
-	battery->flags.battery_present_prev = acpi_battery_present(battery);
-
-	if (acpi_battery_present(battery)) {
+	if (saved_present != acpi_battery_present(battery) ||
+	    !battery->update_time) {
+		battery->update_time = 0;
 		result = acpi_battery_get_info(battery);
 		if (result)
 			return result;
-		result = acpi_battery_get_state(battery);
-		if (result)
-			return result;
-
-		acpi_battery_init_alarm(battery);
-	}
-
-	return result;
-}
-
-static int acpi_battery_update(struct acpi_battery *battery,
-			       int update, int *update_result_ptr)
-{
-	int result = 0;
-	int update_result = ACPI_BATTERY_NONE_UPDATE;
-
-	if (!acpi_battery_present(battery)) {
-		update = 1;
-	}
-
-	if (battery->flags.init_update) {
-		result = acpi_battery_init_update(battery);
-		if (result)
-			goto end;
-		update_result = ACPI_BATTERY_INIT_UPDATE;
-	} else if (update) {
-		result = acpi_battery_get_status(battery);
-		if (result)
-			goto end;
-		if ((!battery->flags.battery_present_prev & acpi_battery_present(battery))
-		    || (battery->flags.battery_present_prev & !acpi_battery_present(battery))) {
-			result = acpi_battery_init_update(battery);
-			if (result)
-				goto end;
-			update_result = ACPI_BATTERY_INIT_UPDATE;
+		if (battery->power_unit) {
+			battery->bat.properties = charge_battery_props;
+			battery->bat.num_properties =
+				ARRAY_SIZE(charge_battery_props);
 		} else {
-			update_result = ACPI_BATTERY_EASY_UPDATE;
+			battery->bat.properties = energy_battery_props;
+			battery->bat.num_properties =
+				ARRAY_SIZE(energy_battery_props);
 		}
+		acpi_battery_init_alarm(battery);
 	}
-
-      end:
-
-	battery->flags.init_update = (result != 0);
-
-	*update_result_ptr = update_result;
-
-	return result;
-}
-
-static void acpi_battery_notify_update(struct acpi_battery *battery)
-{
-	acpi_battery_get_status(battery);
-
-	if (battery->flags.init_update) {
-		return;
-	}
-
-	if ((!battery->flags.battery_present_prev &
-	     acpi_battery_present(battery)) ||
-	    (battery->flags.battery_present_prev &
-	     !acpi_battery_present(battery))) {
-		battery->flags.init_update = 1;
-	} else {
-		battery->flags.update[ACPI_BATTERY_INFO] = 1;
-		battery->flags.update[ACPI_BATTERY_STATE] = 1;
-		battery->flags.update[ACPI_BATTERY_ALARM] = 1;
-	}
+	return acpi_battery_get_state(battery);
 }
 
 /* --------------------------------------------------------------------------
                               FS Interface (/proc)
    -------------------------------------------------------------------------- */
 
+#ifdef CONFIG_ACPI_PROCFS
 static struct proc_dir_entry *acpi_battery_dir;
 
 static int acpi_battery_print_info(struct seq_file *seq, int result)
 {
 	struct acpi_battery *battery = seq->private;
-	struct acpi_battery_info *bif = NULL;
-	char *units = "?";
 
 	if (result)
 		goto end;
 
-	if (acpi_battery_present(battery))
-		seq_printf(seq, "present:                 yes\n");
-	else {
-		seq_printf(seq, "present:                 no\n");
-		goto end;
-	}
-
-	bif = battery->bif_data.pointer;
-	if (!bif) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR, "BIF buffer is NULL"));
-		result = -ENODEV;
+	seq_printf(seq, "present:                 %s\n",
+		   acpi_battery_present(battery)?"yes":"no");
+	if (!acpi_battery_present(battery))
 		goto end;
-	}
-
-	/* Battery Units */
-
-	units = acpi_battery_power_units(battery);
-
-	if (bif->design_capacity == ACPI_BATTERY_VALUE_UNKNOWN)
+	if (battery->design_capacity == ACPI_BATTERY_VALUE_UNKNOWN)
 		seq_printf(seq, "design capacity:         unknown\n");
 	else
 		seq_printf(seq, "design capacity:         %d %sh\n",
-			   (u32) bif->design_capacity, units);
+			   battery->design_capacity,
+			   acpi_battery_units(battery));
 
-	if (bif->last_full_capacity == ACPI_BATTERY_VALUE_UNKNOWN)
+	if (battery->full_charge_capacity == ACPI_BATTERY_VALUE_UNKNOWN)
 		seq_printf(seq, "last full capacity:      unknown\n");
 	else
 		seq_printf(seq, "last full capacity:      %d %sh\n",
-			   (u32) bif->last_full_capacity, units);
+			   battery->full_charge_capacity,
+			   acpi_battery_units(battery));
 
-	switch ((u32) bif->battery_technology) {
-	case 0:
-		seq_printf(seq, "battery technology:      non-rechargeable\n");
-		break;
-	case 1:
-		seq_printf(seq, "battery technology:      rechargeable\n");
-		break;
-	default:
-		seq_printf(seq, "battery technology:      unknown\n");
-		break;
-	}
+	seq_printf(seq, "battery technology:      %srechargeable\n",
+		   (!battery->technology)?"non-":"");
 
-	if (bif->design_voltage == ACPI_BATTERY_VALUE_UNKNOWN)
+	if (battery->design_voltage == ACPI_BATTERY_VALUE_UNKNOWN)
 		seq_printf(seq, "design voltage:          unknown\n");
 	else
 		seq_printf(seq, "design voltage:          %d mV\n",
-			   (u32) bif->design_voltage);
+			   battery->design_voltage);
 	seq_printf(seq, "design capacity warning: %d %sh\n",
-		   (u32) bif->design_capacity_warning, units);
+		   battery->design_capacity_warning,
+		   acpi_battery_units(battery));
 	seq_printf(seq, "design capacity low:     %d %sh\n",
-		   (u32) bif->design_capacity_low, units);
+		   battery->design_capacity_low,
+		   acpi_battery_units(battery));
 	seq_printf(seq, "capacity granularity 1:  %d %sh\n",
-		   (u32) bif->battery_capacity_granularity_1, units);
+		   battery->capacity_granularity_1,
+		   acpi_battery_units(battery));
 	seq_printf(seq, "capacity granularity 2:  %d %sh\n",
-		   (u32) bif->battery_capacity_granularity_2, units);
-	seq_printf(seq, "model number:            %s\n", bif->model_number);
-	seq_printf(seq, "serial number:           %s\n", bif->serial_number);
-	seq_printf(seq, "battery type:            %s\n", bif->battery_type);
-	seq_printf(seq, "OEM info:                %s\n", bif->oem_info);
-
+		   battery->capacity_granularity_2,
+		   acpi_battery_units(battery));
+	seq_printf(seq, "model number:            %s\n", battery->model_number);
+	seq_printf(seq, "serial number:           %s\n", battery->serial_number);
+	seq_printf(seq, "battery type:            %s\n", battery->type);
+	seq_printf(seq, "OEM info:                %s\n", battery->oem_info);
       end:
-
 	if (result)
 		seq_printf(seq, "ERROR: Unable to read battery info\n");
-
 	return result;
 }
 
 static int acpi_battery_print_state(struct seq_file *seq, int result)
 {
 	struct acpi_battery *battery = seq->private;
-	struct acpi_battery_state *bst = NULL;
-	char *units = "?";
 
 	if (result)
 		goto end;
 
-	if (acpi_battery_present(battery))
-		seq_printf(seq, "present:                 yes\n");
-	else {
-		seq_printf(seq, "present:                 no\n");
-		goto end;
-	}
-
-	bst = battery->bst_data.pointer;
-	if (!bst) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR, "BST buffer is NULL"));
-		result = -ENODEV;
+	seq_printf(seq, "present:                 %s\n",
+		   acpi_battery_present(battery)?"yes":"no");
+	if (!acpi_battery_present(battery))
 		goto end;
-	}
-
-	/* Battery Units */
-
-	units = acpi_battery_power_units(battery);
 
-	if (!(bst->state & 0x04))
-		seq_printf(seq, "capacity state:          ok\n");
-	else
-		seq_printf(seq, "capacity state:          critical\n");
-
-	if ((bst->state & 0x01) && (bst->state & 0x02)) {
+	seq_printf(seq, "capacity state:          %s\n",
+			(battery->state & 0x04)?"critical":"ok");
+	if ((battery->state & 0x01) && (battery->state & 0x02))
 		seq_printf(seq,
 			   "charging state:          charging/discharging\n");
-	} else if (bst->state & 0x01)
+	else if (battery->state & 0x01)
 		seq_printf(seq, "charging state:          discharging\n");
-	else if (bst->state & 0x02)
+	else if (battery->state & 0x02)
 		seq_printf(seq, "charging state:          charging\n");
-	else {
+	else
 		seq_printf(seq, "charging state:          charged\n");
-	}
 
-	if (bst->present_rate == ACPI_BATTERY_VALUE_UNKNOWN)
+	if (battery->current_now == ACPI_BATTERY_VALUE_UNKNOWN)
 		seq_printf(seq, "present rate:            unknown\n");
 	else
 		seq_printf(seq, "present rate:            %d %s\n",
-			   (u32) bst->present_rate, units);
+			   battery->current_now, acpi_battery_units(battery));
 
-	if (bst->remaining_capacity == ACPI_BATTERY_VALUE_UNKNOWN)
+	if (battery->capacity_now == ACPI_BATTERY_VALUE_UNKNOWN)
 		seq_printf(seq, "remaining capacity:      unknown\n");
 	else
 		seq_printf(seq, "remaining capacity:      %d %sh\n",
-			   (u32) bst->remaining_capacity, units);
-
-	if (bst->present_voltage == ACPI_BATTERY_VALUE_UNKNOWN)
+			   battery->capacity_now, acpi_battery_units(battery));
+	if (battery->voltage_now == ACPI_BATTERY_VALUE_UNKNOWN)
 		seq_printf(seq, "present voltage:         unknown\n");
 	else
 		seq_printf(seq, "present voltage:         %d mV\n",
-			   (u32) bst->present_voltage);
-
+			   battery->voltage_now);
       end:
-
-	if (result) {
+	if (result)
 		seq_printf(seq, "ERROR: Unable to read battery state\n");
-	}
 
 	return result;
 }
@@ -616,7 +523,6 @@ static int acpi_battery_print_state(stru
 static int acpi_battery_print_alarm(struct seq_file *seq, int result)
 {
 	struct acpi_battery *battery = seq->private;
-	char *units = "?";
 
 	if (result)
 		goto end;
@@ -625,189 +531,121 @@ static int acpi_battery_print_alarm(stru
 		seq_printf(seq, "present:                 no\n");
 		goto end;
 	}
-
-	/* Battery Units */
-
-	units = acpi_battery_power_units(battery);
-
 	seq_printf(seq, "alarm:                   ");
 	if (!battery->alarm)
 		seq_printf(seq, "unsupported\n");
 	else
-		seq_printf(seq, "%lu %sh\n", battery->alarm, units);
-
+		seq_printf(seq, "%u %sh\n", battery->alarm,
+				acpi_battery_units(battery));
       end:
-
 	if (result)
 		seq_printf(seq, "ERROR: Unable to read battery alarm\n");
-
 	return result;
 }
 
-static ssize_t
-acpi_battery_write_alarm(struct file *file,
-			 const char __user * buffer,
-			 size_t count, loff_t * ppos)
+static ssize_t acpi_battery_write_alarm(struct file *file,
+					const char __user * buffer,
+					size_t count, loff_t * ppos)
 {
 	int result = 0;
 	char alarm_string[12] = { '\0' };
 	struct seq_file *m = file->private_data;
 	struct acpi_battery *battery = m->private;
-	int update_result = ACPI_BATTERY_NONE_UPDATE;
 
 	if (!battery || (count > sizeof(alarm_string) - 1))
 		return -EINVAL;
-
-	mutex_lock(&battery->mutex);
-
-	result = acpi_battery_update(battery, 1, &update_result);
 	if (result) {
 		result = -ENODEV;
 		goto end;
 	}
-
 	if (!acpi_battery_present(battery)) {
 		result = -ENODEV;
 		goto end;
 	}
-
 	if (copy_from_user(alarm_string, buffer, count)) {
 		result = -EFAULT;
 		goto end;
 	}
-
 	alarm_string[count] = '\0';
-
-	result = acpi_battery_set_alarm(battery,
-					simple_strtoul(alarm_string, NULL, 0));
-	if (result)
-		goto end;
-
+	battery->alarm = simple_strtol(alarm_string, NULL, 0);
+	result = acpi_battery_set_alarm(battery);
       end:
-
-	acpi_battery_check_result(battery, result);
-
 	if (!result)
-		result = count;
-
-	mutex_unlock(&battery->mutex);
-
+		return count;
 	return result;
 }
 
 typedef int(*print_func)(struct seq_file *seq, int result);
-typedef int(*get_func)(struct acpi_battery *battery);
 
-static struct acpi_read_mux {
-	print_func print;
-	get_func get;
-} acpi_read_funcs[ACPI_BATTERY_NUMFILES] = {
-	{.get = acpi_battery_get_info, .print = acpi_battery_print_info},
-	{.get = acpi_battery_get_state, .print = acpi_battery_print_state},
-	{.get = acpi_battery_get_alarm, .print = acpi_battery_print_alarm},
+static print_func acpi_print_funcs[ACPI_BATTERY_NUMFILES] = {
+	acpi_battery_print_info,
+	acpi_battery_print_state,
+	acpi_battery_print_alarm,
 };
 
 static int acpi_battery_read(int fid, struct seq_file *seq)
 {
 	struct acpi_battery *battery = seq->private;
-	int result = 0;
-	int update_result = ACPI_BATTERY_NONE_UPDATE;
-	int update = 0;
-
-	mutex_lock(&battery->mutex);
-
-	update = (get_seconds() - battery->update_time[fid] >= update_time);
-	update = (update | battery->flags.update[fid]);
-
-	result = acpi_battery_update(battery, update, &update_result);
-	if (result)
-		goto end;
-
-	if (update_result == ACPI_BATTERY_EASY_UPDATE) {
-		result = acpi_read_funcs[fid].get(battery);
-		if (result)
-			goto end;
-	}
-
-      end:
-	result = acpi_read_funcs[fid].print(seq, result);
-	acpi_battery_check_result(battery, result);
-	battery->flags.update[fid] = result;
-	mutex_unlock(&battery->mutex);
-	return result;
-}
-
-static int acpi_battery_read_info(struct seq_file *seq, void *offset)
-{
-	return acpi_battery_read(ACPI_BATTERY_INFO, seq);
-}
-
-static int acpi_battery_read_state(struct seq_file *seq, void *offset)
-{
-	return acpi_battery_read(ACPI_BATTERY_STATE, seq);
-}
-
-static int acpi_battery_read_alarm(struct seq_file *seq, void *offset)
-{
-	return acpi_battery_read(ACPI_BATTERY_ALARM, seq);
-}
-
-static int acpi_battery_info_open_fs(struct inode *inode, struct file *file)
-{
-	return single_open(file, acpi_battery_read_info, PDE(inode)->data);
-}
-
-static int acpi_battery_state_open_fs(struct inode *inode, struct file *file)
-{
-	return single_open(file, acpi_battery_read_state, PDE(inode)->data);
+	int result = acpi_battery_update(battery);
+	return acpi_print_funcs[fid](seq, result);
 }
 
-static int acpi_battery_alarm_open_fs(struct inode *inode, struct file *file)
-{
-	return single_open(file, acpi_battery_read_alarm, PDE(inode)->data);
-}
+#define DECLARE_FILE_FUNCTIONS(_name) \
+static int acpi_battery_read_##_name(struct seq_file *seq, void *offset) \
+{ \
+	return acpi_battery_read(_name##_tag, seq); \
+} \
+static int acpi_battery_##_name##_open_fs(struct inode *inode, struct file *file) \
+{ \
+	return single_open(file, acpi_battery_read_##_name, PDE(inode)->data); \
+}
+
+DECLARE_FILE_FUNCTIONS(info);
+DECLARE_FILE_FUNCTIONS(state);
+DECLARE_FILE_FUNCTIONS(alarm);
+
+#undef DECLARE_FILE_FUNCTIONS
+
+#define FILE_DESCRIPTION_RO(_name) \
+	{ \
+	.name = __stringify(_name), \
+	.mode = S_IRUGO, \
+	.ops = { \
+		.open = acpi_battery_##_name##_open_fs, \
+		.read = seq_read, \
+		.llseek = seq_lseek, \
+		.release = single_release, \
+		.owner = THIS_MODULE, \
+		}, \
+	}
+
+#define FILE_DESCRIPTION_RW(_name) \
+	{ \
+	.name = __stringify(_name), \
+	.mode = S_IFREG | S_IRUGO | S_IWUSR, \
+	.ops = { \
+		.open = acpi_battery_##_name##_open_fs, \
+		.read = seq_read, \
+		.llseek = seq_lseek, \
+		.write = acpi_battery_write_##_name, \
+		.release = single_release, \
+		.owner = THIS_MODULE, \
+		}, \
+	}
 
 static struct battery_file {
 	struct file_operations ops;
 	mode_t mode;
 	char *name;
 } acpi_battery_file[] = {
-	{
-	.name = "info",
-	.mode = S_IRUGO,
-	.ops = {
-	.open = acpi_battery_info_open_fs,
-	.read = seq_read,
-	.llseek = seq_lseek,
-	.release = single_release,
-	.owner = THIS_MODULE,
-	},
-	},
-	{
-	.name = "state",
-	.mode = S_IRUGO,
-	.ops = {
-	.open = acpi_battery_state_open_fs,
-	.read = seq_read,
-	.llseek = seq_lseek,
-	.release = single_release,
-	.owner = THIS_MODULE,
-	},
-	},
-	{
-	.name = "alarm",
-	.mode = S_IFREG | S_IRUGO | S_IWUSR,
-	.ops = {
-	.open = acpi_battery_alarm_open_fs,
-	.read = seq_read,
-	.write = acpi_battery_write_alarm,
-	.llseek = seq_lseek,
-	.release = single_release,
-	.owner = THIS_MODULE,
-	},
-	},
+	FILE_DESCRIPTION_RO(info),
+	FILE_DESCRIPTION_RO(state),
+	FILE_DESCRIPTION_RW(alarm),
 };
 
+#undef FILE_DESCRIPTION_RO
+#undef FILE_DESCRIPTION_RW
+
 static int acpi_battery_add_fs(struct acpi_device *device)
 {
 	struct proc_dir_entry *entry = NULL;
@@ -832,25 +670,51 @@ static int acpi_battery_add_fs(struct ac
 			entry->owner = THIS_MODULE;
 		}
 	}
-
 	return 0;
 }
 
-static int acpi_battery_remove_fs(struct acpi_device *device)
+static void acpi_battery_remove_fs(struct acpi_device *device)
 {
 	int i;
-	if (acpi_device_dir(device)) {
-		for (i = 0; i < ACPI_BATTERY_NUMFILES; ++i) {
-			remove_proc_entry(acpi_battery_file[i].name,
+	if (!acpi_device_dir(device))
+		return;
+	for (i = 0; i < ACPI_BATTERY_NUMFILES; ++i)
+		remove_proc_entry(acpi_battery_file[i].name,
 				  acpi_device_dir(device));
-		}
-		remove_proc_entry(acpi_device_bid(device), acpi_battery_dir);
-		acpi_device_dir(device) = NULL;
-	}
 
-	return 0;
+	remove_proc_entry(acpi_device_bid(device), acpi_battery_dir);
+	acpi_device_dir(device) = NULL;
+}
+
+#endif
+
+static ssize_t acpi_battery_alarm_show(struct device *dev,
+					struct device_attribute *attr,
+					char *buf)
+{
+	struct acpi_battery *battery = to_acpi_battery(dev_get_drvdata(dev));
+	return sprintf(buf, "%d\n", battery->alarm * 1000);
+}
+
+static ssize_t acpi_battery_alarm_store(struct device *dev,
+					struct device_attribute *attr,
+					const char *buf, size_t count)
+{
+	unsigned long x;
+	struct acpi_battery *battery = to_acpi_battery(dev_get_drvdata(dev));
+	if (sscanf(buf, "%ld\n", &x) == 1)
+		battery->alarm = x/1000;
+	if (acpi_battery_present(battery))
+		acpi_battery_set_alarm(battery);
+	return count;
 }
 
+static struct device_attribute alarm_attr = {
+	.attr = {.name = "alarm", .mode = 0644, .owner = THIS_MODULE},
+	.show = acpi_battery_alarm_show,
+	.store = acpi_battery_alarm_store,
+};
+
 /* --------------------------------------------------------------------------
                                  Driver Interface
    -------------------------------------------------------------------------- */
@@ -858,33 +722,17 @@ static int acpi_battery_remove_fs(struct
 static void acpi_battery_notify(acpi_handle handle, u32 event, void *data)
 {
 	struct acpi_battery *battery = data;
-	struct acpi_device *device = NULL;
-
+	struct acpi_device *device;
 	if (!battery)
 		return;
-
 	device = battery->device;
-
-	switch (event) {
-	case ACPI_BATTERY_NOTIFY_STATUS:
-	case ACPI_BATTERY_NOTIFY_INFO:
-	case ACPI_NOTIFY_BUS_CHECK:
-	case ACPI_NOTIFY_DEVICE_CHECK:
-		device = battery->device;
-		acpi_battery_notify_update(battery);
-		acpi_bus_generate_proc_event(device, event,
+	acpi_battery_update(battery);
+	acpi_bus_generate_proc_event(device, event,
+				     acpi_battery_present(battery));
+	acpi_bus_generate_netlink_event(device->pnp.device_class,
+					device->dev.bus_id, event,
 					acpi_battery_present(battery));
-		acpi_bus_generate_netlink_event(device->pnp.device_class,
-						  device->dev.bus_id, event,
-						  acpi_battery_present(battery));
-		break;
-	default:
-		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
-				  "Unsupported event [0x%x]\n", event));
-		break;
-	}
-
-	return;
+	kobject_uevent(&battery->bat.dev->kobj, KOBJ_CHANGE);
 }
 
 static int acpi_battery_add(struct acpi_device *device)
@@ -892,33 +740,27 @@ static int acpi_battery_add(struct acpi_
 	int result = 0;
 	acpi_status status = 0;
 	struct acpi_battery *battery = NULL;
-
 	if (!device)
 		return -EINVAL;
-
 	battery = kzalloc(sizeof(struct acpi_battery), GFP_KERNEL);
 	if (!battery)
 		return -ENOMEM;
-
-	mutex_init(&battery->mutex);
-
-	mutex_lock(&battery->mutex);
-
 	battery->device = device;
 	strcpy(acpi_device_name(device), ACPI_BATTERY_DEVICE_NAME);
 	strcpy(acpi_device_class(device), ACPI_BATTERY_CLASS);
 	acpi_driver_data(device) = battery;
-
-	result = acpi_battery_get_status(battery);
-	if (result)
-		goto end;
-
-	battery->flags.init_update = 1;
-
+	mutex_init(&battery->lock);
+	acpi_battery_update(battery);
+#ifdef CONFIG_ACPI_PROCFS
 	result = acpi_battery_add_fs(device);
 	if (result)
 		goto end;
-
+#endif
+	battery->bat.name = acpi_device_bid(device);
+	battery->bat.type = POWER_SUPPLY_TYPE_BATTERY;
+	battery->bat.get_property = acpi_battery_get_property;
+	result = power_supply_register(&battery->device->dev, &battery->bat);
+	result = device_create_file(battery->bat.dev, &alarm_attr);
 	status = acpi_install_notify_handler(device->handle,
 					     ACPI_ALL_NOTIFY,
 					     acpi_battery_notify, battery);
@@ -927,20 +769,16 @@ static int acpi_battery_add(struct acpi_
 		result = -ENODEV;
 		goto end;
 	}
-
 	printk(KERN_INFO PREFIX "%s Slot [%s] (battery %s)\n",
 	       ACPI_BATTERY_DEVICE_NAME, acpi_device_bid(device),
 	       device->status.battery_present ? "present" : "absent");
-
       end:
-
 	if (result) {
+#ifdef CONFIG_ACPI_PROCFS
 		acpi_battery_remove_fs(device);
+#endif
 		kfree(battery);
 	}
-
-	mutex_unlock(&battery->mutex);
-
 	return result;
 }
 
@@ -951,27 +789,19 @@ static int acpi_battery_remove(struct ac
 
 	if (!device || !acpi_driver_data(device))
 		return -EINVAL;
-
 	battery = acpi_driver_data(device);
-
-	mutex_lock(&battery->mutex);
-
 	status = acpi_remove_notify_handler(device->handle,
 					    ACPI_ALL_NOTIFY,
 					    acpi_battery_notify);
-
+#ifdef CONFIG_ACPI_PROCFS
 	acpi_battery_remove_fs(device);
-
-	kfree(battery->bif_data.pointer);
-
-	kfree(battery->bst_data.pointer);
-
-	mutex_unlock(&battery->mutex);
-
-	mutex_destroy(&battery->mutex);
-
+#endif
+	if (battery->bat.dev) {
+		device_remove_file(battery->bat.dev, &alarm_attr);
+		power_supply_unregister(&battery->bat);
+	}
+	mutex_destroy(&battery->lock);
 	kfree(battery);
-
 	return 0;
 }
 
@@ -979,44 +809,48 @@ static int acpi_battery_remove(struct ac
 static int acpi_battery_resume(struct acpi_device *device)
 {
 	struct acpi_battery *battery;
-
 	if (!device)
 		return -EINVAL;
-
-	battery = device->driver_data;
-
-	battery->flags.init_update = 1;
-
+	battery = acpi_driver_data(device);
+	battery->update_time = 0;
 	return 0;
 }
 
+static struct acpi_driver acpi_battery_driver = {
+	.name = "battery",
+	.class = ACPI_BATTERY_CLASS,
+	.ids = battery_device_ids,
+	.ops = {
+		.add = acpi_battery_add,
+		.resume = acpi_battery_resume,
+		.remove = acpi_battery_remove,
+		},
+};
+
 static int __init acpi_battery_init(void)
 {
-	int result;
-
 	if (acpi_disabled)
 		return -ENODEV;
-
+#ifdef CONFIG_ACPI_PROCFS
 	acpi_battery_dir = acpi_lock_battery_dir();
 	if (!acpi_battery_dir)
 		return -ENODEV;
-
-	result = acpi_bus_register_driver(&acpi_battery_driver);
-	if (result < 0) {
+#endif
+	if (acpi_bus_register_driver(&acpi_battery_driver) < 0) {
+#ifdef CONFIG_ACPI_PROCFS
 		acpi_unlock_battery_dir(acpi_battery_dir);
+#endif
 		return -ENODEV;
 	}
-
 	return 0;
 }
 
 static void __exit acpi_battery_exit(void)
 {
 	acpi_bus_unregister_driver(&acpi_battery_driver);
-
+#ifdef CONFIG_ACPI_PROCFS
 	acpi_unlock_battery_dir(acpi_battery_dir);
-
-	return;
+#endif
 }
 
 module_init(acpi_battery_init);
diff -urpN linux-2.6.23-sabayon/drivers/acpi/bus.c testtry/drivers/acpi/bus.c
--- linux-2.6.23-sabayon/drivers/acpi/bus.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/bus.c	2007-10-15 14:51:53.000000000 +0000
@@ -284,15 +284,11 @@ DECLARE_WAIT_QUEUE_HEAD(acpi_bus_event_q
 
 extern int event_is_open;
 
-int acpi_bus_generate_proc_event(struct acpi_device *device, u8 type, int data)
+int acpi_bus_generate_proc_event4(const char *device_class, const char *bus_id, u8 type, int data)
 {
-	struct acpi_bus_event *event = NULL;
+	struct acpi_bus_event *event;
 	unsigned long flags = 0;
 
-
-	if (!device)
-		return -EINVAL;
-
 	/* drop event on the floor if no one's listening */
 	if (!event_is_open)
 		return 0;
@@ -301,8 +297,8 @@ int acpi_bus_generate_proc_event(struct 
 	if (!event)
 		return -ENOMEM;
 
-	strcpy(event->device_class, device->pnp.device_class);
-	strcpy(event->bus_id, device->pnp.bus_id);
+	strcpy(event->device_class, device_class);
+	strcpy(event->bus_id, bus_id);
 	event->type = type;
 	event->data = data;
 
@@ -313,6 +309,17 @@ int acpi_bus_generate_proc_event(struct 
 	wake_up_interruptible(&acpi_bus_event_queue);
 
 	return 0;
+
+}
+
+EXPORT_SYMBOL_GPL(acpi_bus_generate_proc_event4);
+
+int acpi_bus_generate_proc_event(struct acpi_device *device, u8 type, int data)
+{
+	if (!device)
+		return -EINVAL;
+	return acpi_bus_generate_proc_event4(device->pnp.device_class,
+					     device->pnp.bus_id, type, data);
 }
 
 EXPORT_SYMBOL(acpi_bus_generate_proc_event);
diff -urpN linux-2.6.23-sabayon/drivers/acpi/ec.c testtry/drivers/acpi/ec.c
--- linux-2.6.23-sabayon/drivers/acpi/ec.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/ec.c	2007-10-15 14:51:53.000000000 +0000
@@ -121,6 +121,7 @@ static struct acpi_ec {
 	atomic_t event_count;
 	wait_queue_head_t wait;
 	struct list_head list;
+	u8 handlers_installed;
 } *boot_ec, *first_ec;
 
 /* --------------------------------------------------------------------------
@@ -425,7 +426,7 @@ int acpi_ec_add_query_handler(struct acp
 	handler->func = func;
 	handler->data = data;
 	mutex_lock(&ec->lock);
-	list_add_tail(&handler->node, &ec->list);
+	list_add(&handler->node, &ec->list);
 	mutex_unlock(&ec->lock);
 	return 0;
 }
@@ -440,7 +441,6 @@ void acpi_ec_remove_query_handler(struct
 		if (query_bit == handler->query_bit) {
 			list_del(&handler->node);
 			kfree(handler);
-			break;
 		}
 	}
 	mutex_unlock(&ec->lock);
@@ -680,32 +680,50 @@ ec_parse_device(acpi_handle handle, u32 
 	status = acpi_evaluate_integer(handle, "_GPE", NULL, &ec->gpe);
 	if (ACPI_FAILURE(status))
 		return status;
-
 	/* Find and register all query methods */
 	acpi_walk_namespace(ACPI_TYPE_METHOD, handle, 1,
 			    acpi_ec_register_query_methods, ec, NULL);
-
 	/* Use the global lock for all EC transactions? */
 	acpi_evaluate_integer(handle, "_GLK", NULL, &ec->global_lock);
-
 	ec->handle = handle;
-
-	printk(KERN_INFO PREFIX "GPE = 0x%lx, I/O: command/status = 0x%lx, data = 0x%lx\n",
-			  ec->gpe, ec->command_addr, ec->data_addr);
-
 	return AE_CTRL_TERMINATE;
 }
 
+static void ec_remove_handlers(struct acpi_ec *ec)
+{
+	if (ACPI_FAILURE(acpi_remove_address_space_handler(ec->handle,
+				ACPI_ADR_SPACE_EC, &acpi_ec_space_handler)))
+		printk(KERN_ERR PREFIX "failed to remove space handler\n");
+	if (ACPI_FAILURE(acpi_remove_gpe_handler(NULL, ec->gpe,
+				&acpi_ec_gpe_handler)))
+		printk(KERN_ERR PREFIX "failed to remove gpe handler\n");
+	ec->handlers_installed = 0;
+}
+
 static int acpi_ec_add(struct acpi_device *device)
 {
 	struct acpi_ec *ec = NULL;
 
 	if (!device)
 		return -EINVAL;
-
 	strcpy(acpi_device_name(device), ACPI_EC_DEVICE_NAME);
 	strcpy(acpi_device_class(device), ACPI_EC_CLASS);
 
+	/* Check for boot EC */
+	if (boot_ec) {
+		if (boot_ec->handle == device->handle) {
+			/* Pre-loaded EC from DSDT, just move pointer */
+			ec = boot_ec;
+			boot_ec = NULL;
+			goto end;
+		} else if (boot_ec->handle == ACPI_ROOT_OBJECT) {
+			/* ECDT-based EC, time to shut it down */
+			ec_remove_handlers(boot_ec);
+			kfree(boot_ec);
+			first_ec = boot_ec = NULL;
+		}
+	}
+
 	ec = make_acpi_ec();
 	if (!ec)
 		return -ENOMEM;
@@ -715,25 +733,14 @@ static int acpi_ec_add(struct acpi_devic
 		kfree(ec);
 		return -EINVAL;
 	}
-
-	/* Check if we found the boot EC */
-	if (boot_ec) {
-		if (boot_ec->gpe == ec->gpe) {
-			/* We might have incorrect info for GL at boot time */
-			mutex_lock(&boot_ec->lock);
-			boot_ec->global_lock = ec->global_lock;
-			/* Copy handlers from new ec into boot ec */
-			list_splice(&ec->list, &boot_ec->list);
-			mutex_unlock(&boot_ec->lock);
-			kfree(ec);
-			ec = boot_ec;
-		}
-	} else
-		first_ec = ec;
 	ec->handle = device->handle;
+      end:
+	if (!first_ec)
+		first_ec = ec;
 	acpi_driver_data(device) = ec;
-
 	acpi_ec_add_fs(device);
+	printk(KERN_INFO PREFIX "GPE = 0x%lx, I/O: command/status = 0x%lx, data = 0x%lx\n",
+			  ec->gpe, ec->command_addr, ec->data_addr);
 	return 0;
 }
 
@@ -756,10 +763,7 @@ static int acpi_ec_remove(struct acpi_de
 	acpi_driver_data(device) = NULL;
 	if (ec == first_ec)
 		first_ec = NULL;
-
-	/* Don't touch boot EC */
-	if (boot_ec != ec)
-		kfree(ec);
+	kfree(ec);
 	return 0;
 }
 
@@ -789,6 +793,8 @@ ec_parse_io_ports(struct acpi_resource *
 static int ec_install_handlers(struct acpi_ec *ec)
 {
 	acpi_status status;
+	if (ec->handlers_installed)
+		return 0;
 	status = acpi_install_gpe_handler(NULL, ec->gpe,
 					  ACPI_GPE_EDGE_TRIGGERED,
 					  &acpi_ec_gpe_handler, ec);
@@ -807,6 +813,7 @@ static int ec_install_handlers(struct ac
 		return -ENODEV;
 	}
 
+	ec->handlers_installed = 1;
 	return 0;
 }
 
@@ -823,41 +830,22 @@ static int acpi_ec_start(struct acpi_dev
 	if (!ec)
 		return -EINVAL;
 
-	/* Boot EC is already working */
-	if (ec != boot_ec)
-		ret = ec_install_handlers(ec);
+	ret = ec_install_handlers(ec);
 
 	/* EC is fully operational, allow queries */
 	atomic_set(&ec->query_pending, 0);
-
 	return ret;
 }
 
 static int acpi_ec_stop(struct acpi_device *device, int type)
 {
-	acpi_status status;
 	struct acpi_ec *ec;
-
 	if (!device)
 		return -EINVAL;
-
 	ec = acpi_driver_data(device);
 	if (!ec)
 		return -EINVAL;
-
-	/* Don't touch boot EC */
-	if (ec == boot_ec)
-		return 0;
-
-	status = acpi_remove_address_space_handler(ec->handle,
-						   ACPI_ADR_SPACE_EC,
-						   &acpi_ec_space_handler);
-	if (ACPI_FAILURE(status))
-		return -ENODEV;
-
-	status = acpi_remove_gpe_handler(NULL, ec->gpe, &acpi_ec_gpe_handler);
-	if (ACPI_FAILURE(status))
-		return -ENODEV;
+	ec_remove_handlers(ec);
 
 	return 0;
 }
@@ -877,7 +865,7 @@ int __init acpi_ec_ecdt_probe(void)
 	status = acpi_get_table(ACPI_SIG_ECDT, 1,
 				(struct acpi_table_header **)&ecdt_ptr);
 	if (ACPI_SUCCESS(status)) {
-		printk(KERN_INFO PREFIX "EC description table is found, configuring boot EC\n\n");
+		printk(KERN_INFO PREFIX "EC description table is found, configuring boot EC\n");
 		boot_ec->command_addr = ecdt_ptr->control.address;
 		boot_ec->data_addr = ecdt_ptr->data.address;
 		boot_ec->gpe = ecdt_ptr->gpe;
@@ -899,7 +887,6 @@ int __init acpi_ec_ecdt_probe(void)
       error:
 	kfree(boot_ec);
 	boot_ec = NULL;
-
 	return -ENODEV;
 }
 
diff -urpN linux-2.6.23-sabayon/drivers/acpi/hardware/hwsleep.c testtry/drivers/acpi/hardware/hwsleep.c
--- linux-2.6.23-sabayon/drivers/acpi/hardware/hwsleep.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/hardware/hwsleep.c	2007-10-15 14:51:53.000000000 +0000
@@ -234,15 +234,11 @@ acpi_status acpi_enter_sleep_state_prep(
 				"While executing method _SST"));
 	}
 
-	/*
-	 * 1) Disable/Clear all GPEs
-	 */
+	/* Disable/Clear all GPEs */
+
 	status = acpi_hw_disable_all_gpes();
-	if (ACPI_FAILURE(status)) {
-		return_ACPI_STATUS(status);
-	}
 
-	return_ACPI_STATUS(AE_OK);
+	return_ACPI_STATUS(status);
 }
 
 ACPI_EXPORT_SYMBOL(acpi_enter_sleep_state_prep)
diff -urpN linux-2.6.23-sabayon/drivers/acpi/Kconfig testtry/drivers/acpi/Kconfig
--- linux-2.6.23-sabayon/drivers/acpi/Kconfig	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/Kconfig	2007-10-15 14:51:53.000000000 +0000
@@ -88,7 +88,7 @@ config ACPI_PROC_EVENT
 
 config ACPI_AC
 	tristate "AC Adapter"
-	depends on X86
+	depends on X86 && POWER_SUPPLY
 	default y
 	help
 	  This driver adds support for the AC Adapter object, which indicates
@@ -97,7 +97,7 @@ config ACPI_AC
 
 config ACPI_BATTERY
 	tristate "Battery"
-	depends on X86
+	depends on X86 && POWER_SUPPLY
 	default y
 	help
 	  This driver adds support for battery information through
@@ -117,6 +117,7 @@ config ACPI_BUTTON
 config ACPI_VIDEO
 	tristate "Video"
 	depends on X86 && BACKLIGHT_CLASS_DEVICE && VIDEO_OUTPUT_CONTROL
+	depends on INPUT
 	help
 	  This driver implement the ACPI Extensions For Display Adapters
 	  for integrated graphics devices on motherboard, as specified in
@@ -349,12 +350,11 @@ config ACPI_HOTPLUG_MEMORY
 		$>modprobe acpi_memhotplug 
 
 config ACPI_SBS
-	tristate "Smart Battery System (EXPERIMENTAL)"
+	tristate "Smart Battery System"
 	depends on X86
-	depends on EXPERIMENTAL
+	depends on POWER_SUPPLY
 	help
-	  This driver adds support for the Smart Battery System.
-	  A "Smart Battery" is quite old and quite rare compared
-	  to today's ACPI "Control Method" battery.
+	  This driver adds support for the Smart Battery System, another
+	  type of access to battery information, found on some laptops.
 
 endif	# ACPI
diff -urpN linux-2.6.23-sabayon/drivers/acpi/Makefile testtry/drivers/acpi/Makefile
--- linux-2.6.23-sabayon/drivers/acpi/Makefile	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/Makefile	2007-10-15 14:51:53.000000000 +0000
@@ -60,3 +60,4 @@ obj-$(CONFIG_ACPI_TOSHIBA)	+= toshiba_ac
 obj-$(CONFIG_ACPI_HOTPLUG_MEMORY)	+= acpi_memhotplug.o
 obj-y				+= cm_sbs.o
 obj-$(CONFIG_ACPI_SBS)		+= sbs.o
+obj-$(CONFIG_ACPI_SBS)		+= sbshc.o
diff -urpN linux-2.6.23-sabayon/drivers/acpi/sbs.c testtry/drivers/acpi/sbs.c
--- linux-2.6.23-sabayon/drivers/acpi/sbs.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/sbs.c	2007-10-15 14:51:53.000000000 +0000
@@ -1,6 +1,8 @@
 /*
- *  acpi_sbs.c - ACPI Smart Battery System Driver ($Revision: 1.16 $)
+ *  sbs.c - ACPI Smart Battery System Driver ($Revision: 2.0 $)
  *
+ *  Copyright (c) 2007 Alexey Starikovskiy <astarikovskiy@suse.de>
+ *  Copyright (c) 2005-2007 Vladimir Lebedev <vladimir.p.lebedev@intel.com>
  *  Copyright (c) 2005 Rich Townsend <rhdt@bartol.udel.edu>
  *
  * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -26,15 +28,22 @@
 #include <linux/module.h>
 #include <linux/moduleparam.h>
 #include <linux/kernel.h>
+
+#ifdef CONFIG_ACPI_PROCFS
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
 #include <asm/uaccess.h>
+#endif
+
 #include <linux/acpi.h>
 #include <linux/timer.h>
 #include <linux/jiffies.h>
 #include <linux/delay.h>
 
-#define ACPI_SBS_COMPONENT		0x00080000
+#include <linux/power_supply.h>
+
+#include "sbshc.h"
+
 #define ACPI_SBS_CLASS			"sbs"
 #define ACPI_AC_CLASS			"ac_adapter"
 #define ACPI_BATTERY_CLASS		"battery"
@@ -44,836 +53,436 @@
 #define ACPI_SBS_FILE_ALARM		"alarm"
 #define ACPI_BATTERY_DIR_NAME		"BAT%i"
 #define ACPI_AC_DIR_NAME		"AC0"
-#define ACPI_SBC_SMBUS_ADDR		0x9
-#define ACPI_SBSM_SMBUS_ADDR		0xa
-#define ACPI_SB_SMBUS_ADDR		0xb
-#define ACPI_SBS_AC_NOTIFY_STATUS	0x80
-#define ACPI_SBS_BATTERY_NOTIFY_STATUS	0x80
-#define ACPI_SBS_BATTERY_NOTIFY_INFO	0x81
 
-#define _COMPONENT			ACPI_SBS_COMPONENT
+enum acpi_sbs_device_addr {
+	ACPI_SBS_CHARGER = 0x9,
+	ACPI_SBS_MANAGER = 0xa,
+	ACPI_SBS_BATTERY = 0xb,
+};
 
-ACPI_MODULE_NAME("sbs");
+#define ACPI_SBS_NOTIFY_STATUS		0x80
+#define ACPI_SBS_NOTIFY_INFO		0x81
 
-MODULE_AUTHOR("Rich Townsend");
+MODULE_AUTHOR("Alexey Starikovskiy <astarikovskiy@suse.de>");
 MODULE_DESCRIPTION("Smart Battery System ACPI interface driver");
 MODULE_LICENSE("GPL");
 
-#define	xmsleep(t)	msleep(t)
-
-#define ACPI_EC_SMB_PRTCL	0x00	/* protocol, PEC */
-
-#define ACPI_EC_SMB_STS		0x01	/* status */
-#define ACPI_EC_SMB_ADDR	0x02	/* address */
-#define ACPI_EC_SMB_CMD		0x03	/* command */
-#define ACPI_EC_SMB_DATA	0x04	/* 32 data registers */
-#define ACPI_EC_SMB_BCNT	0x24	/* number of data bytes */
-
-#define ACPI_EC_SMB_STS_DONE	0x80
-#define ACPI_EC_SMB_STS_STATUS	0x1f
-
-#define ACPI_EC_SMB_PRTCL_WRITE		0x00
-#define ACPI_EC_SMB_PRTCL_READ		0x01
-#define ACPI_EC_SMB_PRTCL_WORD_DATA	0x08
-#define ACPI_EC_SMB_PRTCL_BLOCK_DATA	0x0a
-
-#define ACPI_EC_SMB_TRANSACTION_SLEEP	1
-#define ACPI_EC_SMB_ACCESS_SLEEP1	1
-#define ACPI_EC_SMB_ACCESS_SLEEP2	10
-
-#define	DEF_CAPACITY_UNIT	3
-#define	MAH_CAPACITY_UNIT	1
-#define	MWH_CAPACITY_UNIT	2
-#define	CAPACITY_UNIT		DEF_CAPACITY_UNIT
-
-#define	REQUEST_UPDATE_MODE	1
-#define	QUEUE_UPDATE_MODE	2
-
-#define	DATA_TYPE_COMMON	0
-#define	DATA_TYPE_INFO		1
-#define	DATA_TYPE_STATE		2
-#define	DATA_TYPE_ALARM		3
-#define	DATA_TYPE_AC_STATE	4
+static unsigned int cache_time = 1000;
+module_param(cache_time, uint, 0644);
+MODULE_PARM_DESC(cache_time, "cache time in milliseconds");
 
 extern struct proc_dir_entry *acpi_lock_ac_dir(void);
 extern struct proc_dir_entry *acpi_lock_battery_dir(void);
 extern void acpi_unlock_ac_dir(struct proc_dir_entry *acpi_ac_dir);
 extern void acpi_unlock_battery_dir(struct proc_dir_entry *acpi_battery_dir);
 
-#define	MAX_SBS_BAT			4
+#define MAX_SBS_BAT			4
 #define ACPI_SBS_BLOCK_MAX		32
 
-#define ACPI_SBS_SMBUS_READ		1
-#define ACPI_SBS_SMBUS_WRITE		2
-
-#define ACPI_SBS_WORD_DATA		1
-#define ACPI_SBS_BLOCK_DATA		2
-
-#define	UPDATE_DELAY	10
-
-/* 0 - every time, > 0 - by update_time */
-static unsigned int update_time = 120;
-
-static unsigned int capacity_mode = CAPACITY_UNIT;
-
-module_param(update_time, uint, 0644);
-module_param(capacity_mode, uint, 0444);
-
-static int acpi_sbs_add(struct acpi_device *device);
-static int acpi_sbs_remove(struct acpi_device *device, int type);
-static int acpi_sbs_resume(struct acpi_device *device);
-
 static const struct acpi_device_id sbs_device_ids[] = {
-	{"ACPI0001", 0},
-	{"ACPI0005", 0},
+	{"ACPI0002", 0},
 	{"", 0},
 };
 MODULE_DEVICE_TABLE(acpi, sbs_device_ids);
 
-static struct acpi_driver acpi_sbs_driver = {
-	.name = "sbs",
-	.class = ACPI_SBS_CLASS,
-	.ids = sbs_device_ids,
-	.ops = {
-		.add = acpi_sbs_add,
-		.remove = acpi_sbs_remove,
-		.resume = acpi_sbs_resume,
-		},
-};
-
-struct acpi_ac {
-	int ac_present;
-};
-
-struct acpi_battery_info {
-	int capacity_mode;
-	s16 full_charge_capacity;
-	s16 design_capacity;
-	s16 design_voltage;
-	int vscale;
-	int ipscale;
-	s16 serial_number;
-	char manufacturer_name[ACPI_SBS_BLOCK_MAX + 3];
-	char device_name[ACPI_SBS_BLOCK_MAX + 3];
-	char device_chemistry[ACPI_SBS_BLOCK_MAX + 3];
-};
-
-struct acpi_battery_state {
-	s16 voltage;
-	s16 amperage;
-	s16 remaining_capacity;
-	s16 battery_state;
-};
-
-struct acpi_battery_alarm {
-	s16 remaining_capacity;
-};
-
 struct acpi_battery {
-	int alive;
-	int id;
-	int init_state;
-	int battery_present;
+	struct power_supply bat;
 	struct acpi_sbs *sbs;
-	struct acpi_battery_info info;
-	struct acpi_battery_state state;
-	struct acpi_battery_alarm alarm;
-	struct proc_dir_entry *battery_entry;
+#ifdef CONFIG_ACPI_PROCFS
+	struct proc_dir_entry *proc_entry;
+#endif
+	unsigned long update_time;
+	char name[8];
+	char manufacturer_name[ACPI_SBS_BLOCK_MAX];
+	char device_name[ACPI_SBS_BLOCK_MAX];
+	char device_chemistry[ACPI_SBS_BLOCK_MAX];
+	u16 alarm_capacity;
+	u16 full_charge_capacity;
+	u16 design_capacity;
+	u16 design_voltage;
+	u16 serial_number;
+	u16 cycle_count;
+	u16 temp_now;
+	u16 voltage_now;
+	s16 current_now;
+	s16 current_avg;
+	u16 capacity_now;
+	u16 state_of_charge;
+	u16 state;
+	u16 mode;
+	u16 spec;
+	u8 id;
+	u8 present:1;
 };
 
+#define to_acpi_battery(x) container_of(x, struct acpi_battery, bat);
+
 struct acpi_sbs {
-	int base;
+	struct power_supply charger;
 	struct acpi_device *device;
-	struct mutex mutex;
-	int sbsm_present;
-	int sbsm_batteries_supported;
-	struct proc_dir_entry *ac_entry;
-	struct acpi_ac ac;
+	struct acpi_smb_hc *hc;
+	struct mutex lock;
+#ifdef CONFIG_ACPI_PROCFS
+	struct proc_dir_entry *charger_entry;
+#endif
 	struct acpi_battery battery[MAX_SBS_BAT];
-	int zombie;
-	struct timer_list update_timer;
-	int run_cnt;
-	int update_proc_flg;
-};
-
-static int acpi_sbs_update_run(struct acpi_sbs *sbs, int id, int data_type);
-static void acpi_sbs_update_time(void *data);
-
-union sbs_rw_data {
-	u16 word;
-	u8 block[ACPI_SBS_BLOCK_MAX + 2];
+	u8 batteries_supported:4;
+	u8 manager_present:1;
+	u8 charger_present:1;
 };
 
-static int acpi_ec_sbs_access(struct acpi_sbs *sbs, u16 addr,
-			      char read_write, u8 command, int size,
-			      union sbs_rw_data *data);
-
-/* --------------------------------------------------------------------------
-                               SMBus Communication
-   -------------------------------------------------------------------------- */
+#define to_acpi_sbs(x) container_of(x, struct acpi_sbs, charger)
 
-static int acpi_ec_sbs_read(struct acpi_sbs *sbs, u8 address, u8 * data)
+static inline int battery_scale(int log)
 {
-	u8 val;
-	int err;
-
-	err = ec_read(sbs->base + address, &val);
-	if (!err) {
-		*data = val;
-	}
-	xmsleep(ACPI_EC_SMB_TRANSACTION_SLEEP);
-	return (err);
+	int scale = 1;
+	while (log--)
+		scale *= 10;
+	return scale;
 }
 
-static int acpi_ec_sbs_write(struct acpi_sbs *sbs, u8 address, u8 data)
+static inline int acpi_battery_vscale(struct acpi_battery *battery)
 {
-	int err;
-
-	err = ec_write(sbs->base + address, data);
-	return (err);
-}
-
-static int
-acpi_ec_sbs_access(struct acpi_sbs *sbs, u16 addr,
-		   char read_write, u8 command, int size,
-		   union sbs_rw_data *data)
-{
-	unsigned char protocol, len = 0, temp[2] = { 0, 0 };
-	int i;
-
-	if (read_write == ACPI_SBS_SMBUS_READ) {
-		protocol = ACPI_EC_SMB_PRTCL_READ;
-	} else {
-		protocol = ACPI_EC_SMB_PRTCL_WRITE;
-	}
-
-	switch (size) {
-
-	case ACPI_SBS_WORD_DATA:
-		acpi_ec_sbs_write(sbs, ACPI_EC_SMB_CMD, command);
-		if (read_write == ACPI_SBS_SMBUS_WRITE) {
-			acpi_ec_sbs_write(sbs, ACPI_EC_SMB_DATA, data->word);
-			acpi_ec_sbs_write(sbs, ACPI_EC_SMB_DATA + 1,
-					  data->word >> 8);
-		}
-		protocol |= ACPI_EC_SMB_PRTCL_WORD_DATA;
-		break;
-	case ACPI_SBS_BLOCK_DATA:
-		acpi_ec_sbs_write(sbs, ACPI_EC_SMB_CMD, command);
-		if (read_write == ACPI_SBS_SMBUS_WRITE) {
-			len = min_t(u8, data->block[0], 32);
-			acpi_ec_sbs_write(sbs, ACPI_EC_SMB_BCNT, len);
-			for (i = 0; i < len; i++)
-				acpi_ec_sbs_write(sbs, ACPI_EC_SMB_DATA + i,
-						  data->block[i + 1]);
-		}
-		protocol |= ACPI_EC_SMB_PRTCL_BLOCK_DATA;
-		break;
-	default:
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"unsupported transaction %d", size));
-		return (-1);
-	}
-
-	acpi_ec_sbs_write(sbs, ACPI_EC_SMB_ADDR, addr << 1);
-	acpi_ec_sbs_write(sbs, ACPI_EC_SMB_PRTCL, protocol);
-
-	acpi_ec_sbs_read(sbs, ACPI_EC_SMB_STS, temp);
-
-	if (~temp[0] & ACPI_EC_SMB_STS_DONE) {
-		xmsleep(ACPI_EC_SMB_ACCESS_SLEEP1);
-		acpi_ec_sbs_read(sbs, ACPI_EC_SMB_STS, temp);
-	}
-	if (~temp[0] & ACPI_EC_SMB_STS_DONE) {
-		xmsleep(ACPI_EC_SMB_ACCESS_SLEEP2);
-		acpi_ec_sbs_read(sbs, ACPI_EC_SMB_STS, temp);
-	}
-	if ((~temp[0] & ACPI_EC_SMB_STS_DONE)
-	    || (temp[0] & ACPI_EC_SMB_STS_STATUS)) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"transaction %d error", size));
-		return (-1);
-	}
-
-	if (read_write == ACPI_SBS_SMBUS_WRITE) {
-		return (0);
-	}
-
-	switch (size) {
-
-	case ACPI_SBS_WORD_DATA:
-		acpi_ec_sbs_read(sbs, ACPI_EC_SMB_DATA, temp);
-		acpi_ec_sbs_read(sbs, ACPI_EC_SMB_DATA + 1, temp + 1);
-		data->word = (temp[1] << 8) | temp[0];
-		break;
-
-	case ACPI_SBS_BLOCK_DATA:
-		len = 0;
-		acpi_ec_sbs_read(sbs, ACPI_EC_SMB_BCNT, &len);
-		len = min_t(u8, len, 32);
-		for (i = 0; i < len; i++)
-			acpi_ec_sbs_read(sbs, ACPI_EC_SMB_DATA + i,
-					 data->block + i + 1);
-		data->block[0] = len;
-		break;
-	default:
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"unsupported transaction %d", size));
-		return (-1);
-	}
-
-	return (0);
-}
-
-static int
-acpi_sbs_read_word(struct acpi_sbs *sbs, int addr, int func, u16 * word)
-{
-	union sbs_rw_data data;
-	int result = 0;
-
-	result = acpi_ec_sbs_access(sbs, addr,
-				    ACPI_SBS_SMBUS_READ, func,
-				    ACPI_SBS_WORD_DATA, &data);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_ec_sbs_access() failed"));
-	} else {
-		*word = data.word;
-	}
-
-	return result;
+	return battery_scale((battery->spec & 0x0f00) >> 8);
 }
 
-static int
-acpi_sbs_read_str(struct acpi_sbs *sbs, int addr, int func, char *str)
+static inline int acpi_battery_ipscale(struct acpi_battery *battery)
 {
-	union sbs_rw_data data;
-	int result = 0;
-
-	result = acpi_ec_sbs_access(sbs, addr,
-				    ACPI_SBS_SMBUS_READ, func,
-				    ACPI_SBS_BLOCK_DATA, &data);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_ec_sbs_access() failed"));
-	} else {
-		strncpy(str, (const char *)data.block + 1, data.block[0]);
-		str[data.block[0]] = 0;
-	}
-
-	return result;
+	return battery_scale((battery->spec & 0xf000) >> 12);
 }
 
-static int
-acpi_sbs_write_word(struct acpi_sbs *sbs, int addr, int func, int word)
+static inline int acpi_battery_mode(struct acpi_battery *battery)
 {
-	union sbs_rw_data data;
-	int result = 0;
-
-	data.word = word;
-
-	result = acpi_ec_sbs_access(sbs, addr,
-				    ACPI_SBS_SMBUS_WRITE, func,
-				    ACPI_SBS_WORD_DATA, &data);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_ec_sbs_access() failed"));
-	}
-
-	return result;
+	return (battery->mode & 0x8000);
 }
 
-static int sbs_zombie(struct acpi_sbs *sbs)
+static inline int acpi_battery_scale(struct acpi_battery *battery)
 {
-	return (sbs->zombie);
+	return (acpi_battery_mode(battery) ? 10 : 1) *
+	    acpi_battery_ipscale(battery);
 }
 
-static int sbs_mutex_lock(struct acpi_sbs *sbs)
+static int sbs_get_ac_property(struct power_supply *psy,
+			       enum power_supply_property psp,
+			       union power_supply_propval *val)
 {
-	if (sbs_zombie(sbs)) {
-		return -ENODEV;
+	struct acpi_sbs *sbs = to_acpi_sbs(psy);
+	switch (psp) {
+	case POWER_SUPPLY_PROP_ONLINE:
+		val->intval = sbs->charger_present;
+		break;
+	default:
+		return -EINVAL;
 	}
-	mutex_lock(&sbs->mutex);
 	return 0;
 }
 
-static void sbs_mutex_unlock(struct acpi_sbs *sbs)
+static int acpi_battery_technology(struct acpi_battery *battery)
 {
-	mutex_unlock(&sbs->mutex);
-}
-
-/* --------------------------------------------------------------------------
-                            Smart Battery System Management
-   -------------------------------------------------------------------------- */
-
-static int acpi_check_update_proc(struct acpi_sbs *sbs)
+	if (!strcasecmp("NiCd", battery->device_chemistry))
+		return POWER_SUPPLY_TECHNOLOGY_NiCd;
+	if (!strcasecmp("NiMH", battery->device_chemistry))
+		return POWER_SUPPLY_TECHNOLOGY_NiMH;
+	if (!strcasecmp("LION", battery->device_chemistry))
+		return POWER_SUPPLY_TECHNOLOGY_LION;
+	if (!strcasecmp("LiP", battery->device_chemistry))
+		return POWER_SUPPLY_TECHNOLOGY_LIPO;
+	return POWER_SUPPLY_TECHNOLOGY_UNKNOWN;
+}
+
+static int acpi_sbs_battery_get_property(struct power_supply *psy,
+					 enum power_supply_property psp,
+					 union power_supply_propval *val)
 {
-	acpi_status status = AE_OK;
+	struct acpi_battery *battery = to_acpi_battery(psy);
 
-	if (update_time == 0) {
-		sbs->update_proc_flg = 0;
-		return 0;
-	}
-	if (sbs->update_proc_flg == 0) {
-		status = acpi_os_execute(OSL_GPE_HANDLER,
-					 acpi_sbs_update_time, sbs);
-		if (status != AE_OK) {
-			ACPI_EXCEPTION((AE_INFO, status,
-					"acpi_os_execute() failed"));
-			return 1;
-		}
-		sbs->update_proc_flg = 1;
+	if ((!battery->present) && psp != POWER_SUPPLY_PROP_PRESENT)
+		return -ENODEV;
+	switch (psp) {
+	case POWER_SUPPLY_PROP_STATUS:
+		if (battery->current_now < 0)
+			val->intval = POWER_SUPPLY_STATUS_DISCHARGING;
+		else if (battery->current_now > 0)
+			val->intval = POWER_SUPPLY_STATUS_CHARGING;
+		else
+			val->intval = POWER_SUPPLY_STATUS_FULL;
+		break;
+	case POWER_SUPPLY_PROP_PRESENT:
+		val->intval = battery->present;
+		break;
+	case POWER_SUPPLY_PROP_TECHNOLOGY:
+		val->intval = acpi_battery_technology(battery);
+		break;
+	case POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN:
+		val->intval = battery->design_voltage *
+			acpi_battery_vscale(battery) * 1000;
+		break;
+	case POWER_SUPPLY_PROP_VOLTAGE_NOW:
+		val->intval = battery->voltage_now *
+				acpi_battery_vscale(battery) * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CURRENT_NOW:
+		val->intval = abs(battery->current_now) *
+				acpi_battery_ipscale(battery) * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CURRENT_AVG:
+		val->intval = abs(battery->current_avg) *
+				acpi_battery_ipscale(battery) * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CAPACITY:
+		val->intval = battery->state_of_charge;
+		break;
+	case POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN:
+	case POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN:
+		val->intval = battery->design_capacity *
+			acpi_battery_scale(battery) * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CHARGE_FULL:
+	case POWER_SUPPLY_PROP_ENERGY_FULL:
+		val->intval = battery->full_charge_capacity *
+			acpi_battery_scale(battery) * 1000;
+		break;
+	case POWER_SUPPLY_PROP_CHARGE_NOW:
+	case POWER_SUPPLY_PROP_ENERGY_NOW:
+		val->intval = battery->capacity_now *
+				acpi_battery_scale(battery) * 1000;
+		break;
+	case POWER_SUPPLY_PROP_TEMP:
+		val->intval = battery->temp_now - 2730;	// dK -> dC
+		break;
+	case POWER_SUPPLY_PROP_MODEL_NAME:
+		val->strval = battery->device_name;
+		break;
+	case POWER_SUPPLY_PROP_MANUFACTURER:
+		val->strval = battery->manufacturer_name;
+		break;
+	default:
+		return -EINVAL;
 	}
 	return 0;
 }
 
-static int acpi_sbs_generate_event(struct acpi_device *device,
-				   int event, int state, char *bid, char *class)
-{
-	char bid_saved[5];
-	char class_saved[20];
-	int result = 0;
-
-	strcpy(bid_saved, acpi_device_bid(device));
-	strcpy(class_saved, acpi_device_class(device));
-
-	strcpy(acpi_device_bid(device), bid);
-	strcpy(acpi_device_class(device), class);
-
-	result = acpi_bus_generate_proc_event(device, event, state);
-
-	strcpy(acpi_device_bid(device), bid_saved);
-	strcpy(acpi_device_class(device), class_saved);
-
-	acpi_bus_generate_netlink_event(class, bid, event, state);
-	return result;
-}
-
-static int acpi_battery_get_present(struct acpi_battery *battery)
-{
-	s16 state;
-	int result = 0;
-	int is_present = 0;
-
-	result = acpi_sbs_read_word(battery->sbs,
-				    ACPI_SBSM_SMBUS_ADDR, 0x01, &state);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-	}
-	if (!result) {
-		is_present = (state & 0x000f) & (1 << battery->id);
-	}
-	battery->battery_present = is_present;
+static enum power_supply_property sbs_ac_props[] = {
+	POWER_SUPPLY_PROP_ONLINE,
+};
 
-	return result;
-}
+static enum power_supply_property sbs_charge_battery_props[] = {
+	POWER_SUPPLY_PROP_STATUS,
+	POWER_SUPPLY_PROP_PRESENT,
+	POWER_SUPPLY_PROP_TECHNOLOGY,
+	POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN,
+	POWER_SUPPLY_PROP_VOLTAGE_NOW,
+	POWER_SUPPLY_PROP_CURRENT_NOW,
+	POWER_SUPPLY_PROP_CURRENT_AVG,
+	POWER_SUPPLY_PROP_CAPACITY,
+	POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN,
+	POWER_SUPPLY_PROP_CHARGE_FULL,
+	POWER_SUPPLY_PROP_CHARGE_NOW,
+	POWER_SUPPLY_PROP_TEMP,
+	POWER_SUPPLY_PROP_MODEL_NAME,
+	POWER_SUPPLY_PROP_MANUFACTURER,
+};
 
-static int acpi_battery_select(struct acpi_battery *battery)
-{
-	struct acpi_sbs *sbs = battery->sbs;
-	int result = 0;
-	s16 state;
-	int foo;
+static enum power_supply_property sbs_energy_battery_props[] = {
+	POWER_SUPPLY_PROP_STATUS,
+	POWER_SUPPLY_PROP_PRESENT,
+	POWER_SUPPLY_PROP_TECHNOLOGY,
+	POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN,
+	POWER_SUPPLY_PROP_VOLTAGE_NOW,
+	POWER_SUPPLY_PROP_CURRENT_NOW,
+	POWER_SUPPLY_PROP_CURRENT_AVG,
+	POWER_SUPPLY_PROP_CAPACITY,
+	POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN,
+	POWER_SUPPLY_PROP_ENERGY_FULL,
+	POWER_SUPPLY_PROP_ENERGY_NOW,
+	POWER_SUPPLY_PROP_TEMP,
+	POWER_SUPPLY_PROP_MODEL_NAME,
+	POWER_SUPPLY_PROP_MANUFACTURER,
+};
 
-	if (sbs->sbsm_present) {
+/* --------------------------------------------------------------------------
+                            Smart Battery System Management
+   -------------------------------------------------------------------------- */
 
-		/* Take special care not to knobble other nibbles of
-		 * state (aka selector_state), since
-		 * it causes charging to halt on SBSELs */
-
-		result =
-		    acpi_sbs_read_word(sbs, ACPI_SBSM_SMBUS_ADDR, 0x01, &state);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_read_word() failed"));
-			goto end;
-		}
+struct acpi_battery_reader {
+	u8 command;		/* command for battery */
+	u8 mode;		/* word or block? */
+	size_t offset;		/* offset inside struct acpi_sbs_battery */
+};
 
-		foo = (state & 0x0fff) | (1 << (battery->id + 12));
-		result =
-		    acpi_sbs_write_word(sbs, ACPI_SBSM_SMBUS_ADDR, 0x01, foo);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_write_word() failed"));
-			goto end;
-		}
-	}
+static struct acpi_battery_reader info_readers[] = {
+	{0x01, SMBUS_READ_WORD, offsetof(struct acpi_battery, alarm_capacity)},
+	{0x03, SMBUS_READ_WORD, offsetof(struct acpi_battery, mode)},
+	{0x10, SMBUS_READ_WORD, offsetof(struct acpi_battery, full_charge_capacity)},
+	{0x17, SMBUS_READ_WORD, offsetof(struct acpi_battery, cycle_count)},
+	{0x18, SMBUS_READ_WORD, offsetof(struct acpi_battery, design_capacity)},
+	{0x19, SMBUS_READ_WORD, offsetof(struct acpi_battery, design_voltage)},
+	{0x1a, SMBUS_READ_WORD, offsetof(struct acpi_battery, spec)},
+	{0x1c, SMBUS_READ_WORD, offsetof(struct acpi_battery, serial_number)},
+	{0x20, SMBUS_READ_BLOCK, offsetof(struct acpi_battery, manufacturer_name)},
+	{0x21, SMBUS_READ_BLOCK, offsetof(struct acpi_battery, device_name)},
+	{0x22, SMBUS_READ_BLOCK, offsetof(struct acpi_battery, device_chemistry)},
+};
 
-      end:
-	return result;
-}
+static struct acpi_battery_reader state_readers[] = {
+	{0x08, SMBUS_READ_WORD, offsetof(struct acpi_battery, temp_now)},
+	{0x09, SMBUS_READ_WORD, offsetof(struct acpi_battery, voltage_now)},
+	{0x0a, SMBUS_READ_WORD, offsetof(struct acpi_battery, current_now)},
+	{0x0b, SMBUS_READ_WORD, offsetof(struct acpi_battery, current_avg)},
+	{0x0f, SMBUS_READ_WORD, offsetof(struct acpi_battery, capacity_now)},
+	{0x0e, SMBUS_READ_WORD, offsetof(struct acpi_battery, state_of_charge)},
+	{0x16, SMBUS_READ_WORD, offsetof(struct acpi_battery, state)},
+};
 
-static int acpi_sbsm_get_info(struct acpi_sbs *sbs)
+static int acpi_manager_get_info(struct acpi_sbs *sbs)
 {
 	int result = 0;
-	s16 battery_system_info;
-
-	result = acpi_sbs_read_word(sbs, ACPI_SBSM_SMBUS_ADDR, 0x04,
-				    &battery_system_info);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-	sbs->sbsm_present = 1;
-	sbs->sbsm_batteries_supported = battery_system_info & 0x000f;
-
-      end:
+	u16 battery_system_info;
 
+	result = acpi_smbus_read(sbs->hc, SMBUS_READ_WORD, ACPI_SBS_MANAGER,
+				 0x04, (u8 *)&battery_system_info);
+	if (!result)
+		sbs->batteries_supported = battery_system_info & 0x000f;
 	return result;
 }
 
 static int acpi_battery_get_info(struct acpi_battery *battery)
 {
-	struct acpi_sbs *sbs = battery->sbs;
-	int result = 0;
-	s16 battery_mode;
-	s16 specification_info;
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x03,
-				    &battery_mode);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-	battery->info.capacity_mode = (battery_mode & 0x8000) >> 15;
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x10,
-				    &battery->info.full_charge_capacity);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x18,
-				    &battery->info.design_capacity);
-
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x19,
-				    &battery->info.design_voltage);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
+	int i, result = 0;
 
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x1a,
-				    &specification_info);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
+	for (i = 0; i < ARRAY_SIZE(info_readers); ++i) {
+		result = acpi_smbus_read(battery->sbs->hc,
+					 info_readers[i].mode,
+					 ACPI_SBS_BATTERY,
+					 info_readers[i].command,
+					 (u8 *) battery +
+						info_readers[i].offset);
+		if (result)
+			break;
 	}
-
-	switch ((specification_info & 0x0f00) >> 8) {
-	case 1:
-		battery->info.vscale = 10;
-		break;
-	case 2:
-		battery->info.vscale = 100;
-		break;
-	case 3:
-		battery->info.vscale = 1000;
-		break;
-	default:
-		battery->info.vscale = 1;
-	}
-
-	switch ((specification_info & 0xf000) >> 12) {
-	case 1:
-		battery->info.ipscale = 10;
-		break;
-	case 2:
-		battery->info.ipscale = 100;
-		break;
-	case 3:
-		battery->info.ipscale = 1000;
-		break;
-	default:
-		battery->info.ipscale = 1;
-	}
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x1c,
-				    &battery->info.serial_number);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_str(sbs, ACPI_SB_SMBUS_ADDR, 0x20,
-				   battery->info.manufacturer_name);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_str() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_str(sbs, ACPI_SB_SMBUS_ADDR, 0x21,
-				   battery->info.device_name);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_str() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_str(sbs, ACPI_SB_SMBUS_ADDR, 0x22,
-				   battery->info.device_chemistry);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_str() failed"));
-		goto end;
-	}
-
-      end:
 	return result;
 }
 
 static int acpi_battery_get_state(struct acpi_battery *battery)
 {
-	struct acpi_sbs *sbs = battery->sbs;
-	int result = 0;
+	int i, result = 0;
 
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x09,
-				    &battery->state.voltage);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x0a,
-				    &battery->state.amperage);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x0f,
-				    &battery->state.remaining_capacity);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x16,
-				    &battery->state.battery_state);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
+	if (battery->update_time &&
+	    time_before(jiffies, battery->update_time +
+				msecs_to_jiffies(cache_time)))
+		return 0;
+	for (i = 0; i < ARRAY_SIZE(state_readers); ++i) {
+		result = acpi_smbus_read(battery->sbs->hc,
+					 state_readers[i].mode,
+					 ACPI_SBS_BATTERY,
+					 state_readers[i].command,
+				         (u8 *)battery +
+						state_readers[i].offset);
+		if (result)
+			goto end;
 	}
-
       end:
+	battery->update_time = jiffies;
 	return result;
 }
 
 static int acpi_battery_get_alarm(struct acpi_battery *battery)
 {
-	struct acpi_sbs *sbs = battery->sbs;
-	int result = 0;
-
-	result = acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x01,
-				    &battery->alarm.remaining_capacity);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-      end:
-
-	return result;
+	return acpi_smbus_read(battery->sbs->hc, SMBUS_READ_WORD,
+				 ACPI_SBS_BATTERY, 0x01,
+				 (u8 *)&battery->alarm_capacity);
 }
 
-static int acpi_battery_set_alarm(struct acpi_battery *battery,
-				  unsigned long alarm)
+static int acpi_battery_set_alarm(struct acpi_battery *battery)
 {
 	struct acpi_sbs *sbs = battery->sbs;
-	int result = 0;
-	s16 battery_mode;
-	int foo;
+	u16 value, sel = 1 << (battery->id + 12);
 
-	result = acpi_battery_select(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_select() failed"));
-		goto end;
-	}
+	int ret;
 
-	/* If necessary, enable the alarm */
 
-	if (alarm > 0) {
-		result =
-		    acpi_sbs_read_word(sbs, ACPI_SB_SMBUS_ADDR, 0x03,
-				       &battery_mode);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_read_word() failed"));
+	if (sbs->manager_present) {
+		ret = acpi_smbus_read(sbs->hc, SMBUS_READ_WORD, ACPI_SBS_MANAGER,
+				0x01, (u8 *)&value);
+		if (ret)
 			goto end;
-		}
-
-		result =
-		    acpi_sbs_write_word(sbs, ACPI_SB_SMBUS_ADDR, 0x01,
-					battery_mode & 0xbfff);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_write_word() failed"));
+		if ((value & 0xf000) != sel) {
+			value &= 0x0fff;
+			value |= sel;
+		ret = acpi_smbus_write(sbs->hc, SMBUS_WRITE_WORD,
+					 ACPI_SBS_MANAGER,
+					 0x01, (u8 *)&value, 2);
+		if (ret)
 			goto end;
 		}
 	}
-
-	foo = alarm / (battery->info.capacity_mode ? 10 : 1);
-	result = acpi_sbs_write_word(sbs, ACPI_SB_SMBUS_ADDR, 0x01, foo);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_write_word() failed"));
-		goto end;
-	}
-
+	ret = acpi_smbus_write(sbs->hc, SMBUS_WRITE_WORD, ACPI_SBS_BATTERY,
+				0x01, (u8 *)&battery->alarm_capacity, 2);
       end:
-
-	return result;
+	return ret;
 }
 
-static int acpi_battery_set_mode(struct acpi_battery *battery)
+static int acpi_ac_get_present(struct acpi_sbs *sbs)
 {
-	struct acpi_sbs *sbs = battery->sbs;
-	int result = 0;
-	s16 battery_mode;
-
-	if (capacity_mode == DEF_CAPACITY_UNIT) {
-		goto end;
-	}
-
-	result = acpi_sbs_read_word(sbs,
-				    ACPI_SB_SMBUS_ADDR, 0x03, &battery_mode);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	if (capacity_mode == MAH_CAPACITY_UNIT) {
-		battery_mode &= 0x7fff;
-	} else {
-		battery_mode |= 0x8000;
-	}
-	result = acpi_sbs_write_word(sbs,
-				     ACPI_SB_SMBUS_ADDR, 0x03, battery_mode);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_write_word() failed"));
-		goto end;
-	}
-
-	result = acpi_sbs_read_word(sbs,
-				    ACPI_SB_SMBUS_ADDR, 0x03, &battery_mode);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
+	int result;
+	u16 status;
 
-      end:
+	result = acpi_smbus_read(sbs->hc, SMBUS_READ_WORD, ACPI_SBS_CHARGER,
+				 0x13, (u8 *) & status);
+	if (!result)
+		sbs->charger_present = (status >> 15) & 0x1;
 	return result;
 }
 
-static int acpi_battery_init(struct acpi_battery *battery)
+static ssize_t acpi_battery_alarm_show(struct device *dev,
+					struct device_attribute *attr,
+					char *buf)
 {
-	int result = 0;
-
-	result = acpi_battery_select(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_select() failed"));
-		goto end;
-	}
-
-	result = acpi_battery_set_mode(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_set_mode() failed"));
-		goto end;
-	}
-
-	result = acpi_battery_get_info(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_get_info() failed"));
-		goto end;
-	}
-
-	result = acpi_battery_get_state(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_get_state() failed"));
-		goto end;
-	}
-
-	result = acpi_battery_get_alarm(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_get_alarm() failed"));
-		goto end;
-	}
-
-      end:
-	return result;
+	struct acpi_battery *battery = to_acpi_battery(dev_get_drvdata(dev));
+	acpi_battery_get_alarm(battery);
+	return sprintf(buf, "%d\n", battery->alarm_capacity *
+				acpi_battery_scale(battery) * 1000);
 }
 
-static int acpi_ac_get_present(struct acpi_sbs *sbs)
+static ssize_t acpi_battery_alarm_store(struct device *dev,
+					struct device_attribute *attr,
+					const char *buf, size_t count)
 {
-	int result = 0;
-	s16 charger_status;
-
-	result = acpi_sbs_read_word(sbs, ACPI_SBC_SMBUS_ADDR, 0x13,
-				    &charger_status);
-
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_read_word() failed"));
-		goto end;
-	}
-
-	sbs->ac.ac_present = (charger_status & 0x8000) >> 15;
-
-      end:
-
-	return result;
+	unsigned long x;
+	struct acpi_battery *battery = to_acpi_battery(dev_get_drvdata(dev));
+	if (sscanf(buf, "%ld\n", &x) == 1)
+		battery->alarm_capacity = x /
+			(1000 * acpi_battery_scale(battery));
+	if (battery->present)
+		acpi_battery_set_alarm(battery);
+	return count;
 }
 
+static struct device_attribute alarm_attr = {
+	.attr = {.name = "alarm", .mode = 0644, .owner = THIS_MODULE},
+	.show = acpi_battery_alarm_show,
+	.store = acpi_battery_alarm_store,
+};
+
 /* --------------------------------------------------------------------------
                               FS Interface (/proc/acpi)
    -------------------------------------------------------------------------- */
 
+#ifdef CONFIG_ACPI_PROCFS
 /* Generic Routines */
-
 static int
-acpi_sbs_generic_add_fs(struct proc_dir_entry **dir,
-			struct proc_dir_entry *parent_dir,
-			char *dir_name,
-			struct file_operations *info_fops,
-			struct file_operations *state_fops,
-			struct file_operations *alarm_fops, void *data)
+acpi_sbs_add_fs(struct proc_dir_entry **dir,
+		struct proc_dir_entry *parent_dir,
+		char *dir_name,
+		struct file_operations *info_fops,
+		struct file_operations *state_fops,
+		struct file_operations *alarm_fops, void *data)
 {
 	struct proc_dir_entry *entry = NULL;
 
 	if (!*dir) {
 		*dir = proc_mkdir(dir_name, parent_dir);
 		if (!*dir) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"proc_mkdir() failed"));
 			return -ENODEV;
 		}
 		(*dir)->owner = THIS_MODULE;
@@ -882,10 +491,7 @@ acpi_sbs_generic_add_fs(struct proc_dir_
 	/* 'info' [R] */
 	if (info_fops) {
 		entry = create_proc_entry(ACPI_SBS_FILE_INFO, S_IRUGO, *dir);
-		if (!entry) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"create_proc_entry() failed"));
-		} else {
+		if (entry) {
 			entry->proc_fops = info_fops;
 			entry->data = data;
 			entry->owner = THIS_MODULE;
@@ -895,10 +501,7 @@ acpi_sbs_generic_add_fs(struct proc_dir_
 	/* 'state' [R] */
 	if (state_fops) {
 		entry = create_proc_entry(ACPI_SBS_FILE_STATE, S_IRUGO, *dir);
-		if (!entry) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"create_proc_entry() failed"));
-		} else {
+		if (entry) {
 			entry->proc_fops = state_fops;
 			entry->data = data;
 			entry->owner = THIS_MODULE;
@@ -908,24 +511,19 @@ acpi_sbs_generic_add_fs(struct proc_dir_
 	/* 'alarm' [R/W] */
 	if (alarm_fops) {
 		entry = create_proc_entry(ACPI_SBS_FILE_ALARM, S_IRUGO, *dir);
-		if (!entry) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"create_proc_entry() failed"));
-		} else {
+		if (entry) {
 			entry->proc_fops = alarm_fops;
 			entry->data = data;
 			entry->owner = THIS_MODULE;
 		}
 	}
-
 	return 0;
 }
 
 static void
-acpi_sbs_generic_remove_fs(struct proc_dir_entry **dir,
+acpi_sbs_remove_fs(struct proc_dir_entry **dir,
 			   struct proc_dir_entry *parent_dir)
 {
-
 	if (*dir) {
 		remove_proc_entry(ACPI_SBS_FILE_INFO, *dir);
 		remove_proc_entry(ACPI_SBS_FILE_STATE, *dir);
@@ -933,82 +531,52 @@ acpi_sbs_generic_remove_fs(struct proc_d
 		remove_proc_entry((*dir)->name, parent_dir);
 		*dir = NULL;
 	}
-
 }
 
 /* Smart Battery Interface */
-
 static struct proc_dir_entry *acpi_battery_dir = NULL;
 
+static inline char *acpi_battery_units(struct acpi_battery *battery)
+{
+	return acpi_battery_mode(battery) ? " mWh" : " mAh";
+}
+
+
 static int acpi_battery_read_info(struct seq_file *seq, void *offset)
 {
 	struct acpi_battery *battery = seq->private;
 	struct acpi_sbs *sbs = battery->sbs;
-	int cscale;
 	int result = 0;
 
-	if (sbs_mutex_lock(sbs)) {
-		return -ENODEV;
-	}
-
-	result = acpi_check_update_proc(sbs);
-	if (result)
-		goto end;
+	mutex_lock(&sbs->lock);
 
-	if (update_time == 0) {
-		result = acpi_sbs_update_run(sbs, battery->id, DATA_TYPE_INFO);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_update_run() failed"));
-		}
-	}
-
-	if (battery->battery_present) {
-		seq_printf(seq, "present:                 yes\n");
-	} else {
-		seq_printf(seq, "present:                 no\n");
+	seq_printf(seq, "present:                 %s\n",
+		   (battery->present) ? "yes" : "no");
+	if (!battery->present)
 		goto end;
-	}
 
-	if (battery->info.capacity_mode) {
-		cscale = battery->info.vscale * battery->info.ipscale;
-	} else {
-		cscale = battery->info.ipscale;
-	}
 	seq_printf(seq, "design capacity:         %i%s\n",
-		   battery->info.design_capacity * cscale,
-		   battery->info.capacity_mode ? "0 mWh" : " mAh");
-
+		   battery->design_capacity * acpi_battery_scale(battery),
+		   acpi_battery_units(battery));
 	seq_printf(seq, "last full capacity:      %i%s\n",
-		   battery->info.full_charge_capacity * cscale,
-		   battery->info.capacity_mode ? "0 mWh" : " mAh");
-
+		   battery->full_charge_capacity * acpi_battery_scale(battery),
+		   acpi_battery_units(battery));
 	seq_printf(seq, "battery technology:      rechargeable\n");
-
 	seq_printf(seq, "design voltage:          %i mV\n",
-		   battery->info.design_voltage * battery->info.vscale);
-
+		   battery->design_voltage * acpi_battery_vscale(battery));
 	seq_printf(seq, "design capacity warning: unknown\n");
 	seq_printf(seq, "design capacity low:     unknown\n");
 	seq_printf(seq, "capacity granularity 1:  unknown\n");
 	seq_printf(seq, "capacity granularity 2:  unknown\n");
-
-	seq_printf(seq, "model number:            %s\n",
-		   battery->info.device_name);
-
+	seq_printf(seq, "model number:            %s\n", battery->device_name);
 	seq_printf(seq, "serial number:           %i\n",
-		   battery->info.serial_number);
-
+		   battery->serial_number);
 	seq_printf(seq, "battery type:            %s\n",
-		   battery->info.device_chemistry);
-
+		   battery->device_chemistry);
 	seq_printf(seq, "OEM info:                %s\n",
-		   battery->info.manufacturer_name);
-
+		   battery->manufacturer_name);
       end:
-
-	sbs_mutex_unlock(sbs);
-
+	mutex_unlock(&sbs->lock);
 	return result;
 }
 
@@ -1022,73 +590,29 @@ static int acpi_battery_read_state(struc
 	struct acpi_battery *battery = seq->private;
 	struct acpi_sbs *sbs = battery->sbs;
 	int result = 0;
-	int cscale;
-	int foo;
-
-	if (sbs_mutex_lock(sbs)) {
-		return -ENODEV;
-	}
-
-	result = acpi_check_update_proc(sbs);
-	if (result)
-		goto end;
-
-	if (update_time == 0) {
-		result = acpi_sbs_update_run(sbs, battery->id, DATA_TYPE_STATE);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_update_run() failed"));
-		}
-	}
 
-	if (battery->battery_present) {
-		seq_printf(seq, "present:                 yes\n");
-	} else {
-		seq_printf(seq, "present:                 no\n");
+	mutex_lock(&sbs->lock);
+	seq_printf(seq, "present:                 %s\n",
+		   (battery->present) ? "yes" : "no");
+	if (!battery->present)
 		goto end;
-	}
-
-	if (battery->info.capacity_mode) {
-		cscale = battery->info.vscale * battery->info.ipscale;
-	} else {
-		cscale = battery->info.ipscale;
-	}
-
-	if (battery->state.battery_state & 0x0010) {
-		seq_printf(seq, "capacity state:          critical\n");
-	} else {
-		seq_printf(seq, "capacity state:          ok\n");
-	}
-
-	foo = (s16) battery->state.amperage * battery->info.ipscale;
-	if (battery->info.capacity_mode) {
-		foo = foo * battery->info.design_voltage / 1000;
-	}
-	if (battery->state.amperage < 0) {
-		seq_printf(seq, "charging state:          discharging\n");
-		seq_printf(seq, "present rate:            %d %s\n",
-			   -foo, battery->info.capacity_mode ? "mW" : "mA");
-	} else if (battery->state.amperage > 0) {
-		seq_printf(seq, "charging state:          charging\n");
-		seq_printf(seq, "present rate:            %d %s\n",
-			   foo, battery->info.capacity_mode ? "mW" : "mA");
-	} else {
-		seq_printf(seq, "charging state:          charged\n");
-		seq_printf(seq, "present rate:            0 %s\n",
-			   battery->info.capacity_mode ? "mW" : "mA");
-	}
 
+	acpi_battery_get_state(battery);
+	seq_printf(seq, "capacity state:          %s\n",
+		   (battery->state & 0x0010) ? "critical" : "ok");
+	seq_printf(seq, "charging state:          %s\n",
+		   (battery->current_now < 0) ? "discharging" :
+		   ((battery->current_now > 0) ? "charging" : "charged"));
+	seq_printf(seq, "present rate:            %d mA\n",
+		   abs(battery->current_now) * acpi_battery_ipscale(battery));
 	seq_printf(seq, "remaining capacity:      %i%s\n",
-		   battery->state.remaining_capacity * cscale,
-		   battery->info.capacity_mode ? "0 mWh" : " mAh");
-
+		   battery->capacity_now * acpi_battery_scale(battery),
+		   acpi_battery_units(battery));
 	seq_printf(seq, "present voltage:         %i mV\n",
-		   battery->state.voltage * battery->info.vscale);
+		   battery->voltage_now * acpi_battery_vscale(battery));
 
       end:
-
-	sbs_mutex_unlock(sbs);
-
+	mutex_unlock(&sbs->lock);
 	return result;
 }
 
@@ -1102,48 +626,25 @@ static int acpi_battery_read_alarm(struc
 	struct acpi_battery *battery = seq->private;
 	struct acpi_sbs *sbs = battery->sbs;
 	int result = 0;
-	int cscale;
-
-	if (sbs_mutex_lock(sbs)) {
-		return -ENODEV;
-	}
-
-	result = acpi_check_update_proc(sbs);
-	if (result)
-		goto end;
 
-	if (update_time == 0) {
-		result = acpi_sbs_update_run(sbs, battery->id, DATA_TYPE_ALARM);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_update_run() failed"));
-		}
-	}
+	mutex_lock(&sbs->lock);
 
-	if (!battery->battery_present) {
+	if (!battery->present) {
 		seq_printf(seq, "present:                 no\n");
 		goto end;
 	}
 
-	if (battery->info.capacity_mode) {
-		cscale = battery->info.vscale * battery->info.ipscale;
-	} else {
-		cscale = battery->info.ipscale;
-	}
-
+	acpi_battery_get_alarm(battery);
 	seq_printf(seq, "alarm:                   ");
-	if (battery->alarm.remaining_capacity) {
+	if (battery->alarm_capacity)
 		seq_printf(seq, "%i%s\n",
-			   battery->alarm.remaining_capacity * cscale,
-			   battery->info.capacity_mode ? "0 mWh" : " mAh");
-	} else {
+			   battery->alarm_capacity *
+			   acpi_battery_scale(battery),
+			   acpi_battery_units(battery));
+	else
 		seq_printf(seq, "disabled\n");
-	}
-
       end:
-
-	sbs_mutex_unlock(sbs);
-
+	mutex_unlock(&sbs->lock);
 	return result;
 }
 
@@ -1155,59 +656,29 @@ acpi_battery_write_alarm(struct file *fi
 	struct acpi_battery *battery = seq->private;
 	struct acpi_sbs *sbs = battery->sbs;
 	char alarm_string[12] = { '\0' };
-	int result, old_alarm, new_alarm;
-
-	if (sbs_mutex_lock(sbs)) {
-		return -ENODEV;
-	}
-
-	result = acpi_check_update_proc(sbs);
-	if (result)
-		goto end;
-
-	if (!battery->battery_present) {
+	int result = 0;
+	mutex_lock(&sbs->lock);
+	if (!battery->present) {
 		result = -ENODEV;
 		goto end;
 	}
-
 	if (count > sizeof(alarm_string) - 1) {
 		result = -EINVAL;
 		goto end;
 	}
-
 	if (copy_from_user(alarm_string, buffer, count)) {
 		result = -EFAULT;
 		goto end;
 	}
-
 	alarm_string[count] = 0;
-
-	old_alarm = battery->alarm.remaining_capacity;
-	new_alarm = simple_strtoul(alarm_string, NULL, 0);
-
-	result = acpi_battery_set_alarm(battery, new_alarm);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_set_alarm() failed"));
-		acpi_battery_set_alarm(battery, old_alarm);
-		goto end;
-	}
-	result = acpi_battery_get_alarm(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_get_alarm() failed"));
-		acpi_battery_set_alarm(battery, old_alarm);
-		goto end;
-	}
-
+	battery->alarm_capacity = simple_strtoul(alarm_string, NULL, 0) /
+					acpi_battery_scale(battery);
+	acpi_battery_set_alarm(battery);
       end:
-	sbs_mutex_unlock(sbs);
-
-	if (result) {
+	mutex_unlock(&sbs->lock);
+	if (result)
 		return result;
-	} else {
-		return count;
-	}
+	return count;
 }
 
 static int acpi_battery_alarm_open_fs(struct inode *inode, struct file *file)
@@ -1246,26 +717,15 @@ static struct proc_dir_entry *acpi_ac_di
 
 static int acpi_ac_read_state(struct seq_file *seq, void *offset)
 {
-	struct acpi_sbs *sbs = seq->private;
-	int result;
 
-	if (sbs_mutex_lock(sbs)) {
-		return -ENODEV;
-	}
+	struct acpi_sbs *sbs = seq->private;
 
-	if (update_time == 0) {
-		result = acpi_sbs_update_run(sbs, -1, DATA_TYPE_AC_STATE);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_update_run() failed"));
-		}
-	}
+	mutex_lock(&sbs->lock);
 
 	seq_printf(seq, "state:                   %s\n",
-		   sbs->ac.ac_present ? "on-line" : "off-line");
-
-	sbs_mutex_unlock(sbs);
+		   sbs->charger_present ? "on-line" : "off-line");
 
+	mutex_unlock(&sbs->lock);
 	return 0;
 }
 
@@ -1282,429 +742,203 @@ static struct file_operations acpi_ac_st
 	.owner = THIS_MODULE,
 };
 
+#endif
+
 /* --------------------------------------------------------------------------
                                  Driver Interface
    -------------------------------------------------------------------------- */
+static int acpi_battery_read(struct acpi_battery *battery)
+{
+	int result = 0, saved_present = battery->present;
+	u16 state;
 
-/* Smart Battery */
+	if (battery->sbs->manager_present) {
+		result = acpi_smbus_read(battery->sbs->hc, SMBUS_READ_WORD,
+				ACPI_SBS_MANAGER, 0x01, (u8 *)&state);
+		if (!result)
+			battery->present = state & (1 << battery->id);
+		state &= 0x0fff;
+		state |= 1 << (battery->id + 12);
+		acpi_smbus_write(battery->sbs->hc, SMBUS_WRITE_WORD,
+				  ACPI_SBS_MANAGER, 0x01, (u8 *)&state, 2);
+	} else if (battery->id == 0)
+		battery->present = 1;
+	if (result || !battery->present)
+		return result;
+
+	if (saved_present != battery->present) {
+		battery->update_time = 0;
+		result = acpi_battery_get_info(battery);
+		if (result)
+			return result;
+	}
+	result = acpi_battery_get_state(battery);
+	return result;
+}
 
+/* Smart Battery */
 static int acpi_battery_add(struct acpi_sbs *sbs, int id)
 {
-	int is_present;
+	struct acpi_battery *battery = &sbs->battery[id];
 	int result;
-	char dir_name[32];
-	struct acpi_battery *battery;
 
-	battery = &sbs->battery[id];
-
-	battery->alive = 0;
-
-	battery->init_state = 0;
 	battery->id = id;
 	battery->sbs = sbs;
+	result = acpi_battery_read(battery);
+	if (result)
+		return result;
 
-	result = acpi_battery_select(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_select() failed"));
-		goto end;
-	}
-
-	result = acpi_battery_get_present(battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_battery_get_present() failed"));
-		goto end;
-	}
-
-	is_present = battery->battery_present;
-
-	if (is_present) {
-		result = acpi_battery_init(battery);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_battery_init() failed"));
-			goto end;
-		}
-		battery->init_state = 1;
-	}
-
-	sprintf(dir_name, ACPI_BATTERY_DIR_NAME, id);
-
-	result = acpi_sbs_generic_add_fs(&battery->battery_entry,
-					 acpi_battery_dir,
-					 dir_name,
-					 &acpi_battery_info_fops,
-					 &acpi_battery_state_fops,
-					 &acpi_battery_alarm_fops, battery);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_generic_add_fs() failed"));
-		goto end;
-	}
-	battery->alive = 1;
-
+	sprintf(battery->name, ACPI_BATTERY_DIR_NAME, id);
+#ifdef CONFIG_ACPI_PROCFS
+	acpi_sbs_add_fs(&battery->proc_entry, acpi_battery_dir,
+			battery->name, &acpi_battery_info_fops,
+			&acpi_battery_state_fops, &acpi_battery_alarm_fops,
+			battery);
+#endif
+	battery->bat.name = battery->name;
+	battery->bat.type = POWER_SUPPLY_TYPE_BATTERY;
+	if (!acpi_battery_mode(battery)) {
+		battery->bat.properties = sbs_charge_battery_props;
+		battery->bat.num_properties =
+		    ARRAY_SIZE(sbs_charge_battery_props);
+	} else {
+		battery->bat.properties = sbs_energy_battery_props;
+		battery->bat.num_properties =
+		    ARRAY_SIZE(sbs_energy_battery_props);
+	}
+	battery->bat.get_property = acpi_sbs_battery_get_property;
+	result = power_supply_register(&sbs->device->dev, &battery->bat);
+	device_create_file(battery->bat.dev, &alarm_attr);
 	printk(KERN_INFO PREFIX "%s [%s]: Battery Slot [%s] (battery %s)\n",
-	       ACPI_SBS_DEVICE_NAME, acpi_device_bid(sbs->device), dir_name,
-	       sbs->battery->battery_present ? "present" : "absent");
-
-      end:
+	       ACPI_SBS_DEVICE_NAME, acpi_device_bid(sbs->device),
+	       battery->name, sbs->battery->present ? "present" : "absent");
 	return result;
 }
 
 static void acpi_battery_remove(struct acpi_sbs *sbs, int id)
 {
-
-	if (sbs->battery[id].battery_entry) {
-		acpi_sbs_generic_remove_fs(&(sbs->battery[id].battery_entry),
-					   acpi_battery_dir);
+	if (sbs->battery[id].bat.dev)
+		device_remove_file(sbs->battery[id].bat.dev, &alarm_attr);
+		power_supply_unregister(&sbs->battery[id].bat);
+#ifdef CONFIG_ACPI_PROCFS
+	if (sbs->battery[id].proc_entry) {
+		acpi_sbs_remove_fs(&(sbs->battery[id].proc_entry),
+				   acpi_battery_dir);
 	}
+#endif
 }
 
-static int acpi_ac_add(struct acpi_sbs *sbs)
+static int acpi_charger_add(struct acpi_sbs *sbs)
 {
 	int result;
 
 	result = acpi_ac_get_present(sbs);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_ac_get_present() failed"));
+	if (result)
 		goto end;
-	}
-
-	result = acpi_sbs_generic_add_fs(&sbs->ac_entry,
-					 acpi_ac_dir,
-					 ACPI_AC_DIR_NAME,
-					 NULL, &acpi_ac_state_fops, NULL, sbs);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_generic_add_fs() failed"));
+#ifdef CONFIG_ACPI_PROCFS
+	result = acpi_sbs_add_fs(&sbs->charger_entry, acpi_ac_dir,
+				 ACPI_AC_DIR_NAME, NULL,
+				 &acpi_ac_state_fops, NULL, sbs);
+	if (result)
 		goto end;
-	}
-
+#endif
+	sbs->charger.name = "sbs-charger";
+	sbs->charger.type = POWER_SUPPLY_TYPE_MAINS;
+	sbs->charger.properties = sbs_ac_props;
+	sbs->charger.num_properties = ARRAY_SIZE(sbs_ac_props);
+	sbs->charger.get_property = sbs_get_ac_property;
+	power_supply_register(&sbs->device->dev, &sbs->charger);
 	printk(KERN_INFO PREFIX "%s [%s]: AC Adapter [%s] (%s)\n",
 	       ACPI_SBS_DEVICE_NAME, acpi_device_bid(sbs->device),
-	       ACPI_AC_DIR_NAME, sbs->ac.ac_present ? "on-line" : "off-line");
-
+	       ACPI_AC_DIR_NAME, sbs->charger_present ? "on-line" : "off-line");
       end:
-
 	return result;
 }
 
-static void acpi_ac_remove(struct acpi_sbs *sbs)
-{
-
-	if (sbs->ac_entry) {
-		acpi_sbs_generic_remove_fs(&sbs->ac_entry, acpi_ac_dir);
-	}
-}
-
-static void acpi_sbs_update_time_run(unsigned long data)
+static void acpi_charger_remove(struct acpi_sbs *sbs)
 {
-	acpi_os_execute(OSL_GPE_HANDLER, acpi_sbs_update_time, (void *)data);
+	if (sbs->charger.dev)
+		power_supply_unregister(&sbs->charger);
+#ifdef CONFIG_ACPI_PROCFS
+	if (sbs->charger_entry)
+		acpi_sbs_remove_fs(&sbs->charger_entry, acpi_ac_dir);
+#endif
 }
 
-static int acpi_sbs_update_run(struct acpi_sbs *sbs, int id, int data_type)
+void acpi_sbs_callback(void *context)
 {
-	struct acpi_battery *battery;
-	int result = 0, cnt;
-	int old_ac_present = -1;
-	int old_battery_present = -1;
-	int new_ac_present = -1;
-	int new_battery_present = -1;
-	int id_min = 0, id_max = MAX_SBS_BAT - 1;
-	char dir_name[32];
-	int do_battery_init = 0, do_ac_init = 0;
-	int old_remaining_capacity = 0;
-	int update_battery = 1;
-	int up_tm = update_time;
-
-	if (sbs_zombie(sbs)) {
-		goto end;
-	}
-
-	if (id >= 0) {
-		id_min = id_max = id;
-	}
-
-	if (data_type == DATA_TYPE_COMMON && up_tm > 0) {
-		cnt = up_tm / (up_tm > UPDATE_DELAY ? UPDATE_DELAY : up_tm);
-		if (sbs->run_cnt % cnt != 0) {
-			update_battery = 0;
-		}
-	}
-
-	sbs->run_cnt++;
-
-	old_ac_present = sbs->ac.ac_present;
-
-	result = acpi_ac_get_present(sbs);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_ac_get_present() failed"));
-	}
-
-	new_ac_present = sbs->ac.ac_present;
-
-	do_ac_init = (old_ac_present != new_ac_present);
-	if (sbs->run_cnt == 1 && data_type == DATA_TYPE_COMMON) {
-		do_ac_init = 1;
-	}
-
-	if (do_ac_init) {
-		result = acpi_sbs_generate_event(sbs->device,
-						 ACPI_SBS_AC_NOTIFY_STATUS,
-						 new_ac_present,
-						 ACPI_AC_DIR_NAME,
-						 ACPI_AC_CLASS);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_generate_event() failed"));
-		}
-	}
-
-	if (data_type == DATA_TYPE_COMMON) {
-		if (!do_ac_init && !update_battery) {
-			goto end;
-		}
-	}
-
-	if (data_type == DATA_TYPE_AC_STATE && !do_ac_init) {
-		goto end;
-	}
-
-	for (id = id_min; id <= id_max; id++) {
-		battery = &sbs->battery[id];
-		if (battery->alive == 0) {
-			continue;
-		}
-
-		old_remaining_capacity = battery->state.remaining_capacity;
-
-		old_battery_present = battery->battery_present;
-
-		result = acpi_battery_select(battery);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_battery_select() failed"));
-		}
-
-		result = acpi_battery_get_present(battery);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_battery_get_present() failed"));
-		}
-
-		new_battery_present = battery->battery_present;
-
-		do_battery_init = ((old_battery_present != new_battery_present)
-				   && new_battery_present);
-		if (!new_battery_present)
-			goto event;
-		if (do_ac_init || do_battery_init) {
-			result = acpi_battery_init(battery);
-			if (result) {
-				ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-						"acpi_battery_init() "
-						"failed"));
-			}
-		}
-		if (sbs_zombie(sbs)) {
-			goto end;
-		}
-
-		if ((data_type == DATA_TYPE_COMMON
-		     || data_type == DATA_TYPE_INFO)
-		    && new_battery_present) {
-			result = acpi_battery_get_info(battery);
-			if (result) {
-				ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-						"acpi_battery_get_info() failed"));
-			}
-		}
-		if (data_type == DATA_TYPE_INFO) {
-			continue;
-		}
-		if (sbs_zombie(sbs)) {
-			goto end;
-		}
-
-		if ((data_type == DATA_TYPE_COMMON
-		     || data_type == DATA_TYPE_STATE)
-		    && new_battery_present) {
-			result = acpi_battery_get_state(battery);
-			if (result) {
-				ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-						"acpi_battery_get_state() failed"));
-			}
-		}
-		if (data_type == DATA_TYPE_STATE) {
-			goto event;
-		}
-		if (sbs_zombie(sbs)) {
-			goto end;
-		}
-
-		if ((data_type == DATA_TYPE_COMMON
-		     || data_type == DATA_TYPE_ALARM)
-		    && new_battery_present) {
-			result = acpi_battery_get_alarm(battery);
-			if (result) {
-				ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-						"acpi_battery_get_alarm() "
-						"failed"));
-			}
-		}
-		if (data_type == DATA_TYPE_ALARM) {
-			continue;
-		}
-		if (sbs_zombie(sbs)) {
-			goto end;
-		}
-
-	      event:
-
-		if (old_battery_present != new_battery_present || do_ac_init ||
-		    old_remaining_capacity !=
-		    battery->state.remaining_capacity) {
-			sprintf(dir_name, ACPI_BATTERY_DIR_NAME, id);
-			result = acpi_sbs_generate_event(sbs->device,
-							 ACPI_SBS_BATTERY_NOTIFY_STATUS,
-							 new_battery_present,
-							 dir_name,
-							 ACPI_BATTERY_CLASS);
-			if (result) {
-				ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-						"acpi_sbs_generate_event() "
-						"failed"));
-			}
+	int id;
+	struct acpi_sbs *sbs = context;
+	struct acpi_battery *bat;
+	u8 saved_charger_state = sbs->charger_present;
+	u8 saved_battery_state;
+	acpi_ac_get_present(sbs);
+	if (sbs->charger_present != saved_charger_state) {
+#ifdef CONFIG_ACPI_PROC_EVENT
+		acpi_bus_generate_proc_event4(ACPI_AC_CLASS, ACPI_AC_DIR_NAME,
+					      ACPI_SBS_NOTIFY_STATUS,
+					      sbs->charger_present);
+#endif
+		kobject_uevent(&sbs->charger.dev->kobj, KOBJ_CHANGE);
+	}
+	if (sbs->manager_present) {
+		for (id = 0; id < MAX_SBS_BAT; ++id) {
+			if (!(sbs->batteries_supported & (1 << id)))
+				continue;
+			bat = &sbs->battery[id];
+			saved_battery_state = bat->present;
+			acpi_battery_read(bat);
+			if (saved_battery_state == bat->present)
+				continue;
+#ifdef CONFIG_ACPI_PROC_EVENT
+			acpi_bus_generate_proc_event4(ACPI_BATTERY_CLASS,
+						      bat->name,
+						      ACPI_SBS_NOTIFY_STATUS,
+						      bat->present);
+#endif
+			kobject_uevent(&bat->bat.dev->kobj, KOBJ_CHANGE);
 		}
 	}
-
-      end:
-
-	return result;
 }
 
-static void acpi_sbs_update_time(void *data)
-{
-	struct acpi_sbs *sbs = data;
-	unsigned long delay = -1;
-	int result;
-	unsigned int up_tm = update_time;
-
-	if (sbs_mutex_lock(sbs))
-		return;
-
-	result = acpi_sbs_update_run(sbs, -1, DATA_TYPE_COMMON);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_sbs_update_run() failed"));
-	}
-
-	if (sbs_zombie(sbs)) {
-		goto end;
-	}
-
-	if (!up_tm) {
-		if (timer_pending(&sbs->update_timer))
-			del_timer(&sbs->update_timer);
-	} else {
-		delay = (up_tm > UPDATE_DELAY ? UPDATE_DELAY : up_tm);
-		delay = jiffies + HZ * delay;
-		if (timer_pending(&sbs->update_timer)) {
-			mod_timer(&sbs->update_timer, delay);
-		} else {
-			sbs->update_timer.data = (unsigned long)data;
-			sbs->update_timer.function = acpi_sbs_update_time_run;
-			sbs->update_timer.expires = delay;
-			add_timer(&sbs->update_timer);
-		}
-	}
-
-      end:
-
-	sbs_mutex_unlock(sbs);
-}
+static int acpi_sbs_remove(struct acpi_device *device, int type);
 
 static int acpi_sbs_add(struct acpi_device *device)
 {
-	struct acpi_sbs *sbs = NULL;
-	int result = 0, remove_result = 0;
+	struct acpi_sbs *sbs;
+	int result = 0;
 	int id;
-	acpi_status status = AE_OK;
-	unsigned long val;
-
-	status =
-	    acpi_evaluate_integer(device->handle, "_EC", NULL, &val);
-	if (ACPI_FAILURE(status)) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR, "Error obtaining _EC"));
-		return -EIO;
-	}
 
 	sbs = kzalloc(sizeof(struct acpi_sbs), GFP_KERNEL);
 	if (!sbs) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR, "kzalloc() failed"));
 		result = -ENOMEM;
 		goto end;
 	}
 
-	mutex_init(&sbs->mutex);
+	mutex_init(&sbs->lock);
 
-	sbs_mutex_lock(sbs);
-
-	sbs->base = 0xff & (val >> 8);
+	sbs->hc = acpi_driver_data(device->parent);
 	sbs->device = device;
-
 	strcpy(acpi_device_name(device), ACPI_SBS_DEVICE_NAME);
 	strcpy(acpi_device_class(device), ACPI_SBS_CLASS);
 	acpi_driver_data(device) = sbs;
 
-	result = acpi_ac_add(sbs);
-	if (result) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR, "acpi_ac_add() failed"));
-		goto end;
-	}
-
-	acpi_sbsm_get_info(sbs);
-
-	if (!sbs->sbsm_present) {
-		result = acpi_battery_add(sbs, 0);
-		if (result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_battery_add() failed"));
-			goto end;
-		}
-	} else {
-		for (id = 0; id < MAX_SBS_BAT; id++) {
-			if ((sbs->sbsm_batteries_supported & (1 << id))) {
-				result = acpi_battery_add(sbs, id);
-				if (result) {
-					ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-							"acpi_battery_add() failed"));
-					goto end;
-				}
-			}
-		}
-	}
-
-	init_timer(&sbs->update_timer);
-	result = acpi_check_update_proc(sbs);
+	result = acpi_charger_add(sbs);
 	if (result)
 		goto end;
 
+	result = acpi_manager_get_info(sbs);
+	if (!result) {
+		sbs->manager_present = 1;
+		for (id = 0; id < MAX_SBS_BAT; ++id)
+			if ((sbs->batteries_supported & (1 << id)))
+				acpi_battery_add(sbs, id);
+	} else
+		acpi_battery_add(sbs, 0);
+	acpi_smbus_register_callback(sbs->hc, acpi_sbs_callback, sbs);
       end:
-
-	sbs_mutex_unlock(sbs);
-
-	if (result) {
-		remove_result = acpi_sbs_remove(device, 0);
-		if (remove_result) {
-			ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-					"acpi_sbs_remove() failed"));
-		}
-	}
-
+	if (result)
+		acpi_sbs_remove(device, 0);
 	return result;
 }
 
@@ -1713,39 +947,25 @@ static int acpi_sbs_remove(struct acpi_d
 	struct acpi_sbs *sbs;
 	int id;
 
-	if (!device) {
+	if (!device)
 		return -EINVAL;
-	}
-
 	sbs = acpi_driver_data(device);
-	if (!sbs) {
+	if (!sbs)
 		return -EINVAL;
-	}
-
-	sbs_mutex_lock(sbs);
-
-	sbs->zombie = 1;
-	del_timer_sync(&sbs->update_timer);
-	acpi_os_wait_events_complete(NULL);
-	del_timer_sync(&sbs->update_timer);
-
-	for (id = 0; id < MAX_SBS_BAT; id++) {
+	mutex_lock(&sbs->lock);
+	acpi_smbus_unregister_callback(sbs->hc);
+	for (id = 0; id < MAX_SBS_BAT; ++id)
 		acpi_battery_remove(sbs, id);
-	}
-
-	acpi_ac_remove(sbs);
-
-	sbs_mutex_unlock(sbs);
-
-	mutex_destroy(&sbs->mutex);
-
+	acpi_charger_remove(sbs);
+	mutex_unlock(&sbs->lock);
+	mutex_destroy(&sbs->lock);
 	kfree(sbs);
-
 	return 0;
 }
 
 static void acpi_sbs_rmdirs(void)
 {
+#ifdef CONFIG_ACPI_PROCFS
 	if (acpi_ac_dir) {
 		acpi_unlock_ac_dir(acpi_ac_dir);
 		acpi_ac_dir = NULL;
@@ -1754,69 +974,58 @@ static void acpi_sbs_rmdirs(void)
 		acpi_unlock_battery_dir(acpi_battery_dir);
 		acpi_battery_dir = NULL;
 	}
+#endif
 }
 
 static int acpi_sbs_resume(struct acpi_device *device)
 {
 	struct acpi_sbs *sbs;
-
 	if (!device)
 		return -EINVAL;
-
 	sbs = device->driver_data;
-
-	sbs->run_cnt = 0;
-
+	acpi_sbs_callback(sbs);
 	return 0;
 }
 
+static struct acpi_driver acpi_sbs_driver = {
+	.name = "sbs",
+	.class = ACPI_SBS_CLASS,
+	.ids = sbs_device_ids,
+	.ops = {
+		.add = acpi_sbs_add,
+		.remove = acpi_sbs_remove,
+		.resume = acpi_sbs_resume,
+		},
+};
+
 static int __init acpi_sbs_init(void)
 {
 	int result = 0;
 
 	if (acpi_disabled)
 		return -ENODEV;
-
-	if (capacity_mode != DEF_CAPACITY_UNIT
-	    && capacity_mode != MAH_CAPACITY_UNIT
-	    && capacity_mode != MWH_CAPACITY_UNIT) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"invalid capacity_mode = %d", capacity_mode));
-		return -EINVAL;
-	}
-
+#ifdef CONFIG_ACPI_PROCFS
 	acpi_ac_dir = acpi_lock_ac_dir();
-	if (!acpi_ac_dir) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_lock_ac_dir() failed"));
+	if (!acpi_ac_dir)
 		return -ENODEV;
-	}
-
 	acpi_battery_dir = acpi_lock_battery_dir();
 	if (!acpi_battery_dir) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_lock_battery_dir() failed"));
 		acpi_sbs_rmdirs();
 		return -ENODEV;
 	}
-
+#endif
 	result = acpi_bus_register_driver(&acpi_sbs_driver);
 	if (result < 0) {
-		ACPI_EXCEPTION((AE_INFO, AE_ERROR,
-				"acpi_bus_register_driver() failed"));
 		acpi_sbs_rmdirs();
 		return -ENODEV;
 	}
-
 	return 0;
 }
 
 static void __exit acpi_sbs_exit(void)
 {
 	acpi_bus_unregister_driver(&acpi_sbs_driver);
-
 	acpi_sbs_rmdirs();
-
 	return;
 }
 
diff -urpN linux-2.6.23-sabayon/drivers/acpi/sbshc.c testtry/drivers/acpi/sbshc.c
--- linux-2.6.23-sabayon/drivers/acpi/sbshc.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/acpi/sbshc.c	2007-10-15 14:51:53.000000000 +0000
@@ -0,0 +1,309 @@
+/*
+ * SMBus driver for ACPI Embedded Controller (v0.1)
+ *
+ * Copyright (c) 2007 Alexey Starikovskiy
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation version 2.
+ */
+
+#include <acpi/acpi_bus.h>
+#include <acpi/acpi_drivers.h>
+#include <acpi/actypes.h>
+#include <linux/wait.h>
+#include <linux/delay.h>
+#include <linux/interrupt.h>
+#include "sbshc.h"
+
+#define ACPI_SMB_HC_CLASS	"smbus_host_controller"
+#define ACPI_SMB_HC_DEVICE_NAME	"ACPI SMBus HC"
+
+struct acpi_smb_hc {
+	struct acpi_ec *ec;
+	struct mutex lock;
+	wait_queue_head_t wait;
+	u8 offset;
+	u8 query_bit;
+	smbus_alarm_callback callback;
+	void *context;
+};
+
+static int acpi_smbus_hc_add(struct acpi_device *device);
+static int acpi_smbus_hc_remove(struct acpi_device *device, int type);
+
+static const struct acpi_device_id sbs_device_ids[] = {
+	{"ACPI0001", 0},
+	{"ACPI0005", 0},
+	{"", 0},
+};
+
+MODULE_DEVICE_TABLE(acpi, sbs_device_ids);
+
+static struct acpi_driver acpi_smb_hc_driver = {
+	.name = "smbus_hc",
+	.class = ACPI_SMB_HC_CLASS,
+	.ids = sbs_device_ids,
+	.ops = {
+		.add = acpi_smbus_hc_add,
+		.remove = acpi_smbus_hc_remove,
+		},
+};
+
+union acpi_smb_status {
+	u8 raw;
+	struct {
+		u8 status:5;
+		u8 reserved:1;
+		u8 alarm:1;
+		u8 done:1;
+	} fields;
+};
+
+enum acpi_smb_status_codes {
+	SMBUS_OK = 0,
+	SMBUS_UNKNOWN_FAILURE = 0x07,
+	SMBUS_DEVICE_ADDRESS_NACK = 0x10,
+	SMBUS_DEVICE_ERROR = 0x11,
+	SMBUS_DEVICE_COMMAND_ACCESS_DENIED = 0x12,
+	SMBUS_UNKNOWN_ERROR = 0x13,
+	SMBUS_DEVICE_ACCESS_DENIED = 0x17,
+	SMBUS_TIMEOUT = 0x18,
+	SMBUS_HOST_UNSUPPORTED_PROTOCOL = 0x19,
+	SMBUS_BUSY = 0x1a,
+	SMBUS_PEC_ERROR = 0x1f,
+};
+
+enum acpi_smb_offset {
+	ACPI_SMB_PROTOCOL = 0,	/* protocol, PEC */
+	ACPI_SMB_STATUS = 1,	/* status */
+	ACPI_SMB_ADDRESS = 2,	/* address */
+	ACPI_SMB_COMMAND = 3,	/* command */
+	ACPI_SMB_DATA = 4,	/* 32 data registers */
+	ACPI_SMB_BLOCK_COUNT = 0x24,	/* number of data bytes */
+	ACPI_SMB_ALARM_ADDRESS = 0x25,	/* alarm address */
+	ACPI_SMB_ALARM_DATA = 0x26,	/* 2 bytes alarm data */
+};
+
+static inline int smb_hc_read(struct acpi_smb_hc *hc, u8 address, u8 *data)
+{
+	return ec_read(hc->offset + address, data);
+}
+
+static inline int smb_hc_write(struct acpi_smb_hc *hc, u8 address, u8 data)
+{
+	return ec_write(hc->offset + address, data);
+}
+
+static inline int smb_check_done(struct acpi_smb_hc *hc)
+{
+	union acpi_smb_status status = {.raw = 0};
+	smb_hc_read(hc, ACPI_SMB_STATUS, &status.raw);
+	return status.fields.done && (status.fields.status == SMBUS_OK);
+}
+
+static int wait_transaction_complete(struct acpi_smb_hc *hc, int timeout)
+{
+	if (wait_event_timeout(hc->wait, smb_check_done(hc),
+			       msecs_to_jiffies(timeout)))
+		return 0;
+	else
+		return -ETIME;
+}
+
+int acpi_smbus_transaction(struct acpi_smb_hc *hc, u8 protocol, u8 address,
+		    u8 command, u8 *data, u8 length)
+{
+	int ret = -EFAULT, i;
+	u8 temp, sz = 0;
+
+	mutex_lock(&hc->lock);
+	if (smb_hc_read(hc, ACPI_SMB_PROTOCOL, &temp))
+		goto end;
+	if (temp) {
+		ret = -EBUSY;
+		goto end;
+	}
+	smb_hc_write(hc, ACPI_SMB_COMMAND, command);
+	smb_hc_write(hc, ACPI_SMB_COMMAND, command);
+	if (!(protocol & 0x01)) {
+		smb_hc_write(hc, ACPI_SMB_BLOCK_COUNT, length);
+		for (i = 0; i < length; ++i)
+			smb_hc_write(hc, ACPI_SMB_DATA + i, data[i]);
+	}
+	smb_hc_write(hc, ACPI_SMB_ADDRESS, address << 1);
+	smb_hc_write(hc, ACPI_SMB_PROTOCOL, protocol);
+	/*
+	 * Wait for completion. Save the status code, data size,
+	 * and data into the return package (if required by the protocol).
+	 */
+	ret = wait_transaction_complete(hc, 1000);
+	if (ret || !(protocol & 0x01))
+		goto end;
+	switch (protocol) {
+	case SMBUS_RECEIVE_BYTE:
+	case SMBUS_READ_BYTE:
+		sz = 1;
+		break;
+	case SMBUS_READ_WORD:
+		sz = 2;
+		break;
+	case SMBUS_READ_BLOCK:
+		if (smb_hc_read(hc, ACPI_SMB_BLOCK_COUNT, &sz)) {
+			ret = -EFAULT;
+			goto end;
+		}
+		sz &= 0x1f;
+		break;
+	}
+	for (i = 0; i < sz; ++i)
+		smb_hc_read(hc, ACPI_SMB_DATA + i, &data[i]);
+      end:
+	mutex_unlock(&hc->lock);
+	return ret;
+}
+
+int acpi_smbus_read(struct acpi_smb_hc *hc, u8 protocol, u8 address,
+		    u8 command, u8 *data)
+{
+	return acpi_smbus_transaction(hc, protocol, address, command, data, 0);
+}
+
+EXPORT_SYMBOL_GPL(acpi_smbus_read);
+
+int acpi_smbus_write(struct acpi_smb_hc *hc, u8 protocol, u8 address,
+		     u8 command, u8 *data, u8 length)
+{
+	return acpi_smbus_transaction(hc, protocol, address, command, data, length);
+}
+
+EXPORT_SYMBOL_GPL(acpi_smbus_write);
+
+int acpi_smbus_register_callback(struct acpi_smb_hc *hc,
+			         smbus_alarm_callback callback, void *context)
+{
+	mutex_lock(&hc->lock);
+	hc->callback = callback;
+	hc->context = context;
+	mutex_unlock(&hc->lock);
+	return 0;
+}
+
+EXPORT_SYMBOL_GPL(acpi_smbus_register_callback);
+
+int acpi_smbus_unregister_callback(struct acpi_smb_hc *hc)
+{
+	mutex_lock(&hc->lock);
+	hc->callback = NULL;
+	hc->context = NULL;
+	mutex_unlock(&hc->lock);
+	return 0;
+}
+
+EXPORT_SYMBOL_GPL(acpi_smbus_unregister_callback);
+
+static void acpi_smbus_callback(void *context)
+{
+	struct acpi_smb_hc *hc = context;
+
+	if (hc->callback)
+		hc->callback(hc->context);
+}
+
+static int smbus_alarm(void *context)
+{
+	struct acpi_smb_hc *hc = context;
+	union acpi_smb_status status;
+	if (smb_hc_read(hc, ACPI_SMB_STATUS, &status.raw))
+		return 0;
+	/* Check if it is only a completion notify */
+	if (status.fields.done)
+		wake_up(&hc->wait);
+	if (!status.fields.alarm)
+		return 0;
+	mutex_lock(&hc->lock);
+	smb_hc_write(hc, ACPI_SMB_STATUS, status.raw);
+	if (hc->callback)
+		acpi_os_execute(OSL_GPE_HANDLER, acpi_smbus_callback, hc);
+	mutex_unlock(&hc->lock);
+	return 0;
+}
+
+typedef int (*acpi_ec_query_func) (void *data);
+
+extern int acpi_ec_add_query_handler(struct acpi_ec *ec, u8 query_bit,
+			      acpi_handle handle, acpi_ec_query_func func,
+			      void *data);
+
+static int acpi_smbus_hc_add(struct acpi_device *device)
+{
+	int status;
+	unsigned long val;
+	struct acpi_smb_hc *hc;
+
+	if (!device)
+		return -EINVAL;
+
+	status = acpi_evaluate_integer(device->handle, "_EC", NULL, &val);
+	if (ACPI_FAILURE(status)) {
+		printk(KERN_ERR PREFIX "error obtaining _EC.\n");
+		return -EIO;
+	}
+
+	strcpy(acpi_device_name(device), ACPI_SMB_HC_DEVICE_NAME);
+	strcpy(acpi_device_class(device), ACPI_SMB_HC_CLASS);
+
+	hc = kzalloc(sizeof(struct acpi_smb_hc), GFP_KERNEL);
+	if (!hc)
+		return -ENOMEM;
+	mutex_init(&hc->lock);
+	init_waitqueue_head(&hc->wait);
+
+	hc->ec = acpi_driver_data(device->parent);
+	hc->offset = (val >> 8) & 0xff;
+	hc->query_bit = val & 0xff;
+	acpi_driver_data(device) = hc;
+
+	acpi_ec_add_query_handler(hc->ec, hc->query_bit, NULL, smbus_alarm, hc);
+	printk(KERN_INFO PREFIX "SBS HC: EC = 0x%p, offset = 0x%0x, query_bit = 0x%0x\n",
+		hc->ec, hc->offset, hc->query_bit);
+
+	return 0;
+}
+
+extern void acpi_ec_remove_query_handler(struct acpi_ec *ec, u8 query_bit);
+
+static int acpi_smbus_hc_remove(struct acpi_device *device, int type)
+{
+	struct acpi_smb_hc *hc;
+
+	if (!device)
+		return -EINVAL;
+
+	hc = acpi_driver_data(device);
+	acpi_ec_remove_query_handler(hc->ec, hc->query_bit);
+	kfree(hc);
+	return 0;
+}
+
+static int __init acpi_smb_hc_init(void)
+{
+	int result;
+
+	result = acpi_bus_register_driver(&acpi_smb_hc_driver);
+	if (result < 0)
+		return -ENODEV;
+	return 0;
+}
+
+static void __exit acpi_smb_hc_exit(void)
+{
+	acpi_bus_unregister_driver(&acpi_smb_hc_driver);
+}
+
+module_init(acpi_smb_hc_init);
+module_exit(acpi_smb_hc_exit);
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Alexey Starikovskiy");
+MODULE_DESCRIPTION("ACPI SMBus HC driver");
diff -urpN linux-2.6.23-sabayon/drivers/acpi/sbshc.h testtry/drivers/acpi/sbshc.h
--- linux-2.6.23-sabayon/drivers/acpi/sbshc.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/acpi/sbshc.h	2007-10-15 14:51:53.000000000 +0000
@@ -0,0 +1,27 @@
+struct acpi_smb_hc;
+enum acpi_smb_protocol {
+	SMBUS_WRITE_QUICK = 2,
+	SMBUS_READ_QUICK = 3,
+	SMBUS_SEND_BYTE = 4,
+	SMBUS_RECEIVE_BYTE = 5,
+	SMBUS_WRITE_BYTE = 6,
+	SMBUS_READ_BYTE = 7,
+	SMBUS_WRITE_WORD  = 8,
+	SMBUS_READ_WORD  = 9,
+	SMBUS_WRITE_BLOCK = 0xa,
+	SMBUS_READ_BLOCK = 0xb,
+	SMBUS_PROCESS_CALL = 0xc,
+	SMBUS_BLOCK_PROCESS_CALL = 0xd,
+};
+
+static const u8 SMBUS_PEC = 0x80;
+
+typedef void (*smbus_alarm_callback)(void *context);
+
+extern int acpi_smbus_read(struct acpi_smb_hc *hc, u8 protocol, u8 address,
+	       u8 command, u8 * data);
+extern int acpi_smbus_write(struct acpi_smb_hc *hc, u8 protocol, u8 slave_address,
+		u8 command, u8 * data, u8 length);
+extern int acpi_smbus_register_callback(struct acpi_smb_hc *hc,
+			         smbus_alarm_callback callback, void *context);
+extern int acpi_smbus_unregister_callback(struct acpi_smb_hc *hc);
diff -urpN linux-2.6.23-sabayon/drivers/acpi/sleep/main.c testtry/drivers/acpi/sleep/main.c
--- linux-2.6.23-sabayon/drivers/acpi/sleep/main.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/sleep/main.c	2007-10-15 14:51:53.000000000 +0000
@@ -44,7 +44,6 @@ int acpi_sleep_prepare(u32 acpi_state)
 	ACPI_FLUSH_CPU_CACHE();
 	acpi_enable_wakeup_device_prep(acpi_state);
 #endif
-	acpi_gpe_sleep_prepare(acpi_state);
 	acpi_enter_sleep_state_prep(acpi_state);
 	return 0;
 }
@@ -256,6 +255,11 @@ static int acpi_hibernation_enter(void)
 
 static void acpi_hibernation_finish(void)
 {
+	/*
+	 * If ACPI is not enabled by the BIOS and the boot kernel, we need to
+	 * enable it here.
+	 */
+	acpi_enable();
 	acpi_leave_sleep_state(ACPI_STATE_S4);
 	acpi_disable_wakeup_device(ACPI_STATE_S4);
 
diff -urpN linux-2.6.23-sabayon/drivers/acpi/sleep/sleep.h testtry/drivers/acpi/sleep/sleep.h
--- linux-2.6.23-sabayon/drivers/acpi/sleep/sleep.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/sleep/sleep.h	2007-10-15 14:51:53.000000000 +0000
@@ -5,6 +5,5 @@ extern int acpi_suspend (u32 state);
 extern void acpi_enable_wakeup_device_prep(u8 sleep_state);
 extern void acpi_enable_wakeup_device(u8 sleep_state);
 extern void acpi_disable_wakeup_device(u8 sleep_state);
-extern void acpi_gpe_sleep_prepare(u32 sleep_state);
 
 extern int acpi_sleep_prepare(u32 acpi_state);
diff -urpN linux-2.6.23-sabayon/drivers/acpi/sleep/wakeup.c testtry/drivers/acpi/sleep/wakeup.c
--- linux-2.6.23-sabayon/drivers/acpi/sleep/wakeup.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/sleep/wakeup.c	2007-10-15 14:51:53.000000000 +0000
@@ -64,36 +64,29 @@ void acpi_enable_wakeup_device(u8 sleep_
 	ACPI_FUNCTION_TRACE("acpi_enable_wakeup_device");
 	spin_lock(&acpi_device_lock);
 	list_for_each_safe(node, next, &acpi_wakeup_device_list) {
-		struct acpi_device *dev = container_of(node,
-						       struct acpi_device,
-						       wakeup_list);
-
+		struct acpi_device *dev =
+			container_of(node, struct acpi_device, wakeup_list);
+		if (!dev->wakeup.flags.valid)
+			continue;
 		/* If users want to disable run-wake GPE,
 		 * we only disable it for wake and leave it for runtime
 		 */
-		if (dev->wakeup.flags.run_wake && !dev->wakeup.state.enabled) {
-			spin_unlock(&acpi_device_lock);
-			acpi_set_gpe_type(dev->wakeup.gpe_device,
-					  dev->wakeup.gpe_number,
-					  ACPI_GPE_TYPE_RUNTIME);
-			/* Re-enable it, since set_gpe_type will disable it */
-			acpi_enable_gpe(dev->wakeup.gpe_device,
-					dev->wakeup.gpe_number, ACPI_ISR);
-			spin_lock(&acpi_device_lock);
+		if (!dev->wakeup.state.enabled ||
+		    sleep_state > (u32) dev->wakeup.sleep_state) {
+			if (dev->wakeup.flags.run_wake) {
+				spin_unlock(&acpi_device_lock);
+				/* set_gpe_type will disable GPE, leave it like that */
+				acpi_set_gpe_type(dev->wakeup.gpe_device,
+						  dev->wakeup.gpe_number,
+						  ACPI_GPE_TYPE_RUNTIME);
+				spin_lock(&acpi_device_lock);
+			}
 			continue;
 		}
-
-		if (!dev->wakeup.flags.valid ||
-		    !dev->wakeup.state.enabled ||
-		    (sleep_state > (u32) dev->wakeup.sleep_state))
-			continue;
-
 		spin_unlock(&acpi_device_lock);
-		/* run-wake GPE has been enabled */
 		if (!dev->wakeup.flags.run_wake)
 			acpi_enable_gpe(dev->wakeup.gpe_device,
 					dev->wakeup.gpe_number, ACPI_ISR);
-		dev->wakeup.state.active = 1;
 		spin_lock(&acpi_device_lock);
 	}
 	spin_unlock(&acpi_device_lock);
@@ -112,26 +105,25 @@ void acpi_disable_wakeup_device(u8 sleep
 
 	spin_lock(&acpi_device_lock);
 	list_for_each_safe(node, next, &acpi_wakeup_device_list) {
-		struct acpi_device *dev = container_of(node,
-						       struct acpi_device,
-						       wakeup_list);
+		struct acpi_device *dev =
+			container_of(node, struct acpi_device, wakeup_list);
 
-		if (dev->wakeup.flags.run_wake && !dev->wakeup.state.enabled) {
-			spin_unlock(&acpi_device_lock);
-			acpi_set_gpe_type(dev->wakeup.gpe_device,
-					  dev->wakeup.gpe_number,
-					  ACPI_GPE_TYPE_WAKE_RUN);
-			/* Re-enable it, since set_gpe_type will disable it */
-			acpi_enable_gpe(dev->wakeup.gpe_device,
-					dev->wakeup.gpe_number, ACPI_NOT_ISR);
-			spin_lock(&acpi_device_lock);
+		if (!dev->wakeup.flags.valid)
 			continue;
-		}
-
-		if (!dev->wakeup.flags.valid ||
-		    !dev->wakeup.state.active ||
-		    (sleep_state > (u32) dev->wakeup.sleep_state))
+		if (!dev->wakeup.state.enabled ||
+		    sleep_state > (u32) dev->wakeup.sleep_state) {
+			if (dev->wakeup.flags.run_wake) {
+				spin_unlock(&acpi_device_lock);
+				acpi_set_gpe_type(dev->wakeup.gpe_device,
+						  dev->wakeup.gpe_number,
+						  ACPI_GPE_TYPE_WAKE_RUN);
+				/* Re-enable it, since set_gpe_type will disable it */
+				acpi_enable_gpe(dev->wakeup.gpe_device,
+						dev->wakeup.gpe_number, ACPI_NOT_ISR);
+				spin_lock(&acpi_device_lock);
+			}
 			continue;
+		}
 
 		spin_unlock(&acpi_device_lock);
 		acpi_disable_wakeup_device_power(dev);
@@ -142,7 +134,6 @@ void acpi_disable_wakeup_device(u8 sleep
 			acpi_clear_gpe(dev->wakeup.gpe_device,
 				       dev->wakeup.gpe_number, ACPI_NOT_ISR);
 		}
-		dev->wakeup.state.active = 0;
 		spin_lock(&acpi_device_lock);
 	}
 	spin_unlock(&acpi_device_lock);
@@ -160,48 +151,20 @@ static int __init acpi_wakeup_device_ini
 		struct acpi_device *dev = container_of(node,
 						       struct acpi_device,
 						       wakeup_list);
-
 		/* In case user doesn't load button driver */
-		if (dev->wakeup.flags.run_wake && !dev->wakeup.state.enabled) {
-			spin_unlock(&acpi_device_lock);
-			acpi_set_gpe_type(dev->wakeup.gpe_device,
-					  dev->wakeup.gpe_number,
-					  ACPI_GPE_TYPE_WAKE_RUN);
-			acpi_enable_gpe(dev->wakeup.gpe_device,
-					dev->wakeup.gpe_number, ACPI_NOT_ISR);
-			dev->wakeup.state.enabled = 1;
-			spin_lock(&acpi_device_lock);
-		}
+		if (!dev->wakeup.flags.run_wake || dev->wakeup.state.enabled)
+			continue;
+		spin_unlock(&acpi_device_lock);
+		acpi_set_gpe_type(dev->wakeup.gpe_device,
+				  dev->wakeup.gpe_number,
+				  ACPI_GPE_TYPE_WAKE_RUN);
+		acpi_enable_gpe(dev->wakeup.gpe_device,
+				dev->wakeup.gpe_number, ACPI_NOT_ISR);
+		dev->wakeup.state.enabled = 1;
+		spin_lock(&acpi_device_lock);
 	}
 	spin_unlock(&acpi_device_lock);
-
 	return 0;
 }
 
 late_initcall(acpi_wakeup_device_init);
-
-/*
- * Disable all wakeup GPEs before entering requested sleep state.
- *	@sleep_state:	ACPI state
- * Since acpi_enter_sleep_state() will disable all
- * RUNTIME GPEs, we simply mark all GPES that
- * are not enabled for wakeup from requested state as RUNTIME.
- */
-void acpi_gpe_sleep_prepare(u32 sleep_state)
-{
-	struct list_head *node, *next;
-
-	list_for_each_safe(node, next, &acpi_wakeup_device_list) {
-		struct acpi_device *dev = container_of(node,
-						       struct acpi_device,
-						       wakeup_list);
-
-		/* The GPE can wakeup system from this state, don't touch it */
-		if ((u32) dev->wakeup.sleep_state >= sleep_state)
-			continue;
-		/* acpi_set_gpe_type will automatically disable GPE */
-		acpi_set_gpe_type(dev->wakeup.gpe_device,
-				  dev->wakeup.gpe_number,
-				  ACPI_GPE_TYPE_RUNTIME);
-	}
-}
diff -urpN linux-2.6.23-sabayon/drivers/acpi/tables/tbutils.c testtry/drivers/acpi/tables/tbutils.c
--- linux-2.6.23-sabayon/drivers/acpi/tables/tbutils.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/tables/tbutils.c	2007-10-15 14:51:53.000000000 +0000
@@ -400,7 +400,7 @@ acpi_tb_parse_root_table(acpi_physical_a
 	u32 table_count;
 	struct acpi_table_header *table;
 	acpi_physical_address address;
-	acpi_physical_address rsdt_address;
+	acpi_physical_address uninitialized_var(rsdt_address);
 	u32 length;
 	u8 *table_entry;
 	acpi_status status;
diff -urpN linux-2.6.23-sabayon/drivers/acpi/thermal.c testtry/drivers/acpi/thermal.c
--- linux-2.6.23-sabayon/drivers/acpi/thermal.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/thermal.c	2007-10-15 14:51:53.000000000 +0000
@@ -195,6 +195,7 @@ struct acpi_thermal {
 	struct acpi_thermal_trips trips;
 	struct acpi_handle_list devices;
 	struct timer_list timer;
+	struct mutex lock;
 };
 
 static const struct file_operations acpi_thermal_state_fops = {
@@ -711,6 +712,7 @@ static void acpi_thermal_check(void *dat
 	int result = 0;
 	struct acpi_thermal *tz = data;
 	unsigned long sleep_time = 0;
+	unsigned long timeout_jiffies = 0;
 	int i = 0;
 	struct acpi_thermal_state state;
 
@@ -720,11 +722,15 @@ static void acpi_thermal_check(void *dat
 		return;
 	}
 
+	/* Check if someone else is already running */
+	if (!mutex_trylock(&tz->lock))
+		return;
+
 	state = tz->state;
 
 	result = acpi_thermal_get_temperature(tz);
 	if (result)
-		return;
+		goto unlock;
 
 	memset(&tz->state, 0, sizeof(tz->state));
 
@@ -787,10 +793,13 @@ static void acpi_thermal_check(void *dat
 	 * a thermal event occurs).  Note that _TSP and _TZD values are
 	 * given in 1/10th seconds (we must covert to milliseconds).
 	 */
-	if (tz->state.passive)
+	if (tz->state.passive) {
 		sleep_time = tz->trips.passive.tsp * 100;
-	else if (tz->polling_frequency > 0)
+		timeout_jiffies =  jiffies + (HZ * sleep_time) / 1000;
+	} else if (tz->polling_frequency > 0) {
 		sleep_time = tz->polling_frequency * 100;
+		timeout_jiffies =  round_jiffies(jiffies + (HZ * sleep_time) / 1000);
+	}
 
 	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "%s: temperature[%lu] sleep[%lu]\n",
 			  tz->name, tz->temperature, sleep_time));
@@ -804,17 +813,16 @@ static void acpi_thermal_check(void *dat
 			del_timer(&(tz->timer));
 	} else {
 		if (timer_pending(&(tz->timer)))
-			mod_timer(&(tz->timer),
-					jiffies + (HZ * sleep_time) / 1000);
+			mod_timer(&(tz->timer), timeout_jiffies);
 		else {
 			tz->timer.data = (unsigned long)tz;
 			tz->timer.function = acpi_thermal_run;
-			tz->timer.expires = jiffies + (HZ * sleep_time) / 1000;
+			tz->timer.expires = timeout_jiffies;
 			add_timer(&(tz->timer));
 		}
 	}
-
-	return;
+      unlock:
+	mutex_unlock(&tz->lock);
 }
 
 /* --------------------------------------------------------------------------
@@ -1251,7 +1259,7 @@ static int acpi_thermal_add(struct acpi_
 	strcpy(acpi_device_name(device), ACPI_THERMAL_DEVICE_NAME);
 	strcpy(acpi_device_class(device), ACPI_THERMAL_CLASS);
 	acpi_driver_data(device) = tz;
-
+	mutex_init(&tz->lock);
 	result = acpi_thermal_get_info(tz);
 	if (result)
 		goto end;
@@ -1321,7 +1329,7 @@ static int acpi_thermal_remove(struct ac
 	}
 
 	acpi_thermal_remove_fs(device);
-
+	mutex_destroy(&tz->lock);
 	kfree(tz);
 	return 0;
 }
diff -urpN linux-2.6.23-sabayon/drivers/acpi/video.c testtry/drivers/acpi/video.c
--- linux-2.6.23-sabayon/drivers/acpi/video.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/acpi/video.c	2007-10-15 14:51:53.000000000 +0000
@@ -409,14 +409,17 @@ acpi_video_device_lcd_query_levels(struc
 static int
 acpi_video_device_lcd_set_level(struct acpi_video_device *device, int level)
 {
-	int status;
+	int status = AE_OK;
 	union acpi_object arg0 = { ACPI_TYPE_INTEGER };
 	struct acpi_object_list args = { 1, &arg0 };
 
 
 	arg0.integer.value = level;
-	status = acpi_evaluate_object(device->dev->handle, "_BCM", &args, NULL);
 
+	if (device->cap._BCM)
+		status = acpi_evaluate_object(device->dev->handle, "_BCM",
+					      &args, NULL);
+	device->brightness->curr = level;
 	return status;
 }
 
@@ -424,11 +427,11 @@ static int
 acpi_video_device_lcd_get_level_current(struct acpi_video_device *device,
 					unsigned long *level)
 {
-	int status;
-
-	status = acpi_evaluate_integer(device->dev->handle, "_BQC", NULL, level);
-
-	return status;
+	if (device->cap._BQC)
+		return acpi_evaluate_integer(device->dev->handle, "_BQC", NULL,
+					     level);
+	*level = device->brightness->curr;
+	return AE_OK;
 }
 
 static int
@@ -1633,9 +1636,20 @@ static int
 acpi_video_get_next_level(struct acpi_video_device *device,
 			  u32 level_current, u32 event)
 {
-	int min, max, min_above, max_below, i, l;
+	int min, max, min_above, max_below, i, l, delta = 255;
 	max = max_below = 0;
 	min = min_above = 255;
+	/* Find closest level to level_current */
+	for (i = 0; i < device->brightness->count; i++) {
+		l = device->brightness->levels[i];
+		if (abs(l - level_current) < abs(delta)) {
+			delta = l - level_current;
+			if (!delta)
+				break;
+		}
+	}
+	/* Ajust level_current to closest available level */
+	level_current += delta;
 	for (i = 0; i < device->brightness->count; i++) {
 		l = device->brightness->levels[i];
 		if (l < min)
diff -urpN linux-2.6.23-sabayon/drivers/ata/sata_mv.c testtry/drivers/ata/sata_mv.c
--- linux-2.6.23-sabayon/drivers/ata/sata_mv.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/ata/sata_mv.c	2007-10-15 14:53:21.000000000 +0000
@@ -69,10 +69,11 @@
 #include <linux/device.h>
 #include <scsi/scsi_host.h>
 #include <scsi/scsi_cmnd.h>
+#include <scsi/scsi_device.h>
 #include <linux/libata.h>
 
 #define DRV_NAME	"sata_mv"
-#define DRV_VERSION	"1.0"
+#define DRV_VERSION	"1.01"
 
 enum {
 	/* BAR's are enumerated in terms of pci_resource_start() terms */
@@ -420,6 +421,7 @@ static void mv_error_handler(struct ata_
 static void mv_post_int_cmd(struct ata_queued_cmd *qc);
 static void mv_eh_freeze(struct ata_port *ap);
 static void mv_eh_thaw(struct ata_port *ap);
+static int mv_slave_config(struct scsi_device *sdev);
 static int mv_init_one(struct pci_dev *pdev, const struct pci_device_id *ent);
 
 static void mv5_phy_errata(struct mv_host_priv *hpriv, void __iomem *mmio,
@@ -457,7 +459,7 @@ static struct scsi_host_template mv5_sht
 	.use_clustering		= 1,
 	.proc_name		= DRV_NAME,
 	.dma_boundary		= MV_DMA_BOUNDARY,
-	.slave_configure	= ata_scsi_slave_config,
+	.slave_configure	= mv_slave_config,
 	.slave_destroy		= ata_scsi_slave_destroy,
 	.bios_param		= ata_std_bios_param,
 };
@@ -475,7 +477,7 @@ static struct scsi_host_template mv6_sht
 	.use_clustering		= 1,
 	.proc_name		= DRV_NAME,
 	.dma_boundary		= MV_DMA_BOUNDARY,
-	.slave_configure	= ata_scsi_slave_config,
+	.slave_configure	= mv_slave_config,
 	.slave_destroy		= ata_scsi_slave_destroy,
 	.bios_param		= ata_std_bios_param,
 };
@@ -763,6 +765,17 @@ static void mv_irq_clear(struct ata_port
 {
 }
 
+static int mv_slave_config(struct scsi_device *sdev)
+{
+	int rc = ata_scsi_slave_config(sdev);
+	if (rc)
+		return rc;
+
+	blk_queue_max_phys_segments(sdev->request_queue, MV_MAX_SG_CT / 2);
+
+	return 0;	/* scsi layer doesn't check return value, sigh */
+}
+
 static void mv_set_edma_ptrs(void __iomem *port_mmio,
 			     struct mv_host_priv *hpriv,
 			     struct mv_port_priv *pp)
@@ -1130,10 +1143,9 @@ static void mv_port_stop(struct ata_port
  *      LOCKING:
  *      Inherited from caller.
  */
-static unsigned int mv_fill_sg(struct ata_queued_cmd *qc)
+static void mv_fill_sg(struct ata_queued_cmd *qc)
 {
 	struct mv_port_priv *pp = qc->ap->private_data;
-	unsigned int n_sg = 0;
 	struct scatterlist *sg;
 	struct mv_sg *mv_sg;
 
@@ -1151,7 +1163,7 @@ static unsigned int mv_fill_sg(struct at
 
 			mv_sg->addr = cpu_to_le32(addr & 0xffffffff);
 			mv_sg->addr_hi = cpu_to_le32((addr >> 16) >> 16);
-			mv_sg->flags_size = cpu_to_le32(len);
+			mv_sg->flags_size = cpu_to_le32(len & 0xffff);
 
 			sg_len -= len;
 			addr += len;
@@ -1160,12 +1172,9 @@ static unsigned int mv_fill_sg(struct at
 				mv_sg->flags_size |= cpu_to_le32(EPRD_FLAG_END_OF_TBL);
 
 			mv_sg++;
-			n_sg++;
 		}
 
 	}
-
-	return n_sg;
 }
 
 static inline void mv_crqb_pack_cmd(__le16 *cmdw, u8 data, u8 addr, unsigned last)
diff -urpN linux-2.6.23-sabayon/drivers/misc/fujitsu-laptop.c testtry/drivers/misc/fujitsu-laptop.c
--- linux-2.6.23-sabayon/drivers/misc/fujitsu-laptop.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/misc/fujitsu-laptop.c	2007-10-15 14:51:53.000000000 +0000
@@ -0,0 +1,358 @@
+/*-*-linux-c-*-*/
+
+/*
+  Copyright (C) 2007 Jonathan Woithe <jwoithe@physics.adelaide.edu.au>
+  Based on earlier work:
+    Copyright (C) 2003 Shane Spencer <shane@bogomip.com>
+    Adrian Yee <brewt-fujitsu@brewt.org>
+
+  Templated from msi-laptop.c which is copyright by its respective authors.
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful, but
+  WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+  General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+  02110-1301, USA.
+ */
+
+/*
+ * fujitsu-laptop.c - Fujitsu laptop support, providing access to additional
+ * features made available on a range of Fujitsu laptops including the
+ * P2xxx/P5xxx/S6xxx/S7xxx series.
+ *
+ * This driver exports a few files in /sys/devices/platform/fujitsu-laptop/;
+ * others may be added at a later date.
+ *
+ *   lcd_level - Screen brightness: contains a single integer in the
+ *   range 0..7. (rw)
+ *
+ * In addition to these platform device attributes the driver
+ * registers itself in the Linux backlight control subsystem and is
+ * available to userspace under /sys/class/backlight/fujitsu-laptop/.
+ *
+ * This driver has been tested on a Fujitsu Lifebook S7020.  It should
+ * work on most P-series and S-series Lifebooks, but YMMV.
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/acpi.h>
+#include <linux/dmi.h>
+#include <linux/backlight.h>
+#include <linux/platform_device.h>
+#include <linux/autoconf.h>
+
+#define FUJITSU_DRIVER_VERSION "0.3"
+
+#define FUJITSU_LCD_N_LEVELS 8
+
+#define ACPI_FUJITSU_CLASS              "fujitsu"
+#define ACPI_FUJITSU_HID                "FUJ02B1"
+#define ACPI_FUJITSU_DRIVER_NAME        "Fujitsu laptop FUJ02B1 ACPI extras driver"
+#define ACPI_FUJITSU_DEVICE_NAME        "Fujitsu FUJ02B1"
+
+struct fujitsu_t {
+	acpi_handle acpi_handle;
+	struct backlight_device *bl_device;
+	struct platform_device *pf_device;
+
+	unsigned long fuj02b1_state;
+	unsigned int brightness_changed;
+	unsigned int brightness_level;
+};
+
+static struct fujitsu_t *fujitsu;
+
+/* Hardware access */
+
+static int set_lcd_level(int level)
+{
+	acpi_status status = AE_OK;
+	union acpi_object arg0 = { ACPI_TYPE_INTEGER };
+	struct acpi_object_list arg_list = { 1, &arg0 };
+	acpi_handle handle = NULL;
+
+	if (level < 0 || level >= FUJITSU_LCD_N_LEVELS)
+		return -EINVAL;
+
+	if (!fujitsu)
+		return -EINVAL;
+
+	status = acpi_get_handle(fujitsu->acpi_handle, "SBLL", &handle);
+	if (ACPI_FAILURE(status)) {
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "SBLL not present\n"));
+		return -ENODEV;
+	}
+
+	arg0.integer.value = level;
+
+	status = acpi_evaluate_object(handle, NULL, &arg_list, NULL);
+	if (ACPI_FAILURE(status))
+		return -ENODEV;
+
+	return 0;
+}
+
+static int get_lcd_level(void)
+{
+	unsigned long state = 0;
+	acpi_status status = AE_OK;
+
+	// Get the Brightness
+	status =
+	    acpi_evaluate_integer(fujitsu->acpi_handle, "GBLL", NULL, &state);
+	if (status < 0)
+		return status;
+
+	fujitsu->fuj02b1_state = state;
+	fujitsu->brightness_level = state & 0x0fffffff;
+
+	if (state & 0x80000000)
+		fujitsu->brightness_changed = 1;
+	else
+		fujitsu->brightness_changed = 0;
+
+	if (status < 0)
+		return status;
+
+	return fujitsu->brightness_level;
+}
+
+/* Backlight device stuff */
+
+static int bl_get_brightness(struct backlight_device *b)
+{
+	return get_lcd_level();
+}
+
+static int bl_update_status(struct backlight_device *b)
+{
+	return set_lcd_level(b->props.brightness);
+}
+
+static struct backlight_ops fujitsubl_ops = {
+	.get_brightness = bl_get_brightness,
+	.update_status = bl_update_status,
+};
+
+/* Platform device */
+
+static ssize_t show_lcd_level(struct device *dev,
+			      struct device_attribute *attr, char *buf)
+{
+
+	int ret;
+
+	ret = get_lcd_level();
+	if (ret < 0)
+		return ret;
+
+	return sprintf(buf, "%i\n", ret);
+}
+
+static ssize_t store_lcd_level(struct device *dev,
+			       struct device_attribute *attr, const char *buf,
+			       size_t count)
+{
+
+	int level, ret;
+
+	if (sscanf(buf, "%i", &level) != 1
+	    || (level < 0 || level >= FUJITSU_LCD_N_LEVELS))
+		return -EINVAL;
+
+	ret = set_lcd_level(level);
+	if (ret < 0)
+		return ret;
+
+	return count;
+}
+
+static DEVICE_ATTR(lcd_level, 0644, show_lcd_level, store_lcd_level);
+
+static struct attribute *fujitsupf_attributes[] = {
+	&dev_attr_lcd_level.attr,
+	NULL
+};
+
+static struct attribute_group fujitsupf_attribute_group = {
+	.attrs = fujitsupf_attributes
+};
+
+static struct platform_driver fujitsupf_driver = {
+	.driver = {
+		   .name = "fujitsu-laptop",
+		   .owner = THIS_MODULE,
+		   }
+};
+
+/* ACPI device */
+
+int acpi_fujitsu_add(struct acpi_device *device)
+{
+	int result = 0;
+	int state = 0;
+
+	ACPI_FUNCTION_TRACE("acpi_fujitsu_add");
+
+	if (!device)
+		return -EINVAL;
+
+	fujitsu->acpi_handle = device->handle;
+	sprintf(acpi_device_name(device), "%s", ACPI_FUJITSU_DEVICE_NAME);
+	sprintf(acpi_device_class(device), "%s", ACPI_FUJITSU_CLASS);
+	acpi_driver_data(device) = fujitsu;
+
+	result = acpi_bus_get_power(fujitsu->acpi_handle, &state);
+	if (result) {
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
+				  "Error reading power state\n"));
+		goto end;
+	}
+
+	printk(KERN_INFO PREFIX "%s [%s] (%s)\n",
+	       acpi_device_name(device), acpi_device_bid(device),
+	       !device->power.state ? "on" : "off");
+
+      end:
+
+	return result;
+}
+
+int acpi_fujitsu_remove(struct acpi_device *device, int type)
+{
+	ACPI_FUNCTION_TRACE("acpi_fujitsu_remove");
+
+	if (!device || !acpi_driver_data(device))
+		return -EINVAL;
+	fujitsu->acpi_handle = 0;
+
+	return 0;
+}
+
+static const struct acpi_device_id fujitsu_device_ids[] = {
+	{ACPI_FUJITSU_HID, 0},
+	{"", 0},
+};
+
+static struct acpi_driver acpi_fujitsu_driver = {
+	.name = ACPI_FUJITSU_DRIVER_NAME,
+	.class = ACPI_FUJITSU_CLASS,
+	.ids = fujitsu_device_ids,
+	.ops = {
+		.add = acpi_fujitsu_add,
+		.remove = acpi_fujitsu_remove,
+		},
+};
+
+/* Initialization */
+
+static int __init fujitsu_init(void)
+{
+	int ret, result;
+
+	if (acpi_disabled)
+		return -ENODEV;
+
+	fujitsu = kmalloc(sizeof(struct fujitsu_t), GFP_KERNEL);
+	if (!fujitsu)
+		return -ENOMEM;
+	memset(fujitsu, 0, sizeof(struct fujitsu_t));
+
+	result = acpi_bus_register_driver(&acpi_fujitsu_driver);
+	if (result < 0) {
+		ret = -ENODEV;
+		goto fail_acpi;
+	}
+
+	/* Register backlight stuff */
+
+	fujitsu->bl_device =
+	    backlight_device_register("fujitsu-laptop", NULL, NULL,
+				      &fujitsubl_ops);
+	if (IS_ERR(fujitsu->bl_device))
+		return PTR_ERR(fujitsu->bl_device);
+
+	fujitsu->bl_device->props.max_brightness = FUJITSU_LCD_N_LEVELS - 1;
+	ret = platform_driver_register(&fujitsupf_driver);
+	if (ret)
+		goto fail_backlight;
+
+	/* Register platform stuff */
+
+	fujitsu->pf_device = platform_device_alloc("fujitsu-laptop", -1);
+	if (!fujitsu->pf_device) {
+		ret = -ENOMEM;
+		goto fail_platform_driver;
+	}
+
+	ret = platform_device_add(fujitsu->pf_device);
+	if (ret)
+		goto fail_platform_device1;
+
+	ret =
+	    sysfs_create_group(&fujitsu->pf_device->dev.kobj,
+			       &fujitsupf_attribute_group);
+	if (ret)
+		goto fail_platform_device2;
+
+	printk(KERN_INFO "fujitsu-laptop: driver " FUJITSU_DRIVER_VERSION
+	       " successfully loaded.\n");
+
+	return 0;
+
+      fail_platform_device2:
+
+	platform_device_del(fujitsu->pf_device);
+
+      fail_platform_device1:
+
+	platform_device_put(fujitsu->pf_device);
+
+      fail_platform_driver:
+
+	platform_driver_unregister(&fujitsupf_driver);
+
+      fail_backlight:
+
+	backlight_device_unregister(fujitsu->bl_device);
+
+      fail_acpi:
+
+	kfree(fujitsu);
+
+	return ret;
+}
+
+static void __exit fujitsu_cleanup(void)
+{
+	sysfs_remove_group(&fujitsu->pf_device->dev.kobj,
+			   &fujitsupf_attribute_group);
+	platform_device_unregister(fujitsu->pf_device);
+	platform_driver_unregister(&fujitsupf_driver);
+	backlight_device_unregister(fujitsu->bl_device);
+
+	acpi_bus_unregister_driver(&acpi_fujitsu_driver);
+
+	kfree(fujitsu);
+
+	printk(KERN_INFO "fujitsu-laptop: driver unloaded.\n");
+}
+
+module_init(fujitsu_init);
+module_exit(fujitsu_cleanup);
+
+MODULE_AUTHOR("Jonathan Woithe");
+MODULE_DESCRIPTION("Fujitsu laptop extras support");
+MODULE_VERSION(FUJITSU_DRIVER_VERSION);
+MODULE_LICENSE("GPL");
diff -urpN linux-2.6.23-sabayon/drivers/misc/Kconfig testtry/drivers/misc/Kconfig
--- linux-2.6.23-sabayon/drivers/misc/Kconfig	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/misc/Kconfig	2007-10-15 14:51:53.000000000 +0000
@@ -129,6 +129,21 @@ config ASUS_LAPTOP
 
 	  If you have an ACPI-compatible ASUS laptop, say Y or M here.
 
+config FUJITSU_LAPTOP
+        tristate "Fujitsu Laptop Extras"
+        depends on X86
+        depends on ACPI
+        depends on BACKLIGHT_CLASS_DEVICE
+        ---help---
+	  This is a driver for laptops built by Fujitsu:
+
+	    * P2xxx/P5xxx/S6xxx/S7xxx series Lifebooks
+	    * Possibly other Fujitsu laptop models
+
+	  It adds support for LCD brightness control.
+
+	  If you have a Fujitsu laptop, say Y or M here.
+
 config MSI_LAPTOP
         tristate "MSI Laptop Extras"
         depends on X86
@@ -152,6 +167,7 @@ config SONY_LAPTOP
 	tristate "Sony Laptop Extras"
 	depends on X86 && ACPI
 	select BACKLIGHT_CLASS_DEVICE
+	depends on INPUT
 	  ---help---
 	  This mini-driver drives the SNC and SPIC devices present in the ACPI
 	  BIOS of the Sony Vaio laptops.
@@ -174,6 +190,7 @@ config THINKPAD_ACPI
 	select BACKLIGHT_CLASS_DEVICE
 	select HWMON
 	select NVRAM
+	depends on INPUT
 	---help---
 	  This is a driver for the IBM and Lenovo ThinkPad laptops. It adds
 	  support for Fn-Fx key combinations, Bluetooth control, video
diff -urpN linux-2.6.23-sabayon/drivers/misc/Kconfig.orig testtry/drivers/misc/Kconfig.orig
--- linux-2.6.23-sabayon/drivers/misc/Kconfig.orig	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/misc/Kconfig.orig	2007-10-15 14:50:51.000000000 +0000
@@ -0,0 +1,244 @@
+#
+# Misc strange devices
+#
+
+menuconfig MISC_DEVICES
+	bool "Misc devices"
+	default y
+	---help---
+	  Say Y here to get to see options for device drivers from various
+	  different categories. This option alone does not add any kernel code.
+
+	  If you say N, all options in this submenu will be skipped and disabled.
+
+if MISC_DEVICES
+
+config IBM_ASM
+	tristate "Device driver for IBM RSA service processor"
+	depends on X86 && PCI && INPUT && EXPERIMENTAL
+	---help---
+	  This option enables device driver support for in-band access to the
+	  IBM RSA (Condor) service processor in eServer xSeries systems.
+	  The ibmasm device driver allows user space application to access
+	  ASM (Advanced Systems Management) functions on the service
+	  processor. The driver is meant to be used in conjunction with
+	  a user space API.
+	  The ibmasm driver also enables the OS to use the UART on the
+	  service processor board as a regular serial port. To make use of
+	  this feature serial driver support (CONFIG_SERIAL_8250) must be
+	  enabled.
+
+	  WARNING: This software may not be supported or function
+	  correctly on your IBM server. Please consult the IBM ServerProven
+	  website <http://www.pc.ibm.com/ww/eserver/xseries/serverproven> for
+	  information on the specific driver level and support statement
+	  for your IBM server.
+
+config PHANTOM
+	tristate "Sensable PHANToM"
+	depends on PCI
+	help
+	  Say Y here if you want to build a driver for Sensable PHANToM device.
+
+	  If you choose to build module, its name will be phantom. If unsure,
+	  say N here.
+
+config EEPROM_93CX6
+	tristate "EEPROM 93CX6 support"
+	---help---
+	  This is a driver for the EEPROM chipsets 93c46 and 93c66.
+	  The driver supports both read as well as write commands.
+
+	  If unsure, say N.
+
+config SGI_IOC4
+	tristate "SGI IOC4 Base IO support"
+	depends on PCI
+	---help---
+	  This option enables basic support for the IOC4 chip on certain
+	  SGI IO controller cards (IO9, IO10, and PCI-RT).  This option
+	  does not enable any specific functions on such a card, but provides
+	  necessary infrastructure for other drivers to utilize.
+
+	  If you have an SGI Altix with an IOC4-based card say Y.
+	  Otherwise say N.
+
+config TIFM_CORE
+	tristate "TI Flash Media interface support (EXPERIMENTAL)"
+	depends on EXPERIMENTAL && PCI
+	help
+	  If you want support for Texas Instruments(R) Flash Media adapters
+	  you should select this option and then also choose an appropriate
+	  host adapter, such as 'TI Flash Media PCI74xx/PCI76xx host adapter
+	  support', if you have a TI PCI74xx compatible card reader, for
+	  example.
+	  You will also have to select some flash card format drivers. MMC/SD
+	  cards are supported via 'MMC/SD Card support: TI Flash Media MMC/SD
+	  Interface support (MMC_TIFM_SD)'.
+
+          To compile this driver as a module, choose M here: the module will
+	  be called tifm_core.
+
+config TIFM_7XX1
+	tristate "TI Flash Media PCI74xx/PCI76xx host adapter support (EXPERIMENTAL)"
+	depends on PCI && TIFM_CORE && EXPERIMENTAL
+	default TIFM_CORE
+	help
+	  This option enables support for Texas Instruments(R) PCI74xx and
+	  PCI76xx families of Flash Media adapters, found in many laptops.
+	  To make actual use of the device, you will have to select some
+	  flash card format drivers, as outlined in the TIFM_CORE Help.
+
+          To compile this driver as a module, choose M here: the module will
+	  be called tifm_7xx1.
+
+config ACER_ACPI
+       tristate "Acer Laptop ACPI Extras (EXPERIMENTAL)"
+       depends on X86
+       depends on ACPI
+       depends on EXPERIMENTAL
+       depends on LEDS_CLASS
+       depends on BACKLIGHT_CLASS_DEVICE
+       ---help---
+         This driver drives the PNP0C14 device found on many Acer laptops from
+         2005 onwards (and known to work on some Fujitsu Siemens laptops). It
+         adds support for wireless, bluetooth, backlight and mail LED control.
+
+         For more information, see <file:Documentation/acer_acpi.txt>
+         and read <http://code.google.com/p/aceracpi/wiki/SupportedHardware>
+         for a list of hardware known to work with the driver.
+
+         If you are not sure, say N here.
+
+config ASUS_LAPTOP
+        tristate "Asus Laptop Extras (EXPERIMENTAL)"
+        depends on X86
+        depends on ACPI
+	depends on EXPERIMENTAL && !ACPI_ASUS
+	depends on LEDS_CLASS
+	depends on BACKLIGHT_CLASS_DEVICE
+        ---help---
+	  This is the new Linux driver for Asus laptops. It may also support some
+	  MEDION, JVC or VICTOR laptops. It makes all the extra buttons generate
+	  standard ACPI events that go through /proc/acpi/events. It also adds
+	  support for video output switching, LCD backlight control, Bluetooth and
+	  Wlan control, and most importantly, allows you to blink those fancy LEDs.
+
+	  For more information and a userspace daemon for handling the extra
+	  buttons see <http://acpi4asus.sf.net/>.
+
+	  If you have an ACPI-compatible ASUS laptop, say Y or M here.
+
+config MSI_LAPTOP
+        tristate "MSI Laptop Extras"
+        depends on X86
+        depends on ACPI_EC
+        depends on BACKLIGHT_CLASS_DEVICE
+        ---help---
+	  This is a driver for laptops built by MSI (MICRO-STAR
+	  INTERNATIONAL):
+
+	  MSI MegaBook S270 (MS-1013)
+	  Cytron/TCM/Medion/Tchibo MD96100/SAM2000
+
+	  It adds support for Bluetooth, WLAN and LCD brightness control.
+
+	  More information about this driver is available at
+	  <http://0pointer.de/lennart/tchibo.html>.
+
+	  If you have an MSI S270 laptop, say Y or M here.
+
+config SONY_LAPTOP
+	tristate "Sony Laptop Extras"
+	depends on X86 && ACPI
+	select BACKLIGHT_CLASS_DEVICE
+	  ---help---
+	  This mini-driver drives the SNC and SPIC devices present in the ACPI
+	  BIOS of the Sony Vaio laptops.
+
+	  It gives access to some extra laptop functionalities like Bluetooth,
+	  screen brightness control, Fn keys and allows powering on/off some
+	  devices.
+
+	  Read <file:Documentation/sony-laptop.txt> for more information.
+
+config SONYPI_COMPAT
+	bool "Sonypi compatibility"
+	depends on SONY_LAPTOP
+	  ---help---
+	  Build the sonypi driver compatibility code into the sony-laptop driver.
+
+config THINKPAD_ACPI
+	tristate "ThinkPad ACPI Laptop Extras"
+	depends on X86 && ACPI
+	select BACKLIGHT_CLASS_DEVICE
+	select HWMON
+	select NVRAM
+	---help---
+	  This is a driver for the IBM and Lenovo ThinkPad laptops. It adds
+	  support for Fn-Fx key combinations, Bluetooth control, video
+	  output switching, ThinkLight control, UltraBay eject and more.
+	  For more information about this driver see 
+	  <file:Documentation/thinkpad-acpi.txt> and <http://ibm-acpi.sf.net/> .
+
+	  This driver was formely known as ibm-acpi.
+
+	  If you have an IBM or Lenovo ThinkPad laptop, say Y or M here.
+
+config THINKPAD_ACPI_DEBUG
+	bool "Verbose debug mode"
+	depends on THINKPAD_ACPI
+	default n
+	---help---
+	  Enables extra debugging information, at the expense of a slightly
+	  increase in driver size.
+
+	  If you are not sure, say N here.
+
+config THINKPAD_ACPI_DOCK
+	bool "Legacy Docking Station Support"
+	depends on THINKPAD_ACPI
+	depends on ACPI_DOCK=n
+	default n
+	---help---
+	  Allows the thinkpad_acpi driver to handle docking station events.
+	  This support was made obsolete by the generic ACPI docking station
+	  support (CONFIG_ACPI_DOCK).  It will allow locking and removing the
+	  laptop from the docking station, but will not properly connect PCI
+	  devices.
+
+	  If you are not sure, say N here.
+
+config THINKPAD_ACPI_BAY
+	bool "Legacy Removable Bay Support"
+	depends on THINKPAD_ACPI
+	default y
+	---help---
+	  Allows the thinkpad_acpi driver to handle removable bays.  It will
+	  eletrically disable the device in the bay, and also generate
+	  notifications when the bay lever is ejected or inserted.
+
+	  If you are not sure, say Y here.
+
+config THINKPAD_EC
+	tristate
+	depends on X86
+	  ---help---
+	  This is a low-level driver for accessing the ThinkPad H8S embedded
+	  controller over the LPC bus (not to be confused with the ACPI Embedded
+	  Controller interface).
+
+config TP_SMAPI
+	tristate "ThinkPad SMAPI Support"
+	depends on X86
+	select THINKPAD_EC
+	default n
+	help
+	  This adds SMAPI support on IBM ThinkPads, mostly used for battery
+	  charge control. For more information about this driver see
+	  <http://www.thinkwiki.org/wiki/tp_smapi>.
+
+	  If you have an IBM ThinkPad laptop, say Y or M here.
+
+
+endif # MISC_DEVICES
diff -urpN linux-2.6.23-sabayon/drivers/misc/Makefile.orig testtry/drivers/misc/Makefile.orig
--- linux-2.6.23-sabayon/drivers/misc/Makefile.orig	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/misc/Makefile.orig	2007-10-15 14:50:51.000000000 +0000
@@ -0,0 +1,20 @@
+#
+# Makefile for misc devices that really don't fit anywhere else.
+#
+obj- := misc.o	# Dummy rule to force built-in.o to be made
+
+obj-$(CONFIG_IBM_ASM)		+= ibmasm/
+obj-$(CONFIG_HDPU_FEATURES)	+= hdpuftrs/
+obj-$(CONFIG_MSI_LAPTOP)     += msi-laptop.o
+obj-$(CONFIG_ACER_ACPI)                += acer_acpi.o
+obj-$(CONFIG_ASUS_LAPTOP)     += asus-laptop.o
+obj-$(CONFIG_LKDTM)		+= lkdtm.o
+obj-$(CONFIG_TIFM_CORE)       	+= tifm_core.o
+obj-$(CONFIG_TIFM_7XX1)       	+= tifm_7xx1.o
+obj-$(CONFIG_PHANTOM)		+= phantom.o
+obj-$(CONFIG_SGI_IOC4)		+= ioc4.o
+obj-$(CONFIG_SONY_LAPTOP)	+= sony-laptop.o
+obj-$(CONFIG_THINKPAD_ACPI)	+= thinkpad_acpi.o
+obj-$(CONFIG_THINKPAD_EC)       += thinkpad_ec.o
+obj-$(CONFIG_TP_SMAPI)          += tp_smapi.o
+obj-$(CONFIG_EEPROM_93CX6)	+= eeprom_93cx6.o
diff -urpN linux-2.6.23-sabayon/drivers/misc/Makefile.rej testtry/drivers/misc/Makefile.rej
--- linux-2.6.23-sabayon/drivers/misc/Makefile.rej	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/misc/Makefile.rej	2007-10-15 14:51:53.000000000 +0000
@@ -0,0 +1,12 @@
+***************
+*** 14,17 ****
+  obj-$(CONFIG_SGI_IOC4)		+= ioc4.o
+  obj-$(CONFIG_SONY_LAPTOP)	+= sony-laptop.o
+  obj-$(CONFIG_THINKPAD_ACPI)	+= thinkpad_acpi.o
+  obj-$(CONFIG_EEPROM_93CX6)	+= eeprom_93cx6.o
+--- 14,18 ----
+  obj-$(CONFIG_SGI_IOC4)		+= ioc4.o
+  obj-$(CONFIG_SONY_LAPTOP)	+= sony-laptop.o
+  obj-$(CONFIG_THINKPAD_ACPI)	+= thinkpad_acpi.o
++ obj-$(CONFIG_FUJITSU_LAPTOP)	+= fujitsu-laptop.o
+  obj-$(CONFIG_EEPROM_93CX6)	+= eeprom_93cx6.o
diff -urpN linux-2.6.23-sabayon/drivers/misc/sony-laptop.c.rej testtry/drivers/misc/sony-laptop.c.rej
--- linux-2.6.23-sabayon/drivers/misc/sony-laptop.c.rej	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/misc/sony-laptop.c.rej	2007-10-15 14:52:10.000000000 +0000
@@ -0,0 +1,461 @@
+***************
+*** 1173,1179 ****
+  #define SONYPI_TYPE3_OFFSET	0x12
+  
+  struct sony_pic_ioport {
+- 	struct acpi_resource_io	io;
+  	struct list_head	list;
+  };
+  
+--- 1173,1180 ----
+  #define SONYPI_TYPE3_OFFSET	0x12
+  
+  struct sony_pic_ioport {
++ 	struct acpi_resource_io	io1;
++ 	struct acpi_resource_io	io2;
+  	struct list_head	list;
+  };
+  
+***************
+*** 1443,1453 ****
+  {
+  	u8 v1, v2;
+  
+- 	wait_on_command(inb_p(spic_dev.cur_ioport->io.minimum + 4) & 2,
+  			ITERATIONS_LONG);
+- 	outb(dev, spic_dev.cur_ioport->io.minimum + 4);
+- 	v1 = inb_p(spic_dev.cur_ioport->io.minimum + 4);
+- 	v2 = inb_p(spic_dev.cur_ioport->io.minimum);
+  	dprintk("sony_pic_call1: 0x%.4x\n", (v2 << 8) | v1);
+  	return v2;
+  }
+--- 1444,1454 ----
+  {
+  	u8 v1, v2;
+  
++ 	wait_on_command(inb_p(spic_dev.cur_ioport->io1.minimum + 4) & 2,
+  			ITERATIONS_LONG);
++ 	outb(dev, spic_dev.cur_ioport->io1.minimum + 4);
++ 	v1 = inb_p(spic_dev.cur_ioport->io1.minimum + 4);
++ 	v2 = inb_p(spic_dev.cur_ioport->io1.minimum);
+  	dprintk("sony_pic_call1: 0x%.4x\n", (v2 << 8) | v1);
+  	return v2;
+  }
+***************
+*** 1456,1468 ****
+  {
+  	u8 v1;
+  
+- 	wait_on_command(inb_p(spic_dev.cur_ioport->io.minimum + 4) & 2,
+  			ITERATIONS_LONG);
+- 	outb(dev, spic_dev.cur_ioport->io.minimum + 4);
+- 	wait_on_command(inb_p(spic_dev.cur_ioport->io.minimum + 4) & 2,
+  			ITERATIONS_LONG);
+- 	outb(fn, spic_dev.cur_ioport->io.minimum);
+- 	v1 = inb_p(spic_dev.cur_ioport->io.minimum);
+  	dprintk("sony_pic_call2: 0x%.4x\n", v1);
+  	return v1;
+  }
+--- 1457,1469 ----
+  {
+  	u8 v1;
+  
++ 	wait_on_command(inb_p(spic_dev.cur_ioport->io1.minimum + 4) & 2,
+  			ITERATIONS_LONG);
++ 	outb(dev, spic_dev.cur_ioport->io1.minimum + 4);
++ 	wait_on_command(inb_p(spic_dev.cur_ioport->io1.minimum + 4) & 2,
+  			ITERATIONS_LONG);
++ 	outb(fn, spic_dev.cur_ioport->io1.minimum);
++ 	v1 = inb_p(spic_dev.cur_ioport->io1.minimum);
+  	dprintk("sony_pic_call2: 0x%.4x\n", v1);
+  	return v1;
+  }
+***************
+*** 1471,1483 ****
+  {
+  	u8 v1;
+  
+- 	wait_on_command(inb_p(spic_dev.cur_ioport->io.minimum + 4) & 2, ITERATIONS_LONG);
+- 	outb(dev, spic_dev.cur_ioport->io.minimum + 4);
+- 	wait_on_command(inb_p(spic_dev.cur_ioport->io.minimum + 4) & 2, ITERATIONS_LONG);
+- 	outb(fn, spic_dev.cur_ioport->io.minimum);
+- 	wait_on_command(inb_p(spic_dev.cur_ioport->io.minimum + 4) & 2, ITERATIONS_LONG);
+- 	outb(v, spic_dev.cur_ioport->io.minimum);
+- 	v1 = inb_p(spic_dev.cur_ioport->io.minimum);
+  	dprintk("sony_pic_call3: 0x%.4x\n", v1);
+  	return v1;
+  }
+--- 1472,1484 ----
+  {
+  	u8 v1;
+  
++ 	wait_on_command(inb_p(spic_dev.cur_ioport->io1.minimum + 4) & 2, ITERATIONS_LONG);
++ 	outb(dev, spic_dev.cur_ioport->io1.minimum + 4);
++ 	wait_on_command(inb_p(spic_dev.cur_ioport->io1.minimum + 4) & 2, ITERATIONS_LONG);
++ 	outb(fn, spic_dev.cur_ioport->io1.minimum);
++ 	wait_on_command(inb_p(spic_dev.cur_ioport->io1.minimum + 4) & 2, ITERATIONS_LONG);
++ 	outb(v, spic_dev.cur_ioport->io1.minimum);
++ 	v1 = inb_p(spic_dev.cur_ioport->io1.minimum);
+  	dprintk("sony_pic_call3: 0x%.4x\n", v1);
+  	return v1;
+  }
+***************
+*** 2074,2080 ****
+  
+  	switch (resource->type) {
+  	case ACPI_RESOURCE_TYPE_START_DEPENDENT:
+  	case ACPI_RESOURCE_TYPE_END_DEPENDENT:
+  		return AE_OK;
+  
+  	case ACPI_RESOURCE_TYPE_IRQ:
+--- 2075,2092 ----
+  
+  	switch (resource->type) {
+  	case ACPI_RESOURCE_TYPE_START_DEPENDENT:
++ 		{
++ 			/* start IO enumeration */
++ 			struct sony_pic_ioport *ioport = kzalloc(sizeof(*ioport), GFP_KERNEL);
++ 			if (!ioport)
++ 				return AE_ERROR;
++ 
++ 			list_add(&ioport->list, &dev->ioports);
++ 			return AE_OK;
++ 		}
++ 
+  	case ACPI_RESOURCE_TYPE_END_DEPENDENT:
++ 		/* end IO enumeration */
+  		return AE_OK;
+  
+  	case ACPI_RESOURCE_TYPE_IRQ:
+***************
+*** 2101,2107 ****
+  				if (!interrupt)
+  					return AE_ERROR;
+  
+- 				list_add_tail(&interrupt->list, &dev->interrupts);
+  				interrupt->irq.triggering = p->triggering;
+  				interrupt->irq.polarity = p->polarity;
+  				interrupt->irq.sharable = p->sharable;
+--- 2113,2119 ----
+  				if (!interrupt)
+  					return AE_ERROR;
+  
++ 				list_add(&interrupt->list, &dev->interrupts);
+  				interrupt->irq.triggering = p->triggering;
+  				interrupt->irq.polarity = p->polarity;
+  				interrupt->irq.sharable = p->sharable;
+***************
+*** 2113,2130 ****
+  	case ACPI_RESOURCE_TYPE_IO:
+  		{
+  			struct acpi_resource_io *io = &resource->data.io;
+- 			struct sony_pic_ioport *ioport = NULL;
+  			if (!io) {
+  				dprintk("Blank IO resource\n");
+  				return AE_OK;
+  			}
+  
+- 			ioport = kzalloc(sizeof(*ioport), GFP_KERNEL);
+- 			if (!ioport)
+  				return AE_ERROR;
+- 
+- 			list_add_tail(&ioport->list, &dev->ioports);
+- 			memcpy(&ioport->io, io, sizeof(*io));
+  			return AE_OK;
+  		}
+  	default:
+--- 2125,2151 ----
+  	case ACPI_RESOURCE_TYPE_IO:
+  		{
+  			struct acpi_resource_io *io = &resource->data.io;
++ 			struct sony_pic_ioport *ioport =
++ 				list_first_entry(&dev->ioports, struct sony_pic_ioport, list);
+  			if (!io) {
+  				dprintk("Blank IO resource\n");
+  				return AE_OK;
+  			}
+  
++ 			if (!ioport->io1.minimum) {
++ 				memcpy(&ioport->io1, io, sizeof(*io));
++ 				dprintk("IO1 at 0x%.4x (0x%.2x)\n", ioport->io1.minimum,
++ 						ioport->io1.address_length);
++ 			}
++ 			else if (!ioport->io2.minimum) {
++ 				memcpy(&ioport->io2, io, sizeof(*io));
++ 				dprintk("IO2 at 0x%.4x (0x%.2x)\n", ioport->io2.minimum,
++ 						ioport->io2.address_length);
++ 			}
++ 			else {
++ 				printk(KERN_ERR DRV_PFX "Unknown SPIC Type, more than 2 IO Ports\n");
+  				return AE_ERROR;
++ 			}
+  			return AE_OK;
+  		}
+  	default:
+***************
+*** 2199,2208 ****
+  {
+  	acpi_status status;
+  	int result = 0;
+  	struct {
+- 		struct acpi_resource io_res;
+- 		struct acpi_resource irq_res;
+- 		struct acpi_resource end;
+  	} *resource;
+  	struct acpi_buffer buffer = { 0, NULL };
+  
+--- 2220,2241 ----
+  {
+  	acpi_status status;
+  	int result = 0;
++ 	/* Type 1 resource layout is:
++ 	 *    IO
++ 	 *    IO
++ 	 *    IRQNoFlags
++ 	 *    End
++ 	 *
++ 	 * Type 2 and 3 resource layout is:
++ 	 *    IO
++ 	 *    IRQNoFlags
++ 	 *    End
++ 	 */
+  	struct {
++ 		struct acpi_resource res1;
++ 		struct acpi_resource res2;
++ 		struct acpi_resource res3;
++ 		struct acpi_resource res4;
+  	} *resource;
+  	struct acpi_buffer buffer = { 0, NULL };
+  
+***************
+*** 2217,2237 ****
+  	buffer.length = sizeof(*resource) + 1;
+  	buffer.pointer = resource;
+  
+- 	/* setup io resource */
+- 	resource->io_res.type = ACPI_RESOURCE_TYPE_IO;
+- 	resource->io_res.length = sizeof(struct acpi_resource);
+- 	memcpy(&resource->io_res.data.io, &ioport->io,
+- 			sizeof(struct acpi_resource_io));
+  
+- 	/* setup irq resource */
+- 	resource->irq_res.type = ACPI_RESOURCE_TYPE_IRQ;
+- 	resource->irq_res.length = sizeof(struct acpi_resource);
+- 	memcpy(&resource->irq_res.data.irq, &irq->irq,
+- 			sizeof(struct acpi_resource_irq));
+- 	/* we requested a shared irq */
+- 	resource->irq_res.data.irq.sharable = ACPI_SHARED;
+  
+- 	resource->end.type = ACPI_RESOURCE_TYPE_END_TAG;
+  
+  	/* Attempt to set the resource */
+  	dprintk("Evaluating _SRS\n");
+--- 2250,2298 ----
+  	buffer.length = sizeof(*resource) + 1;
+  	buffer.pointer = resource;
+  
++ 	/* setup Type 1 resources */
++ 	if (spic_dev.model == SONYPI_DEVICE_TYPE1) {
+  
++ 		/* setup io resources */
++ 		resource->res1.type = ACPI_RESOURCE_TYPE_IO;
++ 		resource->res1.length = sizeof(struct acpi_resource);
++ 		memcpy(&resource->res1.data.io, &ioport->io1,
++ 				sizeof(struct acpi_resource_io));
+  
++ 		resource->res2.type = ACPI_RESOURCE_TYPE_IO;
++ 		resource->res2.length = sizeof(struct acpi_resource);
++ 		memcpy(&resource->res2.data.io, &ioport->io2,
++ 				sizeof(struct acpi_resource_io));
++ 
++ 		/* setup irq resource */
++ 		resource->res3.type = ACPI_RESOURCE_TYPE_IRQ;
++ 		resource->res3.length = sizeof(struct acpi_resource);
++ 		memcpy(&resource->res3.data.irq, &irq->irq,
++ 				sizeof(struct acpi_resource_irq));
++ 		/* we requested a shared irq */
++ 		resource->res3.data.irq.sharable = ACPI_SHARED;
++ 
++ 		resource->res4.type = ACPI_RESOURCE_TYPE_END_TAG;
++ 
++ 	}
++ 	/* setup Type 2/3 resources */
++ 	else {
++ 		/* setup io resource */
++ 		resource->res1.type = ACPI_RESOURCE_TYPE_IO;
++ 		resource->res1.length = sizeof(struct acpi_resource);
++ 		memcpy(&resource->res1.data.io, &ioport->io1,
++ 				sizeof(struct acpi_resource_io));
++ 
++ 		/* setup irq resource */
++ 		resource->res2.type = ACPI_RESOURCE_TYPE_IRQ;
++ 		resource->res2.length = sizeof(struct acpi_resource);
++ 		memcpy(&resource->res2.data.irq, &irq->irq,
++ 				sizeof(struct acpi_resource_irq));
++ 		/* we requested a shared irq */
++ 		resource->res2.data.irq.sharable = ACPI_SHARED;
++ 
++ 		resource->res3.type = ACPI_RESOURCE_TYPE_END_TAG;
++ 	}
+  
+  	/* Attempt to set the resource */
+  	dprintk("Evaluating _SRS\n");
+***************
+*** 2239,2245 ****
+  
+  	/* check for total failure */
+  	if (ACPI_FAILURE(status)) {
+- 		printk(KERN_ERR DRV_PFX "Error evaluating _SRS");
+  		result = -ENODEV;
+  		goto end;
+  	}
+--- 2300,2306 ----
+  
+  	/* check for total failure */
+  	if (ACPI_FAILURE(status)) {
++ 		printk(KERN_ERR DRV_PFX "Error evaluating _SRS\n");
+  		result = -ENODEV;
+  		goto end;
+  	}
+***************
+*** 2268,2278 ****
+  
+  	struct sony_pic_dev *dev = (struct sony_pic_dev *) dev_id;
+  
+- 	ev = inb_p(dev->cur_ioport->io.minimum);
+- 	data_mask = inb_p(dev->cur_ioport->io.minimum + dev->evport_offset);
+  
+  	dprintk("event ([%.2x] [%.2x]) at port 0x%.4x(+0x%.2x)\n",
+- 			ev, data_mask, dev->cur_ioport->io.minimum, dev->evport_offset);
+  
+  	if (ev == 0x00 || ev == 0xff)
+  		return IRQ_HANDLED;
+--- 2329,2342 ----
+  
+  	struct sony_pic_dev *dev = (struct sony_pic_dev *) dev_id;
+  
++ 	ev = inb_p(dev->cur_ioport->io1.minimum);
++ 	if (dev->cur_ioport->io2.minimum)
++ 		data_mask = inb_p(dev->cur_ioport->io2.minimum);
++ 	else
++ 		data_mask = inb_p(dev->cur_ioport->io1.minimum + dev->evport_offset);
+  
+  	dprintk("event ([%.2x] [%.2x]) at port 0x%.4x(+0x%.2x)\n",
++ 			ev, data_mask, dev->cur_ioport->io1.minimum, dev->evport_offset);
+  
+  	if (ev == 0x00 || ev == 0xff)
+  		return IRQ_HANDLED;
+***************
+*** 2323,2330 ****
+  	}
+  
+  	free_irq(spic_dev.cur_irq->irq.interrupts[0], &spic_dev);
+- 	release_region(spic_dev.cur_ioport->io.minimum,
+- 			spic_dev.cur_ioport->io.address_length);
+  
+  	sonypi_compat_exit();
+  
+--- 2387,2397 ----
+  	}
+  
+  	free_irq(spic_dev.cur_irq->irq.interrupts[0], &spic_dev);
++ 	release_region(spic_dev.cur_ioport->io1.minimum,
++ 			spic_dev.cur_ioport->io1.address_length);
++ 	if (spic_dev.cur_ioport->io2.minimum)
++ 		release_region(spic_dev.cur_ioport->io2.minimum,
++ 				spic_dev.cur_ioport->io2.address_length);
+  
+  	sonypi_compat_exit();
+  
+***************
+*** 2397,2410 ****
+  		goto err_remove_input;
+  
+  	/* request io port */
+- 	list_for_each_entry(io, &spic_dev.ioports, list) {
+- 		if (request_region(io->io.minimum, io->io.address_length,
+  					"Sony Programable I/O Device")) {
+- 			dprintk("I/O port: 0x%.4x (0x%.4x) + 0x%.2x\n",
+- 					io->io.minimum, io->io.maximum,
+- 					io->io.address_length);
+- 			spic_dev.cur_ioport = io;
+- 			break;
+  		}
+  	}
+  	if (!spic_dev.cur_ioport) {
+--- 2464,2499 ----
+  		goto err_remove_input;
+  
+  	/* request io port */
++ 	list_for_each_entry_reverse(io, &spic_dev.ioports, list) {
++ 		if (request_region(io->io1.minimum, io->io1.address_length,
+  					"Sony Programable I/O Device")) {
++ 			dprintk("I/O port1: 0x%.4x (0x%.4x) + 0x%.2x\n",
++ 					io->io1.minimum, io->io1.maximum,
++ 					io->io1.address_length);
++ 			/* Type 1 have 2 ioports */
++ 			if (io->io2.minimum) {
++ 				if (request_region(io->io2.minimum,
++ 						io->io2.address_length,
++ 						"Sony Programable I/O Device")) {
++ 					dprintk("I/O port2: 0x%.4x (0x%.4x) + 0x%.2x\n",
++ 							io->io2.minimum, io->io2.maximum,
++ 							io->io2.address_length);
++ 					spic_dev.cur_ioport = io;
++ 					break;
++ 				}
++ 				else {
++ 					dprintk("Unable to get I/O port2: "
++ 							"0x%.4x (0x%.4x) + 0x%.2x\n",
++ 							io->io2.minimum, io->io2.maximum,
++ 							io->io2.address_length);
++ 					release_region(io->io1.minimum,
++ 							io->io1.address_length);
++ 				}
++ 			}
++ 			else {
++ 				spic_dev.cur_ioport = io;
++ 				break;
++ 			}
+  		}
+  	}
+  	if (!spic_dev.cur_ioport) {
+***************
+*** 2414,2420 ****
+  	}
+  
+  	/* request IRQ */
+- 	list_for_each_entry(irq, &spic_dev.interrupts, list) {
+  		if (!request_irq(irq->irq.interrupts[0], sony_pic_irq,
+  					IRQF_SHARED, "sony-laptop", &spic_dev)) {
+  			dprintk("IRQ: %d - triggering: %d - "
+--- 2503,2509 ----
+  	}
+  
+  	/* request IRQ */
++ 	list_for_each_entry_reverse(irq, &spic_dev.interrupts, list) {
+  		if (!request_irq(irq->irq.interrupts[0], sony_pic_irq,
+  					IRQF_SHARED, "sony-laptop", &spic_dev)) {
+  			dprintk("IRQ: %d - triggering: %d - "
+***************
+*** 2462,2469 ****
+  	free_irq(spic_dev.cur_irq->irq.interrupts[0], &spic_dev);
+  
+  err_release_region:
+- 	release_region(spic_dev.cur_ioport->io.minimum,
+- 			spic_dev.cur_ioport->io.address_length);
+  
+  err_remove_compat:
+  	sonypi_compat_exit();
+--- 2551,2561 ----
+  	free_irq(spic_dev.cur_irq->irq.interrupts[0], &spic_dev);
+  
+  err_release_region:
++ 	release_region(spic_dev.cur_ioport->io1.minimum,
++ 			spic_dev.cur_ioport->io1.address_length);
++ 	if (spic_dev.cur_ioport->io2.minimum)
++ 		release_region(spic_dev.cur_ioport->io2.minimum,
++ 				spic_dev.cur_ioport->io2.address_length);
+  
+  err_remove_compat:
+  	sonypi_compat_exit();
diff -urpN linux-2.6.23-sabayon/drivers/misc/thinkpad_acpi.c testtry/drivers/misc/thinkpad_acpi.c
--- linux-2.6.23-sabayon/drivers/misc/thinkpad_acpi.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/misc/thinkpad_acpi.c	2007-10-15 14:52:10.000000000 +0000
@@ -22,7 +22,7 @@
  */
 
 #define IBM_VERSION "0.16"
-#define TPACPI_SYSFS_VERSION 0x010000
+#define TPACPI_SYSFS_VERSION 0x020000
 
 /*
  *  Changelog:
@@ -117,6 +117,12 @@ IBM_BIOS_MODULE_ALIAS("K[U,X-Z]");
 
 #define __unused __attribute__ ((unused))
 
+static enum {
+	TPACPI_LIFE_INIT = 0,
+	TPACPI_LIFE_RUNNING,
+	TPACPI_LIFE_EXITING,
+} tpacpi_lifecycle;
+
 /****************************************************************************
  ****************************************************************************
  *
@@ -342,6 +348,9 @@ static void dispatch_acpi_notify(acpi_ha
 {
 	struct ibm_struct *ibm = data;
 
+	if (tpacpi_lifecycle != TPACPI_LIFE_RUNNING)
+		return;
+
 	if (!ibm || !ibm->acpi || !ibm->acpi->notify)
 		return;
 
@@ -517,8 +526,10 @@ static char *next_cmd(char **cmds)
  ****************************************************************************/
 
 static struct platform_device *tpacpi_pdev;
+static struct platform_device *tpacpi_sensors_pdev;
 static struct class_device *tpacpi_hwmon;
 static struct input_dev *tpacpi_inputdev;
+static struct mutex tpacpi_inputdev_send_mutex;
 
 
 static int tpacpi_resume_handler(struct platform_device *pdev)
@@ -543,6 +554,12 @@ static struct platform_driver tpacpi_pdr
 	.resume = tpacpi_resume_handler,
 };
 
+static struct platform_driver tpacpi_hwmon_pdriver = {
+	.driver = {
+		.name = IBM_HWMON_DRVR_NAME,
+		.owner = THIS_MODULE,
+	},
+};
 
 /*************************************************************************
  * thinkpad-acpi driver attributes
@@ -692,6 +709,8 @@ static int parse_strtoul(const char *buf
 {
 	char *endp;
 
+	while (*buf && isspace(*buf))
+		buf++;
 	*value = simple_strtoul(buf, &endp, 0);
 	while (*endp && isspace(*endp))
 		endp++;
@@ -989,6 +1008,7 @@ static int __init hotkey_init(struct ibm
 
 	int res, i;
 	int status;
+	int hkeyv;
 
 	vdbg_printk(TPACPI_DBG_INIT, "initializing hotkey subdriver\n");
 
@@ -1014,18 +1034,35 @@ static int __init hotkey_init(struct ibm
 			return res;
 
 		/* mask not supported on 570, 600e/x, 770e, 770x, A21e, A2xm/p,
-		   A30, R30, R31, T20-22, X20-21, X22-24 */
-		tp_features.hotkey_mask =
-			acpi_evalf(hkey_handle, NULL, "DHKN", "qv");
+		   A30, R30, R31, T20-22, X20-21, X22-24.  Detected by checking
+		   for HKEY interface version 0x100 */
+		if (acpi_evalf(hkey_handle, &hkeyv, "MHKV", "qd")) {
+			if ((hkeyv >> 8) != 1) {
+				printk(IBM_ERR "unknown version of the "
+				       "HKEY interface: 0x%x\n", hkeyv);
+				printk(IBM_ERR "please report this to %s\n",
+				       IBM_MAIL);
+			} else {
+				/*
+				 * MHKV 0x100 in A31, R40, R40e,
+				 * T4x, X31, and later
+				 * */
+				tp_features.hotkey_mask = 1;
+			}
+		}
 
 		vdbg_printk(TPACPI_DBG_INIT, "hotkey masks are %s\n",
 			str_supported(tp_features.hotkey_mask));
 
 		if (tp_features.hotkey_mask) {
-			/* MHKA available in A31, R40, R40e, T4x, X31, and later */
 			if (!acpi_evalf(hkey_handle, &hotkey_all_mask,
-					"MHKA", "qd"))
+					"MHKA", "qd")) {
+				printk(IBM_ERR
+				       "missing MHKA handler, "
+				       "please report this to %s\n",
+				       IBM_MAIL);
 				hotkey_all_mask = 0x080cU; /* FN+F12, FN+F4, FN+F3 */
+			}
 		}
 
 		res = hotkey_get(&hotkey_orig_status, &hotkey_orig_mask);
@@ -1131,6 +1168,8 @@ static void tpacpi_input_send_key(unsign
 				  unsigned int keycode)
 {
 	if (keycode != KEY_RESERVED) {
+		mutex_lock(&tpacpi_inputdev_send_mutex);
+
 		input_report_key(tpacpi_inputdev, keycode, 1);
 		if (keycode == KEY_UNKNOWN)
 			input_event(tpacpi_inputdev, EV_MSC, MSC_SCAN,
@@ -1142,6 +1181,8 @@ static void tpacpi_input_send_key(unsign
 			input_event(tpacpi_inputdev, EV_MSC, MSC_SCAN,
 				    scancode);
 		input_sync(tpacpi_inputdev);
+
+		mutex_unlock(&tpacpi_inputdev_send_mutex);
 	}
 }
 
@@ -1149,18 +1190,47 @@ static void tpacpi_input_send_radiosw(vo
 {
 	int wlsw;
 
-	if (tp_features.hotkey_wlsw && !hotkey_get_wlsw(&wlsw))
+	mutex_lock(&tpacpi_inputdev_send_mutex);
+
+	if (tp_features.hotkey_wlsw && !hotkey_get_wlsw(&wlsw)) {
 		input_report_switch(tpacpi_inputdev,
 				    SW_RADIO, !!wlsw);
+		input_sync(tpacpi_inputdev);
+	}
+
+	mutex_unlock(&tpacpi_inputdev_send_mutex);
 }
 
 static void hotkey_notify(struct ibm_struct *ibm, u32 event)
 {
 	u32 hkey;
 	unsigned int keycode, scancode;
-	int send_acpi_ev = 0;
+	int send_acpi_ev;
+	int ignore_acpi_ev;
+
+	if (event != 0x80) {
+		printk(IBM_ERR "unknown HKEY notification event %d\n", event);
+		/* forward it to userspace, maybe it knows how to handle it */
+		acpi_bus_generate_netlink_event(ibm->acpi->device->pnp.device_class,
+						ibm->acpi->device->dev.bus_id,
+						event, 0);
+		return;
+	}
+
+	while (1) {
+		if (!acpi_evalf(hkey_handle, &hkey, "MHKP", "d")) {
+			printk(IBM_ERR "failed to retrieve HKEY event\n");
+			return;
+		}
+
+		if (hkey == 0) {
+			/* queue empty */
+			return;
+		}
+
+		send_acpi_ev = 0;
+		ignore_acpi_ev = 0;
 
-	if (event == 0x80 && acpi_evalf(hkey_handle, &hkey, "MHKP", "d")) {
 		switch (hkey >> 12) {
 		case 1:
 			/* 0x1000-0x1FFF: key presses */
@@ -1182,9 +1252,11 @@ static void hotkey_notify(struct ibm_str
 			 * eat up known LID events */
 			if (hkey != 0x5001 && hkey != 0x5002) {
 				printk(IBM_ERR
-					"unknown LID-related hotkey event: 0x%04x\n",
-					hkey);
+				       "unknown LID-related HKEY event: 0x%04x\n",
+				       hkey);
 				send_acpi_ev = 1;
+			} else {
+				ignore_acpi_ev = 1;
 			}
 			break;
 		case 7:
@@ -1202,21 +1274,18 @@ static void hotkey_notify(struct ibm_str
 			printk(IBM_NOTICE "unhandled HKEY event 0x%04x\n", hkey);
 			send_acpi_ev = 1;
 		}
-	} else {
-		printk(IBM_ERR "unknown hotkey notification event %d\n", event);
-		hkey = 0;
-		send_acpi_ev = 1;
-	}
 
-	/* Legacy events */
-	if (send_acpi_ev || hotkey_report_mode < 2)
-		acpi_bus_generate_proc_event(ibm->acpi->device, event, hkey);
+		/* Legacy events */
+		if (!ignore_acpi_ev && (send_acpi_ev || hotkey_report_mode < 2)) {
+			acpi_bus_generate_proc_event(ibm->acpi->device, event, hkey);
+		}
 
-	/* netlink events */
-	if (send_acpi_ev) {
-		acpi_bus_generate_netlink_event(ibm->acpi->device->pnp.device_class,
-						ibm->acpi->device->dev.bus_id,
-						event, hkey);
+		/* netlink events */
+		if (!ignore_acpi_ev && send_acpi_ev) {
+			acpi_bus_generate_netlink_event(ibm->acpi->device->pnp.device_class,
+							ibm->acpi->device->dev.bus_id,
+							event, hkey);
+		}
 	}
 }
 
@@ -2812,7 +2881,7 @@ static int __init thermal_init(struct ib
 
 	switch(thermal_read_mode) {
 	case TPACPI_THERMAL_TPEC_16:
-		res = sysfs_create_group(&tpacpi_pdev->dev.kobj,
+		res = sysfs_create_group(&tpacpi_sensors_pdev->dev.kobj,
 				&thermal_temp_input16_group);
 		if (res)
 			return res;
@@ -2820,7 +2889,7 @@ static int __init thermal_init(struct ib
 	case TPACPI_THERMAL_TPEC_8:
 	case TPACPI_THERMAL_ACPI_TMP07:
 	case TPACPI_THERMAL_ACPI_UPDT:
-		res = sysfs_create_group(&tpacpi_pdev->dev.kobj,
+		res = sysfs_create_group(&tpacpi_sensors_pdev->dev.kobj,
 				&thermal_temp_input8_group);
 		if (res)
 			return res;
@@ -2837,13 +2906,13 @@ static void thermal_exit(void)
 {
 	switch(thermal_read_mode) {
 	case TPACPI_THERMAL_TPEC_16:
-		sysfs_remove_group(&tpacpi_pdev->dev.kobj,
+		sysfs_remove_group(&tpacpi_sensors_pdev->dev.kobj,
 				   &thermal_temp_input16_group);
 		break;
 	case TPACPI_THERMAL_TPEC_8:
 	case TPACPI_THERMAL_ACPI_TMP07:
 	case TPACPI_THERMAL_ACPI_UPDT:
-		sysfs_remove_group(&tpacpi_pdev->dev.kobj,
+		sysfs_remove_group(&tpacpi_sensors_pdev->dev.kobj,
 				   &thermal_temp_input16_group);
 		break;
 	case TPACPI_THERMAL_NONE:
@@ -3626,7 +3695,7 @@ static struct device_attribute dev_attr_
 	__ATTR(fan1_input, S_IRUGO,
 		fan_fan1_input_show, NULL);
 
-/* sysfs fan fan_watchdog (driver) ------------------------------------- */
+/* sysfs fan fan_watchdog (hwmon driver) ------------------------------- */
 static ssize_t fan_fan_watchdog_show(struct device_driver *drv,
 				     char *buf)
 {
@@ -3768,10 +3837,10 @@ static int __init fan_init(struct ibm_in
 
 	if (fan_status_access_mode != TPACPI_FAN_NONE ||
 	    fan_control_access_mode != TPACPI_FAN_WR_NONE) {
-		rc = sysfs_create_group(&tpacpi_pdev->dev.kobj,
+		rc = sysfs_create_group(&tpacpi_sensors_pdev->dev.kobj,
 					 &fan_attr_group);
 		if (!(rc < 0))
-			rc = driver_create_file(&tpacpi_pdriver.driver,
+			rc = driver_create_file(&tpacpi_hwmon_pdriver.driver,
 					&driver_attr_fan_watchdog);
 		if (rc < 0)
 			return rc;
@@ -3854,8 +3923,8 @@ static void fan_exit(void)
 	vdbg_printk(TPACPI_DBG_EXIT, "cancelling any pending fan watchdog tasks\n");
 
 	/* FIXME: can we really do this unconditionally? */
-	sysfs_remove_group(&tpacpi_pdev->dev.kobj, &fan_attr_group);
-	driver_remove_file(&tpacpi_pdriver.driver, &driver_attr_fan_watchdog);
+	sysfs_remove_group(&tpacpi_sensors_pdev->dev.kobj, &fan_attr_group);
+	driver_remove_file(&tpacpi_hwmon_pdriver.driver, &driver_attr_fan_watchdog);
 
 	cancel_delayed_work(&fan_watchdog_task);
 	flush_scheduled_work();
@@ -3888,6 +3957,9 @@ static void fan_watchdog_fire(struct wor
 {
 	int rc;
 
+	if (tpacpi_lifecycle != TPACPI_LIFE_RUNNING)
+		return;
+
 	printk(IBM_NOTICE "fan watchdog: enabling fan\n");
 	rc = fan_set_enable();
 	if (rc < 0) {
@@ -3908,7 +3980,8 @@ static void fan_watchdog_reset(void)
 	if (fan_watchdog_active)
 		cancel_delayed_work(&fan_watchdog_task);
 
-	if (fan_watchdog_maxinterval > 0) {
+	if (fan_watchdog_maxinterval > 0 &&
+	    tpacpi_lifecycle != TPACPI_LIFE_EXITING) {
 		fan_watchdog_active = 1;
 		if (!schedule_delayed_work(&fan_watchdog_task,
 				msecs_to_jiffies(fan_watchdog_maxinterval
@@ -4302,6 +4375,19 @@ static struct ibm_struct fan_driver_data
  ****************************************************************************
  ****************************************************************************/
 
+/* sysfs name ---------------------------------------------------------- */
+static ssize_t thinkpad_acpi_pdev_name_show(struct device *dev,
+			   struct device_attribute *attr,
+			   char *buf)
+{
+	return snprintf(buf, PAGE_SIZE, "%s\n", IBM_NAME);
+}
+
+static struct device_attribute dev_attr_thinkpad_acpi_pdev_name =
+	__ATTR(name, S_IRUGO, thinkpad_acpi_pdev_name_show, NULL);
+
+/* --------------------------------------------------------------------- */
+
 /* /proc support */
 static struct proc_dir_entry *proc_dir;
 
@@ -4674,6 +4760,8 @@ static int __init thinkpad_acpi_module_i
 {
 	int ret, i;
 
+	tpacpi_lifecycle = TPACPI_LIFE_INIT;
+
 	/* Parameter checking */
 	if (hotkey_report_mode > 2)
 		return -EINVAL;
@@ -4702,19 +4790,31 @@ static int __init thinkpad_acpi_module_i
 
 	ret = platform_driver_register(&tpacpi_pdriver);
 	if (ret) {
-		printk(IBM_ERR "unable to register platform driver\n");
+		printk(IBM_ERR "unable to register main platform driver\n");
 		thinkpad_acpi_module_exit();
 		return ret;
 	}
 	tp_features.platform_drv_registered = 1;
 
+	ret = platform_driver_register(&tpacpi_hwmon_pdriver);
+	if (ret) {
+		printk(IBM_ERR "unable to register hwmon platform driver\n");
+		thinkpad_acpi_module_exit();
+		return ret;
+	}
+	tp_features.sensors_pdrv_registered = 1;
+
 	ret = tpacpi_create_driver_attributes(&tpacpi_pdriver.driver);
+	if (!ret) {
+		tp_features.platform_drv_attrs_registered = 1;
+		ret = tpacpi_create_driver_attributes(&tpacpi_hwmon_pdriver.driver);
+	}
 	if (ret) {
 		printk(IBM_ERR "unable to create sysfs driver attributes\n");
 		thinkpad_acpi_module_exit();
 		return ret;
 	}
-	tp_features.platform_drv_attrs_registered = 1;
+	tp_features.sensors_pdrv_attrs_registered = 1;
 
 
 	/* Device initialization */
@@ -4727,7 +4827,26 @@ static int __init thinkpad_acpi_module_i
 		thinkpad_acpi_module_exit();
 		return ret;
 	}
-	tpacpi_hwmon = hwmon_device_register(&tpacpi_pdev->dev);
+	tpacpi_sensors_pdev = platform_device_register_simple(
+							IBM_HWMON_DRVR_NAME,
+							-1, NULL, 0);
+	if (IS_ERR(tpacpi_sensors_pdev)) {
+		ret = PTR_ERR(tpacpi_sensors_pdev);
+		tpacpi_sensors_pdev = NULL;
+		printk(IBM_ERR "unable to register hwmon platform device\n");
+		thinkpad_acpi_module_exit();
+		return ret;
+	}
+	ret = device_create_file(&tpacpi_sensors_pdev->dev,
+				 &dev_attr_thinkpad_acpi_pdev_name);
+	if (ret) {
+		printk(IBM_ERR
+			"unable to create sysfs hwmon device attributes\n");
+		thinkpad_acpi_module_exit();
+		return ret;
+	}
+	tp_features.sensors_pdev_attrs_registered = 1;
+	tpacpi_hwmon = hwmon_device_register(&tpacpi_sensors_pdev->dev);
 	if (IS_ERR(tpacpi_hwmon)) {
 		ret = PTR_ERR(tpacpi_hwmon);
 		tpacpi_hwmon = NULL;
@@ -4735,6 +4854,7 @@ static int __init thinkpad_acpi_module_i
 		thinkpad_acpi_module_exit();
 		return ret;
 	}
+	mutex_init(&tpacpi_inputdev_send_mutex);
 	tpacpi_inputdev = input_allocate_device();
 	if (!tpacpi_inputdev) {
 		printk(IBM_ERR "unable to allocate input device\n");
@@ -4769,6 +4889,7 @@ static int __init thinkpad_acpi_module_i
 		tp_features.input_device_registered = 1;
 	}
 
+	tpacpi_lifecycle = TPACPI_LIFE_RUNNING;
 	return 0;
 }
 
@@ -4776,6 +4897,8 @@ static void thinkpad_acpi_module_exit(vo
 {
 	struct ibm_struct *ibm, *itmp;
 
+	tpacpi_lifecycle = TPACPI_LIFE_EXITING;
+
 	list_for_each_entry_safe_reverse(ibm, itmp,
 					 &tpacpi_all_drivers,
 					 all_drivers) {
@@ -4794,12 +4917,22 @@ static void thinkpad_acpi_module_exit(vo
 	if (tpacpi_hwmon)
 		hwmon_device_unregister(tpacpi_hwmon);
 
+	if (tp_features.sensors_pdev_attrs_registered)
+		device_remove_file(&tpacpi_sensors_pdev->dev,
+				   &dev_attr_thinkpad_acpi_pdev_name);
+	if (tpacpi_sensors_pdev)
+		platform_device_unregister(tpacpi_sensors_pdev);
 	if (tpacpi_pdev)
 		platform_device_unregister(tpacpi_pdev);
 
+	if (tp_features.sensors_pdrv_attrs_registered)
+		tpacpi_remove_driver_attributes(&tpacpi_hwmon_pdriver.driver);
 	if (tp_features.platform_drv_attrs_registered)
 		tpacpi_remove_driver_attributes(&tpacpi_pdriver.driver);
 
+	if (tp_features.sensors_pdrv_registered)
+		platform_driver_unregister(&tpacpi_hwmon_pdriver);
+
 	if (tp_features.platform_drv_registered)
 		platform_driver_unregister(&tpacpi_pdriver);
 
diff -urpN linux-2.6.23-sabayon/drivers/misc/thinkpad_acpi.h testtry/drivers/misc/thinkpad_acpi.h
--- linux-2.6.23-sabayon/drivers/misc/thinkpad_acpi.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/misc/thinkpad_acpi.h	2007-10-15 14:52:10.000000000 +0000
@@ -58,13 +58,14 @@
 
 #define IBM_NAME "thinkpad"
 #define IBM_DESC "ThinkPad ACPI Extras"
-#define IBM_FILE "thinkpad_acpi"
+#define IBM_FILE IBM_NAME "_acpi"
 #define IBM_URL "http://ibm-acpi.sf.net/"
 #define IBM_MAIL "ibm-acpi-devel@lists.sourceforge.net"
 
 #define IBM_PROC_DIR "ibm"
 #define IBM_ACPI_EVENT_PREFIX "ibm"
 #define IBM_DRVR_NAME IBM_FILE
+#define IBM_HWMON_DRVR_NAME IBM_NAME "_hwmon"
 
 #define IBM_LOG IBM_FILE ": "
 #define IBM_ERR	   KERN_ERR    IBM_LOG
@@ -171,6 +172,7 @@ static int parse_strtoul(const char *buf
 
 /* Device model */
 static struct platform_device *tpacpi_pdev;
+static struct platform_device *tpacpi_sensors_pdev;
 static struct class_device *tpacpi_hwmon;
 static struct platform_driver tpacpi_pdriver;
 static struct input_dev *tpacpi_inputdev;
@@ -233,22 +235,25 @@ struct ibm_init_struct {
 
 static struct {
 #ifdef CONFIG_THINKPAD_ACPI_BAY
-	u16 bay_status:1;
-	u16 bay_eject:1;
-	u16 bay_status2:1;
-	u16 bay_eject2:1;
+	u32 bay_status:1;
+	u32 bay_eject:1;
+	u32 bay_status2:1;
+	u32 bay_eject2:1;
 #endif
-	u16 bluetooth:1;
-	u16 hotkey:1;
-	u16 hotkey_mask:1;
-	u16 hotkey_wlsw:1;
-	u16 light:1;
-	u16 light_status:1;
-	u16 wan:1;
-	u16 fan_ctrl_status_undef:1;
-	u16 input_device_registered:1;
-	u16 platform_drv_registered:1;
-	u16 platform_drv_attrs_registered:1;
+	u32 bluetooth:1;
+	u32 hotkey:1;
+	u32 hotkey_mask:1;
+	u32 hotkey_wlsw:1;
+	u32 light:1;
+	u32 light_status:1;
+	u32 wan:1;
+	u32 fan_ctrl_status_undef:1;
+	u32 input_device_registered:1;
+	u32 platform_drv_registered:1;
+	u32 platform_drv_attrs_registered:1;
+	u32 sensors_pdrv_registered:1;
+	u32 sensors_pdrv_attrs_registered:1;
+	u32 sensors_pdev_attrs_registered:1;
 } tp_features;
 
 struct thinkpad_id_data {
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/hostap/hostap_cs.c testtry/drivers/net/wireless/hostap/hostap_cs.c
--- linux-2.6.23-sabayon/drivers/net/wireless/hostap/hostap_cs.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/hostap/hostap_cs.c	2007-10-15 15:10:20.000000000 +0000
@@ -822,6 +822,7 @@ static struct pcmcia_device_id hostap_cs
 	PCMCIA_DEVICE_MANF_CARD(0x0101, 0x0777),
 	PCMCIA_DEVICE_MANF_CARD(0x0126, 0x8000),
 	PCMCIA_DEVICE_MANF_CARD(0x0138, 0x0002),
+	PCMCIA_DEVICE_MANF_CARD(0x01bf, 0x3301),
 	PCMCIA_DEVICE_MANF_CARD(0x0250, 0x0002),
 	PCMCIA_DEVICE_MANF_CARD(0x026f, 0x030b),
 	PCMCIA_DEVICE_MANF_CARD(0x0274, 0x1612),
@@ -889,6 +890,10 @@ static struct pcmcia_device_id hostap_cs
 	PCMCIA_DEVICE_PROD_ID123(
 		"corega", "WL PCCL-11", "ISL37300P",
 		0xa21501a, 0x59868926, 0xc9049a39),
+	PCMCIA_DEVICE_PROD_ID1234(
+		"The Linksys Group, Inc.", "Wireless Network CF Card", "ISL37300P",
+		"RevA",
+		0xa5f472c2, 0x9c05598d, 0xc9049a39, 0x57a66194),
 	PCMCIA_DEVICE_NULL
 };
 MODULE_DEVICE_TABLE(pcmcia, hostap_cs_ids);
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/assoc.c testtry/drivers/net/wireless/libertas/assoc.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/assoc.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/assoc.c	2007-10-15 15:13:17.000000000 +0000
@@ -372,15 +372,40 @@ static int assoc_helper_wpa_keys(wlan_pr
                                  struct assoc_request * assoc_req)
 {
 	int ret = 0;
+	unsigned int flags = assoc_req->flags;
 
 	lbs_deb_enter(LBS_DEB_ASSOC);
 
-	ret = libertas_prepare_and_send_command(priv,
-				    CMD_802_11_KEY_MATERIAL,
-				    CMD_ACT_SET,
-				    CMD_OPTION_WAITFORRSP,
-				    0, assoc_req);
+	/* Work around older firmware bug where WPA unicast and multicast
+	 * keys must be set independently.  Seen in SDIO parts with firmware
+	 * version 5.0.11p0.
+	 */
+
+	if (test_bit(ASSOC_FLAG_WPA_UCAST_KEY, &assoc_req->flags)) {
+		clear_bit(ASSOC_FLAG_WPA_MCAST_KEY, &assoc_req->flags);
+		ret = libertas_prepare_and_send_command(priv,
+					CMD_802_11_KEY_MATERIAL,
+					CMD_ACT_SET,
+					CMD_OPTION_WAITFORRSP,
+					0, assoc_req);
+		assoc_req->flags = flags;
+	}
+
+	if (ret)
+		goto out;
+
+	if (test_bit(ASSOC_FLAG_WPA_MCAST_KEY, &assoc_req->flags)) {
+		clear_bit(ASSOC_FLAG_WPA_UCAST_KEY, &assoc_req->flags);
+
+		ret = libertas_prepare_and_send_command(priv,
+					CMD_802_11_KEY_MATERIAL,
+					CMD_ACT_SET,
+					CMD_OPTION_WAITFORRSP,
+					0, assoc_req);
+		assoc_req->flags = flags;
+	}
 
+out:
 	lbs_deb_leave_args(LBS_DEB_ASSOC, "ret %d", ret);
 	return ret;
 }
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/cmd.c testtry/drivers/net/wireless/libertas/cmd.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/cmd.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/cmd.c	2007-10-15 15:13:17.000000000 +0000
@@ -181,13 +181,13 @@ static int wlan_cmd_802_11_set_wep(wlan_
 
 			switch (pkey->len) {
 			case KEY_LEN_WEP_40:
-				wep->keytype[i] = (u8)CMD_TYPE_WEP_40_BIT;
+				wep->keytype[i] = CMD_TYPE_WEP_40_BIT;
 				memmove(&wep->keymaterial[i], pkey->key,
 				        pkey->len);
 				lbs_deb_cmd("SET_WEP: add key %d (40 bit)\n", i);
 				break;
 			case KEY_LEN_WEP_104:
-				wep->keytype[i] = (u8)CMD_TYPE_WEP_104_BIT;
+				wep->keytype[i] = CMD_TYPE_WEP_104_BIT;
 				memmove(&wep->keymaterial[i], pkey->key,
 				        pkey->len);
 				lbs_deb_cmd("SET_WEP: add key %d (104 bit)\n", i);
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/cmdresp.c testtry/drivers/net/wireless/libertas/cmdresp.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/cmdresp.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/cmdresp.c	2007-10-15 15:13:17.000000000 +0000
@@ -148,7 +148,7 @@ static int wlan_ret_reg_access(wlan_priv
 		ret = -1;
 	}
 
-	lbs_deb_enter_args(LBS_DEB_CMD, "ret %d", ret);
+	lbs_deb_leave_args(LBS_DEB_CMD, "ret %d", ret);
 	return ret;
 }
 
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/debugfs.c testtry/drivers/net/wireless/libertas/debugfs.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/debugfs.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/debugfs.c	2007-10-15 15:13:17.000000000 +0000
@@ -3,6 +3,7 @@
 #include <linux/debugfs.h>
 #include <linux/delay.h>
 #include <linux/mm.h>
+#include <linux/string.h>
 #include <net/iw_handler.h>
 
 #include "dev.h"
@@ -204,7 +205,7 @@ static int libertas_parse_chan(char *buf
 	if (!start)
 		return -EINVAL;
 	start += 5;
-	end = strstr(start, " ");
+	end = strchr(start, ' ');
 	if (!end)
 		end = buf + count;
 	hold = kzalloc((end - start)+1, GFP_KERNEL);
@@ -255,7 +256,7 @@ static void libertas_parse_ssid(char *bu
 	if (!hold)
 		return;
 	hold += 5;
-	end = strstr(hold, " ");
+	end = strchr(hold, ' ');
 	if (!end)
 		end = buf + count - 1;
 
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/host.h testtry/drivers/net/wireless/libertas/host.h
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/host.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/host.h	2007-10-15 15:13:17.000000000 +0000
@@ -138,8 +138,8 @@
 #define CMD_ACT_REMOVE                      0x0004
 #define CMD_ACT_USE_DEFAULT                 0x0008
 
-#define CMD_TYPE_WEP_40_BIT                 0x0001
-#define CMD_TYPE_WEP_104_BIT                0x0002
+#define CMD_TYPE_WEP_40_BIT                 0x01
+#define CMD_TYPE_WEP_104_BIT                0x02
 
 #define CMD_NUM_OF_WEP_KEYS                 4
 
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/if_usb.c testtry/drivers/net/wireless/libertas/if_usb.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/if_usb.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/if_usb.c	2007-10-15 15:13:17.000000000 +0000
@@ -15,7 +15,6 @@
 #include "defs.h"
 #include "dev.h"
 #include "if_usb.h"
-#include "decl.h"
 
 #define MESSAGE_HEADER_LEN	4
 
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/join.c testtry/drivers/net/wireless/libertas/join.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/join.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/join.c	2007-10-15 15:13:17.000000000 +0000
@@ -797,8 +797,6 @@ int libertas_ret_80211_associate(wlan_pr
 		netif_wake_queue(priv->mesh_dev);
 	}
 
-	lbs_deb_join("ASSOC_RESP: Associated \n");
-
 	memcpy(wrqu.ap_addr.sa_data, adapter->curbssparams.bssid, ETH_ALEN);
 	wrqu.ap_addr.sa_family = ARPHRD_ETHER;
 	wireless_send_event(priv->dev, SIOCGIWAP, &wrqu, NULL);
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/scan.c testtry/drivers/net/wireless/libertas/scan.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/scan.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/scan.c	2007-10-15 15:13:17.000000000 +0000
@@ -65,6 +65,15 @@
 static const u8 zeromac[ETH_ALEN] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
 static const u8 bcastmac[ETH_ALEN] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };
 
+
+
+
+/*********************************************************************/
+/*                                                                   */
+/*  Misc helper functions                                            */
+/*                                                                   */
+/*********************************************************************/
+
 static inline void clear_bss_descriptor (struct bss_descriptor * bss)
 {
 	/* Don't blow away ->list, just BSS data */
@@ -165,7 +174,7 @@ static int is_network_compatible(wlan_ad
 {
 	int matched = 0;
 
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	lbs_deb_enter(LBS_DEB_SCAN);
 
 	if (bss->mode != mode)
 		goto done;
@@ -214,13 +223,41 @@ static int is_network_compatible(wlan_ad
 	       (bss->capability & WLAN_CAPABILITY_PRIVACY));
 
 done:
-	lbs_deb_leave(LBS_DEB_SCAN);
+	lbs_deb_leave_args(LBS_DEB_SCAN, "matched: %d", matched);
 	return matched;
 }
 
 /**
+ *  @brief Compare two SSIDs
+ *
+ *  @param ssid1    A pointer to ssid to compare
+ *  @param ssid2    A pointer to ssid to compare
+ *
+ *  @return         0--ssid is same, otherwise is different
+ */
+int libertas_ssid_cmp(u8 *ssid1, u8 ssid1_len, u8 *ssid2, u8 ssid2_len)
+{
+	if (ssid1_len != ssid2_len)
+		return -1;
+
+	return memcmp(ssid1, ssid2, ssid1_len);
+}
+
+
+
+
+/*********************************************************************/
+/*                                                                   */
+/*  Main scanning support                                            */
+/*                                                                   */
+/*********************************************************************/
+
+
+/**
  *  @brief Create a channel list for the driver to scan based on region info
  *
+ *  Only used from wlan_scan_setup_scan_config()
+ *
  *  Use the driver region/band information to construct a comprehensive list
  *    of channels to scan.  This routine is used for any scan that is not
  *    provided a specific channel list to scan.
@@ -248,6 +285,8 @@ static void wlan_scan_create_channel_lis
 	int nextchan;
 	u8 scantype;
 
+	lbs_deb_enter_args(LBS_DEB_SCAN, "filteredscan %d", filteredscan);
+
 	chanidx = 0;
 
 	/* Set the default scan type to the user specified type, will later
@@ -384,6 +423,8 @@ wlan_scan_setup_scan_config(wlan_private
 	int channel;
 	int radiotype;
 
+	lbs_deb_enter(LBS_DEB_SCAN);
+
 	pscancfgout = kzalloc(MAX_SCAN_CFG_ALLOC, GFP_KERNEL);
 	if (pscancfgout == NULL)
 		goto out;
@@ -481,13 +522,12 @@ wlan_scan_setup_scan_config(wlan_private
 
 	if (!puserscanin || !puserscanin->chanlist[0].channumber) {
 		/* Create a default channel scan list */
-		lbs_deb_scan("Scan: Creating full region channel list\n");
+		lbs_deb_scan("creating full region channel list\n");
 		wlan_scan_create_channel_list(priv, pscanchanlist,
 					      *pfilteredscan);
 		goto out;
 	}
 
-	lbs_deb_scan("Scan: Using supplied channel list\n");
 	for (chanidx = 0;
 	     chanidx < WLAN_IOCTL_USER_SCAN_CHAN_MAX
 	     && puserscanin->chanlist[chanidx].channumber; chanidx++) {
@@ -529,7 +569,7 @@ wlan_scan_setup_scan_config(wlan_private
 	    (puserscanin->chanlist[0].channumber ==
 			       priv->adapter->curbssparams.channel)) {
 		*pscancurrentonly = 1;
-		lbs_deb_scan("Scan: Scanning current channel only");
+		lbs_deb_scan("scanning current channel only");
 	}
 
 out:
@@ -539,6 +579,8 @@ out:
 /**
  *  @brief Construct and send multiple scan config commands to the firmware
  *
+ *  Only used from wlan_scan_networks()
+ *
  *  Previous routines have created a wlan_scan_cmd_config with any requested
  *   TLVs.  This function splits the channel TLV into maxchanperscan lists
  *   and sends the portion of the channel TLV along with the other TLVs
@@ -576,12 +618,14 @@ static int wlan_scan_channel_list(wlan_p
 	int scanned = 0;
 	union iwreq_data wrqu;
 
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	lbs_deb_enter_args(LBS_DEB_SCAN, "maxchanperscan %d, filteredscan %d, "
+		"full_scan %d", maxchanperscan, filteredscan, full_scan);
 
-	if (pscancfgout == 0 || pchantlvout == 0 || pscanchanlist == 0) {
-		lbs_deb_scan("Scan: Null detect: %p, %p, %p\n",
-		       pscancfgout, pchantlvout, pscanchanlist);
-		return -1;
+	if (!pscancfgout || !pchantlvout || !pscanchanlist) {
+		lbs_deb_scan("pscancfgout, pchantlvout or "
+			"pscanchanlist is NULL\n");
+		ret = -1;
+		goto out;
 	}
 
 	pchantlvout->header.type = cpu_to_le16(TLV_TYPE_CHANLIST);
@@ -613,9 +657,10 @@ static int wlan_scan_channel_list(wlan_p
 		while (tlvidx < maxchanperscan && ptmpchan->channumber
 		       && !doneearly && scanned < 2) {
 
-			lbs_deb_scan("Scan: Chan(%3d), Radio(%d), mode(%d,%d), "
-			             "Dur(%d)\n",
-			             ptmpchan->channumber, ptmpchan->radiotype,
+			lbs_deb_scan("channel %d, radio %d, passive %d, "
+				"dischanflt %d, maxscantime %d\n",
+				ptmpchan->channumber,
+				ptmpchan->radiotype,
 			             ptmpchan->chanscanmode.passivescan,
 			             ptmpchan->chanscanmode.disablechanfilt,
 			             ptmpchan->maxscantime);
@@ -700,20 +745,25 @@ done:
 		wireless_send_event(priv->dev, SIOCGIWSCAN, &wrqu, NULL);
 	}
 
+out:
 	lbs_deb_leave_args(LBS_DEB_SCAN, "ret %d", ret);
 	return ret;
 }
 
-static void
-clear_selected_scan_list_entries(wlan_adapter * adapter,
-                                 const struct wlan_ioctl_user_scan_cfg * scan_cfg)
+/*
+ * Only used from wlan_scan_networks()
+*/
+static void clear_selected_scan_list_entries(wlan_adapter *adapter,
+	const struct wlan_ioctl_user_scan_cfg *scan_cfg)
 {
-	struct bss_descriptor * bss;
-	struct bss_descriptor * safe;
+	struct bss_descriptor *bss;
+	struct bss_descriptor *safe;
 	u32 clear_ssid_flag = 0, clear_bssid_flag = 0;
 
+	lbs_deb_enter(LBS_DEB_SCAN);
+
 	if (!scan_cfg)
-		return;
+		goto out;
 
 	if (scan_cfg->clear_ssid && scan_cfg->ssid_len)
 		clear_ssid_flag = 1;
@@ -725,7 +775,7 @@ clear_selected_scan_list_entries(wlan_ad
 	}
 
 	if (!clear_ssid_flag && !clear_bssid_flag)
-		return;
+		goto out;
 
 	mutex_lock(&adapter->lock);
 	list_for_each_entry_safe (bss, safe, &adapter->network_list, list) {
@@ -748,12 +798,16 @@ clear_selected_scan_list_entries(wlan_ad
 		}
 	}
 	mutex_unlock(&adapter->lock);
+out:
+	lbs_deb_leave(LBS_DEB_SCAN);
 }
 
 
 /**
  *  @brief Internal function used to start a scan based on an input config
  *
+ *  Also used from debugfs
+ *
  *  Use the input user scan configuration information when provided in
  *    order to send the appropriate scan commands to firmware to populate or
  *    update the internal driver scan table
@@ -761,6 +815,7 @@ clear_selected_scan_list_entries(wlan_ad
  *  @param priv          A pointer to wlan_private structure
  *  @param puserscanin   Pointer to the input configuration for the requested
  *                       scan.
+ *  @param full_scan     ???
  *
  *  @return              0 or < 0 if error
  */
@@ -781,7 +836,7 @@ int wlan_scan_networks(wlan_private * pr
 	int i = 0;
 #endif
 
-	lbs_deb_enter(LBS_DEB_SCAN);
+	lbs_deb_enter_args(LBS_DEB_SCAN, "full_scan %d", full_scan);
 
 	/* Cancel any partial outstanding partial scans if this scan
 	 * is a full scan.
@@ -832,8 +887,9 @@ int wlan_scan_networks(wlan_private * pr
 #ifdef CONFIG_LIBERTAS_DEBUG
 	/* Dump the scan table */
 	mutex_lock(&adapter->lock);
+	lbs_deb_scan("The scan table contains:\n");
 	list_for_each_entry (iter_bss, &adapter->network_list, list) {
-		lbs_deb_scan("Scan:(%02d) " MAC_FMT ", RSSI[%03d], SSID[%s]\n",
+		lbs_deb_scan("scan %02d, " MAC_FMT ", RSSI, %d, SSID '%s'\n",
 		       i++, MAC_ARG(iter_bss->bssid), (s32) iter_bss->rssi,
 		       escape_essid(iter_bss->ssid, iter_bss->ssid_len));
 	}
@@ -884,7 +940,7 @@ static int libertas_process_bss(struct b
 	u16 beaconsize = 0;
 	int ret;
 
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	lbs_deb_enter(LBS_DEB_SCAN);
 
 	if (*bytesleft >= sizeof(beaconsize)) {
 		/* Extract & convert beacon size from the command buffer */
@@ -896,7 +952,8 @@ static int libertas_process_bss(struct b
 	if (beaconsize == 0 || beaconsize > *bytesleft) {
 		*pbeaconinfo += *bytesleft;
 		*bytesleft = 0;
-		return -1;
+		ret = -1;
+		goto done;
 	}
 
 	/* Initialize the current working beacon pointer for this BSS iteration */
@@ -913,7 +970,8 @@ static int libertas_process_bss(struct b
 
 	if ((end - pos) < 12) {
 		lbs_deb_scan("process_bss: Not enough bytes left\n");
-		return -1;
+		ret = -1;
+		goto done;
 	}
 
 	/*
@@ -1089,38 +1147,26 @@ done:
 }
 
 /**
- *  @brief Compare two SSIDs
- *
- *  @param ssid1    A pointer to ssid to compare
- *  @param ssid2    A pointer to ssid to compare
- *
- *  @return         0--ssid is same, otherwise is different
- */
-int libertas_ssid_cmp(u8 *ssid1, u8 ssid1_len, u8 *ssid2, u8 ssid2_len)
-{
-	if (ssid1_len != ssid2_len)
-		return -1;
-
-	return memcmp(ssid1, ssid2, ssid1_len);
-}
-
-/**
  *  @brief This function finds a specific compatible BSSID in the scan list
  *
+ *  Used in association code
+ *
  *  @param adapter  A pointer to wlan_adapter
  *  @param bssid    BSSID to find in the scan list
  *  @param mode     Network mode: Infrastructure or IBSS
  *
  *  @return         index in BSSID list, or error return code (< 0)
  */
-struct bss_descriptor * libertas_find_bssid_in_list(wlan_adapter * adapter,
+struct bss_descriptor *libertas_find_bssid_in_list(wlan_adapter * adapter,
 		u8 * bssid, u8 mode)
 {
 	struct bss_descriptor * iter_bss;
 	struct bss_descriptor * found_bss = NULL;
 
+	lbs_deb_enter(LBS_DEB_SCAN);
+
 	if (!bssid)
-		return NULL;
+		goto out;
 
 	lbs_deb_hex(LBS_DEB_SCAN, "looking for",
 		bssid, ETH_ALEN);
@@ -1147,12 +1193,16 @@ struct bss_descriptor * libertas_find_bs
 	}
 	mutex_unlock(&adapter->lock);
 
+out:
+	lbs_deb_leave_args(LBS_DEB_SCAN, "found_bss %p", found_bss);
 	return found_bss;
 }
 
 /**
  *  @brief This function finds ssid in ssid list.
  *
+ *  Used in association code
+ *
  *  @param adapter  A pointer to wlan_adapter
  *  @param ssid     SSID to find in the list
  *  @param bssid    BSSID to qualify the SSID selection (if provided)
@@ -1169,6 +1219,8 @@ struct bss_descriptor * libertas_find_ss
 	struct bss_descriptor * found_bss = NULL;
 	struct bss_descriptor * tmp_oldest = NULL;
 
+	lbs_deb_enter(LBS_DEB_SCAN);
+
 	mutex_lock(&adapter->lock);
 
 	list_for_each_entry (iter_bss, &adapter->network_list, list) {
@@ -1213,6 +1265,7 @@ struct bss_descriptor * libertas_find_ss
 
 out:
 	mutex_unlock(&adapter->lock);
+	lbs_deb_leave_args(LBS_DEB_SCAN, "found_bss %p", found_bss);
 	return found_bss;
 }
 
@@ -1233,6 +1286,8 @@ static struct bss_descriptor * libertas_
 	struct bss_descriptor * iter_bss;
 	struct bss_descriptor * best_bss = NULL;
 
+	lbs_deb_enter(LBS_DEB_SCAN);
+
 	mutex_lock(&adapter->lock);
 
 	list_for_each_entry (iter_bss, &adapter->network_list, list) {
@@ -1257,12 +1312,15 @@ static struct bss_descriptor * libertas_
 	}
 
 	mutex_unlock(&adapter->lock);
+	lbs_deb_leave_args(LBS_DEB_SCAN, "best_bss %p", best_bss);
 	return best_bss;
 }
 
 /**
  *  @brief Find the AP with specific ssid in the scan list
  *
+ *  Used from association worker.
+ *
  *  @param priv         A pointer to wlan_private structure
  *  @param pSSID        A pointer to AP's ssid
  *
@@ -1275,11 +1333,11 @@ int libertas_find_best_network_ssid(wlan
 	int ret = -1;
 	struct bss_descriptor * found;
 
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	lbs_deb_enter(LBS_DEB_SCAN);
 
 	wlan_scan_networks(priv, NULL, 1);
 	if (adapter->surpriseremoved)
-		return -1;
+		goto out;
 
 	wait_event_interruptible(adapter->cmd_pending, !adapter->nr_cmd_pending);
 
@@ -1291,6 +1349,7 @@ int libertas_find_best_network_ssid(wlan
 		ret = 0;
 	}
 
+out:
 	lbs_deb_leave_args(LBS_DEB_SCAN, "ret %d", ret);
 	return ret;
 }
@@ -1325,10 +1384,17 @@ int libertas_set_scan(struct net_device 
 	return 0;
 }
 
+
 /**
  *  @brief Send a scan command for all available channels filtered on a spec
  *
+ *  Used in association code and from debugfs
+ *
  *  @param priv             A pointer to wlan_private structure
+ *  @param ssid             A pointer to the SSID to scan for
+ *  @param ssid_len         Length of the SSID
+ *  @param clear_ssid       Should existing scan results with this SSID
+ *                          be cleared?
  *  @param prequestedssid   A pointer to AP's ssid
  *  @param keeppreviousscan Flag used to save/clear scan table before scan
  *
@@ -1341,7 +1407,8 @@ int libertas_send_specific_ssid_scan(wla
 	struct wlan_ioctl_user_scan_cfg scancfg;
 	int ret = 0;
 
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	lbs_deb_enter_args(LBS_DEB_SCAN, "SSID '%s', clear %d",
+		escape_essid(ssid, ssid_len), clear_ssid);
 
 	if (!ssid_len)
 		goto out;
@@ -1352,15 +1419,26 @@ int libertas_send_specific_ssid_scan(wla
 	scancfg.clear_ssid = clear_ssid;
 
 	wlan_scan_networks(priv, &scancfg, 1);
-	if (adapter->surpriseremoved)
-		return -1;
+	if (adapter->surpriseremoved) {
+		ret = -1;
+		goto out;
+	}
 	wait_event_interruptible(adapter->cmd_pending, !adapter->nr_cmd_pending);
 
 out:
-	lbs_deb_leave(LBS_DEB_ASSOC);
+	lbs_deb_leave_args(LBS_DEB_SCAN, "ret %d", ret);
 	return ret;
 }
 
+
+
+
+/*********************************************************************/
+/*                                                                   */
+/*  Support for Wireless Extensions                                  */
+/*                                                                   */
+/*********************************************************************/
+
 #define MAX_CUSTOM_LEN 64
 
 static inline char *libertas_translate_scan(wlan_private *priv,
@@ -1377,10 +1455,13 @@ static inline char *libertas_translate_s
 #define RSSI_DIFF    ((u8)(PERFECT_RSSI - WORST_RSSI))
 	u8 rssi;
 
+	lbs_deb_enter(LBS_DEB_SCAN);
+
 	cfp = libertas_find_cfp_by_band_and_channel(adapter, 0, bss->channel);
 	if (!cfp) {
 		lbs_deb_scan("Invalid channel number %d\n", bss->channel);
-		return NULL;
+		start = NULL;
+		goto out;
 	}
 
 	/* First entry *MUST* be the AP BSSID */
@@ -1508,11 +1589,13 @@ static inline char *libertas_translate_s
 			start = iwe_stream_add_point(start, stop, &iwe, custom);
 	}
 
+out:
+	lbs_deb_leave_args(LBS_DEB_SCAN, "start %p", start);
 	return start;
 }
 
 /**
- *  @brief  Retrieve the scan table entries via wireless tools IOCTL call
+ *  @brief  Handle Retrieve scan table ioctl
  *
  *  @param dev          A pointer to net_device structure
  *  @param info         A pointer to iw_request_info structure
@@ -1533,7 +1616,7 @@ int libertas_get_scan(struct net_device 
 	struct bss_descriptor * iter_bss;
 	struct bss_descriptor * safe;
 
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	lbs_deb_enter(LBS_DEB_SCAN);
 
 	/* Update RSSI if current BSS is a locally created ad-hoc BSS */
 	if ((adapter->mode == IW_MODE_ADHOC) && adapter->adhoccreate) {
@@ -1575,19 +1658,27 @@ int libertas_get_scan(struct net_device 
 	dwrq->length = (ev - extra);
 	dwrq->flags = 0;
 
-	lbs_deb_leave(LBS_DEB_ASSOC);
+	lbs_deb_leave_args(LBS_DEB_SCAN, "ret %d", err);
 	return err;
 }
 
+
+
+
+/*********************************************************************/
+/*                                                                   */
+/*  Command execution                                                */
+/*                                                                   */
+/*********************************************************************/
+
+
 /**
  *  @brief Prepare a scan command to be sent to the firmware
  *
- *  Use the wlan_scan_cmd_config sent to the command processing module in
- *   the libertas_prepare_and_send_command to configure a cmd_ds_802_11_scan command
- *   struct to send to firmware.
+ *  Called from libertas_prepare_and_send_command() in cmd.c
  *
- *  The fixed fields specifying the BSS type and BSSID filters as well as a
- *   variable number/length of TLVs are sent in the command to firmware.
+ *  Sends a fixed lenght data part (specifying the BSS type and BSSID filters)
+ *  as well as a variable number/length of TLVs to the firmware.
  *
  *  @param priv       A pointer to wlan_private structure
  *  @param cmd        A pointer to cmd_ds_command structure to be sent to
@@ -1596,18 +1687,14 @@ int libertas_get_scan(struct net_device 
  *                    to set the fields/TLVs for the command sent to firmware
  *
  *  @return           0 or -1
- *
- *  @sa wlan_scan_create_channel_list
  */
 int libertas_cmd_80211_scan(wlan_private * priv,
 			 struct cmd_ds_command *cmd, void *pdata_buf)
 {
 	struct cmd_ds_802_11_scan *pscan = &cmd->params.scan;
-	struct wlan_scan_cmd_config *pscancfg;
-
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	struct wlan_scan_cmd_config *pscancfg = pdata_buf;
 
-	pscancfg = pdata_buf;
+	lbs_deb_enter(LBS_DEB_SCAN);
 
 	/* Set fixed field variables in scan command */
 	pscan->bsstype = pscancfg->bsstype;
@@ -1620,11 +1707,11 @@ int libertas_cmd_80211_scan(wlan_private
 	cmd->size = cpu_to_le16(sizeof(pscan->bsstype) + ETH_ALEN
 				+ pscancfg->tlvbufferlen + S_DS_GEN);
 
-	lbs_deb_scan("SCAN_CMD: command=%x, size=%x, seqnum=%x\n",
+	lbs_deb_scan("SCAN_CMD: command 0x%04x, size %d, seqnum %d\n",
 		     le16_to_cpu(cmd->command), le16_to_cpu(cmd->size),
 		     le16_to_cpu(cmd->seqnum));
 
-	lbs_deb_leave(LBS_DEB_ASSOC);
+	lbs_deb_leave(LBS_DEB_SCAN);
 	return 0;
 }
 
@@ -1643,6 +1730,8 @@ static inline int is_same_network(struct
 /**
  *  @brief This function handles the command response of scan
  *
+ *  Called from handle_cmd_response() in cmdrespc.
+ *
  *   The response buffer for the scan command has the following
  *      memory layout:
  *
@@ -1677,7 +1766,7 @@ int libertas_ret_80211_scan(wlan_private
 	int tlvbufsize;
 	int ret;
 
-	lbs_deb_enter(LBS_DEB_ASSOC);
+	lbs_deb_enter(LBS_DEB_SCAN);
 
 	/* Prune old entries from scan table */
 	list_for_each_entry_safe (iter_bss, safe, &adapter->network_list, list) {
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/libertas/wext.c testtry/drivers/net/wireless/libertas/wext.c
--- linux-2.6.23-sabayon/drivers/net/wireless/libertas/wext.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/libertas/wext.c	2007-10-15 15:13:17.000000000 +0000
@@ -237,37 +237,16 @@ static int wlan_set_nick(struct net_devi
 static int wlan_get_nick(struct net_device *dev, struct iw_request_info *info,
 			 struct iw_point *dwrq, char *extra)
 {
-	const char *cp;
-	char comm[6] = { "COMM-" };
-	char mrvl[6] = { "MRVL-" };
-	int cnt;
+	wlan_private *priv = dev->priv;
+	wlan_adapter *adapter = priv->adapter;
 
 	lbs_deb_enter(LBS_DEB_WEXT);
 
-	/*
-	 * Nick Name is not used internally in this mode,
-	 * therefore return something useful instead. Jean II
-	 */
-
-	strcpy(extra, mrvl);
-
-	cp = strstr(libertas_driver_version, comm);
-	if (cp == libertas_driver_version)	//skip leading "COMM-"
-		cp = libertas_driver_version + strlen(comm);
-	else
-		cp = libertas_driver_version;
+	dwrq->length = strlen(adapter->nodename);
+	memcpy(extra, adapter->nodename, dwrq->length);
+	extra[dwrq->length] = '\0';
 
-	cnt = strlen(mrvl);
-	extra += cnt;
-	while (cnt < 16 && (*cp != '-')) {
-		*extra++ = toupper(*cp++);
-		cnt++;
-	}
-
-	/*
-	 * Push it out !
-	 */
-	dwrq->length = cnt;
+	dwrq->flags = 1;	/* active */
 
 	lbs_deb_leave(LBS_DEB_WEXT);
 	return 0;
@@ -297,6 +276,7 @@ static int mesh_get_nick(struct net_devi
 	lbs_deb_leave(LBS_DEB_WEXT);
 	return 0;
 }
+
 static int wlan_set_rts(struct net_device *dev, struct iw_request_info *info,
 			struct iw_param *vwrq, char *extra)
 {
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/Module.symvers testtry/drivers/net/wireless/Module.symvers
--- linux-2.6.23-sabayon/drivers/net/wireless/Module.symvers	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/Module.symvers	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,108 @@
+0x9e49639f	rt2x00pci_uninitialize	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xf43570e9	hostap_handle_sta_tx_exc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x0ad7d270	hostap_info_process	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x078c6eb3	hostap_set_multicast_list_queue	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xf2a3a9da	free_orinocodev	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xb5179941	hostap_check_sta_fw_version	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xc60b5e9e	hermes_bap_pwrite	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x93e53be5	rt2x00usb_vendor_request	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x1d412fa1	rt2x00usb_disable_radio	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xd5168829	hermes_allocate	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x06094f2c	rt2x00lib_remove_dev	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xa75a3422	p54_free_common	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0x6cb9d5ea	init_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0xe4668f90	atmel_open	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0x7a84a725	rt2x00mac_get_stats	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xd6574c8b	libertas_send_tx_feedback	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x5647897a	stop_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0x70378f78	hostap_set_roaming	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x40dfa39e	hostap_set_encryption	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x5c72fd5c	hostap_80211_rx	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x087fdeea	rt2x00usb_write_tx_data	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x216cf45f	rt2x00lib_write_tx_desc	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x7d845306	hostap_set_hostapd	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x204d376b	hostap_init_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x48cfc502	rt2x00usb_initialize	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xf8fdeeb4	p54_rx	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0x27a069d6	hostap_dump_rx_header	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x3abcbf80	hostap_dump_tx_header	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x37c40dfe	libertas_interrupt	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x1f7d1164	rt2x00usb_enable_radio	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x53544b97	hostap_free_data	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x6d164e8c	rt2x00mac_add_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xd5cf1a72	rt2x00usb_vendor_request_buff	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x7efec5f4	libertas_remove_mesh	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x73da882b	hostap_get_stats	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x843a632d	libertas_process_rxed_packet	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xceecfc05	hostap_info_init	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xdd8c58f6	__orinoco_down	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xed47b224	hermes_struct_init	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x8cdbe249	rt2x00mac_remove_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xf1bec9df	rt2x00pci_suspend	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xe477a5da	rt2x00mac_conf_tx	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x5ca810b6	hostap_add_interface	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xce0311cc	rt2x00pci_remove	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x24c2d556	rt2x00pci_resume	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xed105e12	libertas_add_mesh	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xd17b5710	p54_parse_eeprom	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0x2d1c82c4	rt2x00usb_probe	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x01dbb07e	libertas_start_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xd54e219d	hermes_docmd_wait	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x17a4bdc8	rt2x00usb_uninitialize	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xde58c104	hostap_80211_header_parse	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x2f19a9ef	hostap_set_string	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x3cb49af5	rt2x00mac_config	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x97a01170	orinoco_reinit_firmware	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xaa748adb	p54_fill_eeprom_readback	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0xc3eb5494	rt2x00mac_config_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x4e733d36	rt2x00pci_rxdone	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xe2bcd460	rt2x00mac_get_tx_stats	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x4196c38b	hermes_write_ltv	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x58a70f46	hostap_init_data	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x973045c8	libertas_add_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x56fff9a1	prism2_update_comms_qual	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x861c0feb	reset_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0x1ce6a90f	rt2x00lib_txdone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x0e81d9dc	rt2x00lib_suspend	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x52f8ff21	rt2x00lib_beacondone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xfd774188	hostap_remove_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xe56c102f	rt2x00lib_resume	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x5d934c61	rt2x00usb_disconnect	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xb389be05	libertas_prepare_and_send_command	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x321c5e1d	libertas_reset_device	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xe3e5d063	hostap_set_word	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x5ae9de22	libertas_stop_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x0085abe1	hostap_init_ap_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x616ce30b	alloc_orinocodev	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0x49f5c36e	rt2x00mac_tx	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x3b0537ce	rt2x00mac_erp_ie_changed	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xcc888113	init_atmel_card	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0x6903f16c	hostap_80211_get_hdrlen	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xa8cfc855	hostap_set_auth_algs	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x9966f83f	__orinoco_up	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xf51eb97e	rt2x00pci_write_tx_data	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xb1d5966c	rt2x00lib_rxdone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xb668e92b	rt2x00lib_probe_dev	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x36e8b784	rt2x00pci_initialize	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x6ba3058f	rt2x00usb_suspend	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x89602f5d	hostap_set_hostapd_sta	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x12dde9b7	libertas_debug	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xfd697c64	libertas_remove_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x496923a0	rt2x00usb_resume	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x94e11af9	stop_atmel_card	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0xd3f714e5	hermes_bap_pread	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0xd23bf6f4	p54_parse_firmware	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0xa50fa2c2	hostap_master_start_xmit	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xd5336e5d	hermes_init	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x66476c85	rt2x00mac_stop	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x6f04ba95	hostap_remove_interface	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xe21289c3	hostap_get_porttype	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x7489feae	rt2x00pci_beacon_update	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x4eeeb2ef	hostap_setup_dev	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xda6d2d87	rt2x00mac_start	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x75f18d9c	hostap_set_antsel	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x1a9d334a	orinoco_interrupt	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xd38d8ae2	hermes_read_ltv	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x35cf49a2	p54_init_common	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0x10fa8562	rt2x00lib_get_ring	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x81d1d295	rt2x00pci_probe	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/p54usb.c testtry/drivers/net/wireless/p54usb.c
--- linux-2.6.23-sabayon/drivers/net/wireless/p54usb.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/p54usb.c	2007-10-15 15:09:53.000000000 +0000
@@ -62,6 +62,7 @@ static struct usb_device_id p54u_table[]
 	{USB_DEVICE(0x0cde, 0x0008)},	/* Sagem XG703A */
 	{USB_DEVICE(0x0d8e, 0x3762)},	/* DLink DWL-G120 Cohiba */
 	{USB_DEVICE(0x09aa, 0x1000)},	/* Spinnaker Proto board */
+	{USB_DEVICE(0x13B1, 0x000C)},	/* Linksys WUSB54AG */
 	{USB_DEVICE(0x1435, 0x0427)},	/* Inventel UR054G */
 	{USB_DEVICE(0x2001, 0x3704)},	/* DLink DWL-G122 rev A2 */
 	{USB_DEVICE(0x413c, 0x8102)},	/* Spinnaker DUT */
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2400pci.c testtry/drivers/net/wireless/rt2x00/rt2400pci.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2400pci.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt2400pci.c	2007-10-15 15:09:24.000000000 +0000
@@ -417,11 +417,10 @@ static void rt2400pci_config_antenna(str
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r1, BBP_R1_TX_ANTENNA, 2);
@@ -440,11 +439,10 @@ static void rt2400pci_config_antenna(str
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2500pci.c testtry/drivers/net/wireless/rt2x00/rt2500pci.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2500pci.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt2500pci.c	2007-10-15 15:09:24.000000000 +0000
@@ -446,11 +446,10 @@ static void rt2500pci_config_antenna(str
 	case ANTENNA_HW_DIVERSITY:
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r2, BBP_R2_TX_ANTENNA, 2);
@@ -469,11 +468,10 @@ static void rt2500pci_config_antenna(str
 	case ANTENNA_HW_DIVERSITY:
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r14, BBP_R14_RX_ANTENNA, 2);
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2500usb.c testtry/drivers/net/wireless/rt2x00/rt2500usb.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2500usb.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt2500usb.c	2007-10-15 15:09:24.000000000 +0000
@@ -413,11 +413,10 @@ static void rt2500usb_config_antenna(str
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r2, BBP_R2_TX_ANTENNA, 2);
@@ -438,11 +437,10 @@ static void rt2500usb_config_antenna(str
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r14, BBP_R14_RX_ANTENNA, 2);
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2x00config.c testtry/drivers/net/wireless/rt2x00/rt2x00config.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2x00config.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt2x00config.c	2007-10-15 15:09:24.000000000 +0000
@@ -103,6 +103,13 @@ void rt2x00lib_config_antenna(struct rt2
 	libconf.ant.tx = tx;
 
 	/*
+	 * Antenna setup changes require the RX to be disabled,
+	 * else the changes will be ignored by the device.
+	 */
+	if (test_bit(DEVICE_ENABLED_RADIO, &rt2x00dev->flags))
+		rt2x00lib_toggle_rx(rt2x00dev, STATE_RADIO_RX_OFF);
+
+	/*
 	 * Write new antenna setup to device and reset the link tuner.
 	 * The latter is required since we need to recalibrate the
 	 * noise-sensitivity ratio for the new setup.
@@ -112,6 +119,9 @@ void rt2x00lib_config_antenna(struct rt2
 
 	rt2x00dev->link.ant.active.rx = libconf.ant.rx;
 	rt2x00dev->link.ant.active.tx = libconf.ant.tx;
+
+	if (test_bit(DEVICE_ENABLED_RADIO, &rt2x00dev->flags))
+		rt2x00lib_toggle_rx(rt2x00dev, STATE_RADIO_RX_ON);
 }
 
 void rt2x00lib_config(struct rt2x00_dev *rt2x00dev,
@@ -166,6 +176,8 @@ void rt2x00lib_config(struct rt2x00_dev 
 	else if (conf->antenna_sel_rx &&
 		 conf->antenna_sel_rx != active_ant->rx)
 		flags |= CONFIG_UPDATE_ANTENNA;
+	else if (active_ant->rx == ANTENNA_SW_DIVERSITY)
+		flags |= CONFIG_UPDATE_ANTENNA;
 
 	if (!conf->antenna_sel_tx &&
 	    default_ant->tx != ANTENNA_SW_DIVERSITY &&
@@ -174,6 +186,8 @@ void rt2x00lib_config(struct rt2x00_dev 
 	else if (conf->antenna_sel_tx &&
 		 conf->antenna_sel_tx != active_ant->tx)
 		flags |= CONFIG_UPDATE_ANTENNA;
+	else if (active_ant->tx == ANTENNA_SW_DIVERSITY)
+		flags |= CONFIG_UPDATE_ANTENNA;
 
 	/*
 	 * The following configuration options are never
@@ -262,11 +276,17 @@ config:
 	if (flags & (CONFIG_UPDATE_CHANNEL | CONFIG_UPDATE_ANTENNA))
 		rt2x00lib_reset_link_tuner(rt2x00dev);
 
-	rt2x00dev->curr_hwmode = libconf.phymode;
-	rt2x00dev->rx_status.phymode = conf->phymode;
+	if (flags & CONFIG_UPDATE_PHYMODE) {
+		rt2x00dev->curr_hwmode = libconf.phymode;
+		rt2x00dev->rx_status.phymode = conf->phymode;
+	}
+
 	rt2x00dev->rx_status.freq = conf->freq;
 	rt2x00dev->rx_status.channel = conf->channel;
 	rt2x00dev->tx_power = conf->power_level;
-	rt2x00dev->link.ant.active.rx = libconf.ant.rx;
-	rt2x00dev->link.ant.active.tx = libconf.ant.tx;
+
+	if (flags & CONFIG_UPDATE_ANTENNA) {
+		rt2x00dev->link.ant.active.rx = libconf.ant.rx;
+		rt2x00dev->link.ant.active.tx = libconf.ant.tx;
+	}
 }
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2x00.h testtry/drivers/net/wireless/rt2x00/rt2x00.h
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2x00.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt2x00.h	2007-10-15 15:09:24.000000000 +0000
@@ -42,7 +42,7 @@
  * Module information.
  * DRV_NAME should be set within the individual module source files.
  */
-#define DRV_VERSION	"2.0.10"
+#define DRV_VERSION	"2.0.11"
 #define DRV_PROJECT	"http://rt2x00.serialmonkey.com"
 
 /*
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2x00rfkill.c testtry/drivers/net/wireless/rt2x00/rt2x00rfkill.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt2x00rfkill.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt2x00rfkill.c	2007-10-15 15:09:24.000000000 +0000
@@ -68,8 +68,10 @@ static void rt2x00rfkill_poll(struct inp
 	struct rt2x00_dev *rt2x00dev = poll_dev->private;
 	int state = rt2x00dev->ops->lib->rfkill_poll(rt2x00dev);
 
-	if (rt2x00dev->rfkill->state != state)
+	if (rt2x00dev->rfkill->state != state) {
 		input_report_key(poll_dev->input, KEY_WLAN, 1);
+		input_report_key(poll_dev->input, KEY_WLAN, 0);
+	}
 }
 
 int rt2x00rfkill_register(struct rt2x00_dev *rt2x00dev)
@@ -92,6 +94,13 @@ int rt2x00rfkill_register(struct rt2x00_
 		return retval;
 	}
 
+	/*
+	 * Force initial poll which will detect the initial device state,
+	 * and correctly sends the signal to the rfkill layer about this
+	 * state.
+	 */
+	rt2x00rfkill_poll(rt2x00dev->poll_dev);
+
 	return 0;
 }
 
@@ -114,26 +123,50 @@ int rt2x00rfkill_allocate(struct rt2x00_
 	rt2x00dev->rfkill = rfkill_allocate(device, RFKILL_TYPE_WLAN);
 	if (!rt2x00dev->rfkill) {
 		ERROR(rt2x00dev, "Failed to allocate rfkill handler.\n");
-		return -ENOMEM;
+		goto exit;
 	}
 
 	rt2x00dev->rfkill->name = rt2x00dev->ops->name;
 	rt2x00dev->rfkill->data = rt2x00dev;
-	rt2x00dev->rfkill->state = rt2x00dev->ops->lib->rfkill_poll(rt2x00dev);
+	rt2x00dev->rfkill->state = -1;
 	rt2x00dev->rfkill->toggle_radio = rt2x00rfkill_toggle_radio;
 
 	rt2x00dev->poll_dev = input_allocate_polled_device();
 	if (!rt2x00dev->poll_dev) {
 		ERROR(rt2x00dev, "Failed to allocate polled device.\n");
-		rfkill_free(rt2x00dev->rfkill);
-		return -ENOMEM;
+		goto exit_free_rfkill;
 	}
 
 	rt2x00dev->poll_dev->private = rt2x00dev;
 	rt2x00dev->poll_dev->poll = rt2x00rfkill_poll;
 	rt2x00dev->poll_dev->poll_interval = RFKILL_POLL_INTERVAL;
 
+	rt2x00dev->poll_dev->input = input_allocate_device();
+	if (!rt2x00dev->poll_dev->input) {
+		ERROR(rt2x00dev, "Failed to allocate input device.\n");
+		goto exit_free_polldev;
+	}
+
+	rt2x00dev->poll_dev->input->name = rt2x00dev->ops->name;
+	rt2x00dev->poll_dev->input->phys = wiphy_name(rt2x00dev->hw->wiphy);
+	rt2x00dev->poll_dev->input->id.bustype = BUS_HOST;
+	rt2x00dev->poll_dev->input->id.vendor = 0x1814;
+	rt2x00dev->poll_dev->input->id.product = rt2x00dev->chip.rt;
+	rt2x00dev->poll_dev->input->id.version = rt2x00dev->chip.rev;
+	rt2x00dev->poll_dev->input->dev.parent = device;
+	rt2x00dev->poll_dev->input->evbit[0] = BIT(EV_KEY);
+	set_bit(KEY_WLAN, rt2x00dev->poll_dev->input->keybit);
+
 	return 0;
+
+exit_free_polldev:
+	input_free_polled_device(rt2x00dev->poll_dev);
+
+exit_free_rfkill:
+	rfkill_free(rt2x00dev->rfkill);
+
+exit:
+	return -ENOMEM;
 }
 
 void rt2x00rfkill_free(struct rt2x00_dev *rt2x00dev)
@@ -141,6 +174,7 @@ void rt2x00rfkill_free(struct rt2x00_dev
 	if (!test_bit(CONFIG_SUPPORT_HW_BUTTON, &rt2x00dev->flags))
 		return;
 
+	input_free_device(rt2x00dev->poll_dev->input);
 	input_free_polled_device(rt2x00dev->poll_dev);
 	rfkill_free(rt2x00dev->rfkill);
 }
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt61pci.c testtry/drivers/net/wireless/rt2x00/rt61pci.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt61pci.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt61pci.c	2007-10-15 15:09:24.000000000 +0000
@@ -424,6 +424,29 @@ static void rt61pci_config_antenna_5x(st
 	rt2x00_set_field8(&r3, BBP_R3_SMART_MODE,
 			  !rt2x00_rf(&rt2x00dev->chip, RF5225));
 
+	/*
+	 * Configure the TX antenna.
+	 */
+	switch (ant->tx) {
+	case ANTENNA_A:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 0);
+		break;
+	case ANTENNA_SW_DIVERSITY:
+	case ANTENNA_HW_DIVERSITY:
+		/*
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
+		 */
+	case ANTENNA_B:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 3);
+		break;
+	}
+
+	/*
+	 * Configure the RX antenna.
+	 */
 	switch (ant->rx) {
 	case ANTENNA_HW_DIVERSITY:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
@@ -433,28 +456,17 @@ static void rt61pci_config_antenna_5x(st
 	case ANTENNA_A:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
 		rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END, 0);
-
-		if (rt2x00dev->curr_hwmode == HWMODE_A)
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
-		else
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
 		rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END, 0);
-
-		if (rt2x00dev->curr_hwmode == HWMODE_A)
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
-		else
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
 		break;
 	}
 
@@ -479,25 +491,45 @@ static void rt61pci_config_antenna_2x(st
 	rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END,
 			  !test_bit(CONFIG_FRAME_TYPE, &rt2x00dev->flags));
 
+	/*
+	 * Configure the TX antenna.
+	 */
+	switch (ant->tx) {
+	case ANTENNA_A:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 0);
+		break;
+	case ANTENNA_SW_DIVERSITY:
+	case ANTENNA_HW_DIVERSITY:
+		/*
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
+		 */
+	case ANTENNA_B:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 3);
+		break;
+	}
+
+	/*
+	 * Configure the RX antenna.
+	 */
 	switch (ant->rx) {
 	case ANTENNA_HW_DIVERSITY:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
 		break;
 	case ANTENNA_A:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
-		rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
-		rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
 		break;
 	}
 
@@ -532,74 +564,75 @@ static void rt61pci_config_antenna_2529(
 	u8 r3;
 	u8 r4;
 	u8 r77;
+	u8 rx_ant;
 
 	rt61pci_bbp_read(rt2x00dev, 3, &r3);
 	rt61pci_bbp_read(rt2x00dev, 4, &r4);
 	rt61pci_bbp_read(rt2x00dev, 77, &r77);
+
 	rt2x00_eeprom_read(rt2x00dev, EEPROM_NIC, &eeprom);
+	rx_ant = !!(rt2x00_get_field16(eeprom, EEPROM_NIC_TX_RX_FIXED) & 2);
 
 	rt2x00_set_field8(&r3, BBP_R3_SMART_MODE, 0);
 
-	if (rt2x00_get_field16(eeprom, EEPROM_NIC_ENABLE_DIVERSITY) &&
-	    rt2x00_get_field16(eeprom, EEPROM_NIC_TX_DIVERSITY)) {
-		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
-		rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END, 1);
-		rt61pci_config_antenna_2529_rx(rt2x00dev, 0, 1);
-	} else if (rt2x00_get_field16(eeprom, EEPROM_NIC_ENABLE_DIVERSITY)) {
-		if (rt2x00_get_field16(eeprom, EEPROM_NIC_TX_RX_FIXED) >= 2) {
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
-			rt61pci_bbp_write(rt2x00dev, 77, r77);
-		}
-		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
-		rt61pci_config_antenna_2529_rx(rt2x00dev, 1, 1);
-	} else if (!rt2x00_get_field16(eeprom, EEPROM_NIC_ENABLE_DIVERSITY) &&
-		   rt2x00_get_field16(eeprom, EEPROM_NIC_TX_DIVERSITY)) {
-		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
-		rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END, 0);
+	/*
+	 * Configure the TX antenna.
+	 */
+	switch (ant->tx) {
+	case ANTENNA_A:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 0);
+		break;
+	case ANTENNA_SW_DIVERSITY:
+	case ANTENNA_HW_DIVERSITY:
+		/*
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
+		 */
+	case ANTENNA_B:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 3);
+		break;
+	}
 
-		switch (rt2x00_get_field16(eeprom, EEPROM_NIC_TX_RX_FIXED)) {
-		case 0:
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 0, 1);
-			break;
-		case 1:
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 1, 0);
-			break;
-		case 2:
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 0, 0);
-			break;
-		case 3:
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 1, 1);
-			break;
-		}
-	} else if (!rt2x00_get_field16(eeprom, EEPROM_NIC_ENABLE_DIVERSITY) &&
-		   !rt2x00_get_field16(eeprom, EEPROM_NIC_TX_DIVERSITY)) {
+	/*
+	 * Configure the RX antenna.
+	 */
+	switch (ant->rx) {
+	case ANTENNA_A:
+		rt61pci_config_antenna_2529_rx(rt2x00dev, 0, rx_ant);
+		break;
+	case ANTENNA_SW_DIVERSITY:
+	case ANTENNA_HW_DIVERSITY:
+		/*
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
+		 */
+	case ANTENNA_B:
+		rt61pci_config_antenna_2529_rx(rt2x00dev, 1, rx_ant);
+		break;
+	}
+
+	/*
+	 * FIXME: We are using the default antenna setup to
+	 * determine the remaining settings. This because we
+	 * need to know what the EEPROM indicated.
+	 * It is however unclear if this is required, and overall
+	 * using the default antenna settings here is incorrect
+	 * since mac80211 might have told us to use fixed settings.
+	 */
+	if (rt2x00dev->default_ant.tx == ANTENNA_SW_DIVERSITY)
+		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
+	else
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
-		rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END, 0);
 
-		switch (rt2x00_get_field16(eeprom, EEPROM_NIC_TX_RX_FIXED)) {
-		case 0:
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
-			rt61pci_bbp_write(rt2x00dev, 77, r77);
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 0, 1);
-			break;
-		case 1:
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
-			rt61pci_bbp_write(rt2x00dev, 77, r77);
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 1, 0);
-			break;
-		case 2:
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
-			rt61pci_bbp_write(rt2x00dev, 77, r77);
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 0, 0);
-			break;
-		case 3:
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
-			rt61pci_bbp_write(rt2x00dev, 77, r77);
-			rt61pci_config_antenna_2529_rx(rt2x00dev, 1, 1);
-			break;
-		}
-	}
+	rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END,
+			  (rt2x00dev->default_ant.tx == ANTENNA_SW_DIVERSITY) &&
+			  (rt2x00dev->default_ant.rx == ANTENNA_SW_DIVERSITY));
 
+	rt61pci_bbp_write(rt2x00dev, 77, r77);
 	rt61pci_bbp_write(rt2x00dev, 3, r3);
 	rt61pci_bbp_write(rt2x00dev, 4, r4);
 }
@@ -2019,6 +2052,12 @@ static int rt61pci_init_eeprom(struct rt
 	}
 
 	/*
+	 * Determine number of antenna's.
+	 */
+	if (rt2x00_get_field16(eeprom, EEPROM_ANTENNA_NUM) == 2)
+		__set_bit(CONFIG_DOUBLE_ANTENNA, &rt2x00dev->flags);
+
+	/*
 	 * Identify default antenna configuration.
 	 */
 	rt2x00dev->default_ant.tx =
@@ -2033,12 +2072,6 @@ static int rt61pci_init_eeprom(struct rt
 		__set_bit(CONFIG_FRAME_TYPE, &rt2x00dev->flags);
 
 	/*
-	 * Determine number of antenna's.
-	 */
-	if (rt2x00_get_field16(eeprom, EEPROM_ANTENNA_NUM) == 2)
-		__set_bit(CONFIG_DOUBLE_ANTENNA, &rt2x00dev->flags);
-
-	/*
 	 * Detect if this device has an hardware controlled radio.
 	 */
 #ifdef CONFIG_RT61PCI_RFKILL
@@ -2066,6 +2099,38 @@ static int rt61pci_init_eeprom(struct rt
 		__set_bit(CONFIG_EXTERNAL_LNA_BG, &rt2x00dev->flags);
 
 	/*
+	 * When working with a RF2529 chip without double antenna
+	 * the antenna settings should be gathered from the NIC
+	 * eeprom word.
+	 */
+	if (rt2x00_rf(&rt2x00dev->chip, RF2529) &&
+	    !test_bit(CONFIG_DOUBLE_ANTENNA, &rt2x00dev->flags)) {
+		switch (rt2x00_get_field16(eeprom, EEPROM_NIC_TX_RX_FIXED)) {
+		case 0:
+			rt2x00dev->default_ant.tx = ANTENNA_B;
+			rt2x00dev->default_ant.rx = ANTENNA_A;
+			break;
+		case 1:
+			rt2x00dev->default_ant.tx = ANTENNA_B;
+			rt2x00dev->default_ant.rx = ANTENNA_B;
+			break;
+		case 2:
+			rt2x00dev->default_ant.tx = ANTENNA_A;
+			rt2x00dev->default_ant.rx = ANTENNA_A;
+			break;
+		case 3:
+			rt2x00dev->default_ant.tx = ANTENNA_A;
+			rt2x00dev->default_ant.rx = ANTENNA_B;
+			break;
+		}
+
+		if (rt2x00_get_field16(eeprom, EEPROM_NIC_TX_DIVERSITY))
+			rt2x00dev->default_ant.tx = ANTENNA_SW_DIVERSITY;
+		if (rt2x00_get_field16(eeprom, EEPROM_NIC_ENABLE_DIVERSITY))
+			rt2x00dev->default_ant.rx = ANTENNA_SW_DIVERSITY;
+	}
+
+	/*
 	 * Store led settings, for correct led behaviour.
 	 * If the eeprom value is invalid,
 	 * switch to default led mode.
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt61pci.h testtry/drivers/net/wireless/rt2x00/rt61pci.h
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt61pci.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt61pci.h	2007-10-15 15:09:24.000000000 +0000
@@ -1083,7 +1083,7 @@ struct hw_pairwise_ta_entry {
 /*
  * R77
  */
-#define BBP_R77_PAIR			FIELD8(0x03)
+#define BBP_R77_TX_ANTENNA		FIELD8(0x03)
 
 /*
  * RF registers
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt73usb.c testtry/drivers/net/wireless/rt2x00/rt73usb.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt73usb.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt73usb.c	2007-10-15 15:09:24.000000000 +0000
@@ -408,6 +408,29 @@ static void rt73usb_config_antenna_5x(st
 
 	rt2x00_set_field8(&r3, BBP_R3_SMART_MODE, 0);
 
+	/*
+	 * Configure the TX antenna.
+	 */
+	switch (ant->tx) {
+	case ANTENNA_A:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 0);
+		break;
+	case ANTENNA_SW_DIVERSITY:
+	case ANTENNA_HW_DIVERSITY:
+		/*
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
+		 */
+	case ANTENNA_B:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 3);
+		break;
+	}
+
+	/*
+	 * Configure the RX antenna.
+	 */
 	switch (ant->rx) {
 	case ANTENNA_HW_DIVERSITY:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
@@ -417,28 +440,17 @@ static void rt73usb_config_antenna_5x(st
 	case ANTENNA_A:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
 		rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END, 0);
-
-		if (rt2x00dev->curr_hwmode == HWMODE_A)
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
-		else
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
 		rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END, 0);
-
-		if (rt2x00dev->curr_hwmode == HWMODE_A)
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
-		else
-			rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
 		break;
 	}
 
@@ -462,25 +474,45 @@ static void rt73usb_config_antenna_2x(st
 	rt2x00_set_field8(&r4, BBP_R4_RX_FRAME_END,
 			  !test_bit(CONFIG_FRAME_TYPE, &rt2x00dev->flags));
 
+	/*
+	 * Configure the TX antenna.
+	 */
+	switch (ant->tx) {
+	case ANTENNA_A:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 0);
+		break;
+	case ANTENNA_SW_DIVERSITY:
+	case ANTENNA_HW_DIVERSITY:
+		/*
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
+		 */
+	case ANTENNA_B:
+		rt2x00_set_field8(&r77, BBP_R77_TX_ANTENNA, 3);
+		break;
+	}
+
+	/*
+	 * Configure the RX antenna.
+	 */
 	switch (ant->rx) {
 	case ANTENNA_HW_DIVERSITY:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 2);
 		break;
 	case ANTENNA_A:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
-		rt2x00_set_field8(&r77, BBP_R77_PAIR, 3);
 		break;
 	case ANTENNA_SW_DIVERSITY:
 		/*
-		 * NOTE: rt2x00lib should have caught this and
-		 * send us the correct antenna explicitely.
-		 * So we should never come here, but instead
-		 * of bugging out, we should just default to
-		 * antenna B.
+		 * NOTE: We should never come here because rt2x00lib is
+		 * supposed to catch this and send us the correct antenna
+		 * explicitely. However we are nog going to bug about this.
+		 * Instead, just default to antenna B.
 		 */
 	case ANTENNA_B:
 		rt2x00_set_field8(&r4, BBP_R4_RX_ANTENNA, 1);
-		rt2x00_set_field8(&r77, BBP_R77_PAIR, 0);
 		break;
 	}
 
@@ -2037,6 +2069,7 @@ static struct usb_device_id rt73usb_devi
 	{ USB_DEVICE(0x050d, 0x7050), USB_DEVICE_DATA(&rt73usb_ops) },
 	{ USB_DEVICE(0x050d, 0x705a), USB_DEVICE_DATA(&rt73usb_ops) },
 	{ USB_DEVICE(0x050d, 0x905b), USB_DEVICE_DATA(&rt73usb_ops) },
+	{ USB_DEVICE(0x050d, 0x905c), USB_DEVICE_DATA(&rt73usb_ops) },
 	/* Billionton */
 	{ USB_DEVICE(0x1631, 0xc019), USB_DEVICE_DATA(&rt73usb_ops) },
 	/* Buffalo */
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt73usb.h testtry/drivers/net/wireless/rt2x00/rt73usb.h
--- linux-2.6.23-sabayon/drivers/net/wireless/rt2x00/rt73usb.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rt2x00/rt73usb.h	2007-10-15 15:09:24.000000000 +0000
@@ -719,7 +719,7 @@ struct hw_pairwise_ta_entry {
 /*
  * R77
  */
-#define BBP_R77_PAIR			FIELD8(0x03)
+#define BBP_R77_TX_ANTENNA		FIELD8(0x03)
 
 /*
  * RF registers
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/rtl8187_dev.c testtry/drivers/net/wireless/rtl8187_dev.c
--- linux-2.6.23-sabayon/drivers/net/wireless/rtl8187_dev.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/rtl8187_dev.c	2007-10-15 15:09:24.000000000 +0000
@@ -36,6 +36,8 @@ static struct usb_device_id rtl8187_tabl
 	/* Netgear */
 	{USB_DEVICE(0x0846, 0x6100)},
 	{USB_DEVICE(0x0846, 0x6a00)},
+	/* HP */
+	{USB_DEVICE(0x03f0, 0xca02)},
 	{}
 };
 
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/acx.mod testtry/drivers/net/wireless/.tmp_versions/acx.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/acx.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/acx.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/acx/acx.ko
+drivers/net/wireless/acx/wlan.o drivers/net/wireless/acx/conv.o drivers/net/wireless/acx/ioctl.o drivers/net/wireless/acx/common.o drivers/net/wireless/acx/pci.o drivers/net/wireless/acx/usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/adm8211.mod testtry/drivers/net/wireless/.tmp_versions/adm8211.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/adm8211.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/adm8211.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/adm8211.ko
+drivers/net/wireless/adm8211.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/airo_cs.mod testtry/drivers/net/wireless/.tmp_versions/airo_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/airo_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/airo_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/airo_cs.ko
+drivers/net/wireless/airo_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/airo.mod testtry/drivers/net/wireless/.tmp_versions/airo.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/airo.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/airo.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/airo.ko
+drivers/net/wireless/airo.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ath5k.mod testtry/drivers/net/wireless/.tmp_versions/ath5k.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ath5k.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/ath5k.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/ath5k/ath5k.ko
+drivers/net/wireless/ath5k/base.o drivers/net/wireless/ath5k/hw.o drivers/net/wireless/ath5k/regdom.o drivers/net/wireless/ath5k/initvals.o drivers/net/wireless/ath5k/phy.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/atmel_cs.mod testtry/drivers/net/wireless/.tmp_versions/atmel_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/atmel_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/atmel_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/atmel_cs.ko
+drivers/net/wireless/atmel_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/atmel.mod testtry/drivers/net/wireless/.tmp_versions/atmel.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/atmel.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/atmel.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/atmel.ko
+drivers/net/wireless/atmel.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/atmel_pci.mod testtry/drivers/net/wireless/.tmp_versions/atmel_pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/atmel_pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/atmel_pci.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/atmel_pci.ko
+drivers/net/wireless/atmel_pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/b43legacy.mod testtry/drivers/net/wireless/.tmp_versions/b43legacy.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/b43legacy.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/b43legacy.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/b43legacy/b43legacy.ko
+drivers/net/wireless/b43legacy/main.o drivers/net/wireless/b43legacy/ilt.o drivers/net/wireless/b43legacy/leds.o drivers/net/wireless/b43legacy/phy.o drivers/net/wireless/b43legacy/radio.o drivers/net/wireless/b43legacy/sysfs.o drivers/net/wireless/b43legacy/xmit.o drivers/net/wireless/b43legacy/dma.o drivers/net/wireless/b43legacy/pio.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/b43.mod testtry/drivers/net/wireless/.tmp_versions/b43.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/b43.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/b43.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/b43/b43.ko
+drivers/net/wireless/b43/main.o drivers/net/wireless/b43/tables.o drivers/net/wireless/b43/phy.o drivers/net/wireless/b43/sysfs.o drivers/net/wireless/b43/xmit.o drivers/net/wireless/b43/lo.o drivers/net/wireless/b43/rfkill.o drivers/net/wireless/b43/leds.o drivers/net/wireless/b43/pcmcia.o drivers/net/wireless/b43/dma.o drivers/net/wireless/b43/pio.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hermes.mod testtry/drivers/net/wireless/.tmp_versions/hermes.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hermes.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/hermes.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/hermes.ko
+drivers/net/wireless/hermes.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap_cs.mod testtry/drivers/net/wireless/.tmp_versions/hostap_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/hostap_cs.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/hostap/hostap_cs.ko
+drivers/net/wireless/hostap/hostap_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap.mod testtry/drivers/net/wireless/.tmp_versions/hostap.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/hostap.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/hostap/hostap.ko
+drivers/net/wireless/hostap/hostap_80211_rx.o drivers/net/wireless/hostap/hostap_80211_tx.o drivers/net/wireless/hostap/hostap_ap.o drivers/net/wireless/hostap/hostap_info.o drivers/net/wireless/hostap/hostap_ioctl.o drivers/net/wireless/hostap/hostap_main.o drivers/net/wireless/hostap/hostap_proc.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap_pci.mod testtry/drivers/net/wireless/.tmp_versions/hostap_pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap_pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/hostap_pci.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/hostap/hostap_pci.ko
+drivers/net/wireless/hostap/hostap_pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap_plx.mod testtry/drivers/net/wireless/.tmp_versions/hostap_plx.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/hostap_plx.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/hostap_plx.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/hostap/hostap_plx.ko
+drivers/net/wireless/hostap/hostap_plx.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ipw2100.mod testtry/drivers/net/wireless/.tmp_versions/ipw2100.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ipw2100.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/ipw2100.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/ipw2100.ko
+drivers/net/wireless/ipw2100.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ipw2200.mod testtry/drivers/net/wireless/.tmp_versions/ipw2200.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ipw2200.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/ipw2200.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/ipw2200.ko
+drivers/net/wireless/ipw2200.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ipw3945.mod testtry/drivers/net/wireless/.tmp_versions/ipw3945.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ipw3945.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/ipw3945.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/ipw3945.ko
+drivers/net/wireless/ipw3945.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/iwl4965.mod testtry/drivers/net/wireless/.tmp_versions/iwl4965.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/iwl4965.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/iwl4965.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/iwlwifi/iwl4965.ko
+drivers/net/wireless/iwlwifi/iwl4965-base.o drivers/net/wireless/iwlwifi/iwl-4965.o drivers/net/wireless/iwlwifi/iwl-4965-rs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/libertas_cs.mod testtry/drivers/net/wireless/.tmp_versions/libertas_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/libertas_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/libertas_cs.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/libertas/libertas_cs.ko
+drivers/net/wireless/libertas/if_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/libertas.mod testtry/drivers/net/wireless/.tmp_versions/libertas.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/libertas.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/libertas.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/libertas/libertas.ko
+drivers/net/wireless/libertas/main.o drivers/net/wireless/libertas/wext.o drivers/net/wireless/libertas/rx.o drivers/net/wireless/libertas/tx.o drivers/net/wireless/libertas/cmd.o drivers/net/wireless/libertas/cmdresp.o drivers/net/wireless/libertas/scan.o drivers/net/wireless/libertas/join.o drivers/net/wireless/libertas/11d.o drivers/net/wireless/libertas/debugfs.o drivers/net/wireless/libertas/ethtool.o drivers/net/wireless/libertas/assoc.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/netwave_cs.mod testtry/drivers/net/wireless/.tmp_versions/netwave_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/netwave_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/netwave_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/netwave_cs.ko
+drivers/net/wireless/netwave_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_cs.mod testtry/drivers/net/wireless/.tmp_versions/orinoco_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/orinoco_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/orinoco_cs.ko
+drivers/net/wireless/orinoco_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco.mod testtry/drivers/net/wireless/.tmp_versions/orinoco.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/orinoco.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/orinoco.ko
+drivers/net/wireless/orinoco.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_nortel.mod testtry/drivers/net/wireless/.tmp_versions/orinoco_nortel.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_nortel.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/orinoco_nortel.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/orinoco_nortel.ko
+drivers/net/wireless/orinoco_nortel.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_pci.mod testtry/drivers/net/wireless/.tmp_versions/orinoco_pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/orinoco_pci.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/orinoco_pci.ko
+drivers/net/wireless/orinoco_pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_plx.mod testtry/drivers/net/wireless/.tmp_versions/orinoco_plx.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_plx.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/orinoco_plx.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/orinoco_plx.ko
+drivers/net/wireless/orinoco_plx.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_tmd.mod testtry/drivers/net/wireless/.tmp_versions/orinoco_tmd.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/orinoco_tmd.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/orinoco_tmd.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/orinoco_tmd.ko
+drivers/net/wireless/orinoco_tmd.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/p54common.mod testtry/drivers/net/wireless/.tmp_versions/p54common.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/p54common.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/p54common.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/p54common.ko
+drivers/net/wireless/p54common.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/p54pci.mod testtry/drivers/net/wireless/.tmp_versions/p54pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/p54pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/p54pci.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/p54pci.ko
+drivers/net/wireless/p54pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/p54usb.mod testtry/drivers/net/wireless/.tmp_versions/p54usb.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/p54usb.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/p54usb.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/p54usb.ko
+drivers/net/wireless/p54usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/prism54.mod testtry/drivers/net/wireless/.tmp_versions/prism54.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/prism54.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/prism54.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/prism54/prism54.ko
+drivers/net/wireless/prism54/islpci_eth.o drivers/net/wireless/prism54/islpci_mgt.o drivers/net/wireless/prism54/isl_38xx.o drivers/net/wireless/prism54/isl_ioctl.o drivers/net/wireless/prism54/islpci_dev.o drivers/net/wireless/prism54/islpci_hotplug.o drivers/net/wireless/prism54/oid_mgt.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ray_cs.mod testtry/drivers/net/wireless/.tmp_versions/ray_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/ray_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/ray_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/ray_cs.ko
+drivers/net/wireless/ray_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2400pci.mod testtry/drivers/net/wireless/.tmp_versions/rt2400pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2400pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt2400pci.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt2400pci.ko
+drivers/net/wireless/rt2x00/rt2400pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2500pci.mod testtry/drivers/net/wireless/.tmp_versions/rt2500pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2500pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt2500pci.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt2500pci.ko
+drivers/net/wireless/rt2x00/rt2500pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2500usb.mod testtry/drivers/net/wireless/.tmp_versions/rt2500usb.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2500usb.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt2500usb.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt2500usb.ko
+drivers/net/wireless/rt2x00/rt2500usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2x00lib.mod testtry/drivers/net/wireless/.tmp_versions/rt2x00lib.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2x00lib.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt2x00lib.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt2x00lib.ko
+drivers/net/wireless/rt2x00/rt2x00dev.o drivers/net/wireless/rt2x00/rt2x00mac.o drivers/net/wireless/rt2x00/rt2x00config.o drivers/net/wireless/rt2x00/rt2x00rfkill.o drivers/net/wireless/rt2x00/rt2x00firmware.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2x00pci.mod testtry/drivers/net/wireless/.tmp_versions/rt2x00pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2x00pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt2x00pci.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt2x00pci.ko
+drivers/net/wireless/rt2x00/rt2x00pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2x00usb.mod testtry/drivers/net/wireless/.tmp_versions/rt2x00usb.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt2x00usb.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt2x00usb.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt2x00usb.ko
+drivers/net/wireless/rt2x00/rt2x00usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt61pci.mod testtry/drivers/net/wireless/.tmp_versions/rt61pci.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt61pci.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt61pci.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt61pci.ko
+drivers/net/wireless/rt2x00/rt61pci.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt73usb.mod testtry/drivers/net/wireless/.tmp_versions/rt73usb.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rt73usb.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rt73usb.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rt2x00/rt73usb.ko
+drivers/net/wireless/rt2x00/rt73usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rtl8187.mod testtry/drivers/net/wireless/.tmp_versions/rtl8187.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/rtl8187.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/rtl8187.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/rtl8187.ko
+drivers/net/wireless/rtl8187_dev.o drivers/net/wireless/rtl8187_rtl8225.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/spectrum_cs.mod testtry/drivers/net/wireless/.tmp_versions/spectrum_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/spectrum_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/spectrum_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/spectrum_cs.ko
+drivers/net/wireless/spectrum_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/strip.mod testtry/drivers/net/wireless/.tmp_versions/strip.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/strip.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/strip.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/strip.ko
+drivers/net/wireless/strip.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/usb8xxx.mod testtry/drivers/net/wireless/.tmp_versions/usb8xxx.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/usb8xxx.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/usb8xxx.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/libertas/usb8xxx.ko
+drivers/net/wireless/libertas/if_usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/wavelan_cs.mod testtry/drivers/net/wireless/.tmp_versions/wavelan_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/wavelan_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/wavelan_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/wavelan_cs.ko
+drivers/net/wireless/wavelan_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/wl3501_cs.mod testtry/drivers/net/wireless/.tmp_versions/wl3501_cs.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/wl3501_cs.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/wl3501_cs.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/wl3501_cs.ko
+drivers/net/wireless/wl3501_cs.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/zd1201.mod testtry/drivers/net/wireless/.tmp_versions/zd1201.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/zd1201.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/zd1201.mod	2007-10-15 16:30:25.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/zd1201.ko
+drivers/net/wireless/zd1201.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/zd1211rw-mac80211.mod testtry/drivers/net/wireless/.tmp_versions/zd1211rw-mac80211.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/zd1211rw-mac80211.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/zd1211rw-mac80211.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/zd1211rw-mac80211/zd1211rw-mac80211.ko
+drivers/net/wireless/zd1211rw-mac80211/zd_chip.o drivers/net/wireless/zd1211rw-mac80211/zd_mac.o drivers/net/wireless/zd1211rw-mac80211/zd_rf_al2230.o drivers/net/wireless/zd1211rw-mac80211/zd_rf_rf2959.o drivers/net/wireless/zd1211rw-mac80211/zd_rf_al7230b.o drivers/net/wireless/zd1211rw-mac80211/zd_rf_uw2453.o drivers/net/wireless/zd1211rw-mac80211/zd_ieee80211.o drivers/net/wireless/zd1211rw-mac80211/zd_rf.o drivers/net/wireless/zd1211rw-mac80211/zd_usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/zd1211rw.mod testtry/drivers/net/wireless/.tmp_versions/zd1211rw.mod
--- linux-2.6.23-sabayon/drivers/net/wireless/.tmp_versions/zd1211rw.mod	1970-01-01 00:00:00.000000000 +0000
+++ testtry/drivers/net/wireless/.tmp_versions/zd1211rw.mod	2007-10-15 16:30:26.000000000 +0000
@@ -0,0 +1,2 @@
+drivers/net/wireless/zd1211rw/zd1211rw.ko
+drivers/net/wireless/zd1211rw/zd_chip.o drivers/net/wireless/zd1211rw/zd_ieee80211.o drivers/net/wireless/zd1211rw/zd_mac.o drivers/net/wireless/zd1211rw/zd_netdev.o drivers/net/wireless/zd1211rw/zd_rf_al2230.o drivers/net/wireless/zd1211rw/zd_rf_rf2959.o drivers/net/wireless/zd1211rw/zd_rf_al7230b.o drivers/net/wireless/zd1211rw/zd_rf_uw2453.o drivers/net/wireless/zd1211rw/zd_rf.o drivers/net/wireless/zd1211rw/zd_usb.o
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw/zd_usb.c testtry/drivers/net/wireless/zd1211rw/zd_usb.c
--- linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw/zd_usb.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/zd1211rw/zd_usb.c	2007-10-15 15:10:49.000000000 +0000
@@ -76,6 +76,7 @@ static struct usb_device_id usb_ids[] = 
 	{ USB_DEVICE(0x129b, 0x1667), .driver_info = DEVICE_ZD1211B },
 	{ USB_DEVICE(0x0cde, 0x001a), .driver_info = DEVICE_ZD1211B },
 	{ USB_DEVICE(0x0586, 0x340a), .driver_info = DEVICE_ZD1211B },
+	{ USB_DEVICE(0x0471, 0x1237), .driver_info = DEVICE_ZD1211B },
 	/* "Driverless" devices that need ejecting */
 	{ USB_DEVICE(0x0ace, 0x2011), .driver_info = DEVICE_INSTALLER },
 	{ USB_DEVICE(0x0ace, 0x20ff), .driver_info = DEVICE_INSTALLER },
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_chip.c testtry/drivers/net/wireless/zd1211rw-mac80211/zd_chip.c
--- linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_chip.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/zd1211rw-mac80211/zd_chip.c	2007-10-15 15:10:49.000000000 +0000
@@ -50,7 +50,7 @@ void zd_chip_clear(struct zd_chip *chip)
 
 static int scnprint_mac_oui(struct zd_chip *chip, char *buffer, size_t size)
 {
-	u8 *addr = zd_chip_to_mac(chip)->hwaddr;
+	u8 *addr = zd_mac_get_perm_addr(zd_chip_to_mac(chip));
 	return scnprintf(buffer, size, "%02x-%02x-%02x",
 		         addr[0], addr[1], addr[2]);
 }
@@ -377,15 +377,18 @@ int zd_write_mac_addr(struct zd_chip *ch
 		[1] = { .addr = CR_MAC_ADDR_P2 },
 	};
 
-	reqs[0].value = (mac_addr[3] << 24)
-		      | (mac_addr[2] << 16)
-		      | (mac_addr[1] <<  8)
-		      |  mac_addr[0];
-	reqs[1].value = (mac_addr[5] <<  8)
-		      |  mac_addr[4];
-
-	dev_dbg_f(zd_chip_dev(chip),
-		"mac addr " MAC_FMT "\n", MAC_ARG(mac_addr));
+	if (mac_addr) {
+		reqs[0].value = (mac_addr[3] << 24)
+			      | (mac_addr[2] << 16)
+			      | (mac_addr[1] <<  8)
+			      |  mac_addr[0];
+		reqs[1].value = (mac_addr[5] <<  8)
+			      |  mac_addr[4];
+		dev_dbg_f(zd_chip_dev(chip),
+			"mac addr " MAC_FMT "\n", MAC_ARG(mac_addr));
+	} else {
+		dev_dbg_f(zd_chip_dev(chip), "set NULL mac\n");
+	}
 
 	mutex_lock(&chip->mutex);
 	r = zd_iowrite32a_locked(chip, reqs, ARRAY_SIZE(reqs));
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_chip.h testtry/drivers/net/wireless/zd1211rw-mac80211/zd_chip.h
--- linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_chip.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/zd1211rw-mac80211/zd_chip.h	2007-10-15 15:10:49.000000000 +0000
@@ -510,15 +510,37 @@ enum {
 #define CR_UNDERRUN_CNT			CTL_REG(0x0688)
 
 #define CR_RX_FILTER			CTL_REG(0x068c)
+#define RX_FILTER_ASSOC_REQUEST		(1 <<  0)
 #define RX_FILTER_ASSOC_RESPONSE	(1 <<  1)
+#define RX_FILTER_REASSOC_REQUEST	(1 <<  2)
 #define RX_FILTER_REASSOC_RESPONSE	(1 <<  3)
+#define RX_FILTER_PROBE_REQUEST		(1 <<  4)
 #define RX_FILTER_PROBE_RESPONSE	(1 <<  5)
+/* bits 6 and 7 reserved */
 #define RX_FILTER_BEACON		(1 <<  8)
+#define RX_FILTER_ATIM			(1 <<  9)
 #define RX_FILTER_DISASSOC		(1 << 10)
 #define RX_FILTER_AUTH			(1 << 11)
+#define RX_FILTER_DEAUTH		(1 << 12)
+#define RX_FILTER_PSPOLL		(1 << 26)
+#define RX_FILTER_RTS			(1 << 27)
+#define RX_FILTER_CTS			(1 << 28)
 #define RX_FILTER_ACK			(1 << 29)
-#define AP_RX_FILTER			0x0400feff
-#define STA_RX_FILTER			0x2000ffff
+#define RX_FILTER_CFEND			(1 << 30)
+#define RX_FILTER_CFACK			(1 << 31)
+
+/* Enable bits for all frames you are interested in. */
+#define STA_RX_FILTER	(RX_FILTER_ASSOC_REQUEST | RX_FILTER_ASSOC_RESPONSE | \
+	RX_FILTER_REASSOC_REQUEST | RX_FILTER_REASSOC_RESPONSE | \
+	RX_FILTER_PROBE_REQUEST | RX_FILTER_PROBE_RESPONSE | \
+	(0x3 << 6) /* vendor driver sets these reserved bits */ | \
+	RX_FILTER_BEACON | RX_FILTER_ATIM | RX_FILTER_DISASSOC | \
+	RX_FILTER_AUTH | RX_FILTER_DEAUTH | \
+	(0x7 << 13) /* vendor driver sets these reserved bits */ | \
+	RX_FILTER_PSPOLL | RX_FILTER_ACK) /* 0x2400ffff */
+
+#define RX_FILTER_CTRL (RX_FILTER_RTS | RX_FILTER_CTS | \
+	RX_FILTER_CFEND | RX_FILTER_CFACK)
 
 /* Monitor mode sets filter to 0xfffff */
 
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_mac.c testtry/drivers/net/wireless/zd1211rw-mac80211/zd_mac.c
--- linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_mac.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/zd1211rw-mac80211/zd_mac.c	2007-10-15 15:10:49.000000000 +0000
@@ -117,10 +117,7 @@ int zd_mac_preinit_hw(struct ieee80211_h
 	if (r)
 		return r;
 
-	spin_lock_irq(&mac->lock);
 	SET_IEEE80211_PERM_ADDR(hw, addr);
-	memcpy(mac->hwaddr, addr, ETH_ALEN);
-	spin_unlock_irq(&mac->lock);
 
 	return 0;
 }
@@ -171,39 +168,23 @@ void zd_mac_clear(struct zd_mac *mac)
 	ZD_MEMCLEAR(mac, sizeof(struct zd_mac));
 }
 
-/**
- * has_monitor_interfaces - have monitor interfaces been enabled?
- * @mac: the struct zd_mac pointer
- *
- * The function returns, whether the device has monitor interfaces attached.
- */
-static int has_monitor_interfaces(struct zd_mac *mac)
-{
-	return mac->type == IEEE80211_IF_TYPE_MNTR;
-}
-
 static int set_rx_filter(struct zd_mac *mac)
 {
-	u32 filter = has_monitor_interfaces(mac) ? ~0 : STA_RX_FILTER;
+	unsigned long flags;
+	u32 filter = STA_RX_FILTER;
 
-	return zd_iowrite32(&mac->chip, CR_RX_FILTER, filter);
-}
+	spin_lock_irqsave(&mac->lock, flags);
+	if (mac->pass_ctrl)
+		filter |= RX_FILTER_CTRL;
+	spin_unlock_irqrestore(&mac->lock, flags);
 
-static int set_sniffer(struct zd_mac *mac)
-{
-	return zd_iowrite32(&mac->chip, CR_SNIFFER_ON,
-		has_monitor_interfaces(mac) ? 1 : 0);
-	return 0;
+	return zd_iowrite32(&mac->chip, CR_RX_FILTER, filter);
 }
 
 static int set_mc_hash(struct zd_mac *mac)
 {
 	struct zd_mc_hash hash;
-
 	zd_mc_clear(&hash);
-	if (has_monitor_interfaces(mac))
-		zd_mc_add_all(&hash);
-
 	return zd_chip_set_multicast_hash(&mac->chip, &hash);
 }
 
@@ -224,18 +205,12 @@ static int zd_op_start(struct ieee80211_
 	if (r < 0)
 		goto out;
 
-	r = zd_write_mac_addr(chip, mac->hwaddr);
-	if (r)
-		goto disable_int;
 	r = zd_chip_set_basic_rates(chip, CR_RATES_80211B | CR_RATES_80211G);
 	if (r < 0)
 		goto disable_int;
 	r = set_rx_filter(mac);
 	if (r)
 		goto disable_int;
-	r = set_sniffer(mac);
-	if (r)
-		goto disable_int;
 	r = set_mc_hash(mac);
 	if (r)
 		goto disable_int;
@@ -601,32 +576,6 @@ static int zd_op_tx(struct ieee80211_hw 
 	return 0;
 }
 
-static int fill_rx_stats(struct ieee80211_rx_status *stats,
-	                 const struct rx_status **pstatus,
-		         struct zd_mac *mac,
-			 const u8 *buffer, unsigned int length)
-{
-	const struct rx_status *status;
-
-	/* Caller has to ensure that length >= sizeof(struct rx_status). */
-	*pstatus = status = (struct rx_status *)
-		(buffer + (length - sizeof(struct rx_status)));
-	if (status->frame_status & ZD_RX_ERROR)
-		return -EINVAL; /* FIXME: stats update */
-	memset(stats, 0, sizeof(*stats));
-
-	stats->channel = _zd_chip_get_channel(&mac->chip);
-	stats->freq = zd_channels[stats->channel - 1].freq;
-	stats->phymode = MODE_IEEE80211G;
-	stats->ssi = status->signal_strength;
-	stats->signal = zd_rx_qual_percent(buffer,
-		                          length - sizeof(struct rx_status),
-		                          status);
-	stats->rate = zd_rx_rate(buffer, status);
-
-	return 0;
-}
-
 /**
  * filter_ack - filters incoming packets for acknowledgements
  * @dev: the mac80211 device
@@ -638,6 +587,8 @@ static int fill_rx_stats(struct ieee8021
  * the upper layers is informed about the successful transmission. If
  * mac80211 queues have been stopped and the number of frames still to be
  * transmitted is low the queues will be opened again.
+ *
+ * Returns 1 if the frame was an ACK, 0 if it was ignored.
  */
 static int filter_ack(struct ieee80211_hw *hw, struct ieee80211_hdr *rx_hdr,
 		      struct ieee80211_rx_status *stats)
@@ -674,25 +625,60 @@ out:
 
 int zd_mac_rx(struct ieee80211_hw *hw, const u8 *buffer, unsigned int length)
 {
-	int r;
 	struct zd_mac *mac = zd_hw_mac(hw);
 	struct ieee80211_rx_status stats;
 	const struct rx_status *status;
 	struct sk_buff *skb;
+	int bad_frame = 0;
 
 	if (length < ZD_PLCP_HEADER_SIZE + 10 /* IEEE80211_1ADDR_LEN */ +
 	             FCS_LEN + sizeof(struct rx_status))
 		return -EINVAL;
 
-	r = fill_rx_stats(&stats, &status, mac, buffer, length);
-	if (r)
-		return r;
+	memset(&stats, 0, sizeof(stats));
+
+	/* Note about pass_failed_fcs and pass_ctrl access below:
+	 * mac locking intentionally omitted here, as this is the only unlocked
+	 * reader and the only writer is configure_filter. Plus, if there were
+	 * any races accessing these variables, it wouldn't really matter.
+	 * If mac80211 ever provides a way for us to access filter flags
+	 * from outside configure_filter, we could improve on this. Also, this
+	 * situation may change once we implement some kind of DMA-into-skb
+	 * RX path. */
+
+	/* Caller has to ensure that length >= sizeof(struct rx_status). */
+	status = (struct rx_status *)
+		(buffer + (length - sizeof(struct rx_status)));
+	if (status->frame_status & ZD_RX_ERROR) {
+		if (mac->pass_failed_fcs &&
+				(status->frame_status & ZD_RX_CRC32_ERROR)) {
+			stats.flag |= RX_FLAG_FAILED_FCS_CRC;
+			bad_frame = 1;
+		} else {
+			return -EINVAL;
+		}
+	}
+
+	stats.channel = _zd_chip_get_channel(&mac->chip);
+	stats.freq = zd_channels[stats.channel - 1].freq;
+	stats.phymode = MODE_IEEE80211G;
+	stats.ssi = status->signal_strength;
+	stats.signal = zd_rx_qual_percent(buffer,
+		                          length - sizeof(struct rx_status),
+		                          status);
+	stats.rate = zd_rx_rate(buffer, status);
 
 	length -= ZD_PLCP_HEADER_SIZE + sizeof(struct rx_status);
 	buffer += ZD_PLCP_HEADER_SIZE;
 
-	if (filter_ack(hw, (struct ieee80211_hdr *)buffer, &stats) &&
-	    !has_monitor_interfaces(mac))
+	/* Except for bad frames, filter each frame to see if it is an ACK, in
+	 * which case our internal TX tracking is updated. Normally we then
+	 * bail here as there's no need to pass ACKs on up to the stack, but
+	 * there is also the case where the stack has requested us to pass
+	 * control frames on up (pass_ctrl) which we must consider. */
+	if (!bad_frame &&
+			filter_ack(hw, (struct ieee80211_hdr *)buffer, &stats)
+			&& !mac->pass_ctrl)
 		return 0;
 
 	skb = dev_alloc_skb(length);
@@ -722,9 +708,7 @@ static int zd_op_add_interface(struct ie
 		return -EOPNOTSUPP;
 	}
 
-	mac->hwaddr = conf->mac_addr;
-
-	return 0;
+	return zd_write_mac_addr(&mac->chip, conf->mac_addr);
 }
 
 static void zd_op_remove_interface(struct ieee80211_hw *hw,
@@ -732,6 +716,7 @@ static void zd_op_remove_interface(struc
 {
 	struct zd_mac *mac = zd_hw_mac(hw);
 	mac->type = IEEE80211_IF_TYPE_INVALID;
+	zd_write_mac_addr(&mac->chip, NULL);
 }
 
 static int zd_op_config(struct ieee80211_hw *hw, struct ieee80211_conf *conf)
@@ -766,8 +751,21 @@ static void set_multicast_hash_handler(s
 	zd_chip_set_multicast_hash(&mac->chip, &hash);
 }
 
+static void set_rx_filter_handler(struct work_struct *work)
+{
+	struct zd_mac *mac =
+		container_of(work, struct zd_mac, set_rx_filter_work);
+	int r;
+
+	dev_dbg_f(zd_mac_dev(mac), "\n");
+	r = set_rx_filter(mac);
+	if (r)
+		dev_err(zd_mac_dev(mac), "set_rx_filter_handler error %d\n", r);
+}
+
 #define SUPPORTED_FIF_FLAGS \
-	FIF_PROMISC_IN_BSS | FIF_ALLMULTI
+	(FIF_PROMISC_IN_BSS | FIF_ALLMULTI | FIF_FCSFAIL | FIF_CONTROL | \
+	FIF_OTHER_BSS)
 static void zd_op_configure_filter(struct ieee80211_hw *hw,
 			unsigned int changed_flags,
 			unsigned int *new_flags,
@@ -788,8 +786,7 @@ static void zd_op_configure_filter(struc
 	if (!changed_flags)
 		return;
 
-	if ((*new_flags & (FIF_PROMISC_IN_BSS | FIF_ALLMULTI)) ||
-	     has_monitor_interfaces(mac)) {
+	if (*new_flags & (FIF_PROMISC_IN_BSS | FIF_ALLMULTI)) {
 		zd_mc_add_all(&hash);
 	} else {
 		zd_mc_clear(&hash);
@@ -804,9 +801,23 @@ static void zd_op_configure_filter(struc
 	}
 
 	spin_lock_irqsave(&mac->lock, flags);
+	mac->pass_failed_fcs = !!(*new_flags & FIF_FCSFAIL);
+	mac->pass_ctrl = !!(*new_flags & FIF_CONTROL);
 	mac->multicast_hash = hash;
 	spin_unlock_irqrestore(&mac->lock, flags);
 	queue_work(zd_workqueue, &mac->set_multicast_hash_work);
+
+	if (changed_flags & FIF_CONTROL)
+		queue_work(zd_workqueue, &mac->set_rx_filter_work);
+
+	/* no handling required for FIF_OTHER_BSS as we don't currently
+	 * do BSSID filtering */
+	/* FIXME: in future it would be nice to enable the probe response
+	 * filter (so that the driver doesn't see them) until
+	 * FIF_BCN_PRBRESP_PROMISC is set. however due to atomicity here, we'd
+	 * have to schedule work to enable prbresp reception, which might
+	 * happen too late. For now we'll just listen and forward them all the
+	 * time. */
 }
 
 static void set_rts_cts_work(struct work_struct *work)
@@ -879,7 +890,6 @@ struct ieee80211_hw *zd_mac_alloc_hw(str
 	mac->hw = hw;
 
 	mac->type = IEEE80211_IF_TYPE_INVALID;
-	mac->hwaddr = hw->wiphy->perm_addr;
 
 	memcpy(mac->channels, zd_channels, sizeof(zd_channels));
 	memcpy(mac->rates, zd_rates, sizeof(zd_rates));
@@ -916,6 +926,7 @@ struct ieee80211_hw *zd_mac_alloc_hw(str
 	housekeeping_init(mac);
 	INIT_WORK(&mac->set_multicast_hash_work, set_multicast_hash_handler);
 	INIT_WORK(&mac->set_rts_cts_work, set_rts_cts_work);
+	INIT_WORK(&mac->set_rx_filter_work, set_rx_filter_handler);
 
 	SET_IEEE80211_DEV(hw, &intf->dev);
 	return hw;
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_mac.h testtry/drivers/net/wireless/zd1211rw-mac80211/zd_mac.h
--- linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_mac.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/zd1211rw-mac80211/zd_mac.h	2007-10-15 15:10:49.000000000 +0000
@@ -173,12 +173,12 @@ struct zd_mac {
 	struct housekeeping housekeeping;
 	struct work_struct set_multicast_hash_work;
 	struct work_struct set_rts_cts_work;
+	struct work_struct set_rx_filter_work;
 	struct zd_mc_hash multicast_hash;
 	u8 regdomain;
 	u8 default_regdomain;
 	int type;
 	int associated;
-	u8 *hwaddr;
 	struct sk_buff_head ack_wait_queue;
 	struct ieee80211_channel channels[14];
 	struct ieee80211_rate rates[12];
@@ -189,6 +189,12 @@ struct zd_mac {
 
 	/* flags to indicate update in progress */
 	unsigned int updating_rts_rate:1;
+
+	/* whether to pass frames with CRC errors to stack */
+	unsigned int pass_failed_fcs:1;
+
+	/* whether to pass control frames to stack */
+	unsigned int pass_ctrl:1;
 };
 
 static inline struct zd_mac *zd_hw_mac(struct ieee80211_hw *hw)
@@ -206,6 +212,11 @@ static inline struct zd_mac *zd_usb_to_m
 	return zd_chip_to_mac(zd_usb_to_chip(usb));
 }
 
+static inline u8 *zd_mac_get_perm_addr(struct zd_mac *mac)
+{
+	return mac->hw->wiphy->perm_addr;
+}
+
 #define zd_mac_dev(mac) (zd_chip_dev(&(mac)->chip))
 
 struct ieee80211_hw *zd_mac_alloc_hw(struct usb_interface *intf);
diff -urpN linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_usb.c testtry/drivers/net/wireless/zd1211rw-mac80211/zd_usb.c
--- linux-2.6.23-sabayon/drivers/net/wireless/zd1211rw-mac80211/zd_usb.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/drivers/net/wireless/zd1211rw-mac80211/zd_usb.c	2007-10-15 15:10:49.000000000 +0000
@@ -74,6 +74,7 @@ static struct usb_device_id usb_ids[] = 
 	{ USB_DEVICE(0x129b, 0x1667), .driver_info = DEVICE_ZD1211B },
 	{ USB_DEVICE(0x0cde, 0x001a), .driver_info = DEVICE_ZD1211B },
 	{ USB_DEVICE(0x0586, 0x340a), .driver_info = DEVICE_ZD1211B },
+	{ USB_DEVICE(0x0471, 0x1237), .driver_info = DEVICE_ZD1211B },
 	/* "Driverless" devices that need ejecting */
 	{ USB_DEVICE(0x0ace, 0x2011), .driver_info = DEVICE_INSTALLER },
 	{ USB_DEVICE(0x0ace, 0x20ff), .driver_info = DEVICE_INSTALLER },
diff -urpN linux-2.6.23-sabayon/include/acpi/acpi_bus.h testtry/include/acpi/acpi_bus.h
--- linux-2.6.23-sabayon/include/acpi/acpi_bus.h	2007-10-15 14:50:10.000000000 +0000
+++ testtry/include/acpi/acpi_bus.h	2007-10-15 14:52:10.000000000 +0000
@@ -264,7 +264,6 @@ struct acpi_device_wakeup_flags {
 
 struct acpi_device_wakeup_state {
 	u8 enabled:1;
-	u8 active:1;
 };
 
 struct acpi_device_wakeup {
@@ -333,6 +332,7 @@ int acpi_bus_get_power(acpi_handle handl
 int acpi_bus_set_power(acpi_handle handle, int state);
 #ifdef CONFIG_ACPI_PROC_EVENT
 int acpi_bus_generate_proc_event(struct acpi_device *device, u8 type, int data);
+int acpi_bus_generate_proc_event4(const char *class, const char *bid, u8 type, int data);
 int acpi_bus_receive_event(struct acpi_bus_event *event);
 #else
 static inline int acpi_bus_generate_proc_event(struct acpi_device *device, u8 type, int data)
diff -urpN linux-2.6.23-sabayon/include/asm/8253pit.h testtry/include/asm/8253pit.h
--- linux-2.6.23-sabayon/include/asm/8253pit.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/8253pit.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,10 @@
+/*
+ * 8253/8254 Programmable Interval Timer
+ */
+
+#ifndef _8253PIT_H
+#define _8253PIT_H
+
+#define PIT_TICK_RATE 	1193182UL
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/acpi.h testtry/include/asm/acpi.h
--- linux-2.6.23-sabayon/include/asm/acpi.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/acpi.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,153 @@
+/*
+ *  asm-x86_64/acpi.h
+ *
+ *  Copyright (C) 2001 Paul Diefenbaugh <paul.s.diefenbaugh@intel.com>
+ *  Copyright (C) 2001 Patrick Mochel <mochel@osdl.org>
+  *
+ * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ */
+
+#ifndef _ASM_ACPI_H
+#define _ASM_ACPI_H
+
+#ifdef __KERNEL__
+
+#include <acpi/pdc_intel.h>
+#include <asm/numa.h>
+
+#define COMPILER_DEPENDENT_INT64   long long
+#define COMPILER_DEPENDENT_UINT64  unsigned long long
+
+/*
+ * Calling conventions:
+ *
+ * ACPI_SYSTEM_XFACE        - Interfaces to host OS (handlers, threads)
+ * ACPI_EXTERNAL_XFACE      - External ACPI interfaces
+ * ACPI_INTERNAL_XFACE      - Internal ACPI interfaces
+ * ACPI_INTERNAL_VAR_XFACE  - Internal variable-parameter list interfaces
+ */
+#define ACPI_SYSTEM_XFACE
+#define ACPI_EXTERNAL_XFACE
+#define ACPI_INTERNAL_XFACE
+#define ACPI_INTERNAL_VAR_XFACE
+
+/* Asm macros */
+
+#define ACPI_ASM_MACROS
+#define BREAKPOINT3
+#define ACPI_DISABLE_IRQS() local_irq_disable()
+#define ACPI_ENABLE_IRQS()  local_irq_enable()
+#define ACPI_FLUSH_CPU_CACHE()	wbinvd()
+
+int __acpi_acquire_global_lock(unsigned int *lock);
+int __acpi_release_global_lock(unsigned int *lock);
+
+#define ACPI_ACQUIRE_GLOBAL_LOCK(facs, Acq) \
+	((Acq) = __acpi_acquire_global_lock(&facs->global_lock))
+
+#define ACPI_RELEASE_GLOBAL_LOCK(facs, Acq) \
+	((Acq) = __acpi_release_global_lock(&facs->global_lock))
+
+/*
+ * Math helper asm macros
+ */
+#define ACPI_DIV_64_BY_32(n_hi, n_lo, d32, q32, r32) \
+        asm("divl %2;"        \
+        :"=a"(q32), "=d"(r32) \
+        :"r"(d32),            \
+        "0"(n_lo), "1"(n_hi))
+
+
+#define ACPI_SHIFT_RIGHT_64(n_hi, n_lo) \
+    asm("shrl   $1,%2;"             \
+        "rcrl   $1,%3;"             \
+        :"=r"(n_hi), "=r"(n_lo)     \
+        :"0"(n_hi), "1"(n_lo))
+
+#ifdef CONFIG_ACPI
+extern int acpi_lapic;
+extern int acpi_ioapic;
+extern int acpi_noirq;
+extern int acpi_strict;
+extern int acpi_disabled;
+extern int acpi_pci_disabled;
+extern int acpi_ht;
+static inline void disable_acpi(void)
+{
+	acpi_disabled = 1;
+	acpi_ht = 0;
+	acpi_pci_disabled = 1;
+	acpi_noirq = 1;
+}
+
+/* Fixmap pages to reserve for ACPI boot-time tables (see fixmap.h) */
+#define FIX_ACPI_PAGES 4
+
+extern int acpi_gsi_to_irq(u32 gsi, unsigned int *irq);
+static inline void acpi_noirq_set(void) { acpi_noirq = 1; }
+static inline void acpi_disable_pci(void)
+{
+	acpi_pci_disabled = 1;
+	acpi_noirq_set();
+}
+extern int acpi_irq_balance_set(char *str);
+
+/* routines for saving/restoring kernel state */
+extern int acpi_save_state_mem(void);
+extern void acpi_restore_state_mem(void);
+
+extern unsigned long acpi_wakeup_address;
+
+/* early initialization routine */
+extern void acpi_reserve_bootmem(void);
+
+#else	/* !CONFIG_ACPI */
+
+#define acpi_lapic 0
+#define acpi_ioapic 0
+static inline void acpi_noirq_set(void) { }
+static inline void acpi_disable_pci(void) { }
+
+#endif /* !CONFIG_ACPI */
+
+extern int acpi_numa;
+extern int acpi_scan_nodes(unsigned long start, unsigned long end);
+#define NR_NODE_MEMBLKS (MAX_NUMNODES*2)
+
+extern int acpi_disabled;
+extern int acpi_pci_disabled;
+
+#define ARCH_HAS_POWER_INIT 1
+
+extern int acpi_skip_timer_override;
+extern int acpi_use_timer_override;
+
+#ifdef CONFIG_ACPI_NUMA
+extern void __init acpi_fake_nodes(const struct bootnode *fake_nodes,
+				   int num_nodes);
+#else
+static inline void acpi_fake_nodes(const struct bootnode *fake_nodes,
+				   int num_nodes)
+{
+}
+#endif
+
+#endif /*__KERNEL__*/
+
+#endif /*_ASM_ACPI_H*/
diff -urpN linux-2.6.23-sabayon/include/asm/agp.h testtry/include/asm/agp.h
--- linux-2.6.23-sabayon/include/asm/agp.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/agp.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,34 @@
+#ifndef AGP_H
+#define AGP_H 1
+
+#include <asm/cacheflush.h>
+
+/* 
+ * Functions to keep the agpgart mappings coherent.
+ * The GART gives the CPU a physical alias of memory. The alias is
+ * mapped uncacheable. Make sure there are no conflicting mappings
+ * with different cachability attributes for the same page.
+ */
+
+/* Caller's responsibility to call global_flush_tlb() for
+ * performance reasons */
+#define map_page_into_agp(page) change_page_attr(page, 1, PAGE_KERNEL_NOCACHE)
+#define unmap_page_from_agp(page) change_page_attr(page, 1, PAGE_KERNEL)
+#define flush_agp_mappings() global_flush_tlb()
+
+/* Could use CLFLUSH here if the cpu supports it. But then it would
+   need to be called for each cacheline of the whole page so it may not be 
+   worth it. Would need a page for it. */
+#define flush_agp_cache() asm volatile("wbinvd":::"memory")
+
+/* Convert a physical address to an address suitable for the GART. */
+#define phys_to_gart(x) (x)
+#define gart_to_phys(x) (x)
+
+/* GATT allocation. Returns/accepts GATT kernel virtual address. */
+#define alloc_gatt_pages(order)		\
+	((char *)__get_free_pages(GFP_KERNEL, (order)))
+#define free_gatt_pages(table, order)	\
+	free_pages((unsigned long)(table), (order))
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/alternative-asm.i testtry/include/asm/alternative-asm.i
--- linux-2.6.23-sabayon/include/asm/alternative-asm.i	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/alternative-asm.i	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,12 @@
+#ifdef CONFIG_SMP
+	.macro LOCK_PREFIX
+1:	lock
+	.section .smp_locks,"a"
+	.align 8
+	.quad 1b
+	.previous
+	.endm
+#else
+	.macro LOCK_PREFIX
+	.endm
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/alternative.h testtry/include/asm/alternative.h
--- linux-2.6.23-sabayon/include/asm/alternative.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/alternative.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,159 @@
+#ifndef _X86_64_ALTERNATIVE_H
+#define _X86_64_ALTERNATIVE_H
+
+#ifdef __KERNEL__
+
+#include <linux/types.h>
+#include <linux/stddef.h>
+
+/*
+ * Alternative inline assembly for SMP.
+ *
+ * The LOCK_PREFIX macro defined here replaces the LOCK and
+ * LOCK_PREFIX macros used everywhere in the source tree.
+ *
+ * SMP alternatives use the same data structures as the other
+ * alternatives and the X86_FEATURE_UP flag to indicate the case of a
+ * UP system running a SMP kernel.  The existing apply_alternatives()
+ * works fine for patching a SMP kernel for UP.
+ *
+ * The SMP alternative tables can be kept after boot and contain both
+ * UP and SMP versions of the instructions to allow switching back to
+ * SMP at runtime, when hotplugging in a new CPU, which is especially
+ * useful in virtualized environments.
+ *
+ * The very common lock prefix is handled as special case in a
+ * separate table which is a pure address list without replacement ptr
+ * and size information.  That keeps the table sizes small.
+ */
+
+#ifdef CONFIG_SMP
+#define LOCK_PREFIX \
+		".section .smp_locks,\"a\"\n"	\
+		"  .align 8\n"			\
+		"  .quad 661f\n" /* address */	\
+		".previous\n"			\
+	       	"661:\n\tlock; "
+
+#else /* ! CONFIG_SMP */
+#define LOCK_PREFIX ""
+#endif
+
+/* This must be included *after* the definition of LOCK_PREFIX */
+#include <asm/cpufeature.h>
+
+struct alt_instr {
+	u8 *instr; 		/* original instruction */
+	u8 *replacement;
+	u8  cpuid;		/* cpuid bit set for replacement */
+	u8  instrlen;		/* length of original instruction */
+	u8  replacementlen; 	/* length of new instruction, <= instrlen */
+	u8  pad[5];
+};
+
+extern void alternative_instructions(void);
+extern void apply_alternatives(struct alt_instr *start, struct alt_instr *end);
+
+struct module;
+
+#ifdef CONFIG_SMP
+extern void alternatives_smp_module_add(struct module *mod, char *name,
+					void *locks, void *locks_end,
+					void *text, void *text_end);
+extern void alternatives_smp_module_del(struct module *mod);
+extern void alternatives_smp_switch(int smp);
+#else
+static inline void alternatives_smp_module_add(struct module *mod, char *name,
+					void *locks, void *locks_end,
+					void *text, void *text_end) {}
+static inline void alternatives_smp_module_del(struct module *mod) {}
+static inline void alternatives_smp_switch(int smp) {}
+#endif
+
+#endif
+
+/*
+ * Alternative instructions for different CPU types or capabilities.
+ *
+ * This allows to use optimized instructions even on generic binary
+ * kernels.
+ *
+ * length of oldinstr must be longer or equal the length of newinstr
+ * It can be padded with nops as needed.
+ *
+ * For non barrier like inlines please define new variants
+ * without volatile and memory clobber.
+ */
+#define alternative(oldinstr, newinstr, feature) 	\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n" 		     \
+		      ".section .altinstructions,\"a\"\n"     	     \
+		      "  .align 8\n"				       \
+		      "  .quad 661b\n"            /* label */          \
+		      "  .quad 663f\n"		  /* new instruction */ \
+		      "  .byte %c0\n"             /* feature bit */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      ".previous\n"					\
+		      ".section .altinstr_replacement,\"ax\"\n"		\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */ \
+		      ".previous" :: "i" (feature) : "memory")
+
+/*
+ * Alternative inline assembly with input.
+ *
+ * Pecularities:
+ * No memory clobber here.
+ * Argument numbers start with 1.
+ * Best is to use constraints that are fixed size (like (%1) ... "r")
+ * If you use variable sized constraints like "m" or "g" in the
+ * replacement make sure to pad to the worst case length.
+ */
+#define alternative_input(oldinstr, newinstr, feature, input...)	\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n"			\
+		      ".section .altinstructions,\"a\"\n"		\
+		      "  .align 8\n"					\
+		      "  .quad 661b\n"            /* label */		\
+		      "  .quad 663f\n"		  /* new instruction */	\
+		      "  .byte %c0\n"             /* feature bit */	\
+		      "  .byte 662b-661b\n"       /* sourcelen */	\
+		      "  .byte 664f-663f\n"       /* replacementlen */	\
+		      ".previous\n"					\
+		      ".section .altinstr_replacement,\"ax\"\n"		\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */ \
+		      ".previous" :: "i" (feature), ##input)
+
+/* Like alternative_input, but with a single output argument */
+#define alternative_io(oldinstr, newinstr, feature, output, input...) \
+	asm volatile ("661:\n\t" oldinstr "\n662:\n"			\
+		      ".section .altinstructions,\"a\"\n"		\
+		      "  .align 8\n"					\
+		      "  .quad 661b\n"            /* label */		\
+		      "  .quad 663f\n"		  /* new instruction */	\
+		      "  .byte %c[feat]\n"        /* feature bit */	\
+		      "  .byte 662b-661b\n"       /* sourcelen */	\
+		      "  .byte 664f-663f\n"       /* replacementlen */	\
+		      ".previous\n"					\
+		      ".section .altinstr_replacement,\"ax\"\n"		\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */ \
+		      ".previous" : output : [feat] "i" (feature), ##input)
+
+/*
+ * use this macro(s) if you need more than one output parameter
+ * in alternative_io
+ */
+#define ASM_OUTPUT2(a, b) a, b
+
+struct paravirt_patch;
+#ifdef CONFIG_PARAVIRT
+void apply_paravirt(struct paravirt_patch *start, struct paravirt_patch *end);
+#else
+static inline void
+apply_paravirt(struct paravirt_patch *start, struct paravirt_patch *end)
+{}
+#define __parainstructions NULL
+#define __parainstructions_end NULL
+#endif
+
+extern void text_poke(void *addr, unsigned char *opcode, int len);
+
+#endif /* _X86_64_ALTERNATIVE_H */
diff -urpN linux-2.6.23-sabayon/include/asm/a.out.h testtry/include/asm/a.out.h
--- linux-2.6.23-sabayon/include/asm/a.out.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/a.out.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,28 @@
+#ifndef __X8664_A_OUT_H__
+#define __X8664_A_OUT_H__
+
+/* 32bit a.out */
+
+struct exec
+{
+  unsigned int a_info;		/* Use macros N_MAGIC, etc for access */
+  unsigned a_text;		/* length of text, in bytes */
+  unsigned a_data;		/* length of data, in bytes */
+  unsigned a_bss;		/* length of uninitialized data area for file, in bytes */
+  unsigned a_syms;		/* length of symbol table data in file, in bytes */
+  unsigned a_entry;		/* start address */
+  unsigned a_trsize;		/* length of relocation info for text, in bytes */
+  unsigned a_drsize;		/* length of relocation info for data, in bytes */
+};
+
+#define N_TRSIZE(a)	((a).a_trsize)
+#define N_DRSIZE(a)	((a).a_drsize)
+#define N_SYMSIZE(a)	((a).a_syms)
+
+#ifdef __KERNEL__
+#include <linux/thread_info.h>
+#define STACK_TOP	TASK_SIZE
+#define STACK_TOP_MAX	TASK_SIZE64
+#endif
+
+#endif /* __A_OUT_GNU_H__ */
diff -urpN linux-2.6.23-sabayon/include/asm/apicdef.h testtry/include/asm/apicdef.h
--- linux-2.6.23-sabayon/include/asm/apicdef.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/apicdef.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,392 @@
+#ifndef __ASM_APICDEF_H
+#define __ASM_APICDEF_H
+
+/*
+ * Constants for various Intel APICs. (local APIC, IOAPIC, etc.)
+ *
+ * Alan Cox <Alan.Cox@linux.org>, 1995.
+ * Ingo Molnar <mingo@redhat.com>, 1999, 2000
+ */
+
+#define		APIC_DEFAULT_PHYS_BASE	0xfee00000
+ 
+#define		APIC_ID		0x20
+#define			APIC_ID_MASK		(0xFFu<<24)
+#define			GET_APIC_ID(x)		(((x)>>24)&0xFFu)
+#define			SET_APIC_ID(x)		(((x)<<24))
+#define		APIC_LVR	0x30
+#define			APIC_LVR_MASK		0xFF00FF
+#define			GET_APIC_VERSION(x)	((x)&0xFFu)
+#define			GET_APIC_MAXLVT(x)	(((x)>>16)&0xFFu)
+#define			APIC_INTEGRATED(x)	((x)&0xF0u)
+#define		APIC_TASKPRI	0x80
+#define			APIC_TPRI_MASK		0xFFu
+#define		APIC_ARBPRI	0x90
+#define			APIC_ARBPRI_MASK	0xFFu
+#define		APIC_PROCPRI	0xA0
+#define		APIC_EOI	0xB0
+#define			APIC_EIO_ACK		0x0		/* Write this to the EOI register */
+#define		APIC_RRR	0xC0
+#define		APIC_LDR	0xD0
+#define			APIC_LDR_MASK		(0xFFu<<24)
+#define			GET_APIC_LOGICAL_ID(x)	(((x)>>24)&0xFFu)
+#define			SET_APIC_LOGICAL_ID(x)	(((x)<<24))
+#define			APIC_ALL_CPUS		0xFFu
+#define		APIC_DFR	0xE0
+#define			APIC_DFR_CLUSTER		0x0FFFFFFFul
+#define			APIC_DFR_FLAT			0xFFFFFFFFul
+#define		APIC_SPIV	0xF0
+#define			APIC_SPIV_FOCUS_DISABLED	(1<<9)
+#define			APIC_SPIV_APIC_ENABLED		(1<<8)
+#define		APIC_ISR	0x100
+#define		APIC_ISR_NR	0x8	/* Number of 32 bit ISR registers. */
+#define		APIC_TMR	0x180
+#define 	APIC_IRR	0x200
+#define 	APIC_ESR	0x280
+#define			APIC_ESR_SEND_CS	0x00001
+#define			APIC_ESR_RECV_CS	0x00002
+#define			APIC_ESR_SEND_ACC	0x00004
+#define			APIC_ESR_RECV_ACC	0x00008
+#define			APIC_ESR_SENDILL	0x00020
+#define			APIC_ESR_RECVILL	0x00040
+#define			APIC_ESR_ILLREGA	0x00080
+#define		APIC_ICR	0x300
+#define			APIC_DEST_SELF		0x40000
+#define			APIC_DEST_ALLINC	0x80000
+#define			APIC_DEST_ALLBUT	0xC0000
+#define			APIC_ICR_RR_MASK	0x30000
+#define			APIC_ICR_RR_INVALID	0x00000
+#define			APIC_ICR_RR_INPROG	0x10000
+#define			APIC_ICR_RR_VALID	0x20000
+#define			APIC_INT_LEVELTRIG	0x08000
+#define			APIC_INT_ASSERT		0x04000
+#define			APIC_ICR_BUSY		0x01000
+#define			APIC_DEST_LOGICAL	0x00800
+#define			APIC_DEST_PHYSICAL	0x00000
+#define			APIC_DM_FIXED		0x00000
+#define			APIC_DM_LOWEST		0x00100
+#define			APIC_DM_SMI		0x00200
+#define			APIC_DM_REMRD		0x00300
+#define			APIC_DM_NMI		0x00400
+#define			APIC_DM_INIT		0x00500
+#define			APIC_DM_STARTUP		0x00600
+#define			APIC_DM_EXTINT		0x00700
+#define			APIC_VECTOR_MASK	0x000FF
+#define		APIC_ICR2	0x310
+#define			GET_APIC_DEST_FIELD(x)	(((x)>>24)&0xFF)
+#define			SET_APIC_DEST_FIELD(x)	((x)<<24)
+#define		APIC_LVTT	0x320
+#define		APIC_LVTTHMR	0x330
+#define		APIC_LVTPC	0x340
+#define		APIC_LVT0	0x350
+#define			APIC_LVT_TIMER_BASE_MASK	(0x3<<18)
+#define			GET_APIC_TIMER_BASE(x)		(((x)>>18)&0x3)
+#define			SET_APIC_TIMER_BASE(x)		(((x)<<18))
+#define			APIC_TIMER_BASE_CLKIN		0x0
+#define			APIC_TIMER_BASE_TMBASE		0x1
+#define			APIC_TIMER_BASE_DIV		0x2
+#define			APIC_LVT_TIMER_PERIODIC		(1<<17)
+#define			APIC_LVT_MASKED			(1<<16)
+#define			APIC_LVT_LEVEL_TRIGGER		(1<<15)
+#define			APIC_LVT_REMOTE_IRR		(1<<14)
+#define			APIC_INPUT_POLARITY		(1<<13)
+#define			APIC_SEND_PENDING		(1<<12)
+#define			APIC_MODE_MASK			0x700
+#define			GET_APIC_DELIVERY_MODE(x)	(((x)>>8)&0x7)
+#define			SET_APIC_DELIVERY_MODE(x,y)	(((x)&~0x700)|((y)<<8))
+#define				APIC_MODE_FIXED		0x0
+#define				APIC_MODE_NMI		0x4
+#define				APIC_MODE_EXTINT	0x7
+#define 	APIC_LVT1	0x360
+#define		APIC_LVTERR	0x370
+#define		APIC_TMICT	0x380
+#define		APIC_TMCCT	0x390
+#define		APIC_TDCR	0x3E0
+#define			APIC_TDR_DIV_TMBASE	(1<<2)
+#define			APIC_TDR_DIV_1		0xB
+#define			APIC_TDR_DIV_2		0x0
+#define			APIC_TDR_DIV_4		0x1
+#define			APIC_TDR_DIV_8		0x2
+#define			APIC_TDR_DIV_16		0x3
+#define			APIC_TDR_DIV_32		0x8
+#define			APIC_TDR_DIV_64		0x9
+#define			APIC_TDR_DIV_128	0xA
+
+#define APIC_BASE (fix_to_virt(FIX_APIC_BASE))
+
+#define MAX_IO_APICS 128
+#define MAX_LOCAL_APIC 256
+
+/*
+ * All x86-64 systems are xAPIC compatible.
+ * In the following, "apicid" is a physical APIC ID.
+ */
+#define XAPIC_DEST_CPUS_SHIFT	4
+#define XAPIC_DEST_CPUS_MASK	((1u << XAPIC_DEST_CPUS_SHIFT) - 1)
+#define XAPIC_DEST_CLUSTER_MASK	(XAPIC_DEST_CPUS_MASK << XAPIC_DEST_CPUS_SHIFT)
+#define APIC_CLUSTER(apicid)	((apicid) & XAPIC_DEST_CLUSTER_MASK)
+#define APIC_CLUSTERID(apicid)	(APIC_CLUSTER(apicid) >> XAPIC_DEST_CPUS_SHIFT)
+#define APIC_CPUID(apicid)	((apicid) & XAPIC_DEST_CPUS_MASK)
+#define NUM_APIC_CLUSTERS	((BAD_APICID + 1) >> XAPIC_DEST_CPUS_SHIFT)
+
+/*
+ * the local APIC register structure, memory mapped. Not terribly well
+ * tested, but we might eventually use this one in the future - the
+ * problem why we cannot use it right now is the P5 APIC, it has an
+ * errata which cannot take 8-bit reads and writes, only 32-bit ones ...
+ */
+#define u32 unsigned int
+
+struct local_apic {
+
+/*000*/	struct { u32 __reserved[4]; } __reserved_01;
+
+/*010*/	struct { u32 __reserved[4]; } __reserved_02;
+
+/*020*/	struct { /* APIC ID Register */
+		u32   __reserved_1	: 24,
+			phys_apic_id	:  4,
+			__reserved_2	:  4;
+		u32 __reserved[3];
+	} id;
+
+/*030*/	const
+	struct { /* APIC Version Register */
+		u32   version		:  8,
+			__reserved_1	:  8,
+			max_lvt		:  8,
+			__reserved_2	:  8;
+		u32 __reserved[3];
+	} version;
+
+/*040*/	struct { u32 __reserved[4]; } __reserved_03;
+
+/*050*/	struct { u32 __reserved[4]; } __reserved_04;
+
+/*060*/	struct { u32 __reserved[4]; } __reserved_05;
+
+/*070*/	struct { u32 __reserved[4]; } __reserved_06;
+
+/*080*/	struct { /* Task Priority Register */
+		u32   priority	:  8,
+			__reserved_1	: 24;
+		u32 __reserved_2[3];
+	} tpr;
+
+/*090*/	const
+	struct { /* Arbitration Priority Register */
+		u32   priority	:  8,
+			__reserved_1	: 24;
+		u32 __reserved_2[3];
+	} apr;
+
+/*0A0*/	const
+	struct { /* Processor Priority Register */
+		u32   priority	:  8,
+			__reserved_1	: 24;
+		u32 __reserved_2[3];
+	} ppr;
+
+/*0B0*/	struct { /* End Of Interrupt Register */
+		u32   eoi;
+		u32 __reserved[3];
+	} eoi;
+
+/*0C0*/	struct { u32 __reserved[4]; } __reserved_07;
+
+/*0D0*/	struct { /* Logical Destination Register */
+		u32   __reserved_1	: 24,
+			logical_dest	:  8;
+		u32 __reserved_2[3];
+	} ldr;
+
+/*0E0*/	struct { /* Destination Format Register */
+		u32   __reserved_1	: 28,
+			model		:  4;
+		u32 __reserved_2[3];
+	} dfr;
+
+/*0F0*/	struct { /* Spurious Interrupt Vector Register */
+		u32	spurious_vector	:  8,
+			apic_enabled	:  1,
+			focus_cpu	:  1,
+			__reserved_2	: 22;
+		u32 __reserved_3[3];
+	} svr;
+
+/*100*/	struct { /* In Service Register */
+/*170*/		u32 bitfield;
+		u32 __reserved[3];
+	} isr [8];
+
+/*180*/	struct { /* Trigger Mode Register */
+/*1F0*/		u32 bitfield;
+		u32 __reserved[3];
+	} tmr [8];
+
+/*200*/	struct { /* Interrupt Request Register */
+/*270*/		u32 bitfield;
+		u32 __reserved[3];
+	} irr [8];
+
+/*280*/	union { /* Error Status Register */
+		struct {
+			u32   send_cs_error			:  1,
+				receive_cs_error		:  1,
+				send_accept_error		:  1,
+				receive_accept_error		:  1,
+				__reserved_1			:  1,
+				send_illegal_vector		:  1,
+				receive_illegal_vector		:  1,
+				illegal_register_address	:  1,
+				__reserved_2			: 24;
+			u32 __reserved_3[3];
+		} error_bits;
+		struct {
+			u32 errors;
+			u32 __reserved_3[3];
+		} all_errors;
+	} esr;
+
+/*290*/	struct { u32 __reserved[4]; } __reserved_08;
+
+/*2A0*/	struct { u32 __reserved[4]; } __reserved_09;
+
+/*2B0*/	struct { u32 __reserved[4]; } __reserved_10;
+
+/*2C0*/	struct { u32 __reserved[4]; } __reserved_11;
+
+/*2D0*/	struct { u32 __reserved[4]; } __reserved_12;
+
+/*2E0*/	struct { u32 __reserved[4]; } __reserved_13;
+
+/*2F0*/	struct { u32 __reserved[4]; } __reserved_14;
+
+/*300*/	struct { /* Interrupt Command Register 1 */
+		u32   vector			:  8,
+			delivery_mode		:  3,
+			destination_mode	:  1,
+			delivery_status		:  1,
+			__reserved_1		:  1,
+			level			:  1,
+			trigger			:  1,
+			__reserved_2		:  2,
+			shorthand		:  2,
+			__reserved_3		:  12;
+		u32 __reserved_4[3];
+	} icr1;
+
+/*310*/	struct { /* Interrupt Command Register 2 */
+		union {
+			u32   __reserved_1	: 24,
+				phys_dest	:  4,
+				__reserved_2	:  4;
+			u32   __reserved_3	: 24,
+				logical_dest	:  8;
+		} dest;
+		u32 __reserved_4[3];
+	} icr2;
+
+/*320*/	struct { /* LVT - Timer */
+		u32   vector		:  8,
+			__reserved_1	:  4,
+			delivery_status	:  1,
+			__reserved_2	:  3,
+			mask		:  1,
+			timer_mode	:  1,
+			__reserved_3	: 14;
+		u32 __reserved_4[3];
+	} lvt_timer;
+
+/*330*/	struct { /* LVT - Thermal Sensor */
+		u32  vector		:  8,
+			delivery_mode	:  3,
+			__reserved_1	:  1,
+			delivery_status	:  1,
+			__reserved_2	:  3,
+			mask		:  1,
+			__reserved_3	: 15;
+		u32 __reserved_4[3];
+	} lvt_thermal;
+
+/*340*/	struct { /* LVT - Performance Counter */
+		u32   vector		:  8,
+			delivery_mode	:  3,
+			__reserved_1	:  1,
+			delivery_status	:  1,
+			__reserved_2	:  3,
+			mask		:  1,
+			__reserved_3	: 15;
+		u32 __reserved_4[3];
+	} lvt_pc;
+
+/*350*/	struct { /* LVT - LINT0 */
+		u32   vector		:  8,
+			delivery_mode	:  3,
+			__reserved_1	:  1,
+			delivery_status	:  1,
+			polarity	:  1,
+			remote_irr	:  1,
+			trigger		:  1,
+			mask		:  1,
+			__reserved_2	: 15;
+		u32 __reserved_3[3];
+	} lvt_lint0;
+
+/*360*/	struct { /* LVT - LINT1 */
+		u32   vector		:  8,
+			delivery_mode	:  3,
+			__reserved_1	:  1,
+			delivery_status	:  1,
+			polarity	:  1,
+			remote_irr	:  1,
+			trigger		:  1,
+			mask		:  1,
+			__reserved_2	: 15;
+		u32 __reserved_3[3];
+	} lvt_lint1;
+
+/*370*/	struct { /* LVT - Error */
+		u32   vector		:  8,
+			__reserved_1	:  4,
+			delivery_status	:  1,
+			__reserved_2	:  3,
+			mask		:  1,
+			__reserved_3	: 15;
+		u32 __reserved_4[3];
+	} lvt_error;
+
+/*380*/	struct { /* Timer Initial Count Register */
+		u32   initial_count;
+		u32 __reserved_2[3];
+	} timer_icr;
+
+/*390*/	const
+	struct { /* Timer Current Count Register */
+		u32   curr_count;
+		u32 __reserved_2[3];
+	} timer_ccr;
+
+/*3A0*/	struct { u32 __reserved[4]; } __reserved_16;
+
+/*3B0*/	struct { u32 __reserved[4]; } __reserved_17;
+
+/*3C0*/	struct { u32 __reserved[4]; } __reserved_18;
+
+/*3D0*/	struct { u32 __reserved[4]; } __reserved_19;
+
+/*3E0*/	struct { /* Timer Divide Configuration Register */
+		u32   divisor		:  4,
+			__reserved_1	: 28;
+		u32 __reserved_2[3];
+	} timer_dcr;
+
+/*3F0*/	struct { u32 __reserved[4]; } __reserved_20;
+
+} __attribute__ ((packed));
+
+#undef u32
+
+#define BAD_APICID 0xFFu
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/apic.h testtry/include/asm/apic.h
--- linux-2.6.23-sabayon/include/asm/apic.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/apic.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,101 @@
+#ifndef __ASM_APIC_H
+#define __ASM_APIC_H
+
+#include <linux/pm.h>
+#include <linux/delay.h>
+#include <asm/fixmap.h>
+#include <asm/apicdef.h>
+#include <asm/system.h>
+
+#define Dprintk(x...)
+
+/*
+ * Debugging macros
+ */
+#define APIC_QUIET   0
+#define APIC_VERBOSE 1
+#define APIC_DEBUG   2
+
+extern int apic_verbosity;
+extern int apic_runs_main_timer;
+extern int ioapic_force;
+extern int disable_apic_timer;
+
+/*
+ * Define the default level of output to be very little
+ * This can be turned up by using apic=verbose for more
+ * information and apic=debug for _lots_ of information.
+ * apic_verbosity is defined in apic.c
+ */
+#define apic_printk(v, s, a...) do {       \
+		if ((v) <= apic_verbosity) \
+			printk(s, ##a);    \
+	} while (0)
+
+struct pt_regs;
+
+/*
+ * Basic functions accessing APICs.
+ */
+
+static __inline void apic_write(unsigned long reg, unsigned int v)
+{
+	*((volatile unsigned int *)(APIC_BASE+reg)) = v;
+}
+
+static __inline unsigned int apic_read(unsigned long reg)
+{
+	return *((volatile unsigned int *)(APIC_BASE+reg));
+}
+
+extern void apic_wait_icr_idle(void);
+extern unsigned int safe_apic_wait_icr_idle(void);
+
+static inline void ack_APIC_irq(void)
+{
+	/*
+	 * ack_APIC_irq() actually gets compiled as a single instruction:
+	 * - a single rmw on Pentium/82489DX
+	 * - a single write on P6+ cores (CONFIG_X86_GOOD_APIC)
+	 * ... yummie.
+	 */
+
+	/* Docs say use 0 for future compatibility */
+	apic_write(APIC_EOI, 0);
+}
+
+extern int get_maxlvt (void);
+extern void clear_local_APIC (void);
+extern void connect_bsp_APIC (void);
+extern void disconnect_bsp_APIC (int virt_wire_setup);
+extern void disable_local_APIC (void);
+extern int verify_local_APIC (void);
+extern void cache_APIC_registers (void);
+extern void sync_Arb_IDs (void);
+extern void init_bsp_APIC (void);
+extern void setup_local_APIC (void);
+extern void init_apic_mappings (void);
+extern void smp_local_timer_interrupt (void);
+extern void setup_boot_APIC_clock (void);
+extern void setup_secondary_APIC_clock (void);
+extern int APIC_init_uniprocessor (void);
+extern void setup_apic_routing(void);
+
+extern void setup_APIC_extended_lvt(unsigned char lvt_off, unsigned char vector,
+				    unsigned char msg_type, unsigned char mask);
+
+extern int apic_is_clustered_box(void);
+
+#define K8_APIC_EXT_LVT_BASE    0x500
+#define K8_APIC_EXT_INT_MSG_FIX 0x0
+#define K8_APIC_EXT_INT_MSG_SMI 0x2
+#define K8_APIC_EXT_INT_MSG_NMI 0x4
+#define K8_APIC_EXT_INT_MSG_EXT 0x7
+#define K8_APIC_EXT_LVT_ENTRY_THRESHOLD    0
+
+#define ARCH_APICTIMER_STOPS_ON_C3	1
+
+extern unsigned boot_cpu_id;
+extern int local_apic_timer_c2_ok;
+
+#endif /* __ASM_APIC_H */
diff -urpN linux-2.6.23-sabayon/include/asm/atomic.h testtry/include/asm/atomic.h
--- linux-2.6.23-sabayon/include/asm/atomic.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/atomic.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,466 @@
+#ifndef __ARCH_X86_64_ATOMIC__
+#define __ARCH_X86_64_ATOMIC__
+
+#include <asm/alternative.h>
+#include <asm/cmpxchg.h>
+
+/* atomic_t should be 32 bit signed type */
+
+/*
+ * Atomic operations that C can't guarantee us.  Useful for
+ * resource counting etc..
+ */
+
+#ifdef CONFIG_SMP
+#define LOCK "lock ; "
+#else
+#define LOCK ""
+#endif
+
+/*
+ * Make sure gcc doesn't try to be clever and move things around
+ * on us. We need to use _exactly_ the address the user gave us,
+ * not some alias that contains the same information.
+ */
+typedef struct { int counter; } atomic_t;
+
+#define ATOMIC_INIT(i)	{ (i) }
+
+/**
+ * atomic_read - read atomic variable
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically reads the value of @v.
+ */ 
+#define atomic_read(v)		((v)->counter)
+
+/**
+ * atomic_set - set atomic variable
+ * @v: pointer of type atomic_t
+ * @i: required value
+ * 
+ * Atomically sets the value of @v to @i.
+ */ 
+#define atomic_set(v,i)		(((v)->counter) = (i))
+
+/**
+ * atomic_add - add integer to atomic variable
+ * @i: integer value to add
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically adds @i to @v.
+ */
+static __inline__ void atomic_add(int i, atomic_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "addl %1,%0"
+		:"=m" (v->counter)
+		:"ir" (i), "m" (v->counter));
+}
+
+/**
+ * atomic_sub - subtract the atomic variable
+ * @i: integer value to subtract
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically subtracts @i from @v.
+ */
+static __inline__ void atomic_sub(int i, atomic_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "subl %1,%0"
+		:"=m" (v->counter)
+		:"ir" (i), "m" (v->counter));
+}
+
+/**
+ * atomic_sub_and_test - subtract value from variable and test result
+ * @i: integer value to subtract
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically subtracts @i from @v and returns
+ * true if the result is zero, or false for all
+ * other cases.
+ */
+static __inline__ int atomic_sub_and_test(int i, atomic_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "subl %2,%0; sete %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"ir" (i), "m" (v->counter) : "memory");
+	return c;
+}
+
+/**
+ * atomic_inc - increment atomic variable
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically increments @v by 1.
+ */ 
+static __inline__ void atomic_inc(atomic_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "incl %0"
+		:"=m" (v->counter)
+		:"m" (v->counter));
+}
+
+/**
+ * atomic_dec - decrement atomic variable
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically decrements @v by 1.
+ */ 
+static __inline__ void atomic_dec(atomic_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "decl %0"
+		:"=m" (v->counter)
+		:"m" (v->counter));
+}
+
+/**
+ * atomic_dec_and_test - decrement and test
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically decrements @v by 1 and
+ * returns true if the result is 0, or false for all other
+ * cases.
+ */ 
+static __inline__ int atomic_dec_and_test(atomic_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "decl %0; sete %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"m" (v->counter) : "memory");
+	return c != 0;
+}
+
+/**
+ * atomic_inc_and_test - increment and test 
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically increments @v by 1
+ * and returns true if the result is zero, or false for all
+ * other cases.
+ */ 
+static __inline__ int atomic_inc_and_test(atomic_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "incl %0; sete %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"m" (v->counter) : "memory");
+	return c != 0;
+}
+
+/**
+ * atomic_add_negative - add and test if negative
+ * @i: integer value to add
+ * @v: pointer of type atomic_t
+ * 
+ * Atomically adds @i to @v and returns true
+ * if the result is negative, or false when
+ * result is greater than or equal to zero.
+ */ 
+static __inline__ int atomic_add_negative(int i, atomic_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "addl %2,%0; sets %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"ir" (i), "m" (v->counter) : "memory");
+	return c;
+}
+
+/**
+ * atomic_add_return - add and return
+ * @i: integer value to add
+ * @v: pointer of type atomic_t
+ *
+ * Atomically adds @i to @v and returns @i + @v
+ */
+static __inline__ int atomic_add_return(int i, atomic_t *v)
+{
+	int __i = i;
+	__asm__ __volatile__(
+		LOCK_PREFIX "xaddl %0, %1"
+		:"+r" (i), "+m" (v->counter)
+		: : "memory");
+	return i + __i;
+}
+
+static __inline__ int atomic_sub_return(int i, atomic_t *v)
+{
+	return atomic_add_return(-i,v);
+}
+
+#define atomic_inc_return(v)  (atomic_add_return(1,v))
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))
+
+/* An 64bit atomic type */
+
+typedef struct { volatile long counter; } atomic64_t;
+
+#define ATOMIC64_INIT(i)	{ (i) }
+
+/**
+ * atomic64_read - read atomic64 variable
+ * @v: pointer of type atomic64_t
+ *
+ * Atomically reads the value of @v.
+ * Doesn't imply a read memory barrier.
+ */
+#define atomic64_read(v)		((v)->counter)
+
+/**
+ * atomic64_set - set atomic64 variable
+ * @v: pointer to type atomic64_t
+ * @i: required value
+ *
+ * Atomically sets the value of @v to @i.
+ */
+#define atomic64_set(v,i)		(((v)->counter) = (i))
+
+/**
+ * atomic64_add - add integer to atomic64 variable
+ * @i: integer value to add
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically adds @i to @v.
+ */
+static __inline__ void atomic64_add(long i, atomic64_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "addq %1,%0"
+		:"=m" (v->counter)
+		:"ir" (i), "m" (v->counter));
+}
+
+/**
+ * atomic64_sub - subtract the atomic64 variable
+ * @i: integer value to subtract
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically subtracts @i from @v.
+ */
+static __inline__ void atomic64_sub(long i, atomic64_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "subq %1,%0"
+		:"=m" (v->counter)
+		:"ir" (i), "m" (v->counter));
+}
+
+/**
+ * atomic64_sub_and_test - subtract value from variable and test result
+ * @i: integer value to subtract
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically subtracts @i from @v and returns
+ * true if the result is zero, or false for all
+ * other cases.
+ */
+static __inline__ int atomic64_sub_and_test(long i, atomic64_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "subq %2,%0; sete %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"ir" (i), "m" (v->counter) : "memory");
+	return c;
+}
+
+/**
+ * atomic64_inc - increment atomic64 variable
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically increments @v by 1.
+ */
+static __inline__ void atomic64_inc(atomic64_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "incq %0"
+		:"=m" (v->counter)
+		:"m" (v->counter));
+}
+
+/**
+ * atomic64_dec - decrement atomic64 variable
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically decrements @v by 1.
+ */
+static __inline__ void atomic64_dec(atomic64_t *v)
+{
+	__asm__ __volatile__(
+		LOCK_PREFIX "decq %0"
+		:"=m" (v->counter)
+		:"m" (v->counter));
+}
+
+/**
+ * atomic64_dec_and_test - decrement and test
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically decrements @v by 1 and
+ * returns true if the result is 0, or false for all other
+ * cases.
+ */
+static __inline__ int atomic64_dec_and_test(atomic64_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "decq %0; sete %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"m" (v->counter) : "memory");
+	return c != 0;
+}
+
+/**
+ * atomic64_inc_and_test - increment and test
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically increments @v by 1
+ * and returns true if the result is zero, or false for all
+ * other cases.
+ */
+static __inline__ int atomic64_inc_and_test(atomic64_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "incq %0; sete %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"m" (v->counter) : "memory");
+	return c != 0;
+}
+
+/**
+ * atomic64_add_negative - add and test if negative
+ * @i: integer value to add
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically adds @i to @v and returns true
+ * if the result is negative, or false when
+ * result is greater than or equal to zero.
+ */
+static __inline__ int atomic64_add_negative(long i, atomic64_t *v)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		LOCK_PREFIX "addq %2,%0; sets %1"
+		:"=m" (v->counter), "=qm" (c)
+		:"ir" (i), "m" (v->counter) : "memory");
+	return c;
+}
+
+/**
+ * atomic64_add_return - add and return
+ * @i: integer value to add
+ * @v: pointer to type atomic64_t
+ *
+ * Atomically adds @i to @v and returns @i + @v
+ */
+static __inline__ long atomic64_add_return(long i, atomic64_t *v)
+{
+	long __i = i;
+	__asm__ __volatile__(
+		LOCK_PREFIX "xaddq %0, %1;"
+		:"+r" (i), "+m" (v->counter)
+		: : "memory");
+	return i + __i;
+}
+
+static __inline__ long atomic64_sub_return(long i, atomic64_t *v)
+{
+	return atomic64_add_return(-i,v);
+}
+
+#define atomic64_inc_return(v)  (atomic64_add_return(1,v))
+#define atomic64_dec_return(v)  (atomic64_sub_return(1,v))
+
+#define atomic64_cmpxchg(v, old, new) (cmpxchg(&((v)->counter), old, new))
+#define atomic64_xchg(v, new) (xchg(&((v)->counter), new))
+
+#define atomic_cmpxchg(v, old, new) (cmpxchg(&((v)->counter), old, new))
+#define atomic_xchg(v, new) (xchg(&((v)->counter), new))
+
+/**
+ * atomic_add_unless - add unless the number is a given value
+ * @v: pointer of type atomic_t
+ * @a: the amount to add to v...
+ * @u: ...unless v is equal to u.
+ *
+ * Atomically adds @a to @v, so long as it was not @u.
+ * Returns non-zero if @v was not @u, and zero otherwise.
+ */
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)
+{
+	int c, old;
+	c = atomic_read(v);
+	for (;;) {
+		if (unlikely(c == (u)))
+			break;
+		old = atomic_cmpxchg((v), c, c + (a));
+		if (likely(old == c))
+			break;
+		c = old;
+	}
+	return c != (u);
+}
+
+#define atomic_inc_not_zero(v) atomic_add_unless((v), 1, 0)
+
+/**
+ * atomic64_add_unless - add unless the number is a given value
+ * @v: pointer of type atomic64_t
+ * @a: the amount to add to v...
+ * @u: ...unless v is equal to u.
+ *
+ * Atomically adds @a to @v, so long as it was not @u.
+ * Returns non-zero if @v was not @u, and zero otherwise.
+ */
+static __inline__ int atomic64_add_unless(atomic64_t *v, long a, long u)
+{
+	long c, old;
+	c = atomic64_read(v);
+	for (;;) {
+		if (unlikely(c == (u)))
+			break;
+		old = atomic64_cmpxchg((v), c, c + (a));
+		if (likely(old == c))
+			break;
+		c = old;
+	}
+	return c != (u);
+}
+
+#define atomic64_inc_not_zero(v) atomic64_add_unless((v), 1, 0)
+
+/* These are x86-specific, used by some header files */
+#define atomic_clear_mask(mask, addr) \
+__asm__ __volatile__(LOCK_PREFIX "andl %0,%1" \
+: : "r" (~(mask)),"m" (*addr) : "memory")
+
+#define atomic_set_mask(mask, addr) \
+__asm__ __volatile__(LOCK_PREFIX "orl %0,%1" \
+: : "r" ((unsigned)mask),"m" (*(addr)) : "memory")
+
+/* Atomic operations are already serializing on x86 */
+#define smp_mb__before_atomic_dec()	barrier()
+#define smp_mb__after_atomic_dec()	barrier()
+#define smp_mb__before_atomic_inc()	barrier()
+#define smp_mb__after_atomic_inc()	barrier()
+
+#include <asm-generic/atomic.h>
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/auxvec.h testtry/include/asm/auxvec.h
--- linux-2.6.23-sabayon/include/asm/auxvec.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/auxvec.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef __ASM_X86_64_AUXVEC_H
+#define __ASM_X86_64_AUXVEC_H
+
+#define AT_SYSINFO_EHDR		33
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/bitops.h testtry/include/asm/bitops.h
--- linux-2.6.23-sabayon/include/asm/bitops.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/bitops.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,427 @@
+#ifndef _X86_64_BITOPS_H
+#define _X86_64_BITOPS_H
+
+/*
+ * Copyright 1992, Linus Torvalds.
+ */
+
+#include <asm/alternative.h>
+
+#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 1)
+/* Technically wrong, but this avoids compilation errors on some gcc
+   versions. */
+#define ADDR "=m" (*(volatile long *) addr)
+#else
+#define ADDR "+m" (*(volatile long *) addr)
+#endif
+
+/**
+ * set_bit - Atomically set a bit in memory
+ * @nr: the bit to set
+ * @addr: the address to start counting from
+ *
+ * This function is atomic and may not be reordered.  See __set_bit()
+ * if you do not require the atomic guarantees.
+ * Note that @nr may be almost arbitrarily large; this function is not
+ * restricted to acting on a single-word quantity.
+ */
+static __inline__ void set_bit(int nr, volatile void * addr)
+{
+	__asm__ __volatile__( LOCK_PREFIX
+		"btsl %1,%0"
+		:ADDR
+		:"dIr" (nr) : "memory");
+}
+
+/**
+ * __set_bit - Set a bit in memory
+ * @nr: the bit to set
+ * @addr: the address to start counting from
+ *
+ * Unlike set_bit(), this function is non-atomic and may be reordered.
+ * If it's called on the same region of memory simultaneously, the effect
+ * may be that only one operation succeeds.
+ */
+static __inline__ void __set_bit(int nr, volatile void * addr)
+{
+	__asm__ volatile(
+		"btsl %1,%0"
+		:ADDR
+		:"dIr" (nr) : "memory");
+}
+
+/**
+ * clear_bit - Clears a bit in memory
+ * @nr: Bit to clear
+ * @addr: Address to start counting from
+ *
+ * clear_bit() is atomic and may not be reordered.  However, it does
+ * not contain a memory barrier, so if it is used for locking purposes,
+ * you should call smp_mb__before_clear_bit() and/or smp_mb__after_clear_bit()
+ * in order to ensure changes are visible on other processors.
+ */
+static __inline__ void clear_bit(int nr, volatile void * addr)
+{
+	__asm__ __volatile__( LOCK_PREFIX
+		"btrl %1,%0"
+		:ADDR
+		:"dIr" (nr));
+}
+
+static __inline__ void __clear_bit(int nr, volatile void * addr)
+{
+	__asm__ __volatile__(
+		"btrl %1,%0"
+		:ADDR
+		:"dIr" (nr));
+}
+
+#define smp_mb__before_clear_bit()	barrier()
+#define smp_mb__after_clear_bit()	barrier()
+
+/**
+ * __change_bit - Toggle a bit in memory
+ * @nr: the bit to change
+ * @addr: the address to start counting from
+ *
+ * Unlike change_bit(), this function is non-atomic and may be reordered.
+ * If it's called on the same region of memory simultaneously, the effect
+ * may be that only one operation succeeds.
+ */
+static __inline__ void __change_bit(int nr, volatile void * addr)
+{
+	__asm__ __volatile__(
+		"btcl %1,%0"
+		:ADDR
+		:"dIr" (nr));
+}
+
+/**
+ * change_bit - Toggle a bit in memory
+ * @nr: Bit to change
+ * @addr: Address to start counting from
+ *
+ * change_bit() is atomic and may not be reordered.
+ * Note that @nr may be almost arbitrarily large; this function is not
+ * restricted to acting on a single-word quantity.
+ */
+static __inline__ void change_bit(int nr, volatile void * addr)
+{
+	__asm__ __volatile__( LOCK_PREFIX
+		"btcl %1,%0"
+		:ADDR
+		:"dIr" (nr));
+}
+
+/**
+ * test_and_set_bit - Set a bit and return its old value
+ * @nr: Bit to set
+ * @addr: Address to count from
+ *
+ * This operation is atomic and cannot be reordered.  
+ * It also implies a memory barrier.
+ */
+static __inline__ int test_and_set_bit(int nr, volatile void * addr)
+{
+	int oldbit;
+
+	__asm__ __volatile__( LOCK_PREFIX
+		"btsl %2,%1\n\tsbbl %0,%0"
+		:"=r" (oldbit),ADDR
+		:"dIr" (nr) : "memory");
+	return oldbit;
+}
+
+/**
+ * __test_and_set_bit - Set a bit and return its old value
+ * @nr: Bit to set
+ * @addr: Address to count from
+ *
+ * This operation is non-atomic and can be reordered.  
+ * If two examples of this operation race, one can appear to succeed
+ * but actually fail.  You must protect multiple accesses with a lock.
+ */
+static __inline__ int __test_and_set_bit(int nr, volatile void * addr)
+{
+	int oldbit;
+
+	__asm__(
+		"btsl %2,%1\n\tsbbl %0,%0"
+		:"=r" (oldbit),ADDR
+		:"dIr" (nr));
+	return oldbit;
+}
+
+/**
+ * test_and_clear_bit - Clear a bit and return its old value
+ * @nr: Bit to clear
+ * @addr: Address to count from
+ *
+ * This operation is atomic and cannot be reordered.  
+ * It also implies a memory barrier.
+ */
+static __inline__ int test_and_clear_bit(int nr, volatile void * addr)
+{
+	int oldbit;
+
+	__asm__ __volatile__( LOCK_PREFIX
+		"btrl %2,%1\n\tsbbl %0,%0"
+		:"=r" (oldbit),ADDR
+		:"dIr" (nr) : "memory");
+	return oldbit;
+}
+
+/**
+ * __test_and_clear_bit - Clear a bit and return its old value
+ * @nr: Bit to clear
+ * @addr: Address to count from
+ *
+ * This operation is non-atomic and can be reordered.  
+ * If two examples of this operation race, one can appear to succeed
+ * but actually fail.  You must protect multiple accesses with a lock.
+ */
+static __inline__ int __test_and_clear_bit(int nr, volatile void * addr)
+{
+	int oldbit;
+
+	__asm__(
+		"btrl %2,%1\n\tsbbl %0,%0"
+		:"=r" (oldbit),ADDR
+		:"dIr" (nr));
+	return oldbit;
+}
+
+/* WARNING: non atomic and it can be reordered! */
+static __inline__ int __test_and_change_bit(int nr, volatile void * addr)
+{
+	int oldbit;
+
+	__asm__ __volatile__(
+		"btcl %2,%1\n\tsbbl %0,%0"
+		:"=r" (oldbit),ADDR
+		:"dIr" (nr) : "memory");
+	return oldbit;
+}
+
+/**
+ * test_and_change_bit - Change a bit and return its old value
+ * @nr: Bit to change
+ * @addr: Address to count from
+ *
+ * This operation is atomic and cannot be reordered.  
+ * It also implies a memory barrier.
+ */
+static __inline__ int test_and_change_bit(int nr, volatile void * addr)
+{
+	int oldbit;
+
+	__asm__ __volatile__( LOCK_PREFIX
+		"btcl %2,%1\n\tsbbl %0,%0"
+		:"=r" (oldbit),ADDR
+		:"dIr" (nr) : "memory");
+	return oldbit;
+}
+
+#if 0 /* Fool kernel-doc since it doesn't do macros yet */
+/**
+ * test_bit - Determine whether a bit is set
+ * @nr: bit number to test
+ * @addr: Address to start counting from
+ */
+static int test_bit(int nr, const volatile void * addr);
+#endif
+
+static __inline__ int constant_test_bit(int nr, const volatile void * addr)
+{
+	return ((1UL << (nr & 31)) & (((const volatile unsigned int *) addr)[nr >> 5])) != 0;
+}
+
+static __inline__ int variable_test_bit(int nr, volatile const void * addr)
+{
+	int oldbit;
+
+	__asm__ __volatile__(
+		"btl %2,%1\n\tsbbl %0,%0"
+		:"=r" (oldbit)
+		:"m" (*(volatile long *)addr),"dIr" (nr));
+	return oldbit;
+}
+
+#define test_bit(nr,addr) \
+(__builtin_constant_p(nr) ? \
+ constant_test_bit((nr),(addr)) : \
+ variable_test_bit((nr),(addr)))
+
+#undef ADDR
+
+extern long find_first_zero_bit(const unsigned long * addr, unsigned long size);
+extern long find_next_zero_bit (const unsigned long * addr, long size, long offset);
+extern long find_first_bit(const unsigned long * addr, unsigned long size);
+extern long find_next_bit(const unsigned long * addr, long size, long offset);
+
+/* return index of first bet set in val or max when no bit is set */
+static inline unsigned long __scanbit(unsigned long val, unsigned long max)
+{
+	asm("bsfq %1,%0 ; cmovz %2,%0" : "=&r" (val) : "r" (val), "r" (max));
+	return val;
+}
+
+#define find_first_bit(addr,size) \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? \
+  (__scanbit(*(unsigned long *)addr,(size))) : \
+  find_first_bit(addr,size)))
+
+#define find_next_bit(addr,size,off) \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? 	  \
+  ((off) + (__scanbit((*(unsigned long *)addr) >> (off),(size)-(off)))) : \
+	find_next_bit(addr,size,off)))
+
+#define find_first_zero_bit(addr,size) \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? \
+  (__scanbit(~*(unsigned long *)addr,(size))) : \
+  	find_first_zero_bit(addr,size)))
+	
+#define find_next_zero_bit(addr,size,off) \
+((__builtin_constant_p(size) && (size) <= BITS_PER_LONG ? 	  \
+  ((off)+(__scanbit(~(((*(unsigned long *)addr)) >> (off)),(size)-(off)))) : \
+	find_next_zero_bit(addr,size,off)))
+
+/* 
+ * Find string of zero bits in a bitmap. -1 when not found.
+ */ 
+extern unsigned long 
+find_next_zero_string(unsigned long *bitmap, long start, long nbits, int len);
+
+static inline void set_bit_string(unsigned long *bitmap, unsigned long i, 
+				  int len) 
+{ 
+	unsigned long end = i + len; 
+	while (i < end) {
+		__set_bit(i, bitmap); 
+		i++;
+	}
+} 
+
+static inline void __clear_bit_string(unsigned long *bitmap, unsigned long i, 
+				    int len) 
+{ 
+	unsigned long end = i + len; 
+	while (i < end) {
+		__clear_bit(i, bitmap); 
+		i++;
+	}
+} 
+
+/**
+ * ffz - find first zero in word.
+ * @word: The word to search
+ *
+ * Undefined if no zero exists, so code should check against ~0UL first.
+ */
+static __inline__ unsigned long ffz(unsigned long word)
+{
+	__asm__("bsfq %1,%0"
+		:"=r" (word)
+		:"r" (~word));
+	return word;
+}
+
+/**
+ * __ffs - find first bit in word.
+ * @word: The word to search
+ *
+ * Undefined if no bit exists, so code should check against 0 first.
+ */
+static __inline__ unsigned long __ffs(unsigned long word)
+{
+	__asm__("bsfq %1,%0"
+		:"=r" (word)
+		:"rm" (word));
+	return word;
+}
+
+/*
+ * __fls: find last bit set.
+ * @word: The word to search
+ *
+ * Undefined if no zero exists, so code should check against ~0UL first.
+ */
+static __inline__ unsigned long __fls(unsigned long word)
+{
+	__asm__("bsrq %1,%0"
+		:"=r" (word)
+		:"rm" (word));
+	return word;
+}
+
+#ifdef __KERNEL__
+
+#include <asm-generic/bitops/sched.h>
+
+/**
+ * ffs - find first bit set
+ * @x: the word to search
+ *
+ * This is defined the same way as
+ * the libc and compiler builtin ffs routines, therefore
+ * differs in spirit from the above ffz (man ffs).
+ */
+static __inline__ int ffs(int x)
+{
+	int r;
+
+	__asm__("bsfl %1,%0\n\t"
+		"cmovzl %2,%0" 
+		: "=r" (r) : "rm" (x), "r" (-1));
+	return r+1;
+}
+
+/**
+ * fls64 - find last bit set in 64 bit word
+ * @x: the word to search
+ *
+ * This is defined the same way as fls.
+ */
+static __inline__ int fls64(__u64 x)
+{
+	if (x == 0)
+		return 0;
+	return __fls(x) + 1;
+}
+
+/**
+ * fls - find last bit set
+ * @x: the word to search
+ *
+ * This is defined the same way as ffs.
+ */
+static __inline__ int fls(int x)
+{
+	int r;
+
+	__asm__("bsrl %1,%0\n\t"
+		"cmovzl %2,%0"
+		: "=&r" (r) : "rm" (x), "rm" (-1));
+	return r+1;
+}
+
+#define ARCH_HAS_FAST_MULTIPLIER 1
+
+#include <asm-generic/bitops/hweight.h>
+
+#endif /* __KERNEL__ */
+
+#ifdef __KERNEL__
+
+#include <asm-generic/bitops/ext2-non-atomic.h>
+
+#define ext2_set_bit_atomic(lock,nr,addr) \
+	        test_and_set_bit((nr),(unsigned long*)addr)
+#define ext2_clear_bit_atomic(lock,nr,addr) \
+	        test_and_clear_bit((nr),(unsigned long*)addr)
+
+#include <asm-generic/bitops/minix.h>
+
+#endif /* __KERNEL__ */
+
+#endif /* _X86_64_BITOPS_H */
diff -urpN linux-2.6.23-sabayon/include/asm/boot.h testtry/include/asm/boot.h
--- linux-2.6.23-sabayon/include/asm/boot.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/boot.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/boot.h>
diff -urpN linux-2.6.23-sabayon/include/asm/bootparam.h testtry/include/asm/bootparam.h
--- linux-2.6.23-sabayon/include/asm/bootparam.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/bootparam.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/bootparam.h>
diff -urpN linux-2.6.23-sabayon/include/asm/bootsetup.h testtry/include/asm/bootsetup.h
--- linux-2.6.23-sabayon/include/asm/bootsetup.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/bootsetup.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,40 @@
+
+#ifndef _X86_64_BOOTSETUP_H
+#define _X86_64_BOOTSETUP_H 1
+
+#define BOOT_PARAM_SIZE		4096
+extern char x86_boot_params[BOOT_PARAM_SIZE];
+
+/*
+ * This is set up by the setup-routine at boot-time
+ */
+#define PARAM	((unsigned char *)x86_boot_params)
+#define SCREEN_INFO (*(struct screen_info *) (PARAM+0))
+#define EXT_MEM_K (*(unsigned short *) (PARAM+2))
+#define ALT_MEM_K (*(unsigned int *) (PARAM+0x1e0))
+#define E820_MAP_NR (*(char*) (PARAM+E820NR))
+#define E820_MAP    ((struct e820entry *) (PARAM+E820MAP))
+#define APM_BIOS_INFO (*(struct apm_bios_info *) (PARAM+0x40))
+#define DRIVE_INFO (*(struct drive_info_struct *) (PARAM+0x80))
+#define SYS_DESC_TABLE (*(struct sys_desc_table_struct*)(PARAM+0xa0))
+#define MOUNT_ROOT_RDONLY (*(unsigned short *) (PARAM+0x1F2))
+#define RAMDISK_FLAGS (*(unsigned short *) (PARAM+0x1F8))
+#define SAVED_VIDEO_MODE (*(unsigned short *) (PARAM+0x1FA))
+#define ORIG_ROOT_DEV (*(unsigned short *) (PARAM+0x1FC))
+#define AUX_DEVICE_INFO (*(unsigned char *) (PARAM+0x1FF))
+#define LOADER_TYPE (*(unsigned char *) (PARAM+0x210))
+#define KERNEL_START (*(unsigned int *) (PARAM+0x214))
+#define INITRD_START (*(unsigned int *) (PARAM+0x218))
+#define INITRD_SIZE (*(unsigned int *) (PARAM+0x21c))
+#define EDID_INFO (*(struct edid_info *) (PARAM+0x140))
+#define EDD_NR     (*(unsigned char *) (PARAM+EDDNR))
+#define EDD_MBR_SIG_NR (*(unsigned char *) (PARAM+EDD_MBR_SIG_NR_BUF))
+#define EDD_MBR_SIGNATURE ((unsigned int *) (PARAM+EDD_MBR_SIG_BUF))
+#define EDD_BUF     ((struct edd_info *) (PARAM+EDDBUF))
+#define COMMAND_LINE boot_command_line
+
+#define RAMDISK_IMAGE_START_MASK  	0x07FF
+#define RAMDISK_PROMPT_FLAG		0x8000
+#define RAMDISK_LOAD_FLAG		0x4000	
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/bug.h testtry/include/asm/bug.h
--- linux-2.6.23-sabayon/include/asm/bug.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/bug.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,34 @@
+#ifndef __ASM_X8664_BUG_H
+#define __ASM_X8664_BUG_H 1
+
+#ifdef CONFIG_BUG
+#define HAVE_ARCH_BUG
+
+#ifdef CONFIG_DEBUG_BUGVERBOSE
+#define BUG()								\
+	do {								\
+		asm volatile("1:\tud2\n"				\
+			     ".pushsection __bug_table,\"a\"\n"		\
+			     "2:\t.quad 1b, %c0\n"			\
+			     "\t.word %c1, 0\n"				\
+			     "\t.org 2b+%c2\n"				\
+			     ".popsection"				\
+			     : : "i" (__FILE__), "i" (__LINE__),	\
+			        "i" (sizeof(struct bug_entry)));	\
+		for(;;) ;						\
+	} while(0)
+#else
+#define BUG()								\
+	do {								\
+		asm volatile("ud2");					\
+		for(;;) ;						\
+	} while(0)
+#endif
+
+void out_of_line_bug(void);
+#else
+static inline void out_of_line_bug(void) { }
+#endif
+
+#include <asm-generic/bug.h>
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/bugs.h testtry/include/asm/bugs.h
--- linux-2.6.23-sabayon/include/asm/bugs.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/bugs.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef _ASM_X86_64_BUGS_H
+#define _ASM_X86_64_BUGS_H
+
+void check_bugs(void);
+
+#endif	/* _ASM_X86_64_BUGS_H */
diff -urpN linux-2.6.23-sabayon/include/asm/byteorder.h testtry/include/asm/byteorder.h
--- linux-2.6.23-sabayon/include/asm/byteorder.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/byteorder.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,33 @@
+#ifndef _X86_64_BYTEORDER_H
+#define _X86_64_BYTEORDER_H
+
+#include <asm/types.h>
+#include <linux/compiler.h>
+
+#ifdef __GNUC__
+
+static __inline__ __attribute_const__ __u64 ___arch__swab64(__u64 x)
+{
+	__asm__("bswapq %0" : "=r" (x) : "0" (x));
+	return x;
+}
+
+static __inline__ __attribute_const__ __u32 ___arch__swab32(__u32 x)
+{
+	__asm__("bswapl %0" : "=r" (x) : "0" (x));
+	return x;
+}
+
+/* Do not define swab16.  Gcc is smart enough to recognize "C" version and
+   convert it into rotation or exhange.  */
+
+#define __arch__swab32(x) ___arch__swab32(x)
+#define __arch__swab64(x) ___arch__swab64(x)
+
+#endif /* __GNUC__ */
+
+#define __BYTEORDER_HAS_U64__
+
+#include <linux/byteorder/little_endian.h>
+
+#endif /* _X86_64_BYTEORDER_H */
diff -urpN linux-2.6.23-sabayon/include/asm/cacheflush.h testtry/include/asm/cacheflush.h
--- linux-2.6.23-sabayon/include/asm/cacheflush.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/cacheflush.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,35 @@
+#ifndef _X8664_CACHEFLUSH_H
+#define _X8664_CACHEFLUSH_H
+
+/* Keep includes the same across arches.  */
+#include <linux/mm.h>
+
+/* Caches aren't brain-dead on the intel. */
+#define flush_cache_all()			do { } while (0)
+#define flush_cache_mm(mm)			do { } while (0)
+#define flush_cache_dup_mm(mm)			do { } while (0)
+#define flush_cache_range(vma, start, end)	do { } while (0)
+#define flush_cache_page(vma, vmaddr, pfn)	do { } while (0)
+#define flush_dcache_page(page)			do { } while (0)
+#define flush_dcache_mmap_lock(mapping)		do { } while (0)
+#define flush_dcache_mmap_unlock(mapping)	do { } while (0)
+#define flush_icache_range(start, end)		do { } while (0)
+#define flush_icache_page(vma,pg)		do { } while (0)
+#define flush_icache_user_range(vma,pg,adr,len)	do { } while (0)
+#define flush_cache_vmap(start, end)		do { } while (0)
+#define flush_cache_vunmap(start, end)		do { } while (0)
+
+#define copy_to_user_page(vma, page, vaddr, dst, src, len) \
+	memcpy(dst, src, len)
+#define copy_from_user_page(vma, page, vaddr, dst, src, len) \
+	memcpy(dst, src, len)
+
+void global_flush_tlb(void); 
+int change_page_attr(struct page *page, int numpages, pgprot_t prot);
+int change_page_attr_addr(unsigned long addr, int numpages, pgprot_t prot);
+
+#ifdef CONFIG_DEBUG_RODATA
+void mark_rodata_ro(void);
+#endif
+
+#endif /* _X8664_CACHEFLUSH_H */
diff -urpN linux-2.6.23-sabayon/include/asm/cache.h testtry/include/asm/cache.h
--- linux-2.6.23-sabayon/include/asm/cache.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/cache.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,26 @@
+/*
+ * include/asm-x86_64/cache.h
+ */
+#ifndef __ARCH_X8664_CACHE_H
+#define __ARCH_X8664_CACHE_H
+
+
+/* L1 cache line size */
+#define L1_CACHE_SHIFT	(CONFIG_X86_L1_CACHE_SHIFT)
+#define L1_CACHE_BYTES	(1 << L1_CACHE_SHIFT)
+
+#ifdef CONFIG_X86_VSMP
+
+/* vSMP Internode cacheline shift */
+#define INTERNODE_CACHE_SHIFT (12)
+#ifdef CONFIG_SMP
+#define __cacheline_aligned_in_smp					\
+       __attribute__((__aligned__(1 << (INTERNODE_CACHE_SHIFT))))         \
+       __attribute__((__section__(".data.page_aligned")))
+#endif
+
+#endif
+
+#define __read_mostly __attribute__((__section__(".data.read_mostly")))
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/calgary.h testtry/include/asm/calgary.h
--- linux-2.6.23-sabayon/include/asm/calgary.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/calgary.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,72 @@
+/*
+ * Derived from include/asm-powerpc/iommu.h
+ *
+ * Copyright IBM Corporation, 2006-2007
+ *
+ * Author: Jon Mason <jdmason@us.ibm.com>
+ * Author: Muli Ben-Yehuda <muli@il.ibm.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
+ */
+
+#ifndef _ASM_X86_64_CALGARY_H
+#define _ASM_X86_64_CALGARY_H
+
+#include <linux/spinlock.h>
+#include <linux/device.h>
+#include <linux/dma-mapping.h>
+#include <linux/timer.h>
+#include <asm/types.h>
+
+struct iommu_table {
+	struct cal_chipset_ops *chip_ops; /* chipset specific funcs */
+	unsigned long  it_base;      /* mapped address of tce table */
+	unsigned long  it_hint;      /* Hint for next alloc */
+	unsigned long *it_map;       /* A simple allocation bitmap for now */
+	void __iomem  *bbar;         /* Bridge BAR */
+	u64	       tar_val;      /* Table Address Register */
+	struct timer_list watchdog_timer;
+	spinlock_t     it_lock;      /* Protects it_map */
+	unsigned int   it_size;      /* Size of iommu table in entries */
+	unsigned char  it_busno;     /* Bus number this table belongs to */
+};
+
+struct cal_chipset_ops {
+	void (*handle_quirks)(struct iommu_table *tbl, struct pci_dev *dev);
+	void (*tce_cache_blast)(struct iommu_table *tbl);
+	void (*dump_error_regs)(struct iommu_table *tbl);
+};
+
+#define TCE_TABLE_SIZE_UNSPECIFIED	~0
+#define TCE_TABLE_SIZE_64K		0
+#define TCE_TABLE_SIZE_128K		1
+#define TCE_TABLE_SIZE_256K		2
+#define TCE_TABLE_SIZE_512K		3
+#define TCE_TABLE_SIZE_1M		4
+#define TCE_TABLE_SIZE_2M		5
+#define TCE_TABLE_SIZE_4M		6
+#define TCE_TABLE_SIZE_8M		7
+
+extern int use_calgary;
+
+#ifdef CONFIG_CALGARY_IOMMU
+extern int calgary_iommu_init(void);
+extern void detect_calgary(void);
+#else
+static inline int calgary_iommu_init(void) { return 1; }
+static inline void detect_calgary(void) { return; }
+#endif
+
+#endif /* _ASM_X86_64_CALGARY_H */
diff -urpN linux-2.6.23-sabayon/include/asm/calling.h testtry/include/asm/calling.h
--- linux-2.6.23-sabayon/include/asm/calling.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/calling.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,162 @@
+/* 
+ * Some macros to handle stack frames in assembly.
+ */ 
+
+
+#define R15 0
+#define R14 8
+#define R13 16
+#define R12 24
+#define RBP 32
+#define RBX 40
+/* arguments: interrupts/non tracing syscalls only save upto here*/
+#define R11 48
+#define R10 56	
+#define R9 64
+#define R8 72
+#define RAX 80
+#define RCX 88
+#define RDX 96
+#define RSI 104
+#define RDI 112
+#define ORIG_RAX 120       /* + error_code */ 
+/* end of arguments */ 	
+/* cpu exception frame or undefined in case of fast syscall. */
+#define RIP 128
+#define CS 136
+#define EFLAGS 144
+#define RSP 152
+#define SS 160
+#define ARGOFFSET R11
+#define SWFRAME ORIG_RAX
+
+	.macro SAVE_ARGS addskip=0,norcx=0,nor891011=0
+	subq  $9*8+\addskip,%rsp
+	CFI_ADJUST_CFA_OFFSET	9*8+\addskip
+	movq  %rdi,8*8(%rsp) 
+	CFI_REL_OFFSET	rdi,8*8
+	movq  %rsi,7*8(%rsp) 
+	CFI_REL_OFFSET	rsi,7*8
+	movq  %rdx,6*8(%rsp)
+	CFI_REL_OFFSET	rdx,6*8
+	.if \norcx
+	.else
+	movq  %rcx,5*8(%rsp)
+	CFI_REL_OFFSET	rcx,5*8
+	.endif
+	movq  %rax,4*8(%rsp) 
+	CFI_REL_OFFSET	rax,4*8
+	.if \nor891011
+	.else
+	movq  %r8,3*8(%rsp) 
+	CFI_REL_OFFSET	r8,3*8
+	movq  %r9,2*8(%rsp) 
+	CFI_REL_OFFSET	r9,2*8
+	movq  %r10,1*8(%rsp) 
+	CFI_REL_OFFSET	r10,1*8
+	movq  %r11,(%rsp) 
+	CFI_REL_OFFSET	r11,0*8
+	.endif
+	.endm
+
+#define ARG_SKIP 9*8
+	.macro RESTORE_ARGS skiprax=0,addskip=0,skiprcx=0,skipr11=0,skipr8910=0,skiprdx=0
+	.if \skipr11
+	.else
+	movq (%rsp),%r11
+	CFI_RESTORE r11
+	.endif
+	.if \skipr8910
+	.else
+	movq 1*8(%rsp),%r10
+	CFI_RESTORE r10
+	movq 2*8(%rsp),%r9
+	CFI_RESTORE r9
+	movq 3*8(%rsp),%r8
+	CFI_RESTORE r8
+	.endif
+	.if \skiprax
+	.else
+	movq 4*8(%rsp),%rax
+	CFI_RESTORE rax
+	.endif
+	.if \skiprcx
+	.else
+	movq 5*8(%rsp),%rcx
+	CFI_RESTORE rcx
+	.endif
+	.if \skiprdx
+	.else
+	movq 6*8(%rsp),%rdx
+	CFI_RESTORE rdx
+	.endif
+	movq 7*8(%rsp),%rsi
+	CFI_RESTORE rsi
+	movq 8*8(%rsp),%rdi
+	CFI_RESTORE rdi
+	.if ARG_SKIP+\addskip > 0
+	addq $ARG_SKIP+\addskip,%rsp
+	CFI_ADJUST_CFA_OFFSET	-(ARG_SKIP+\addskip)
+	.endif
+	.endm	
+
+	.macro LOAD_ARGS offset
+	movq \offset(%rsp),%r11
+	movq \offset+8(%rsp),%r10
+	movq \offset+16(%rsp),%r9
+	movq \offset+24(%rsp),%r8
+	movq \offset+40(%rsp),%rcx
+	movq \offset+48(%rsp),%rdx
+	movq \offset+56(%rsp),%rsi
+	movq \offset+64(%rsp),%rdi
+	movq \offset+72(%rsp),%rax
+	.endm
+			
+#define REST_SKIP 6*8			
+	.macro SAVE_REST
+	subq $REST_SKIP,%rsp
+	CFI_ADJUST_CFA_OFFSET	REST_SKIP
+	movq %rbx,5*8(%rsp) 
+	CFI_REL_OFFSET	rbx,5*8
+	movq %rbp,4*8(%rsp) 
+	CFI_REL_OFFSET	rbp,4*8
+	movq %r12,3*8(%rsp) 
+	CFI_REL_OFFSET	r12,3*8
+	movq %r13,2*8(%rsp) 
+	CFI_REL_OFFSET	r13,2*8
+	movq %r14,1*8(%rsp) 
+	CFI_REL_OFFSET	r14,1*8
+	movq %r15,(%rsp) 
+	CFI_REL_OFFSET	r15,0*8
+	.endm		
+
+	.macro RESTORE_REST
+	movq (%rsp),%r15
+	CFI_RESTORE r15
+	movq 1*8(%rsp),%r14
+	CFI_RESTORE r14
+	movq 2*8(%rsp),%r13
+	CFI_RESTORE r13
+	movq 3*8(%rsp),%r12
+	CFI_RESTORE r12
+	movq 4*8(%rsp),%rbp
+	CFI_RESTORE rbp
+	movq 5*8(%rsp),%rbx
+	CFI_RESTORE rbx
+	addq $REST_SKIP,%rsp
+	CFI_ADJUST_CFA_OFFSET	-(REST_SKIP)
+	.endm
+		
+	.macro SAVE_ALL
+	SAVE_ARGS
+	SAVE_REST
+	.endm
+		
+	.macro RESTORE_ALL addskip=0
+	RESTORE_REST
+	RESTORE_ARGS 0,\addskip
+	.endm
+
+	.macro icebp
+	.byte 0xf1
+	.endm
diff -urpN linux-2.6.23-sabayon/include/asm/checksum.h testtry/include/asm/checksum.h
--- linux-2.6.23-sabayon/include/asm/checksum.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/checksum.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,195 @@
+#ifndef _X86_64_CHECKSUM_H
+#define _X86_64_CHECKSUM_H
+
+/* 
+ * Checksums for x86-64 
+ * Copyright 2002 by Andi Kleen, SuSE Labs 
+ * with some code from asm-i386/checksum.h
+ */ 
+
+#include <linux/compiler.h>
+#include <asm/uaccess.h>
+#include <asm/byteorder.h>
+
+/** 
+ * csum_fold - Fold and invert a 32bit checksum.
+ * sum: 32bit unfolded sum
+ * 
+ * Fold a 32bit running checksum to 16bit and invert it. This is usually
+ * the last step before putting a checksum into a packet.
+ * Make sure not to mix with 64bit checksums.
+ */
+static inline __sum16 csum_fold(__wsum sum)
+{
+	__asm__(
+		"  addl %1,%0\n"
+		"  adcl $0xffff,%0"
+		: "=r" (sum)
+		: "r" ((__force u32)sum << 16),
+		  "0" ((__force u32)sum & 0xffff0000)
+	);
+	return (__force __sum16)(~(__force u32)sum >> 16);
+}
+
+/*
+ *	This is a version of ip_compute_csum() optimized for IP headers,
+ *	which always checksum on 4 octet boundaries.
+ *
+ *	By Jorge Cwik <jorge@laser.satlink.net>, adapted for linux by
+ *	Arnt Gulbrandsen.
+ */
+
+/**
+ * ip_fast_csum - Compute the IPv4 header checksum efficiently.
+ * iph: ipv4 header
+ * ihl: length of header / 4
+ */ 
+static inline __sum16 ip_fast_csum(const void *iph, unsigned int ihl)
+{
+	unsigned int sum;
+
+	asm(	"  movl (%1), %0\n"
+		"  subl $4, %2\n"
+		"  jbe 2f\n"
+		"  addl 4(%1), %0\n"
+		"  adcl 8(%1), %0\n"
+		"  adcl 12(%1), %0\n"
+		"1: adcl 16(%1), %0\n"
+		"  lea 4(%1), %1\n"
+		"  decl %2\n"
+		"  jne	1b\n"
+		"  adcl $0, %0\n"
+		"  movl %0, %2\n"
+		"  shrl $16, %0\n"
+		"  addw %w2, %w0\n"
+		"  adcl $0, %0\n"
+		"  notl %0\n"
+		"2:"
+	/* Since the input registers which are loaded with iph and ihl
+	   are modified, we must also specify them as outputs, or gcc
+	   will assume they contain their original values. */
+	: "=r" (sum), "=r" (iph), "=r" (ihl)
+	: "1" (iph), "2" (ihl)
+	: "memory");
+	return (__force __sum16)sum;
+}
+
+/** 
+ * csum_tcpup_nofold - Compute an IPv4 pseudo header checksum.
+ * @saddr: source address
+ * @daddr: destination address
+ * @len: length of packet
+ * @proto: ip protocol of packet
+ * @sum: initial sum to be added in (32bit unfolded) 
+ * 
+ * Returns the pseudo header checksum the input data. Result is 
+ * 32bit unfolded.
+ */
+static inline __wsum
+csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len,
+		   unsigned short proto, __wsum sum)
+{
+	asm("  addl %1, %0\n"
+	    "  adcl %2, %0\n"
+	    "  adcl %3, %0\n"
+	    "  adcl $0, %0\n"
+		: "=r" (sum)
+	    : "g" (daddr), "g" (saddr),
+	      "g" ((len + proto)<<8), "0" (sum));
+    return sum;
+}
+
+
+/** 
+ * csum_tcpup_magic - Compute an IPv4 pseudo header checksum.
+ * @saddr: source address
+ * @daddr: destination address
+ * @len: length of packet
+ * @proto: ip protocol of packet
+ * @sum: initial sum to be added in (32bit unfolded) 
+ * 
+ * Returns the 16bit pseudo header checksum the input data already
+ * complemented and ready to be filled in.
+ */
+static inline __sum16
+csum_tcpudp_magic(__be32 saddr, __be32 daddr,
+		  unsigned short len, unsigned short proto, __wsum sum)
+{
+	return csum_fold(csum_tcpudp_nofold(saddr,daddr,len,proto,sum));
+}
+
+/** 
+ * csum_partial - Compute an internet checksum.
+ * @buff: buffer to be checksummed
+ * @len: length of buffer.
+ * @sum: initial sum to be added in (32bit unfolded)
+ *
+ * Returns the 32bit unfolded internet checksum of the buffer.
+ * Before filling it in it needs to be csum_fold()'ed.
+ * buff should be aligned to a 64bit boundary if possible.
+ */ 
+extern __wsum csum_partial(const void *buff, int len, __wsum sum);
+
+#define  _HAVE_ARCH_COPY_AND_CSUM_FROM_USER 1
+#define HAVE_CSUM_COPY_USER 1
+
+
+/* Do not call this directly. Use the wrappers below */
+extern __wsum csum_partial_copy_generic(const void *src, const void *dst,
+					       int len,
+					       __wsum sum,
+					       int *src_err_ptr, int *dst_err_ptr);
+
+
+extern __wsum csum_partial_copy_from_user(const void __user *src, void *dst,
+				       int len, __wsum isum, int *errp);
+extern __wsum csum_partial_copy_to_user(const void *src, void __user *dst,
+				      int len, __wsum isum, int *errp);
+extern __wsum csum_partial_copy_nocheck(const void *src, void *dst, int len,
+					      __wsum sum);
+
+/* Old names. To be removed. */
+#define csum_and_copy_to_user csum_partial_copy_to_user
+#define csum_and_copy_from_user csum_partial_copy_from_user
+
+/** 
+ * ip_compute_csum - Compute an 16bit IP checksum.
+ * @buff: buffer address.
+ * @len: length of buffer.
+ *
+ * Returns the 16bit folded/inverted checksum of the passed buffer.
+ * Ready to fill in.
+ */
+extern __sum16 ip_compute_csum(const void *buff, int len);
+
+/**
+ * csum_ipv6_magic - Compute checksum of an IPv6 pseudo header.
+ * @saddr: source address
+ * @daddr: destination address
+ * @len: length of packet
+ * @proto: protocol of packet
+ * @sum: initial sum (32bit unfolded) to be added in
+ *
+ * Computes an IPv6 pseudo header checksum. This sum is added the checksum 
+ * into UDP/TCP packets and contains some link layer information.
+ * Returns the unfolded 32bit checksum.
+ */
+
+struct in6_addr;
+
+#define _HAVE_ARCH_IPV6_CSUM 1
+extern __sum16
+csum_ipv6_magic(const struct in6_addr *saddr, const struct in6_addr *daddr,
+		__u32 len, unsigned short proto, __wsum sum);
+
+static inline unsigned add32_with_carry(unsigned a, unsigned b)
+{
+	asm("addl %2,%0\n\t"
+	    "adcl $0,%0" 
+	    : "=r" (a) 
+	    : "0" (a), "r" (b));
+	return a;
+}
+
+#endif
+
diff -urpN linux-2.6.23-sabayon/include/asm/cmpxchg.h testtry/include/asm/cmpxchg.h
--- linux-2.6.23-sabayon/include/asm/cmpxchg.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/cmpxchg.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,134 @@
+#ifndef __ASM_CMPXCHG_H
+#define __ASM_CMPXCHG_H
+
+#include <asm/alternative.h> /* Provides LOCK_PREFIX */
+
+#define xchg(ptr,v) ((__typeof__(*(ptr)))__xchg((unsigned long)(v),(ptr),sizeof(*(ptr))))
+
+#define __xg(x) ((volatile long *)(x))
+
+static inline void set_64bit(volatile unsigned long *ptr, unsigned long val)
+{
+	*ptr = val;
+}
+
+#define _set_64bit set_64bit
+
+/*
+ * Note: no "lock" prefix even on SMP: xchg always implies lock anyway
+ * Note 2: xchg has side effect, so that attribute volatile is necessary,
+ *	  but generally the primitive is invalid, *ptr is output argument. --ANK
+ */
+static inline unsigned long __xchg(unsigned long x, volatile void * ptr, int size)
+{
+	switch (size) {
+		case 1:
+			__asm__ __volatile__("xchgb %b0,%1"
+				:"=q" (x)
+				:"m" (*__xg(ptr)), "0" (x)
+				:"memory");
+			break;
+		case 2:
+			__asm__ __volatile__("xchgw %w0,%1"
+				:"=r" (x)
+				:"m" (*__xg(ptr)), "0" (x)
+				:"memory");
+			break;
+		case 4:
+			__asm__ __volatile__("xchgl %k0,%1"
+				:"=r" (x)
+				:"m" (*__xg(ptr)), "0" (x)
+				:"memory");
+			break;
+		case 8:
+			__asm__ __volatile__("xchgq %0,%1"
+				:"=r" (x)
+				:"m" (*__xg(ptr)), "0" (x)
+				:"memory");
+			break;
+	}
+	return x;
+}
+
+/*
+ * Atomic compare and exchange.  Compare OLD with MEM, if identical,
+ * store NEW in MEM.  Return the initial value in MEM.  Success is
+ * indicated by comparing RETURN with OLD.
+ */
+
+#define __HAVE_ARCH_CMPXCHG 1
+
+static inline unsigned long __cmpxchg(volatile void *ptr, unsigned long old,
+				      unsigned long new, int size)
+{
+	unsigned long prev;
+	switch (size) {
+	case 1:
+		__asm__ __volatile__(LOCK_PREFIX "cmpxchgb %b1,%2"
+				     : "=a"(prev)
+				     : "q"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	case 2:
+		__asm__ __volatile__(LOCK_PREFIX "cmpxchgw %w1,%2"
+				     : "=a"(prev)
+				     : "r"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	case 4:
+		__asm__ __volatile__(LOCK_PREFIX "cmpxchgl %k1,%2"
+				     : "=a"(prev)
+				     : "r"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	case 8:
+		__asm__ __volatile__(LOCK_PREFIX "cmpxchgq %1,%2"
+				     : "=a"(prev)
+				     : "r"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	}
+	return old;
+}
+
+static inline unsigned long __cmpxchg_local(volatile void *ptr,
+			unsigned long old, unsigned long new, int size)
+{
+	unsigned long prev;
+	switch (size) {
+	case 1:
+		__asm__ __volatile__("cmpxchgb %b1,%2"
+				     : "=a"(prev)
+				     : "q"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	case 2:
+		__asm__ __volatile__("cmpxchgw %w1,%2"
+				     : "=a"(prev)
+				     : "r"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	case 4:
+		__asm__ __volatile__("cmpxchgl %k1,%2"
+				     : "=a"(prev)
+				     : "r"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	case 8:
+		__asm__ __volatile__("cmpxchgq %1,%2"
+				     : "=a"(prev)
+				     : "r"(new), "m"(*__xg(ptr)), "0"(old)
+				     : "memory");
+		return prev;
+	}
+	return old;
+}
+
+#define cmpxchg(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))
+#define cmpxchg_local(ptr,o,n)\
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr),(unsigned long)(o),\
+					(unsigned long)(n),sizeof(*(ptr))))
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/compat.h testtry/include/asm/compat.h
--- linux-2.6.23-sabayon/include/asm/compat.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/compat.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,212 @@
+#ifndef _ASM_X86_64_COMPAT_H
+#define _ASM_X86_64_COMPAT_H
+
+/*
+ * Architecture specific compatibility types
+ */
+#include <linux/types.h>
+#include <linux/sched.h>
+
+#define COMPAT_USER_HZ	100
+
+typedef u32		compat_size_t;
+typedef s32		compat_ssize_t;
+typedef s32		compat_time_t;
+typedef s32		compat_clock_t;
+typedef s32		compat_pid_t;
+typedef u16		__compat_uid_t;
+typedef u16		__compat_gid_t;
+typedef u32		__compat_uid32_t;
+typedef u32		__compat_gid32_t;
+typedef u16		compat_mode_t;
+typedef u32		compat_ino_t;
+typedef u16		compat_dev_t;
+typedef s32		compat_off_t;
+typedef s64		compat_loff_t;
+typedef u16		compat_nlink_t;
+typedef u16		compat_ipc_pid_t;
+typedef s32		compat_daddr_t;
+typedef u32		compat_caddr_t;
+typedef __kernel_fsid_t	compat_fsid_t;
+typedef s32		compat_timer_t;
+typedef s32		compat_key_t;
+
+typedef s32		compat_int_t;
+typedef s32		compat_long_t;
+typedef s64 __attribute__((aligned(4))) compat_s64;
+typedef u32		compat_uint_t;
+typedef u32		compat_ulong_t;
+typedef u64 __attribute__((aligned(4))) compat_u64;
+
+struct compat_timespec {
+	compat_time_t	tv_sec;
+	s32		tv_nsec;
+};
+
+struct compat_timeval {
+	compat_time_t	tv_sec;
+	s32		tv_usec;
+};
+
+struct compat_stat {
+	compat_dev_t	st_dev;
+	u16		__pad1;
+	compat_ino_t	st_ino;
+	compat_mode_t	st_mode;
+	compat_nlink_t	st_nlink;
+	__compat_uid_t	st_uid;
+	__compat_gid_t	st_gid;
+	compat_dev_t	st_rdev;
+	u16		__pad2;
+	u32		st_size;
+	u32		st_blksize;
+	u32		st_blocks;
+	u32		st_atime;
+	u32		st_atime_nsec;
+	u32		st_mtime;
+	u32		st_mtime_nsec;
+	u32		st_ctime;
+	u32		st_ctime_nsec;
+	u32		__unused4;
+	u32		__unused5;
+};
+
+struct compat_flock {
+	short		l_type;
+	short		l_whence;
+	compat_off_t	l_start;
+	compat_off_t	l_len;
+	compat_pid_t	l_pid;
+};
+
+#define F_GETLK64	12	/*  using 'struct flock64' */
+#define F_SETLK64	13
+#define F_SETLKW64	14
+
+/*
+ * IA32 uses 4 byte alignment for 64 bit quantities,
+ * so we need to pack this structure.
+ */
+struct compat_flock64 {
+	short		l_type;
+	short		l_whence;
+	compat_loff_t	l_start;
+	compat_loff_t	l_len;
+	compat_pid_t	l_pid;
+} __attribute__((packed));
+
+struct compat_statfs {
+	int		f_type;
+	int		f_bsize;
+	int		f_blocks;
+	int		f_bfree;
+	int		f_bavail;
+	int		f_files;
+	int		f_ffree;
+	compat_fsid_t	f_fsid;
+	int		f_namelen;	/* SunOS ignores this field. */
+	int		f_frsize;
+	int		f_spare[5];
+};
+
+#define COMPAT_RLIM_OLD_INFINITY	0x7fffffff
+#define COMPAT_RLIM_INFINITY		0xffffffff
+
+typedef u32		compat_old_sigset_t;	/* at least 32 bits */
+
+#define _COMPAT_NSIG		64
+#define _COMPAT_NSIG_BPW	32
+
+typedef u32               compat_sigset_word;
+
+#define COMPAT_OFF_T_MAX	0x7fffffff
+#define COMPAT_LOFF_T_MAX	0x7fffffffffffffffL
+
+struct compat_ipc64_perm {
+	compat_key_t key;
+	__compat_uid32_t uid;
+	__compat_gid32_t gid;
+	__compat_uid32_t cuid;
+	__compat_gid32_t cgid;
+	unsigned short mode;
+	unsigned short __pad1;
+	unsigned short seq;
+	unsigned short __pad2;
+	compat_ulong_t unused1;
+	compat_ulong_t unused2;
+};
+
+struct compat_semid64_ds {
+	struct compat_ipc64_perm sem_perm;
+	compat_time_t  sem_otime;
+	compat_ulong_t __unused1;
+	compat_time_t  sem_ctime;
+	compat_ulong_t __unused2;
+	compat_ulong_t sem_nsems;
+	compat_ulong_t __unused3;
+	compat_ulong_t __unused4;
+};
+
+struct compat_msqid64_ds {
+	struct compat_ipc64_perm msg_perm;
+	compat_time_t  msg_stime;
+	compat_ulong_t __unused1;
+	compat_time_t  msg_rtime;
+	compat_ulong_t __unused2;
+	compat_time_t  msg_ctime;
+	compat_ulong_t __unused3;
+	compat_ulong_t msg_cbytes;
+	compat_ulong_t msg_qnum;
+	compat_ulong_t msg_qbytes;
+	compat_pid_t   msg_lspid;
+	compat_pid_t   msg_lrpid;
+	compat_ulong_t __unused4;
+	compat_ulong_t __unused5;
+};
+
+struct compat_shmid64_ds {
+	struct compat_ipc64_perm shm_perm;
+	compat_size_t  shm_segsz;
+	compat_time_t  shm_atime;
+	compat_ulong_t __unused1;
+	compat_time_t  shm_dtime;
+	compat_ulong_t __unused2;
+	compat_time_t  shm_ctime;
+	compat_ulong_t __unused3;
+	compat_pid_t   shm_cpid;
+	compat_pid_t   shm_lpid;
+	compat_ulong_t shm_nattch;
+	compat_ulong_t __unused4;
+	compat_ulong_t __unused5;
+};
+
+/*
+ * A pointer passed in from user mode. This should not
+ * be used for syscall parameters, just declare them
+ * as pointers because the syscall entry code will have
+ * appropriately comverted them already.
+ */
+typedef	u32		compat_uptr_t;
+
+static inline void __user *compat_ptr(compat_uptr_t uptr)
+{
+	return (void __user *)(unsigned long)uptr;
+}
+
+static inline compat_uptr_t ptr_to_compat(void __user *uptr)
+{
+	return (u32)(unsigned long)uptr;
+}
+
+static __inline__ void __user *compat_alloc_user_space(long len)
+{
+	struct pt_regs *regs = task_pt_regs(current);
+	return (void __user *)regs->rsp - len; 
+}
+
+static inline int is_compat_task(void)
+{
+	return current_thread_info()->status & TS_COMPAT;
+}
+
+#endif /* _ASM_X86_64_COMPAT_H */
diff -urpN linux-2.6.23-sabayon/include/asm/cpufeature.h testtry/include/asm/cpufeature.h
--- linux-2.6.23-sabayon/include/asm/cpufeature.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/cpufeature.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,30 @@
+/*
+ * cpufeature.h
+ *
+ * Defines x86 CPU feature bits
+ */
+
+#ifndef __ASM_X8664_CPUFEATURE_H
+#define __ASM_X8664_CPUFEATURE_H
+
+#include <asm-i386/cpufeature.h>
+
+#undef  cpu_has_vme
+#define cpu_has_vme            0
+
+#undef  cpu_has_pae
+#define cpu_has_pae            ___BUG___
+
+#undef  cpu_has_mp
+#define cpu_has_mp             1 /* XXX */
+
+#undef  cpu_has_k6_mtrr
+#define cpu_has_k6_mtrr        0
+
+#undef  cpu_has_cyrix_arr
+#define cpu_has_cyrix_arr      0
+
+#undef  cpu_has_centaur_mcr
+#define cpu_has_centaur_mcr    0
+
+#endif /* __ASM_X8664_CPUFEATURE_H */
diff -urpN linux-2.6.23-sabayon/include/asm/cpu.h testtry/include/asm/cpu.h
--- linux-2.6.23-sabayon/include/asm/cpu.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/cpu.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/cpu.h>
diff -urpN linux-2.6.23-sabayon/include/asm/cputime.h testtry/include/asm/cputime.h
--- linux-2.6.23-sabayon/include/asm/cputime.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/cputime.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef __X86_64_CPUTIME_H
+#define __X86_64_CPUTIME_H
+
+#include <asm-generic/cputime.h>
+
+#endif /* __X86_64_CPUTIME_H */
diff -urpN linux-2.6.23-sabayon/include/asm/current.h testtry/include/asm/current.h
--- linux-2.6.23-sabayon/include/asm/current.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/current.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,27 @@
+#ifndef _X86_64_CURRENT_H
+#define _X86_64_CURRENT_H
+
+#if !defined(__ASSEMBLY__) 
+struct task_struct;
+
+#include <asm/pda.h>
+
+static inline struct task_struct *get_current(void) 
+{ 
+	struct task_struct *t = read_pda(pcurrent); 
+	return t;
+} 
+
+#define current get_current()
+
+#else
+
+#ifndef ASM_OFFSET_H
+#include <asm/asm-offsets.h> 
+#endif
+
+#define GET_CURRENT(reg) movq %gs:(pda_pcurrent),reg
+
+#endif
+
+#endif /* !(_X86_64_CURRENT_H) */
diff -urpN linux-2.6.23-sabayon/include/asm/debugreg.h testtry/include/asm/debugreg.h
--- linux-2.6.23-sabayon/include/asm/debugreg.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/debugreg.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,65 @@
+#ifndef _X86_64_DEBUGREG_H
+#define _X86_64_DEBUGREG_H
+
+
+/* Indicate the register numbers for a number of the specific
+   debug registers.  Registers 0-3 contain the addresses we wish to trap on */
+#define DR_FIRSTADDR 0        /* u_debugreg[DR_FIRSTADDR] */
+#define DR_LASTADDR 3         /* u_debugreg[DR_LASTADDR]  */
+
+#define DR_STATUS 6           /* u_debugreg[DR_STATUS]     */
+#define DR_CONTROL 7          /* u_debugreg[DR_CONTROL] */
+
+/* Define a few things for the status register.  We can use this to determine
+   which debugging register was responsible for the trap.  The other bits
+   are either reserved or not of interest to us. */
+
+#define DR_TRAP0	(0x1)		/* db0 */
+#define DR_TRAP1	(0x2)		/* db1 */
+#define DR_TRAP2	(0x4)		/* db2 */
+#define DR_TRAP3	(0x8)		/* db3 */
+
+#define DR_STEP		(0x4000)	/* single-step */
+#define DR_SWITCH	(0x8000)	/* task switch */
+
+/* Now define a bunch of things for manipulating the control register.
+   The top two bytes of the control register consist of 4 fields of 4
+   bits - each field corresponds to one of the four debug registers,
+   and indicates what types of access we trap on, and how large the data
+   field is that we are looking at */
+
+#define DR_CONTROL_SHIFT 16 /* Skip this many bits in ctl register */
+#define DR_CONTROL_SIZE 4   /* 4 control bits per register */
+
+#define DR_RW_EXECUTE (0x0)   /* Settings for the access types to trap on */
+#define DR_RW_WRITE (0x1)
+#define DR_RW_READ (0x3)
+
+#define DR_LEN_1 (0x0) /* Settings for data length to trap on */
+#define DR_LEN_2 (0x4)
+#define DR_LEN_4 (0xC)
+#define DR_LEN_8 (0x8)
+
+/* The low byte to the control register determine which registers are
+   enabled.  There are 4 fields of two bits.  One bit is "local", meaning
+   that the processor will reset the bit after a task switch and the other
+   is global meaning that we have to explicitly reset the bit.  With linux,
+   you can use either one, since we explicitly zero the register when we enter
+   kernel mode. */
+
+#define DR_LOCAL_ENABLE_SHIFT 0    /* Extra shift to the local enable bit */
+#define DR_GLOBAL_ENABLE_SHIFT 1   /* Extra shift to the global enable bit */
+#define DR_ENABLE_SIZE 2           /* 2 enable bits per register */
+
+#define DR_LOCAL_ENABLE_MASK (0x55)  /* Set  local bits for all 4 regs */
+#define DR_GLOBAL_ENABLE_MASK (0xAA) /* Set global bits for all 4 regs */
+
+/* The second byte to the control register has a few special things.
+   We can slow the instruction pipeline for instructions coming via the
+   gdt or the ldt if we want to.  I am not sure why this is an advantage */
+
+#define DR_CONTROL_RESERVED (0xFFFFFFFF0000FC00UL) /* Reserved */
+#define DR_LOCAL_SLOWDOWN (0x100)   /* Local slow the pipeline */
+#define DR_GLOBAL_SLOWDOWN (0x200)  /* Global slow the pipeline */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/delay.h testtry/include/asm/delay.h
--- linux-2.6.23-sabayon/include/asm/delay.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/delay.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,30 @@
+#ifndef _X8664_DELAY_H
+#define _X8664_DELAY_H
+
+/*
+ * Copyright (C) 1993 Linus Torvalds
+ *
+ * Delay routines calling functions in arch/x86_64/lib/delay.c
+ */
+ 
+/* Undefined functions to get compile-time errors */
+extern void __bad_udelay(void);
+extern void __bad_ndelay(void);
+
+extern void __udelay(unsigned long usecs);
+extern void __ndelay(unsigned long nsecs);
+extern void __const_udelay(unsigned long usecs);
+extern void __delay(unsigned long loops);
+
+/* 0x10c7 is 2**32 / 1000000 (rounded up) */
+#define udelay(n) (__builtin_constant_p(n) ? \
+	((n) > 20000 ? __bad_udelay() : __const_udelay((n) * 0x10c7ul)) : \
+	__udelay(n))
+
+/* 0x5 is 2**32 / 1000000000 (rounded up) */
+#define ndelay(n) (__builtin_constant_p(n) ? \
+       ((n) > 20000 ? __bad_ndelay() : __const_udelay((n) * 5ul)) : \
+       __ndelay(n))
+
+
+#endif /* defined(_X8664_DELAY_H) */
diff -urpN linux-2.6.23-sabayon/include/asm/desc_defs.h testtry/include/asm/desc_defs.h
--- linux-2.6.23-sabayon/include/asm/desc_defs.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/desc_defs.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,69 @@
+/* Written 2000 by Andi Kleen */
+#ifndef __ARCH_DESC_DEFS_H
+#define __ARCH_DESC_DEFS_H
+
+/*
+ * Segment descriptor structure definitions, usable from both x86_64 and i386
+ * archs.
+ */
+
+#ifndef __ASSEMBLY__
+
+#include <linux/types.h>
+
+// 8 byte segment descriptor
+struct desc_struct {
+	u16 limit0;
+	u16 base0;
+	unsigned base1 : 8, type : 4, s : 1, dpl : 2, p : 1;
+	unsigned limit : 4, avl : 1, l : 1, d : 1, g : 1, base2 : 8;
+} __attribute__((packed));
+
+struct n_desc_struct {
+	unsigned int a,b;
+};
+
+enum {
+	GATE_INTERRUPT = 0xE,
+	GATE_TRAP = 0xF,
+	GATE_CALL = 0xC,
+};
+
+// 16byte gate
+struct gate_struct {
+	u16 offset_low;
+	u16 segment;
+	unsigned ist : 3, zero0 : 5, type : 5, dpl : 2, p : 1;
+	u16 offset_middle;
+	u32 offset_high;
+	u32 zero1;
+} __attribute__((packed));
+
+#define PTR_LOW(x) ((unsigned long)(x) & 0xFFFF)
+#define PTR_MIDDLE(x) (((unsigned long)(x) >> 16) & 0xFFFF)
+#define PTR_HIGH(x) ((unsigned long)(x) >> 32)
+
+enum {
+	DESC_TSS = 0x9,
+	DESC_LDT = 0x2,
+};
+
+// LDT or TSS descriptor in the GDT. 16 bytes.
+struct ldttss_desc {
+	u16 limit0;
+	u16 base0;
+	unsigned base1 : 8, type : 5, dpl : 2, p : 1;
+	unsigned limit1 : 4, zero0 : 3, g : 1, base2 : 8;
+	u32 base3;
+	u32 zero1;
+} __attribute__((packed));
+
+struct desc_ptr {
+	unsigned short size;
+	unsigned long address;
+} __attribute__((packed)) ;
+
+
+#endif /* !__ASSEMBLY__ */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/desc.h testtry/include/asm/desc.h
--- linux-2.6.23-sabayon/include/asm/desc.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/desc.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,174 @@
+/* Written 2000 by Andi Kleen */ 
+#ifndef __ARCH_DESC_H
+#define __ARCH_DESC_H
+
+#include <linux/threads.h>
+#include <asm/ldt.h>
+
+#ifndef __ASSEMBLY__
+
+#include <linux/string.h>
+#include <linux/smp.h>
+#include <asm/desc_defs.h>
+
+#include <asm/segment.h>
+#include <asm/mmu.h>
+
+extern struct desc_struct cpu_gdt_table[GDT_ENTRIES];
+
+#define load_TR_desc() asm volatile("ltr %w0"::"r" (GDT_ENTRY_TSS*8))
+#define load_LDT_desc() asm volatile("lldt %w0"::"r" (GDT_ENTRY_LDT*8))
+#define clear_LDT()  asm volatile("lldt %w0"::"r" (0))
+
+/*
+ * This is the ldt that every process will get unless we need
+ * something other than this.
+ */
+extern struct desc_struct default_ldt[];
+extern struct gate_struct idt_table[]; 
+extern struct desc_ptr cpu_gdt_descr[];
+
+/* the cpu gdt accessor */
+#define cpu_gdt(_cpu) ((struct desc_struct *)cpu_gdt_descr[_cpu].address)
+
+static inline void _set_gate(void *adr, unsigned type, unsigned long func, unsigned dpl, unsigned ist)  
+{
+	struct gate_struct s; 	
+	s.offset_low = PTR_LOW(func); 
+	s.segment = __KERNEL_CS;
+	s.ist = ist; 
+	s.p = 1;
+	s.dpl = dpl; 
+	s.zero0 = 0;
+	s.zero1 = 0; 
+	s.type = type; 
+	s.offset_middle = PTR_MIDDLE(func); 
+	s.offset_high = PTR_HIGH(func); 
+	/* does not need to be atomic because it is only done once at setup time */ 
+	memcpy(adr, &s, 16); 
+} 
+
+static inline void set_intr_gate(int nr, void *func) 
+{ 
+	BUG_ON((unsigned)nr > 0xFF);
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, 0); 
+} 
+
+static inline void set_intr_gate_ist(int nr, void *func, unsigned ist) 
+{ 
+	BUG_ON((unsigned)nr > 0xFF);
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 0, ist); 
+} 
+
+static inline void set_system_gate(int nr, void *func) 
+{ 
+	BUG_ON((unsigned)nr > 0xFF);
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, 0); 
+} 
+
+static inline void set_system_gate_ist(int nr, void *func, unsigned ist)
+{
+	_set_gate(&idt_table[nr], GATE_INTERRUPT, (unsigned long) func, 3, ist);
+}
+
+static inline void set_tssldt_descriptor(void *ptr, unsigned long tss, unsigned type, 
+					 unsigned size) 
+{ 
+	struct ldttss_desc d;
+	memset(&d,0,sizeof(d)); 
+	d.limit0 = size & 0xFFFF;
+	d.base0 = PTR_LOW(tss); 
+	d.base1 = PTR_MIDDLE(tss) & 0xFF; 
+	d.type = type;
+	d.p = 1; 
+	d.limit1 = (size >> 16) & 0xF;
+	d.base2 = (PTR_MIDDLE(tss) >> 8) & 0xFF; 
+	d.base3 = PTR_HIGH(tss); 
+	memcpy(ptr, &d, 16); 
+}
+
+static inline void set_tss_desc(unsigned cpu, void *addr)
+{ 
+	/*
+	 * sizeof(unsigned long) coming from an extra "long" at the end
+	 * of the iobitmap. See tss_struct definition in processor.h
+	 *
+	 * -1? seg base+limit should be pointing to the address of the
+	 * last valid byte
+	 */
+	set_tssldt_descriptor(&cpu_gdt(cpu)[GDT_ENTRY_TSS],
+		(unsigned long)addr, DESC_TSS,
+		IO_BITMAP_OFFSET + IO_BITMAP_BYTES + sizeof(unsigned long) - 1);
+} 
+
+static inline void set_ldt_desc(unsigned cpu, void *addr, int size)
+{ 
+	set_tssldt_descriptor(&cpu_gdt(cpu)[GDT_ENTRY_LDT], (unsigned long)addr,
+			      DESC_LDT, size * 8 - 1);
+}
+
+#define LDT_entry_a(info) \
+	((((info)->base_addr & 0x0000ffff) << 16) | ((info)->limit & 0x0ffff))
+/* Don't allow setting of the lm bit. It is useless anyways because 
+   64bit system calls require __USER_CS. */ 
+#define LDT_entry_b(info) \
+	(((info)->base_addr & 0xff000000) | \
+	(((info)->base_addr & 0x00ff0000) >> 16) | \
+	((info)->limit & 0xf0000) | \
+	(((info)->read_exec_only ^ 1) << 9) | \
+	((info)->contents << 10) | \
+	(((info)->seg_not_present ^ 1) << 15) | \
+	((info)->seg_32bit << 22) | \
+	((info)->limit_in_pages << 23) | \
+	((info)->useable << 20) | \
+	/* ((info)->lm << 21) | */ \
+	0x7000)
+
+#define LDT_empty(info) (\
+	(info)->base_addr	== 0	&& \
+	(info)->limit		== 0	&& \
+	(info)->contents	== 0	&& \
+	(info)->read_exec_only	== 1	&& \
+	(info)->seg_32bit	== 0	&& \
+	(info)->limit_in_pages	== 0	&& \
+	(info)->seg_not_present	== 1	&& \
+	(info)->useable		== 0	&& \
+	(info)->lm		== 0)
+
+static inline void load_TLS(struct thread_struct *t, unsigned int cpu)
+{
+	unsigned int i;
+	u64 *gdt = (u64 *)(cpu_gdt(cpu) + GDT_ENTRY_TLS_MIN);
+
+	for (i = 0; i < GDT_ENTRY_TLS_ENTRIES; i++)
+		gdt[i] = t->tls_array[i];
+} 
+
+/*
+ * load one particular LDT into the current CPU
+ */
+static inline void load_LDT_nolock (mm_context_t *pc, int cpu)
+{
+	int count = pc->size;
+
+	if (likely(!count)) {
+		clear_LDT();
+		return;
+	}
+		
+	set_ldt_desc(cpu, pc->ldt, count);
+	load_LDT_desc();
+}
+
+static inline void load_LDT(mm_context_t *pc)
+{
+	int cpu = get_cpu();
+	load_LDT_nolock(pc, cpu);
+	put_cpu();
+}
+
+extern struct desc_ptr idt_descr;
+
+#endif /* !__ASSEMBLY__ */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/device.h testtry/include/asm/device.h
--- linux-2.6.23-sabayon/include/asm/device.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/device.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,15 @@
+/*
+ * Arch specific extensions to struct device
+ *
+ * This file is released under the GPLv2
+ */
+#ifndef _ASM_X86_64_DEVICE_H
+#define _ASM_X86_64_DEVICE_H
+
+struct dev_archdata {
+#ifdef CONFIG_ACPI
+	void	*acpi_handle;
+#endif
+};
+
+#endif /* _ASM_X86_64_DEVICE_H */
diff -urpN linux-2.6.23-sabayon/include/asm/div64.h testtry/include/asm/div64.h
--- linux-2.6.23-sabayon/include/asm/div64.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/div64.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-generic/div64.h>
diff -urpN linux-2.6.23-sabayon/include/asm/dma.h testtry/include/asm/dma.h
--- linux-2.6.23-sabayon/include/asm/dma.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/dma.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,304 @@
+/*
+ * linux/include/asm/dma.h: Defines for using and allocating dma channels.
+ * Written by Hennus Bergman, 1992.
+ * High DMA channel support & info by Hannu Savolainen
+ * and John Boyd, Nov. 1992.
+ */
+
+#ifndef _ASM_DMA_H
+#define _ASM_DMA_H
+
+#include <linux/spinlock.h>	/* And spinlocks */
+#include <asm/io.h>		/* need byte IO */
+#include <linux/delay.h>
+
+
+#ifdef HAVE_REALLY_SLOW_DMA_CONTROLLER
+#define dma_outb	outb_p
+#else
+#define dma_outb	outb
+#endif
+
+#define dma_inb		inb
+
+/*
+ * NOTES about DMA transfers:
+ *
+ *  controller 1: channels 0-3, byte operations, ports 00-1F
+ *  controller 2: channels 4-7, word operations, ports C0-DF
+ *
+ *  - ALL registers are 8 bits only, regardless of transfer size
+ *  - channel 4 is not used - cascades 1 into 2.
+ *  - channels 0-3 are byte - addresses/counts are for physical bytes
+ *  - channels 5-7 are word - addresses/counts are for physical words
+ *  - transfers must not cross physical 64K (0-3) or 128K (5-7) boundaries
+ *  - transfer count loaded to registers is 1 less than actual count
+ *  - controller 2 offsets are all even (2x offsets for controller 1)
+ *  - page registers for 5-7 don't use data bit 0, represent 128K pages
+ *  - page registers for 0-3 use bit 0, represent 64K pages
+ *
+ * DMA transfers are limited to the lower 16MB of _physical_ memory.  
+ * Note that addresses loaded into registers must be _physical_ addresses,
+ * not logical addresses (which may differ if paging is active).
+ *
+ *  Address mapping for channels 0-3:
+ *
+ *   A23 ... A16 A15 ... A8  A7 ... A0    (Physical addresses)
+ *    |  ...  |   |  ... |   |  ... |
+ *    |  ...  |   |  ... |   |  ... |
+ *    |  ...  |   |  ... |   |  ... |
+ *   P7  ...  P0  A7 ... A0  A7 ... A0   
+ * |    Page    | Addr MSB | Addr LSB |   (DMA registers)
+ *
+ *  Address mapping for channels 5-7:
+ *
+ *   A23 ... A17 A16 A15 ... A9 A8 A7 ... A1 A0    (Physical addresses)
+ *    |  ...  |   \   \   ... \  \  \  ... \  \
+ *    |  ...  |    \   \   ... \  \  \  ... \  (not used)
+ *    |  ...  |     \   \   ... \  \  \  ... \
+ *   P7  ...  P1 (0) A7 A6  ... A0 A7 A6 ... A0   
+ * |      Page      |  Addr MSB   |  Addr LSB  |   (DMA registers)
+ *
+ * Again, channels 5-7 transfer _physical_ words (16 bits), so addresses
+ * and counts _must_ be word-aligned (the lowest address bit is _ignored_ at
+ * the hardware level, so odd-byte transfers aren't possible).
+ *
+ * Transfer count (_not # bytes_) is limited to 64K, represented as actual
+ * count - 1 : 64K => 0xFFFF, 1 => 0x0000.  Thus, count is always 1 or more,
+ * and up to 128K bytes may be transferred on channels 5-7 in one operation. 
+ *
+ */
+
+#define MAX_DMA_CHANNELS	8
+
+
+/* 16MB ISA DMA zone */
+#define MAX_DMA_PFN   ((16*1024*1024) >> PAGE_SHIFT)
+
+/* 4GB broken PCI/AGP hardware bus master zone */
+#define MAX_DMA32_PFN ((4UL*1024*1024*1024) >> PAGE_SHIFT)
+
+/* Compat define for old dma zone */
+#define MAX_DMA_ADDRESS ((unsigned long)__va(MAX_DMA_PFN << PAGE_SHIFT))
+
+/* 8237 DMA controllers */
+#define IO_DMA1_BASE	0x00	/* 8 bit slave DMA, channels 0..3 */
+#define IO_DMA2_BASE	0xC0	/* 16 bit master DMA, ch 4(=slave input)..7 */
+
+/* DMA controller registers */
+#define DMA1_CMD_REG		0x08	/* command register (w) */
+#define DMA1_STAT_REG		0x08	/* status register (r) */
+#define DMA1_REQ_REG            0x09    /* request register (w) */
+#define DMA1_MASK_REG		0x0A	/* single-channel mask (w) */
+#define DMA1_MODE_REG		0x0B	/* mode register (w) */
+#define DMA1_CLEAR_FF_REG	0x0C	/* clear pointer flip-flop (w) */
+#define DMA1_TEMP_REG           0x0D    /* Temporary Register (r) */
+#define DMA1_RESET_REG		0x0D	/* Master Clear (w) */
+#define DMA1_CLR_MASK_REG       0x0E    /* Clear Mask */
+#define DMA1_MASK_ALL_REG       0x0F    /* all-channels mask (w) */
+
+#define DMA2_CMD_REG		0xD0	/* command register (w) */
+#define DMA2_STAT_REG		0xD0	/* status register (r) */
+#define DMA2_REQ_REG            0xD2    /* request register (w) */
+#define DMA2_MASK_REG		0xD4	/* single-channel mask (w) */
+#define DMA2_MODE_REG		0xD6	/* mode register (w) */
+#define DMA2_CLEAR_FF_REG	0xD8	/* clear pointer flip-flop (w) */
+#define DMA2_TEMP_REG           0xDA    /* Temporary Register (r) */
+#define DMA2_RESET_REG		0xDA	/* Master Clear (w) */
+#define DMA2_CLR_MASK_REG       0xDC    /* Clear Mask */
+#define DMA2_MASK_ALL_REG       0xDE    /* all-channels mask (w) */
+
+#define DMA_ADDR_0              0x00    /* DMA address registers */
+#define DMA_ADDR_1              0x02
+#define DMA_ADDR_2              0x04
+#define DMA_ADDR_3              0x06
+#define DMA_ADDR_4              0xC0
+#define DMA_ADDR_5              0xC4
+#define DMA_ADDR_6              0xC8
+#define DMA_ADDR_7              0xCC
+
+#define DMA_CNT_0               0x01    /* DMA count registers */
+#define DMA_CNT_1               0x03
+#define DMA_CNT_2               0x05
+#define DMA_CNT_3               0x07
+#define DMA_CNT_4               0xC2
+#define DMA_CNT_5               0xC6
+#define DMA_CNT_6               0xCA
+#define DMA_CNT_7               0xCE
+
+#define DMA_PAGE_0              0x87    /* DMA page registers */
+#define DMA_PAGE_1              0x83
+#define DMA_PAGE_2              0x81
+#define DMA_PAGE_3              0x82
+#define DMA_PAGE_5              0x8B
+#define DMA_PAGE_6              0x89
+#define DMA_PAGE_7              0x8A
+
+#define DMA_MODE_READ	0x44	/* I/O to memory, no autoinit, increment, single mode */
+#define DMA_MODE_WRITE	0x48	/* memory to I/O, no autoinit, increment, single mode */
+#define DMA_MODE_CASCADE 0xC0   /* pass thru DREQ->HRQ, DACK<-HLDA only */
+
+#define DMA_AUTOINIT	0x10
+
+
+extern spinlock_t  dma_spin_lock;
+
+static __inline__ unsigned long claim_dma_lock(void)
+{
+	unsigned long flags;
+	spin_lock_irqsave(&dma_spin_lock, flags);
+	return flags;
+}
+
+static __inline__ void release_dma_lock(unsigned long flags)
+{
+	spin_unlock_irqrestore(&dma_spin_lock, flags);
+}
+
+/* enable/disable a specific DMA channel */
+static __inline__ void enable_dma(unsigned int dmanr)
+{
+	if (dmanr<=3)
+		dma_outb(dmanr,  DMA1_MASK_REG);
+	else
+		dma_outb(dmanr & 3,  DMA2_MASK_REG);
+}
+
+static __inline__ void disable_dma(unsigned int dmanr)
+{
+	if (dmanr<=3)
+		dma_outb(dmanr | 4,  DMA1_MASK_REG);
+	else
+		dma_outb((dmanr & 3) | 4,  DMA2_MASK_REG);
+}
+
+/* Clear the 'DMA Pointer Flip Flop'.
+ * Write 0 for LSB/MSB, 1 for MSB/LSB access.
+ * Use this once to initialize the FF to a known state.
+ * After that, keep track of it. :-)
+ * --- In order to do that, the DMA routines below should ---
+ * --- only be used while holding the DMA lock ! ---
+ */
+static __inline__ void clear_dma_ff(unsigned int dmanr)
+{
+	if (dmanr<=3)
+		dma_outb(0,  DMA1_CLEAR_FF_REG);
+	else
+		dma_outb(0,  DMA2_CLEAR_FF_REG);
+}
+
+/* set mode (above) for a specific DMA channel */
+static __inline__ void set_dma_mode(unsigned int dmanr, char mode)
+{
+	if (dmanr<=3)
+		dma_outb(mode | dmanr,  DMA1_MODE_REG);
+	else
+		dma_outb(mode | (dmanr&3),  DMA2_MODE_REG);
+}
+
+/* Set only the page register bits of the transfer address.
+ * This is used for successive transfers when we know the contents of
+ * the lower 16 bits of the DMA current address register, but a 64k boundary
+ * may have been crossed.
+ */
+static __inline__ void set_dma_page(unsigned int dmanr, char pagenr)
+{
+	switch(dmanr) {
+		case 0:
+			dma_outb(pagenr, DMA_PAGE_0);
+			break;
+		case 1:
+			dma_outb(pagenr, DMA_PAGE_1);
+			break;
+		case 2:
+			dma_outb(pagenr, DMA_PAGE_2);
+			break;
+		case 3:
+			dma_outb(pagenr, DMA_PAGE_3);
+			break;
+		case 5:
+			dma_outb(pagenr & 0xfe, DMA_PAGE_5);
+			break;
+		case 6:
+			dma_outb(pagenr & 0xfe, DMA_PAGE_6);
+			break;
+		case 7:
+			dma_outb(pagenr & 0xfe, DMA_PAGE_7);
+			break;
+	}
+}
+
+
+/* Set transfer address & page bits for specific DMA channel.
+ * Assumes dma flipflop is clear.
+ */
+static __inline__ void set_dma_addr(unsigned int dmanr, unsigned int a)
+{
+	set_dma_page(dmanr, a>>16);
+	if (dmanr <= 3)  {
+	    dma_outb( a & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );
+	}  else  {
+	    dma_outb( (a>>1) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
+	    dma_outb( (a>>9) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
+	}
+}
+
+
+/* Set transfer size (max 64k for DMA1..3, 128k for DMA5..7) for
+ * a specific DMA channel.
+ * You must ensure the parameters are valid.
+ * NOTE: from a manual: "the number of transfers is one more
+ * than the initial word count"! This is taken into account.
+ * Assumes dma flip-flop is clear.
+ * NOTE 2: "count" represents _bytes_ and must be even for channels 5-7.
+ */
+static __inline__ void set_dma_count(unsigned int dmanr, unsigned int count)
+{
+        count--;
+	if (dmanr <= 3)  {
+	    dma_outb( count & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );
+	    dma_outb( (count>>8) & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );
+        } else {
+	    dma_outb( (count>>1) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
+	    dma_outb( (count>>9) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
+        }
+}
+
+
+/* Get DMA residue count. After a DMA transfer, this
+ * should return zero. Reading this while a DMA transfer is
+ * still in progress will return unpredictable results.
+ * If called before the channel has been used, it may return 1.
+ * Otherwise, it returns the number of _bytes_ left to transfer.
+ *
+ * Assumes DMA flip-flop is clear.
+ */
+static __inline__ int get_dma_residue(unsigned int dmanr)
+{
+	unsigned int io_port = (dmanr<=3)? ((dmanr&3)<<1) + 1 + IO_DMA1_BASE
+					 : ((dmanr&3)<<2) + 2 + IO_DMA2_BASE;
+
+	/* using short to get 16-bit wrap around */
+	unsigned short count;
+
+	count = 1 + dma_inb(io_port);
+	count += dma_inb(io_port) << 8;
+	
+	return (dmanr<=3)? count : (count<<1);
+}
+
+
+/* These are in kernel/dma.c: */
+extern int request_dma(unsigned int dmanr, const char * device_id);	/* reserve a DMA channel */
+extern void free_dma(unsigned int dmanr);	/* release it again */
+
+/* From PCI */
+
+#ifdef CONFIG_PCI
+extern int isa_dma_bridge_buggy;
+#else
+#define isa_dma_bridge_buggy 	(0)
+#endif
+
+#endif /* _ASM_DMA_H */
diff -urpN linux-2.6.23-sabayon/include/asm/dma-mapping.h testtry/include/asm/dma-mapping.h
--- linux-2.6.23-sabayon/include/asm/dma-mapping.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/dma-mapping.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,203 @@
+#ifndef _X8664_DMA_MAPPING_H
+#define _X8664_DMA_MAPPING_H 1
+
+/*
+ * IOMMU interface. See Documentation/DMA-mapping.txt and DMA-API.txt for
+ * documentation.
+ */
+
+
+#include <asm/scatterlist.h>
+#include <asm/io.h>
+#include <asm/swiotlb.h>
+
+struct dma_mapping_ops {
+	int             (*mapping_error)(dma_addr_t dma_addr);
+	void*           (*alloc_coherent)(struct device *dev, size_t size,
+                                dma_addr_t *dma_handle, gfp_t gfp);
+	void            (*free_coherent)(struct device *dev, size_t size,
+                                void *vaddr, dma_addr_t dma_handle);
+	dma_addr_t      (*map_single)(struct device *hwdev, void *ptr,
+                                size_t size, int direction);
+	/* like map_single, but doesn't check the device mask */
+	dma_addr_t      (*map_simple)(struct device *hwdev, char *ptr,
+                                size_t size, int direction);
+	void            (*unmap_single)(struct device *dev, dma_addr_t addr,
+		                size_t size, int direction);
+	void            (*sync_single_for_cpu)(struct device *hwdev,
+		                dma_addr_t dma_handle, size_t size,
+				int direction);
+	void            (*sync_single_for_device)(struct device *hwdev,
+                                dma_addr_t dma_handle, size_t size,
+				int direction);
+	void            (*sync_single_range_for_cpu)(struct device *hwdev,
+                                dma_addr_t dma_handle, unsigned long offset,
+		                size_t size, int direction);
+	void            (*sync_single_range_for_device)(struct device *hwdev,
+				dma_addr_t dma_handle, unsigned long offset,
+		                size_t size, int direction);
+	void            (*sync_sg_for_cpu)(struct device *hwdev,
+                                struct scatterlist *sg, int nelems,
+				int direction);
+	void            (*sync_sg_for_device)(struct device *hwdev,
+				struct scatterlist *sg, int nelems,
+				int direction);
+	int             (*map_sg)(struct device *hwdev, struct scatterlist *sg,
+		                int nents, int direction);
+	void            (*unmap_sg)(struct device *hwdev,
+				struct scatterlist *sg, int nents,
+				int direction);
+	int             (*dma_supported)(struct device *hwdev, u64 mask);
+	int		is_phys;
+};
+
+extern dma_addr_t bad_dma_address;
+extern const struct dma_mapping_ops* dma_ops;
+extern int iommu_merge;
+
+static inline int dma_mapping_error(dma_addr_t dma_addr)
+{
+	if (dma_ops->mapping_error)
+		return dma_ops->mapping_error(dma_addr);
+
+	return (dma_addr == bad_dma_address);
+}
+
+#define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
+#define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
+
+#define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
+#define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
+
+extern void *dma_alloc_coherent(struct device *dev, size_t size,
+				dma_addr_t *dma_handle, gfp_t gfp);
+extern void dma_free_coherent(struct device *dev, size_t size, void *vaddr,
+			      dma_addr_t dma_handle);
+
+static inline dma_addr_t
+dma_map_single(struct device *hwdev, void *ptr, size_t size,
+	       int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	return dma_ops->map_single(hwdev, ptr, size, direction);
+}
+
+static inline void
+dma_unmap_single(struct device *dev, dma_addr_t addr,size_t size,
+		 int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	dma_ops->unmap_single(dev, addr, size, direction);
+}
+
+#define dma_map_page(dev,page,offset,size,dir) \
+	dma_map_single((dev), page_address(page)+(offset), (size), (dir))
+
+#define dma_unmap_page dma_unmap_single
+
+static inline void
+dma_sync_single_for_cpu(struct device *hwdev, dma_addr_t dma_handle,
+			size_t size, int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	if (dma_ops->sync_single_for_cpu)
+		dma_ops->sync_single_for_cpu(hwdev, dma_handle, size,
+					     direction);
+	flush_write_buffers();
+}
+
+static inline void
+dma_sync_single_for_device(struct device *hwdev, dma_addr_t dma_handle,
+			   size_t size, int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	if (dma_ops->sync_single_for_device)
+		dma_ops->sync_single_for_device(hwdev, dma_handle, size,
+						direction);
+	flush_write_buffers();
+}
+
+static inline void
+dma_sync_single_range_for_cpu(struct device *hwdev, dma_addr_t dma_handle,
+			      unsigned long offset, size_t size, int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	if (dma_ops->sync_single_range_for_cpu) {
+		dma_ops->sync_single_range_for_cpu(hwdev, dma_handle, offset, size, direction);
+	}
+
+	flush_write_buffers();
+}
+
+static inline void
+dma_sync_single_range_for_device(struct device *hwdev, dma_addr_t dma_handle,
+				 unsigned long offset, size_t size, int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	if (dma_ops->sync_single_range_for_device)
+		dma_ops->sync_single_range_for_device(hwdev, dma_handle,
+						      offset, size, direction);
+
+	flush_write_buffers();
+}
+
+static inline void
+dma_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,
+		    int nelems, int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	if (dma_ops->sync_sg_for_cpu)
+		dma_ops->sync_sg_for_cpu(hwdev, sg, nelems, direction);
+	flush_write_buffers();
+}
+
+static inline void
+dma_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,
+		       int nelems, int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	if (dma_ops->sync_sg_for_device) {
+		dma_ops->sync_sg_for_device(hwdev, sg, nelems, direction);
+	}
+
+	flush_write_buffers();
+}
+
+static inline int
+dma_map_sg(struct device *hwdev, struct scatterlist *sg, int nents, int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	return dma_ops->map_sg(hwdev, sg, nents, direction);
+}
+
+static inline void
+dma_unmap_sg(struct device *hwdev, struct scatterlist *sg, int nents,
+	     int direction)
+{
+	BUG_ON(!valid_dma_direction(direction));
+	dma_ops->unmap_sg(hwdev, sg, nents, direction);
+}
+
+extern int dma_supported(struct device *hwdev, u64 mask);
+
+/* same for gart, swiotlb, and nommu */
+static inline int dma_get_cache_alignment(void)
+{
+	return boot_cpu_data.x86_clflush_size;
+}
+
+#define dma_is_consistent(d, h) 1
+
+extern int dma_set_mask(struct device *dev, u64 mask);
+
+static inline void
+dma_cache_sync(struct device *dev, void *vaddr, size_t size,
+	enum dma_data_direction dir)
+{
+	flush_write_buffers();
+}
+
+extern struct device fallback_dev;
+extern int panic_on_overflow;
+
+#endif /* _X8664_DMA_MAPPING_H */
diff -urpN linux-2.6.23-sabayon/include/asm/dmi.h testtry/include/asm/dmi.h
--- linux-2.6.23-sabayon/include/asm/dmi.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/dmi.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,24 @@
+#ifndef _ASM_DMI_H
+#define _ASM_DMI_H 1
+
+#include <asm/io.h>
+
+#define DMI_MAX_DATA 2048
+
+extern int dmi_alloc_index;
+extern char dmi_alloc_data[DMI_MAX_DATA];
+
+/* This is so early that there is no good way to allocate dynamic memory.
+   Allocate data in an BSS array. */
+static inline void *dmi_alloc(unsigned len)
+{
+	int idx = dmi_alloc_index;
+	if ((dmi_alloc_index += len) > DMI_MAX_DATA)
+		return NULL;
+	return dmi_alloc_data + idx;
+}
+
+#define dmi_ioremap early_ioremap
+#define dmi_iounmap early_iounmap
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/dwarf2.h testtry/include/asm/dwarf2.h
--- linux-2.6.23-sabayon/include/asm/dwarf2.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/dwarf2.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,57 @@
+#ifndef _DWARF2_H
+#define _DWARF2_H 1
+
+
+#ifndef __ASSEMBLY__
+#warning "asm/dwarf2.h should be only included in pure assembly files"
+#endif
+
+/* 
+   Macros for dwarf2 CFI unwind table entries.
+   See "as.info" for details on these pseudo ops. Unfortunately 
+   they are only supported in very new binutils, so define them 
+   away for older version. 
+ */
+
+#ifdef CONFIG_AS_CFI
+
+#define CFI_STARTPROC .cfi_startproc
+#define CFI_ENDPROC .cfi_endproc
+#define CFI_DEF_CFA .cfi_def_cfa
+#define CFI_DEF_CFA_REGISTER .cfi_def_cfa_register
+#define CFI_DEF_CFA_OFFSET .cfi_def_cfa_offset
+#define CFI_ADJUST_CFA_OFFSET .cfi_adjust_cfa_offset
+#define CFI_OFFSET .cfi_offset
+#define CFI_REL_OFFSET .cfi_rel_offset
+#define CFI_REGISTER .cfi_register
+#define CFI_RESTORE .cfi_restore
+#define CFI_REMEMBER_STATE .cfi_remember_state
+#define CFI_RESTORE_STATE .cfi_restore_state
+#define CFI_UNDEFINED .cfi_undefined
+#ifdef CONFIG_AS_CFI_SIGNAL_FRAME
+#define CFI_SIGNAL_FRAME .cfi_signal_frame
+#else
+#define CFI_SIGNAL_FRAME
+#endif
+
+#else
+
+/* use assembler line comment character # to ignore the arguments. */
+#define CFI_STARTPROC	#
+#define CFI_ENDPROC	#
+#define CFI_DEF_CFA	#
+#define CFI_DEF_CFA_REGISTER	#
+#define CFI_DEF_CFA_OFFSET	#
+#define CFI_ADJUST_CFA_OFFSET	#
+#define CFI_OFFSET	#
+#define CFI_REL_OFFSET	#
+#define CFI_REGISTER	#
+#define CFI_RESTORE	#
+#define CFI_REMEMBER_STATE	#
+#define CFI_RESTORE_STATE	#
+#define CFI_UNDEFINED	#
+#define CFI_SIGNAL_FRAME	#
+
+#endif
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/e820.h testtry/include/asm/e820.h
--- linux-2.6.23-sabayon/include/asm/e820.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/e820.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,61 @@
+/*
+ * structures and definitions for the int 15, ax=e820 memory map
+ * scheme.
+ *
+ * In a nutshell, setup.S populates a scratch table in the
+ * empty_zero_block that contains a list of usable address/size
+ * duples.  setup.c, this information is transferred into the e820map,
+ * and in init.c/numa.c, that new information is used to mark pages
+ * reserved or not.
+ */
+#ifndef __E820_HEADER
+#define __E820_HEADER
+
+#define E820MAP	0x2d0		/* our map */
+#define E820MAX	128		/* number of entries in E820MAP */
+#define E820NR	0x1e8		/* # entries in E820MAP */
+
+#define E820_RAM	1
+#define E820_RESERVED	2
+#define E820_ACPI	3
+#define E820_NVS	4
+
+#ifndef __ASSEMBLY__
+struct e820entry {
+	u64 addr;	/* start of memory segment */
+	u64 size;	/* size of memory segment */
+	u32 type;	/* type of memory segment */
+} __attribute__((packed));
+
+struct e820map {
+	u32 nr_map;
+	struct e820entry map[E820MAX];
+};
+
+extern unsigned long find_e820_area(unsigned long start, unsigned long end, 
+				    unsigned size);
+extern void add_memory_region(unsigned long start, unsigned long size, 
+			      int type);
+extern void setup_memory_region(void);
+extern void contig_e820_setup(void); 
+extern unsigned long e820_end_of_ram(void);
+extern void e820_reserve_resources(void);
+extern void e820_mark_nosave_regions(void);
+extern void e820_print_map(char *who);
+extern int e820_any_mapped(unsigned long start, unsigned long end, unsigned type);
+extern int e820_all_mapped(unsigned long start, unsigned long end, unsigned type);
+extern unsigned long e820_hole_size(unsigned long start, unsigned long end);
+
+extern void e820_setup_gap(void);
+extern void e820_register_active_regions(int nid,
+				unsigned long start_pfn, unsigned long end_pfn);
+
+extern void finish_e820_parsing(void);
+
+extern struct e820map e820;
+
+extern unsigned ebda_addr, ebda_size;
+extern unsigned long nodemap_addr, nodemap_size;
+#endif/*!__ASSEMBLY__*/
+
+#endif/*__E820_HEADER*/
diff -urpN linux-2.6.23-sabayon/include/asm/edac.h testtry/include/asm/edac.h
--- linux-2.6.23-sabayon/include/asm/edac.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/edac.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,18 @@
+#ifndef ASM_EDAC_H
+#define ASM_EDAC_H
+
+/* ECC atomic, DMA, SMP and interrupt safe scrub function */
+
+static __inline__ void atomic_scrub(void *va, u32 size)
+{
+	unsigned int *virt_addr = va;
+	u32 i;
+
+	for (i = 0; i < size / 4; i++, virt_addr++)
+		/* Very carefully read and write to memory atomically
+		 * so we are interrupt, DMA and SMP safe.
+		 */
+		__asm__ __volatile__("lock; addl $0, %0"::"m"(*virt_addr));
+}
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/elf.h testtry/include/asm/elf.h
--- linux-2.6.23-sabayon/include/asm/elf.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/elf.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,180 @@
+#ifndef __ASM_X86_64_ELF_H
+#define __ASM_X86_64_ELF_H
+
+/*
+ * ELF register definitions..
+ */
+
+#include <asm/ptrace.h>
+#include <asm/user.h>
+
+/* x86-64 relocation types */
+#define R_X86_64_NONE		0	/* No reloc */
+#define R_X86_64_64		1	/* Direct 64 bit  */
+#define R_X86_64_PC32		2	/* PC relative 32 bit signed */
+#define R_X86_64_GOT32		3	/* 32 bit GOT entry */
+#define R_X86_64_PLT32		4	/* 32 bit PLT address */
+#define R_X86_64_COPY		5	/* Copy symbol at runtime */
+#define R_X86_64_GLOB_DAT	6	/* Create GOT entry */
+#define R_X86_64_JUMP_SLOT	7	/* Create PLT entry */
+#define R_X86_64_RELATIVE	8	/* Adjust by program base */
+#define R_X86_64_GOTPCREL	9	/* 32 bit signed pc relative
+					   offset to GOT */
+#define R_X86_64_32		10	/* Direct 32 bit zero extended */
+#define R_X86_64_32S		11	/* Direct 32 bit sign extended */
+#define R_X86_64_16		12	/* Direct 16 bit zero extended */
+#define R_X86_64_PC16		13	/* 16 bit sign extended pc relative */
+#define R_X86_64_8		14	/* Direct 8 bit sign extended  */
+#define R_X86_64_PC8		15	/* 8 bit sign extended pc relative */
+
+#define R_X86_64_NUM		16
+
+typedef unsigned long elf_greg_t;
+
+#define ELF_NGREG (sizeof (struct user_regs_struct) / sizeof(elf_greg_t))
+typedef elf_greg_t elf_gregset_t[ELF_NGREG];
+
+typedef struct user_i387_struct elf_fpregset_t;
+
+/*
+ * These are used to set parameters in the core dumps.
+ */
+#define ELF_CLASS	ELFCLASS64
+#define ELF_DATA	ELFDATA2LSB
+#define ELF_ARCH	EM_X86_64
+
+#ifdef __KERNEL__
+#include <asm/processor.h>
+
+/*
+ * This is used to ensure we don't load something for the wrong architecture.
+ */
+#define elf_check_arch(x) \
+	((x)->e_machine == EM_X86_64)
+
+
+/* SVR4/i386 ABI (pages 3-31, 3-32) says that when the program starts %edx
+   contains a pointer to a function which might be registered using `atexit'.
+   This provides a mean for the dynamic linker to call DT_FINI functions for
+   shared libraries that have been loaded before the code runs.
+
+   A value of 0 tells we have no such handler. 
+
+   We might as well make sure everything else is cleared too (except for %esp),
+   just to make things more deterministic.
+ */
+#define ELF_PLAT_INIT(_r, load_addr)	do { \
+	struct task_struct *cur = current; \
+	(_r)->rbx = 0; (_r)->rcx = 0; (_r)->rdx = 0; \
+	(_r)->rsi = 0; (_r)->rdi = 0; (_r)->rbp = 0; \
+	(_r)->rax = 0;				\
+	(_r)->r8 = 0;				\
+	(_r)->r9 = 0;				\
+	(_r)->r10 = 0;				\
+	(_r)->r11 = 0;				\
+	(_r)->r12 = 0;				\
+	(_r)->r13 = 0;				\
+	(_r)->r14 = 0;				\
+	(_r)->r15 = 0;				\
+        cur->thread.fs = 0; cur->thread.gs = 0; \
+	cur->thread.fsindex = 0; cur->thread.gsindex = 0; \
+        cur->thread.ds = 0; cur->thread.es = 0;  \
+	clear_thread_flag(TIF_IA32); \
+} while (0)
+
+#define USE_ELF_CORE_DUMP
+#define ELF_EXEC_PAGESIZE	4096
+
+/* This is the location that an ET_DYN program is loaded if exec'ed.  Typical
+   use of this is to invoke "./ld.so someprog" to test out a new version of
+   the loader.  We need to make sure that it is out of the way of the program
+   that it will "exec", and that there is sufficient room for the brk.  */
+
+#define ELF_ET_DYN_BASE         (2 * TASK_SIZE / 3)
+
+/* regs is struct pt_regs, pr_reg is elf_gregset_t (which is
+   now struct_user_regs, they are different). Assumes current is the process
+   getting dumped. */
+
+#define ELF_CORE_COPY_REGS(pr_reg, regs)  do { \
+	unsigned v;						\
+	(pr_reg)[0] = (regs)->r15;				\
+	(pr_reg)[1] = (regs)->r14;				\
+	(pr_reg)[2] = (regs)->r13;				\
+	(pr_reg)[3] = (regs)->r12;				\
+	(pr_reg)[4] = (regs)->rbp;				\
+	(pr_reg)[5] = (regs)->rbx;				\
+	(pr_reg)[6] = (regs)->r11;				\
+	(pr_reg)[7] = (regs)->r10;				\
+	(pr_reg)[8] = (regs)->r9;				\
+	(pr_reg)[9] = (regs)->r8;				\
+	(pr_reg)[10] = (regs)->rax;				\
+	(pr_reg)[11] = (regs)->rcx;				\
+	(pr_reg)[12] = (regs)->rdx;				\
+	(pr_reg)[13] = (regs)->rsi;				\
+	(pr_reg)[14] = (regs)->rdi;				\
+	(pr_reg)[15] = (regs)->orig_rax;			\
+	(pr_reg)[16] = (regs)->rip;			\
+	(pr_reg)[17] = (regs)->cs;			\
+	(pr_reg)[18] = (regs)->eflags;			\
+	(pr_reg)[19] = (regs)->rsp;			\
+	(pr_reg)[20] = (regs)->ss;			\
+	(pr_reg)[21] = current->thread.fs;			\
+	(pr_reg)[22] = current->thread.gs;			\
+	asm("movl %%ds,%0" : "=r" (v)); (pr_reg)[23] = v;	\
+	asm("movl %%es,%0" : "=r" (v)); (pr_reg)[24] = v;	\
+	asm("movl %%fs,%0" : "=r" (v)); (pr_reg)[25] = v;	\
+	asm("movl %%gs,%0" : "=r" (v)); (pr_reg)[26] = v;	\
+} while(0);
+
+/* This yields a mask that user programs can use to figure out what
+   instruction set this CPU supports.  This could be done in user space,
+   but it's not easy, and we've already done it here.  */
+
+#define ELF_HWCAP	(boot_cpu_data.x86_capability[0])
+
+/* This yields a string that ld.so will use to load implementation
+   specific libraries for optimization.  This is more specific in
+   intent than poking at uname or /proc/cpuinfo.
+
+   For the moment, we have only optimizations for the Intel generations,
+   but that could change... */
+
+/* I'm not sure if we can use '-' here */
+#define ELF_PLATFORM  ("x86_64")
+
+extern void set_personality_64bit(void);
+#define SET_PERSONALITY(ex, ibcs2) set_personality_64bit()
+/*
+ * An executable for which elf_read_implies_exec() returns TRUE will
+ * have the READ_IMPLIES_EXEC personality flag set automatically.
+ */
+#define elf_read_implies_exec(ex, executable_stack)	(executable_stack != EXSTACK_DISABLE_X)
+
+struct task_struct;
+
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);
+
+#define ELF_CORE_COPY_TASK_REGS(tsk, elf_regs) dump_task_regs(tsk, elf_regs)
+#define ELF_CORE_COPY_FPREGS(tsk, elf_fpregs) dump_task_fpu(tsk, elf_fpregs)
+
+/* 1GB for 64bit, 8MB for 32bit */
+#define STACK_RND_MASK (test_thread_flag(TIF_IA32) ? 0x7ff : 0x3fffff)
+
+
+#define ARCH_HAS_SETUP_ADDITIONAL_PAGES 1
+struct linux_binprm;
+extern int arch_setup_additional_pages(struct linux_binprm *bprm,
+                                       int executable_stack);
+
+extern int vdso_enabled;
+
+#define ARCH_DLINFO						\
+do if (vdso_enabled) {						\
+	NEW_AUX_ENT(AT_SYSINFO_EHDR,(unsigned long)current->mm->context.vdso);\
+} while (0)
+
+#endif
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/emergency-restart.h testtry/include/asm/emergency-restart.h
--- linux-2.6.23-sabayon/include/asm/emergency-restart.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/emergency-restart.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef _ASM_EMERGENCY_RESTART_H
+#define _ASM_EMERGENCY_RESTART_H
+
+extern void machine_emergency_restart(void);
+
+#endif /* _ASM_EMERGENCY_RESTART_H */
diff -urpN linux-2.6.23-sabayon/include/asm/errno.h testtry/include/asm/errno.h
--- linux-2.6.23-sabayon/include/asm/errno.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/errno.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef _X8664_ERRNO_H
+#define _X8664_ERRNO_H
+
+#include <asm-generic/errno.h>
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/fb.h testtry/include/asm/fb.h
--- linux-2.6.23-sabayon/include/asm/fb.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/fb.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,19 @@
+#ifndef _ASM_FB_H_
+#define _ASM_FB_H_
+#include <linux/fb.h>
+#include <linux/fs.h>
+#include <asm/page.h>
+
+static inline void fb_pgprotect(struct file *file, struct vm_area_struct *vma,
+				unsigned long off)
+{
+	if (boot_cpu_data.x86 > 3)
+		pgprot_val(vma->vm_page_prot) |= _PAGE_PCD;
+}
+
+static inline int fb_is_primary_device(struct fb_info *info)
+{
+	return 0;
+}
+
+#endif /* _ASM_FB_H_ */
diff -urpN linux-2.6.23-sabayon/include/asm/fcntl.h testtry/include/asm/fcntl.h
--- linux-2.6.23-sabayon/include/asm/fcntl.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/fcntl.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-generic/fcntl.h>
diff -urpN linux-2.6.23-sabayon/include/asm/fixmap.h testtry/include/asm/fixmap.h
--- linux-2.6.23-sabayon/include/asm/fixmap.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/fixmap.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,92 @@
+/*
+ * fixmap.h: compile-time virtual memory allocation
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Copyright (C) 1998 Ingo Molnar
+ */
+
+#ifndef _ASM_FIXMAP_H
+#define _ASM_FIXMAP_H
+
+#include <linux/kernel.h>
+#include <asm/apicdef.h>
+#include <asm/page.h>
+#include <asm/vsyscall.h>
+
+/*
+ * Here we define all the compile-time 'special' virtual
+ * addresses. The point is to have a constant address at
+ * compile time, but to set the physical address only
+ * in the boot process.
+ *
+ * These 'compile-time allocated' memory buffers are
+ * fixed-size 4k pages (or larger if used with an increment
+ * higher than 1). Use set_fixmap(idx,phys) to associate
+ * physical memory with fixmap indices.
+ *
+ * TLB entries of such buffers will not be flushed across
+ * task switches.
+ */
+
+enum fixed_addresses {
+	VSYSCALL_LAST_PAGE,
+	VSYSCALL_FIRST_PAGE = VSYSCALL_LAST_PAGE + ((VSYSCALL_END-VSYSCALL_START) >> PAGE_SHIFT) - 1,
+	VSYSCALL_HPET,
+	FIX_DBGP_BASE,
+	FIX_EARLYCON_MEM_BASE,
+	FIX_HPET_BASE,
+	FIX_APIC_BASE,	/* local (CPU) APIC) -- required for SMP or not */
+	FIX_IO_APIC_BASE_0,
+	FIX_IO_APIC_BASE_END = FIX_IO_APIC_BASE_0 + MAX_IO_APICS-1,
+	__end_of_fixed_addresses
+};
+
+extern void __set_fixmap (enum fixed_addresses idx,
+					unsigned long phys, pgprot_t flags);
+
+#define set_fixmap(idx, phys) \
+		__set_fixmap(idx, phys, PAGE_KERNEL)
+/*
+ * Some hardware wants to get fixmapped without caching.
+ */
+#define set_fixmap_nocache(idx, phys) \
+		__set_fixmap(idx, phys, PAGE_KERNEL_NOCACHE)
+
+#define FIXADDR_TOP	(VSYSCALL_END-PAGE_SIZE)
+#define FIXADDR_SIZE	(__end_of_fixed_addresses << PAGE_SHIFT)
+#define FIXADDR_START	(FIXADDR_TOP - FIXADDR_SIZE)
+
+/* Only covers 32bit vsyscalls currently. Need another set for 64bit. */
+#define FIXADDR_USER_START	((unsigned long)VSYSCALL32_VSYSCALL)
+#define FIXADDR_USER_END	(FIXADDR_USER_START + PAGE_SIZE)
+
+#define __fix_to_virt(x)	(FIXADDR_TOP - ((x) << PAGE_SHIFT))
+
+extern void __this_fixmap_does_not_exist(void);
+
+/*
+ * 'index to address' translation. If anyone tries to use the idx
+ * directly without translation, we catch the bug with a NULL-deference
+ * kernel oops. Illegal ranges of incoming indices are caught too.
+ */
+static __always_inline unsigned long fix_to_virt(const unsigned int idx)
+{
+	/*
+	 * this branch gets completely eliminated after inlining,
+	 * except when someone tries to use fixaddr indices in an
+	 * illegal way. (such as mixing up address types or using
+	 * out-of-range indices).
+	 *
+	 * If it doesn't get removed, the linker will complain
+	 * loudly with a reasonably clear error message..
+	 */
+	if (idx >= __end_of_fixed_addresses)
+		__this_fixmap_does_not_exist();
+
+	return __fix_to_virt(idx);
+}
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/floppy.h testtry/include/asm/floppy.h
--- linux-2.6.23-sabayon/include/asm/floppy.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/floppy.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,283 @@
+/*
+ * Architecture specific parts of the Floppy driver
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Copyright (C) 1995
+ */
+#ifndef __ASM_X86_64_FLOPPY_H
+#define __ASM_X86_64_FLOPPY_H
+
+#include <linux/vmalloc.h>
+
+
+/*
+ * The DMA channel used by the floppy controller cannot access data at
+ * addresses >= 16MB
+ *
+ * Went back to the 1MB limit, as some people had problems with the floppy
+ * driver otherwise. It doesn't matter much for performance anyway, as most
+ * floppy accesses go through the track buffer.
+ */
+#define _CROSS_64KB(a,s,vdma) \
+(!(vdma) && ((unsigned long)(a)/K_64 != ((unsigned long)(a) + (s) - 1) / K_64))
+
+#define CROSS_64KB(a,s) _CROSS_64KB(a,s,use_virtual_dma & 1)
+
+
+#define SW fd_routine[use_virtual_dma&1]
+#define CSW fd_routine[can_use_virtual_dma & 1]
+
+
+#define fd_inb(port)			inb_p(port)
+#define fd_outb(value,port)		outb_p(value,port)
+
+#define fd_request_dma()        CSW._request_dma(FLOPPY_DMA,"floppy")
+#define fd_free_dma()           CSW._free_dma(FLOPPY_DMA)
+#define fd_enable_irq()         enable_irq(FLOPPY_IRQ)
+#define fd_disable_irq()        disable_irq(FLOPPY_IRQ)
+#define fd_free_irq()		free_irq(FLOPPY_IRQ, NULL)
+#define fd_get_dma_residue()    SW._get_dma_residue(FLOPPY_DMA)
+#define fd_dma_mem_alloc(size)	SW._dma_mem_alloc(size)
+#define fd_dma_setup(addr, size, mode, io) SW._dma_setup(addr, size, mode, io)
+
+#define FLOPPY_CAN_FALLBACK_ON_NODMA
+
+static int virtual_dma_count;
+static int virtual_dma_residue;
+static char *virtual_dma_addr;
+static int virtual_dma_mode;
+static int doing_pdma;
+
+static irqreturn_t floppy_hardint(int irq, void *dev_id)
+{
+	register unsigned char st;
+
+#undef TRACE_FLPY_INT
+
+#ifdef TRACE_FLPY_INT
+	static int calls=0;
+	static int bytes=0;
+	static int dma_wait=0;
+#endif
+	if (!doing_pdma)
+		return floppy_interrupt(irq, dev_id);
+
+#ifdef TRACE_FLPY_INT
+	if(!calls)
+		bytes = virtual_dma_count;
+#endif
+
+	{
+		register int lcount;
+		register char *lptr;
+
+		st = 1;
+		for(lcount=virtual_dma_count, lptr=virtual_dma_addr; 
+		    lcount; lcount--, lptr++) {
+			st=inb(virtual_dma_port+4) & 0xa0 ;
+			if(st != 0xa0) 
+				break;
+			if(virtual_dma_mode)
+				outb_p(*lptr, virtual_dma_port+5);
+			else
+				*lptr = inb_p(virtual_dma_port+5);
+		}
+		virtual_dma_count = lcount;
+		virtual_dma_addr = lptr;
+		st = inb(virtual_dma_port+4);
+	}
+
+#ifdef TRACE_FLPY_INT
+	calls++;
+#endif
+	if(st == 0x20)
+		return IRQ_HANDLED;
+	if(!(st & 0x20)) {
+		virtual_dma_residue += virtual_dma_count;
+		virtual_dma_count=0;
+#ifdef TRACE_FLPY_INT
+		printk("count=%x, residue=%x calls=%d bytes=%d dma_wait=%d\n", 
+		       virtual_dma_count, virtual_dma_residue, calls, bytes,
+		       dma_wait);
+		calls = 0;
+		dma_wait=0;
+#endif
+		doing_pdma = 0;
+		floppy_interrupt(irq, dev_id);
+		return IRQ_HANDLED;
+	}
+#ifdef TRACE_FLPY_INT
+	if(!virtual_dma_count)
+		dma_wait++;
+#endif
+	return IRQ_HANDLED;
+}
+
+static void fd_disable_dma(void)
+{
+	if(! (can_use_virtual_dma & 1))
+		disable_dma(FLOPPY_DMA);
+	doing_pdma = 0;
+	virtual_dma_residue += virtual_dma_count;
+	virtual_dma_count=0;
+}
+
+static int vdma_request_dma(unsigned int dmanr, const char * device_id)
+{
+	return 0;
+}
+
+static void vdma_nop(unsigned int dummy)
+{
+}
+
+
+static int vdma_get_dma_residue(unsigned int dummy)
+{
+	return virtual_dma_count + virtual_dma_residue;
+}
+
+
+static int fd_request_irq(void)
+{
+	if(can_use_virtual_dma)
+		return request_irq(FLOPPY_IRQ, floppy_hardint,
+				   IRQF_DISABLED, "floppy", NULL);
+	else
+		return request_irq(FLOPPY_IRQ, floppy_interrupt,
+				   IRQF_DISABLED, "floppy", NULL);
+}
+
+static unsigned long dma_mem_alloc(unsigned long size)
+{
+	return __get_dma_pages(GFP_KERNEL|__GFP_NORETRY,get_order(size));
+}
+
+
+static unsigned long vdma_mem_alloc(unsigned long size)
+{
+	return (unsigned long) vmalloc(size);
+
+}
+
+#define nodma_mem_alloc(size) vdma_mem_alloc(size)
+
+static void _fd_dma_mem_free(unsigned long addr, unsigned long size)
+{
+	if((unsigned long) addr >= (unsigned long) high_memory)
+		vfree((void *)addr);
+	else
+		free_pages(addr, get_order(size));		
+}
+
+#define fd_dma_mem_free(addr, size)  _fd_dma_mem_free(addr, size) 
+
+static void _fd_chose_dma_mode(char *addr, unsigned long size)
+{
+	if(can_use_virtual_dma == 2) {
+		if((unsigned long) addr >= (unsigned long) high_memory ||
+		   isa_virt_to_bus(addr) >= 0x1000000 ||
+		   _CROSS_64KB(addr, size, 0))
+			use_virtual_dma = 1;
+		else
+			use_virtual_dma = 0;
+	} else {
+		use_virtual_dma = can_use_virtual_dma & 1;
+	}
+}
+
+#define fd_chose_dma_mode(addr, size) _fd_chose_dma_mode(addr, size)
+
+
+static int vdma_dma_setup(char *addr, unsigned long size, int mode, int io)
+{
+	doing_pdma = 1;
+	virtual_dma_port = io;
+	virtual_dma_mode = (mode  == DMA_MODE_WRITE);
+	virtual_dma_addr = addr;
+	virtual_dma_count = size;
+	virtual_dma_residue = 0;
+	return 0;
+}
+
+static int hard_dma_setup(char *addr, unsigned long size, int mode, int io)
+{
+#ifdef FLOPPY_SANITY_CHECK
+	if (CROSS_64KB(addr, size)) {
+		printk("DMA crossing 64-K boundary %p-%p\n", addr, addr+size);
+		return -1;
+	}
+#endif
+	/* actual, physical DMA */
+	doing_pdma = 0;
+	clear_dma_ff(FLOPPY_DMA);
+	set_dma_mode(FLOPPY_DMA,mode);
+	set_dma_addr(FLOPPY_DMA,isa_virt_to_bus(addr));
+	set_dma_count(FLOPPY_DMA,size);
+	enable_dma(FLOPPY_DMA);
+	return 0;
+}
+
+static struct fd_routine_l {
+	int (*_request_dma)(unsigned int dmanr, const char * device_id);
+	void (*_free_dma)(unsigned int dmanr);
+	int (*_get_dma_residue)(unsigned int dummy);
+	unsigned long (*_dma_mem_alloc) (unsigned long size);
+	int (*_dma_setup)(char *addr, unsigned long size, int mode, int io);
+} fd_routine[] = {
+	{
+		request_dma,
+		free_dma,
+		get_dma_residue,
+		dma_mem_alloc,
+		hard_dma_setup
+	},
+	{
+		vdma_request_dma,
+		vdma_nop,
+		vdma_get_dma_residue,
+		vdma_mem_alloc,
+		vdma_dma_setup
+	}
+};
+
+
+static int FDC1 = 0x3f0;
+static int FDC2 = -1;
+
+/*
+ * Floppy types are stored in the rtc's CMOS RAM and so rtc_lock
+ * is needed to prevent corrupted CMOS RAM in case "insmod floppy"
+ * coincides with another rtc CMOS user.		Paul G.
+ */
+#define FLOPPY0_TYPE	({				\
+	unsigned long flags;				\
+	unsigned char val;				\
+	spin_lock_irqsave(&rtc_lock, flags);		\
+	val = (CMOS_READ(0x10) >> 4) & 15;		\
+	spin_unlock_irqrestore(&rtc_lock, flags);	\
+	val;						\
+})
+
+#define FLOPPY1_TYPE	({				\
+	unsigned long flags;				\
+	unsigned char val;				\
+	spin_lock_irqsave(&rtc_lock, flags);		\
+	val = CMOS_READ(0x10) & 15;			\
+	spin_unlock_irqrestore(&rtc_lock, flags);	\
+	val;						\
+})
+
+#define N_FDC 2
+#define N_DRIVE 8
+
+#define FLOPPY_MOTOR_MASK 0xf0
+
+#define AUTO_DMA
+
+#define EXTRA_FLOPPY_PARAMS
+
+#endif /* __ASM_X86_64_FLOPPY_H */
diff -urpN linux-2.6.23-sabayon/include/asm/fpu32.h testtry/include/asm/fpu32.h
--- linux-2.6.23-sabayon/include/asm/fpu32.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/fpu32.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,10 @@
+#ifndef _FPU32_H
+#define _FPU32_H 1
+
+struct _fpstate_ia32;
+
+int restore_i387_ia32(struct task_struct *tsk, struct _fpstate_ia32 __user *buf, int fsave);
+int save_i387_ia32(struct task_struct *tsk, struct _fpstate_ia32 __user *buf, 
+		   struct pt_regs *regs, int fsave);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/futex.h testtry/include/asm/futex.h
--- linux-2.6.23-sabayon/include/asm/futex.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/futex.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,125 @@
+#ifndef _ASM_FUTEX_H
+#define _ASM_FUTEX_H
+
+#ifdef __KERNEL__
+
+#include <linux/futex.h>
+#include <asm/errno.h>
+#include <asm/system.h>
+#include <asm/uaccess.h>
+
+#define __futex_atomic_op1(insn, ret, oldval, uaddr, oparg) \
+  __asm__ __volatile (						\
+"1:	" insn "\n"						\
+"2:	.section .fixup,\"ax\"\n\
+3:	mov	%3, %1\n\
+	jmp	2b\n\
+	.previous\n\
+	.section __ex_table,\"a\"\n\
+	.align	8\n\
+	.quad	1b,3b\n\
+	.previous"						\
+	: "=r" (oldval), "=r" (ret), "=m" (*uaddr)		\
+	: "i" (-EFAULT), "m" (*uaddr), "0" (oparg), "1" (0))
+
+#define __futex_atomic_op2(insn, ret, oldval, uaddr, oparg) \
+  __asm__ __volatile (						\
+"1:	movl	%2, %0\n\
+	movl	%0, %3\n"					\
+	insn "\n"						\
+"2:	" LOCK_PREFIX "cmpxchgl %3, %2\n\
+	jnz	1b\n\
+3:	.section .fixup,\"ax\"\n\
+4:	mov	%5, %1\n\
+	jmp	3b\n\
+	.previous\n\
+	.section __ex_table,\"a\"\n\
+	.align	8\n\
+	.quad	1b,4b,2b,4b\n\
+	.previous"						\
+	: "=&a" (oldval), "=&r" (ret), "=m" (*uaddr),		\
+	  "=&r" (tem)						\
+	: "r" (oparg), "i" (-EFAULT), "m" (*uaddr), "1" (0))
+
+static inline int
+futex_atomic_op_inuser (int encoded_op, int __user *uaddr)
+{
+	int op = (encoded_op >> 28) & 7;
+	int cmp = (encoded_op >> 24) & 15;
+	int oparg = (encoded_op << 8) >> 20;
+	int cmparg = (encoded_op << 20) >> 20;
+	int oldval = 0, ret, tem;
+	if (encoded_op & (FUTEX_OP_OPARG_SHIFT << 28))
+		oparg = 1 << oparg;
+
+	if (! access_ok (VERIFY_WRITE, uaddr, sizeof(int)))
+		return -EFAULT;
+
+	pagefault_disable();
+
+	switch (op) {
+	case FUTEX_OP_SET:
+		__futex_atomic_op1("xchgl %0, %2", ret, oldval, uaddr, oparg);
+		break;
+	case FUTEX_OP_ADD:
+		__futex_atomic_op1(LOCK_PREFIX "xaddl %0, %2", ret, oldval,
+				   uaddr, oparg);
+		break;
+	case FUTEX_OP_OR:
+		__futex_atomic_op2("orl %4, %3", ret, oldval, uaddr, oparg);
+		break;
+	case FUTEX_OP_ANDN:
+		__futex_atomic_op2("andl %4, %3", ret, oldval, uaddr, ~oparg);
+		break;
+	case FUTEX_OP_XOR:
+		__futex_atomic_op2("xorl %4, %3", ret, oldval, uaddr, oparg);
+		break;
+	default:
+		ret = -ENOSYS;
+	}
+
+	pagefault_enable();
+
+	if (!ret) {
+		switch (cmp) {
+		case FUTEX_OP_CMP_EQ: ret = (oldval == cmparg); break;
+		case FUTEX_OP_CMP_NE: ret = (oldval != cmparg); break;
+		case FUTEX_OP_CMP_LT: ret = (oldval < cmparg); break;
+		case FUTEX_OP_CMP_GE: ret = (oldval >= cmparg); break;
+		case FUTEX_OP_CMP_LE: ret = (oldval <= cmparg); break;
+		case FUTEX_OP_CMP_GT: ret = (oldval > cmparg); break;
+		default: ret = -ENOSYS;
+		}
+	}
+	return ret;
+}
+
+static inline int
+futex_atomic_cmpxchg_inatomic(int __user *uaddr, int oldval, int newval)
+{
+	if (!access_ok(VERIFY_WRITE, uaddr, sizeof(int)))
+		return -EFAULT;
+
+	__asm__ __volatile__(
+		"1:	" LOCK_PREFIX "cmpxchgl %3, %1		\n"
+
+		"2:	.section .fixup, \"ax\"			\n"
+		"3:	mov     %2, %0				\n"
+		"	jmp     2b				\n"
+		"	.previous				\n"
+
+		"	.section __ex_table, \"a\"		\n"
+		"	.align  8				\n"
+		"	.quad   1b,3b				\n"
+		"	.previous				\n"
+
+		: "=a" (oldval), "=m" (*uaddr)
+		: "i" (-EFAULT), "r" (newval), "0" (oldval)
+		: "memory"
+	);
+
+	return oldval;
+}
+
+#endif
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/genapic.h testtry/include/asm/genapic.h
--- linux-2.6.23-sabayon/include/asm/genapic.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/genapic.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,37 @@
+#ifndef _ASM_GENAPIC_H
+#define _ASM_GENAPIC_H 1
+
+/*
+ * Copyright 2004 James Cleverdon, IBM.
+ * Subject to the GNU Public License, v.2
+ *
+ * Generic APIC sub-arch data struct.
+ *
+ * Hacked for x86-64 by James Cleverdon from i386 architecture code by
+ * Martin Bligh, Andi Kleen, James Bottomley, John Stultz, and
+ * James Cleverdon.
+ */
+
+struct genapic {
+	char *name;
+	u32 int_delivery_mode;
+	u32 int_dest_mode;
+	int (*apic_id_registered)(void);
+	cpumask_t (*target_cpus)(void);
+	cpumask_t (*vector_allocation_domain)(int cpu);
+	void (*init_apic_ldr)(void);
+	/* ipi */
+	void (*send_IPI_mask)(cpumask_t mask, int vector);
+	void (*send_IPI_allbutself)(int vector);
+	void (*send_IPI_all)(int vector);
+	/* */
+	unsigned int (*cpu_mask_to_apicid)(cpumask_t cpumask);
+	unsigned int (*phys_pkg_id)(int index_msb);
+};
+
+extern struct genapic *genapic;
+
+extern struct genapic apic_flat;
+extern struct genapic apic_physflat;
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/hardirq.h testtry/include/asm/hardirq.h
--- linux-2.6.23-sabayon/include/asm/hardirq.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/hardirq.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,23 @@
+#ifndef __ASM_HARDIRQ_H
+#define __ASM_HARDIRQ_H
+
+#include <linux/threads.h>
+#include <linux/irq.h>
+#include <asm/pda.h>
+#include <asm/apic.h>
+
+/* We can have at most NR_VECTORS irqs routed to a cpu at a time */
+#define MAX_HARDIRQS_PER_CPU NR_VECTORS
+
+#define __ARCH_IRQ_STAT 1
+
+#define local_softirq_pending() read_pda(__softirq_pending)
+
+#define __ARCH_SET_SOFTIRQ_PENDING 1
+
+#define set_softirq_pending(x) write_pda(__softirq_pending, (x))
+#define or_softirq_pending(x)  or_pda(__softirq_pending, (x))
+
+extern void ack_bad_irq(unsigned int irq);
+
+#endif /* __ASM_HARDIRQ_H */
diff -urpN linux-2.6.23-sabayon/include/asm/hpet.h testtry/include/asm/hpet.h
--- linux-2.6.23-sabayon/include/asm/hpet.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/hpet.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,2 @@
+
+#include <asm-i386/hpet.h>
diff -urpN linux-2.6.23-sabayon/include/asm/hw_irq.h testtry/include/asm/hw_irq.h
--- linux-2.6.23-sabayon/include/asm/hw_irq.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/hw_irq.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,175 @@
+#ifndef _ASM_HW_IRQ_H
+#define _ASM_HW_IRQ_H
+
+/*
+ *	linux/include/asm/hw_irq.h
+ *
+ *	(C) 1992, 1993 Linus Torvalds, (C) 1997 Ingo Molnar
+ *
+ *	moved some of the old arch/i386/kernel/irq.h to here. VY
+ *
+ *	IRQ/IPI changes taken from work by Thomas Radke
+ *	<tomsoft@informatik.tu-chemnitz.de>
+ *
+ *	hacked by Andi Kleen for x86-64.
+ */
+
+#ifndef __ASSEMBLY__
+#include <asm/atomic.h>
+#include <asm/irq.h>
+#include <linux/profile.h>
+#include <linux/smp.h>
+#include <linux/percpu.h>
+#endif
+
+#define NMI_VECTOR		0x02
+/*
+ * IDT vectors usable for external interrupt sources start
+ * at 0x20:
+ */
+#define FIRST_EXTERNAL_VECTOR	0x20
+
+#define IA32_SYSCALL_VECTOR	0x80
+
+
+/* Reserve the lowest usable priority level 0x20 - 0x2f for triggering
+ * cleanup after irq migration.
+ */
+#define IRQ_MOVE_CLEANUP_VECTOR	FIRST_EXTERNAL_VECTOR
+ 
+/*
+ * Vectors 0x30-0x3f are used for ISA interrupts.
+ */
+#define IRQ0_VECTOR		FIRST_EXTERNAL_VECTOR + 0x10
+#define IRQ1_VECTOR		IRQ0_VECTOR + 1
+#define IRQ2_VECTOR		IRQ0_VECTOR + 2
+#define IRQ3_VECTOR		IRQ0_VECTOR + 3
+#define IRQ4_VECTOR		IRQ0_VECTOR + 4
+#define IRQ5_VECTOR		IRQ0_VECTOR + 5 
+#define IRQ6_VECTOR		IRQ0_VECTOR + 6
+#define IRQ7_VECTOR		IRQ0_VECTOR + 7
+#define IRQ8_VECTOR		IRQ0_VECTOR + 8
+#define IRQ9_VECTOR		IRQ0_VECTOR + 9
+#define IRQ10_VECTOR		IRQ0_VECTOR + 10
+#define IRQ11_VECTOR		IRQ0_VECTOR + 11
+#define IRQ12_VECTOR		IRQ0_VECTOR + 12
+#define IRQ13_VECTOR		IRQ0_VECTOR + 13
+#define IRQ14_VECTOR		IRQ0_VECTOR + 14
+#define IRQ15_VECTOR		IRQ0_VECTOR + 15
+
+/*
+ * Special IRQ vectors used by the SMP architecture, 0xf0-0xff
+ *
+ *  some of the following vectors are 'rare', they are merged
+ *  into a single vector (CALL_FUNCTION_VECTOR) to save vector space.
+ *  TLB, reschedule and local APIC vectors are performance-critical.
+ */
+#define SPURIOUS_APIC_VECTOR	0xff
+#define ERROR_APIC_VECTOR	0xfe
+#define RESCHEDULE_VECTOR	0xfd
+#define CALL_FUNCTION_VECTOR	0xfc
+/* fb free - please don't readd KDB here because it's useless
+   (hint - think what a NMI bit does to a vector) */
+#define THERMAL_APIC_VECTOR	0xfa
+#define THRESHOLD_APIC_VECTOR   0xf9
+/* f8 free */
+#define INVALIDATE_TLB_VECTOR_END	0xf7
+#define INVALIDATE_TLB_VECTOR_START	0xf0	/* f0-f7 used for TLB flush */
+
+#define NUM_INVALIDATE_TLB_VECTORS	8
+
+/*
+ * Local APIC timer IRQ vector is on a different priority level,
+ * to work around the 'lost local interrupt if more than 2 IRQ
+ * sources per level' errata.
+ */
+#define LOCAL_TIMER_VECTOR	0xef
+
+/*
+ * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * we start at 0x41 to spread out vectors evenly between priority
+ * levels. (0x80 is the syscall vector)
+ */
+#define FIRST_DEVICE_VECTOR	(IRQ15_VECTOR + 2)
+#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in irq.h */
+
+
+#ifndef __ASSEMBLY__
+
+/* Interrupt handlers registered during init_IRQ */
+void apic_timer_interrupt(void);
+void spurious_interrupt(void);
+void error_interrupt(void);
+void reschedule_interrupt(void);
+void call_function_interrupt(void);
+void irq_move_cleanup_interrupt(void);
+void invalidate_interrupt0(void);
+void invalidate_interrupt1(void);
+void invalidate_interrupt2(void);
+void invalidate_interrupt3(void);
+void invalidate_interrupt4(void);
+void invalidate_interrupt5(void);
+void invalidate_interrupt6(void);
+void invalidate_interrupt7(void);
+void thermal_interrupt(void);
+void threshold_interrupt(void);
+void i8254_timer_resume(void);
+
+typedef int vector_irq_t[NR_VECTORS];
+DECLARE_PER_CPU(vector_irq_t, vector_irq);
+extern void __setup_vector_irq(int cpu);
+extern spinlock_t vector_lock;
+
+/*
+ * Various low-level irq details needed by irq.c, process.c,
+ * time.c, io_apic.c and smp.c
+ *
+ * Interrupt entry/exit code at both C and assembly level
+ */
+
+extern void disable_8259A_irq(unsigned int irq);
+extern void enable_8259A_irq(unsigned int irq);
+extern int i8259A_irq_pending(unsigned int irq);
+extern void make_8259A_irq(unsigned int irq);
+extern void init_8259A(int aeoi);
+extern void send_IPI_self(int vector);
+extern void init_VISWS_APIC_irqs(void);
+extern void setup_IO_APIC(void);
+extern void disable_IO_APIC(void);
+extern void print_IO_APIC(void);
+extern int IO_APIC_get_PCI_irq_vector(int bus, int slot, int fn);
+extern void send_IPI(int dest, int vector);
+extern void setup_ioapic_dest(void);
+
+extern unsigned long io_apic_irqs;
+
+extern atomic_t irq_err_count;
+extern atomic_t irq_mis_count;
+
+#define IO_APIC_IRQ(x) (((x) >= 16) || ((1<<(x)) & io_apic_irqs))
+
+#define __STR(x) #x
+#define STR(x) __STR(x)
+
+#include <asm/ptrace.h>
+
+#define IRQ_NAME2(nr) nr##_interrupt(void)
+#define IRQ_NAME(nr) IRQ_NAME2(IRQ##nr)
+
+/*
+ *	SMP has a few special interrupts for IPI messages
+ */
+
+#define BUILD_IRQ(nr) \
+asmlinkage void IRQ_NAME(nr); \
+__asm__( \
+"\n.p2align\n" \
+"IRQ" #nr "_interrupt:\n\t" \
+	"push $~(" #nr ") ; " \
+	"jmp common_interrupt");
+
+#define platform_legacy_irq(irq)	((irq) < 16)
+
+#endif
+
+#endif /* _ASM_HW_IRQ_H */
diff -urpN linux-2.6.23-sabayon/include/asm/hypertransport.h testtry/include/asm/hypertransport.h
--- linux-2.6.23-sabayon/include/asm/hypertransport.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/hypertransport.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/hypertransport.h>
diff -urpN linux-2.6.23-sabayon/include/asm/i387.h testtry/include/asm/i387.h
--- linux-2.6.23-sabayon/include/asm/i387.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/i387.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,209 @@
+/*
+ * include/asm-x86_64/i387.h
+ *
+ * Copyright (C) 1994 Linus Torvalds
+ *
+ * Pentium III FXSR, SSE support
+ * General FPU state handling cleanups
+ *	Gareth Hughes <gareth@valinux.com>, May 2000
+ * x86-64 work by Andi Kleen 2002
+ */
+
+#ifndef __ASM_X86_64_I387_H
+#define __ASM_X86_64_I387_H
+
+#include <linux/sched.h>
+#include <asm/processor.h>
+#include <asm/sigcontext.h>
+#include <asm/user.h>
+#include <asm/thread_info.h>
+#include <asm/uaccess.h>
+
+extern void fpu_init(void);
+extern unsigned int mxcsr_feature_mask;
+extern void mxcsr_feature_mask_init(void);
+extern void init_fpu(struct task_struct *child);
+extern int save_i387(struct _fpstate __user *buf);
+extern asmlinkage void math_state_restore(void);
+
+/*
+ * FPU lazy state save handling...
+ */
+
+#define unlazy_fpu(tsk) do { \
+	if (task_thread_info(tsk)->status & TS_USEDFPU) \
+		save_init_fpu(tsk); 			\
+	else						\
+		tsk->fpu_counter = 0;			\
+} while (0)
+
+/* Ignore delayed exceptions from user space */
+static inline void tolerant_fwait(void)
+{
+	asm volatile("1: fwait\n"
+		     "2:\n"
+		     "   .section __ex_table,\"a\"\n"
+		     "	.align 8\n"
+		     "	.quad 1b,2b\n"
+		     "	.previous\n");
+}
+
+#define clear_fpu(tsk) do { \
+	if (task_thread_info(tsk)->status & TS_USEDFPU) {	\
+		tolerant_fwait();				\
+		task_thread_info(tsk)->status &= ~TS_USEDFPU;	\
+		stts();						\
+	}							\
+} while (0)
+
+/*
+ * ptrace request handers...
+ */
+extern int get_fpregs(struct user_i387_struct __user *buf,
+		      struct task_struct *tsk);
+extern int set_fpregs(struct task_struct *tsk,
+		      struct user_i387_struct __user *buf);
+
+/*
+ * i387 state interaction
+ */
+#define get_fpu_mxcsr(t) ((t)->thread.i387.fxsave.mxcsr)
+#define get_fpu_cwd(t) ((t)->thread.i387.fxsave.cwd)
+#define get_fpu_fxsr_twd(t) ((t)->thread.i387.fxsave.twd)
+#define get_fpu_swd(t) ((t)->thread.i387.fxsave.swd)
+#define set_fpu_cwd(t,val) ((t)->thread.i387.fxsave.cwd = (val))
+#define set_fpu_swd(t,val) ((t)->thread.i387.fxsave.swd = (val))
+#define set_fpu_fxsr_twd(t,val) ((t)->thread.i387.fxsave.twd = (val))
+
+#define X87_FSW_ES (1 << 7)	/* Exception Summary */
+
+/* AMD CPUs don't save/restore FDP/FIP/FOP unless an exception
+   is pending. Clear the x87 state here by setting it to fixed
+   values. The kernel data segment can be sometimes 0 and sometimes
+   new user value. Both should be ok.
+   Use the PDA as safe address because it should be already in L1. */
+static inline void clear_fpu_state(struct i387_fxsave_struct *fx)
+{
+	if (unlikely(fx->swd & X87_FSW_ES))
+		 asm volatile("fnclex");
+	alternative_input(ASM_NOP8 ASM_NOP2,
+	     	     "    emms\n"		/* clear stack tags */
+	     	     "    fildl %%gs:0",	/* load to clear state */
+		     X86_FEATURE_FXSAVE_LEAK);
+}
+
+static inline int restore_fpu_checking(struct i387_fxsave_struct *fx) 
+{ 
+	int err;
+
+	asm volatile("1:  rex64/fxrstor (%[fx])\n\t"
+		     "2:\n"
+		     ".section .fixup,\"ax\"\n"
+		     "3:  movl $-1,%[err]\n"
+		     "    jmp  2b\n"
+		     ".previous\n"
+		     ".section __ex_table,\"a\"\n"
+		     "   .align 8\n"
+		     "   .quad  1b,3b\n"
+		     ".previous"
+		     : [err] "=r" (err)
+#if 0 /* See comment in __fxsave_clear() below. */
+		     : [fx] "r" (fx), "m" (*fx), "0" (0));
+#else
+		     : [fx] "cdaSDb" (fx), "m" (*fx), "0" (0));
+#endif
+	if (unlikely(err))
+		init_fpu(current);
+	return err;
+} 
+
+static inline int save_i387_checking(struct i387_fxsave_struct __user *fx) 
+{ 
+	int err;
+
+	asm volatile("1:  rex64/fxsave (%[fx])\n\t"
+		     "2:\n"
+		     ".section .fixup,\"ax\"\n"
+		     "3:  movl $-1,%[err]\n"
+		     "    jmp  2b\n"
+		     ".previous\n"
+		     ".section __ex_table,\"a\"\n"
+		     "   .align 8\n"
+		     "   .quad  1b,3b\n"
+		     ".previous"
+		     : [err] "=r" (err), "=m" (*fx)
+#if 0 /* See comment in __fxsave_clear() below. */
+		     : [fx] "r" (fx), "0" (0));
+#else
+		     : [fx] "cdaSDb" (fx), "0" (0));
+#endif
+	if (unlikely(err) && __clear_user(fx, sizeof(struct i387_fxsave_struct)))
+		err = -EFAULT;
+	/* No need to clear here because the caller clears USED_MATH */
+	return err;
+} 
+
+static inline void __fxsave_clear(struct task_struct *tsk)
+{
+	/* Using "rex64; fxsave %0" is broken because, if the memory operand
+	   uses any extended registers for addressing, a second REX prefix
+	   will be generated (to the assembler, rex64 followed by semicolon
+	   is a separate instruction), and hence the 64-bitness is lost. */
+#if 0
+	/* Using "fxsaveq %0" would be the ideal choice, but is only supported
+	   starting with gas 2.16. */
+	__asm__ __volatile__("fxsaveq %0"
+			     : "=m" (tsk->thread.i387.fxsave));
+#elif 0
+	/* Using, as a workaround, the properly prefixed form below isn't
+	   accepted by any binutils version so far released, complaining that
+	   the same type of prefix is used twice if an extended register is
+	   needed for addressing (fix submitted to mainline 2005-11-21). */
+	__asm__ __volatile__("rex64/fxsave %0"
+			     : "=m" (tsk->thread.i387.fxsave));
+#else
+	/* This, however, we can work around by forcing the compiler to select
+	   an addressing mode that doesn't require extended registers. */
+	__asm__ __volatile__("rex64/fxsave %P2(%1)"
+			     : "=m" (tsk->thread.i387.fxsave)
+			     : "cdaSDb" (tsk),
+				"i" (offsetof(__typeof__(*tsk),
+					      thread.i387.fxsave)));
+#endif
+	clear_fpu_state(&tsk->thread.i387.fxsave);
+}
+
+static inline void kernel_fpu_begin(void)
+{
+	struct thread_info *me = current_thread_info();
+	preempt_disable();
+	if (me->status & TS_USEDFPU) {
+		__fxsave_clear(me->task);
+		me->status &= ~TS_USEDFPU;
+		return;
+	}
+	clts();
+}
+
+static inline void kernel_fpu_end(void)
+{
+	stts();
+	preempt_enable();
+}
+
+static inline void save_init_fpu(struct task_struct *tsk)
+{
+ 	__fxsave_clear(tsk);
+	task_thread_info(tsk)->status &= ~TS_USEDFPU;
+	stts();
+}
+
+/* 
+ * This restores directly out of user space. Exceptions are handled.
+ */
+static inline int restore_i387(struct _fpstate __user *buf)
+{
+	return restore_fpu_checking((__force struct i387_fxsave_struct *)buf);
+}
+
+#endif /* __ASM_X86_64_I387_H */
diff -urpN linux-2.6.23-sabayon/include/asm/i8253.h testtry/include/asm/i8253.h
--- linux-2.6.23-sabayon/include/asm/i8253.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/i8253.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,2 @@
+#include <asm-i386/i8253.h>
+#include <asm/8253pit.h>
diff -urpN linux-2.6.23-sabayon/include/asm/ia32.h testtry/include/asm/ia32.h
--- linux-2.6.23-sabayon/include/asm/ia32.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ia32.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,178 @@
+#ifndef _ASM_X86_64_IA32_H
+#define _ASM_X86_64_IA32_H
+
+
+#ifdef CONFIG_IA32_EMULATION
+
+#include <linux/compat.h>
+
+/*
+ * 32 bit structures for IA32 support.
+ */
+
+#include <asm/sigcontext32.h>
+
+/* signal.h */
+struct sigaction32 {
+       unsigned int  sa_handler;	/* Really a pointer, but need to deal 
+					     with 32 bits */
+       unsigned int sa_flags;
+       unsigned int sa_restorer;	/* Another 32 bit pointer */
+       compat_sigset_t sa_mask;		/* A 32 bit mask */
+};
+
+struct old_sigaction32 {
+       unsigned int  sa_handler;	/* Really a pointer, but need to deal 
+					     with 32 bits */
+       compat_old_sigset_t sa_mask;		/* A 32 bit mask */
+       unsigned int sa_flags;
+       unsigned int sa_restorer;	/* Another 32 bit pointer */
+};
+
+typedef struct sigaltstack_ia32 {
+	unsigned int	ss_sp;
+	int		ss_flags;
+	unsigned int	ss_size;
+} stack_ia32_t;
+
+struct ucontext_ia32 {
+	unsigned int	  uc_flags;
+	unsigned int 	  uc_link;
+	stack_ia32_t	  uc_stack;
+	struct sigcontext_ia32 uc_mcontext;
+	compat_sigset_t	  uc_sigmask;	/* mask last for extensibility */
+};
+
+/* This matches struct stat64 in glibc2.2, hence the absolutely
+ * insane amounts of padding around dev_t's.
+ */
+struct stat64 {
+	unsigned long long	st_dev;
+	unsigned char		__pad0[4];
+
+#define STAT64_HAS_BROKEN_ST_INO	1
+	unsigned int		__st_ino;
+
+	unsigned int		st_mode;
+	unsigned int		st_nlink;
+
+	unsigned int		st_uid;
+	unsigned int		st_gid;
+
+	unsigned long long	st_rdev;
+	unsigned char		__pad3[4];
+
+	long long		st_size;
+	unsigned int		st_blksize;
+
+	long long		st_blocks;/* Number 512-byte blocks allocated. */
+
+	unsigned 		st_atime;
+	unsigned 		st_atime_nsec;
+	unsigned 		st_mtime;
+	unsigned 		st_mtime_nsec;
+	unsigned 		st_ctime;
+	unsigned 		st_ctime_nsec;
+
+	unsigned long long	st_ino;
+} __attribute__((packed));
+
+typedef struct compat_siginfo{
+	int si_signo;
+	int si_errno;
+	int si_code;
+
+	union {
+		int _pad[((128/sizeof(int)) - 3)];
+
+		/* kill() */
+		struct {
+			unsigned int _pid;	/* sender's pid */
+			unsigned int _uid;	/* sender's uid */
+		} _kill;
+
+		/* POSIX.1b timers */
+		struct {
+			compat_timer_t _tid;	/* timer id */
+			int _overrun;		/* overrun count */
+			compat_sigval_t _sigval;	/* same as below */
+			int _sys_private;	/* not to be passed to user */
+			int _overrun_incr;	/* amount to add to overrun */
+		} _timer;
+
+		/* POSIX.1b signals */
+		struct {
+			unsigned int _pid;	/* sender's pid */
+			unsigned int _uid;	/* sender's uid */
+			compat_sigval_t _sigval;
+		} _rt;
+
+		/* SIGCHLD */
+		struct {
+			unsigned int _pid;	/* which child */
+			unsigned int _uid;	/* sender's uid */
+			int _status;		/* exit code */
+			compat_clock_t _utime;
+			compat_clock_t _stime;
+		} _sigchld;
+
+		/* SIGILL, SIGFPE, SIGSEGV, SIGBUS */
+		struct {
+			unsigned int _addr;	/* faulting insn/memory ref. */
+		} _sigfault;
+
+		/* SIGPOLL */
+		struct {
+			int _band;	/* POLL_IN, POLL_OUT, POLL_MSG */
+			int _fd;
+		} _sigpoll;
+	} _sifields;
+} compat_siginfo_t;
+
+struct sigframe32
+{
+        u32 pretcode;
+        int sig;
+        struct sigcontext_ia32 sc;
+        struct _fpstate_ia32 fpstate;
+        unsigned int extramask[_COMPAT_NSIG_WORDS-1];
+};
+
+struct rt_sigframe32
+{
+        u32 pretcode;
+        int sig;
+        u32 pinfo;
+        u32 puc;
+        compat_siginfo_t info;
+        struct ucontext_ia32 uc;
+        struct _fpstate_ia32 fpstate;
+};
+
+struct ustat32 {
+	__u32	f_tfree;
+	compat_ino_t		f_tinode;
+	char			f_fname[6];
+	char			f_fpack[6];
+};
+
+#define IA32_STACK_TOP IA32_PAGE_OFFSET
+
+#ifdef __KERNEL__
+struct user_desc;
+struct siginfo_t;
+int do_get_thread_area(struct thread_struct *t, struct user_desc __user *info);
+int do_set_thread_area(struct thread_struct *t, struct user_desc __user *info);
+int ia32_child_tls(struct task_struct *p, struct pt_regs *childregs);
+
+struct linux_binprm;
+extern int ia32_setup_arg_pages(struct linux_binprm *bprm,
+				unsigned long stack_top, int exec_stack);
+struct mm_struct;
+extern void ia32_pick_mmap_layout(struct mm_struct *mm);
+
+#endif
+
+#endif /* !CONFIG_IA32_SUPPORT */
+ 
+#endif 
diff -urpN linux-2.6.23-sabayon/include/asm/ia32_unistd.h testtry/include/asm/ia32_unistd.h
--- linux-2.6.23-sabayon/include/asm/ia32_unistd.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ia32_unistd.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,18 @@
+#ifndef _ASM_X86_64_IA32_UNISTD_H_
+#define _ASM_X86_64_IA32_UNISTD_H_
+
+/*
+ * This file contains the system call numbers of the ia32 port,
+ * this is for the kernel only.
+ * Only add syscalls here where some part of the kernel needs to know
+ * the number. This should be otherwise in sync with asm-i386/unistd.h. -AK
+ */
+
+#define __NR_ia32_restart_syscall 0
+#define __NR_ia32_exit		  1
+#define __NR_ia32_read		  3
+#define __NR_ia32_write		  4
+#define __NR_ia32_sigreturn	119
+#define __NR_ia32_rt_sigreturn	173
+
+#endif /* _ASM_X86_64_IA32_UNISTD_H_ */
diff -urpN linux-2.6.23-sabayon/include/asm/ide.h testtry/include/asm/ide.h
--- linux-2.6.23-sabayon/include/asm/ide.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ide.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/ide.h>
diff -urpN linux-2.6.23-sabayon/include/asm/idle.h testtry/include/asm/idle.h
--- linux-2.6.23-sabayon/include/asm/idle.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/idle.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,14 @@
+#ifndef _ASM_X86_64_IDLE_H
+#define _ASM_X86_64_IDLE_H 1
+
+#define IDLE_START 1
+#define IDLE_END 2
+
+struct notifier_block;
+void idle_notifier_register(struct notifier_block *n);
+void idle_notifier_unregister(struct notifier_block *n);
+
+void enter_idle(void);
+void exit_idle(void);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/intel_arch_perfmon.h testtry/include/asm/intel_arch_perfmon.h
--- linux-2.6.23-sabayon/include/asm/intel_arch_perfmon.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/intel_arch_perfmon.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,31 @@
+#ifndef X86_64_INTEL_ARCH_PERFMON_H
+#define X86_64_INTEL_ARCH_PERFMON_H 1
+
+#define MSR_ARCH_PERFMON_PERFCTR0		0xc1
+#define MSR_ARCH_PERFMON_PERFCTR1		0xc2
+
+#define MSR_ARCH_PERFMON_EVENTSEL0		0x186
+#define MSR_ARCH_PERFMON_EVENTSEL1		0x187
+
+#define ARCH_PERFMON_EVENTSEL0_ENABLE      (1 << 22)
+#define ARCH_PERFMON_EVENTSEL_INT          (1 << 20)
+#define ARCH_PERFMON_EVENTSEL_OS           (1 << 17)
+#define ARCH_PERFMON_EVENTSEL_USR          (1 << 16)
+
+#define ARCH_PERFMON_UNHALTED_CORE_CYCLES_SEL	(0x3c)
+#define ARCH_PERFMON_UNHALTED_CORE_CYCLES_UMASK	(0x00 << 8)
+#define ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX (0)
+#define ARCH_PERFMON_UNHALTED_CORE_CYCLES_PRESENT \
+				(1 << (ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX))
+
+union cpuid10_eax {
+	struct {
+		unsigned int version_id:8;
+		unsigned int num_counters:8;
+		unsigned int bit_width:8;
+		unsigned int mask_length:8;
+	} split;
+	unsigned int full;
+};
+
+#endif	/* X86_64_INTEL_ARCH_PERFMON_H */
diff -urpN linux-2.6.23-sabayon/include/asm/io_apic.h testtry/include/asm/io_apic.h
--- linux-2.6.23-sabayon/include/asm/io_apic.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/io_apic.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,136 @@
+#ifndef __ASM_IO_APIC_H
+#define __ASM_IO_APIC_H
+
+#include <asm/types.h>
+#include <asm/mpspec.h>
+#include <asm/apicdef.h>
+
+/*
+ * Intel IO-APIC support for SMP and UP systems.
+ *
+ * Copyright (C) 1997, 1998, 1999, 2000 Ingo Molnar
+ */
+
+#define APIC_MISMATCH_DEBUG
+
+/*
+ * The structure of the IO-APIC:
+ */
+union IO_APIC_reg_00 {
+	u32	raw;
+	struct {
+		u32	__reserved_2	: 14,
+			LTS		:  1,
+			delivery_type	:  1,
+			__reserved_1	:  8,
+			ID		:  8;
+	} __attribute__ ((packed)) bits;
+};
+
+union IO_APIC_reg_01 {
+	u32	raw;
+	struct {
+		u32	version		:  8,
+		__reserved_2	:  7,
+		PRQ		:  1,
+		entries		:  8,
+		__reserved_1	:  8;
+	} __attribute__ ((packed)) bits;
+};
+
+union IO_APIC_reg_02 {
+	u32	raw;
+	struct {
+		u32	__reserved_2	: 24,
+		arbitration	:  4,
+		__reserved_1	:  4;
+	} __attribute__ ((packed)) bits;
+};
+
+union IO_APIC_reg_03 {
+	u32	raw;
+	struct {
+		u32	boot_DT		:  1,
+			__reserved_1	: 31;
+	} __attribute__ ((packed)) bits;
+};
+
+/*
+ * # of IO-APICs and # of IRQ routing registers
+ */
+extern int nr_ioapics;
+extern int nr_ioapic_registers[MAX_IO_APICS];
+
+enum ioapic_irq_destination_types {
+	dest_Fixed = 0,
+	dest_LowestPrio = 1,
+	dest_SMI = 2,
+	dest__reserved_1 = 3,
+	dest_NMI = 4,
+	dest_INIT = 5,
+	dest__reserved_2 = 6,
+	dest_ExtINT = 7
+};
+
+struct IO_APIC_route_entry {
+	__u32	vector		:  8,
+		delivery_mode	:  3,	/* 000: FIXED
+					 * 001: lowest prio
+					 * 111: ExtINT
+					 */
+		dest_mode	:  1,	/* 0: physical, 1: logical */
+		delivery_status	:  1,
+		polarity	:  1,
+		irr		:  1,
+		trigger		:  1,	/* 0: edge, 1: level */
+		mask		:  1,	/* 0: enabled, 1: disabled */
+		__reserved_2	: 15;
+
+	__u32	__reserved_3	: 24,
+		dest		:  8;
+} __attribute__ ((packed));
+
+/*
+ * MP-BIOS irq configuration table structures:
+ */
+
+/* I/O APIC entries */
+extern struct mpc_config_ioapic mp_ioapics[MAX_IO_APICS];
+
+/* # of MP IRQ source entries */
+extern int mp_irq_entries;
+
+/* MP IRQ source entries */
+extern struct mpc_config_intsrc mp_irqs[MAX_IRQ_SOURCES];
+
+/* non-0 if default (table-less) MP configuration */
+extern int mpc_default_type;
+
+/* 1 if "noapic" boot option passed */
+extern int skip_ioapic_setup;
+
+static inline void disable_ioapic_setup(void)
+{
+	skip_ioapic_setup = 1;
+}
+
+
+/*
+ * If we use the IO-APIC for IRQ routing, disable automatic
+ * assignment of PCI IRQ's.
+ */
+#define io_apic_assign_pci_irqs (mp_irq_entries && !skip_ioapic_setup && io_apic_irqs)
+
+#ifdef CONFIG_ACPI
+extern int io_apic_get_version (int ioapic);
+extern int io_apic_get_redir_entries (int ioapic);
+extern int io_apic_set_pci_routing (int ioapic, int pin, int irq, int, int);
+#endif
+
+extern int sis_apic_bug; /* dummy */ 
+
+void enable_NMI_through_LVT0 (void * dummy);
+
+extern spinlock_t i8259A_lock;
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/ioctl.h testtry/include/asm/ioctl.h
--- linux-2.6.23-sabayon/include/asm/ioctl.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ioctl.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-generic/ioctl.h>
diff -urpN linux-2.6.23-sabayon/include/asm/ioctls.h testtry/include/asm/ioctls.h
--- linux-2.6.23-sabayon/include/asm/ioctls.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ioctls.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,86 @@
+#ifndef __ARCH_X8664_IOCTLS_H__
+#define __ARCH_X8664_IOCTLS_H__
+
+#include <asm/ioctl.h>
+
+/* 0x54 is just a magic number to make these relatively unique ('T') */
+
+#define TCGETS		0x5401
+#define TCSETS		0x5402
+#define TCSETSW		0x5403
+#define TCSETSF		0x5404
+#define TCGETA		0x5405
+#define TCSETA		0x5406
+#define TCSETAW		0x5407
+#define TCSETAF		0x5408
+#define TCSBRK		0x5409
+#define TCXONC		0x540A
+#define TCFLSH		0x540B
+#define TIOCEXCL	0x540C
+#define TIOCNXCL	0x540D
+#define TIOCSCTTY	0x540E
+#define TIOCGPGRP	0x540F
+#define TIOCSPGRP	0x5410
+#define TIOCOUTQ	0x5411
+#define TIOCSTI		0x5412
+#define TIOCGWINSZ	0x5413
+#define TIOCSWINSZ	0x5414
+#define TIOCMGET	0x5415
+#define TIOCMBIS	0x5416
+#define TIOCMBIC	0x5417
+#define TIOCMSET	0x5418
+#define TIOCGSOFTCAR	0x5419
+#define TIOCSSOFTCAR	0x541A
+#define FIONREAD	0x541B
+#define TIOCINQ		FIONREAD
+#define TIOCLINUX	0x541C
+#define TIOCCONS	0x541D
+#define TIOCGSERIAL	0x541E
+#define TIOCSSERIAL	0x541F
+#define TIOCPKT		0x5420
+#define FIONBIO		0x5421
+#define TIOCNOTTY	0x5422
+#define TIOCSETD	0x5423
+#define TIOCGETD	0x5424
+#define TCSBRKP		0x5425	/* Needed for POSIX tcsendbreak() */
+#define TIOCSBRK	0x5427  /* BSD compatibility */
+#define TIOCCBRK	0x5428  /* BSD compatibility */
+#define TIOCGSID	0x5429  /* Return the session ID of FD */
+#define TCGETS2		_IOR('T',0x2A, struct termios2)
+#define TCSETS2		_IOW('T',0x2B, struct termios2)
+#define TCSETSW2	_IOW('T',0x2C, struct termios2)
+#define TCSETSF2	_IOW('T',0x2D, struct termios2)
+#define TIOCGPTN	_IOR('T',0x30, unsigned int) /* Get Pty Number (of pty-mux device) */
+#define TIOCSPTLCK	_IOW('T',0x31, int)  /* Lock/unlock Pty */
+
+#define FIONCLEX	0x5450  /* these numbers need to be adjusted. */
+#define FIOCLEX		0x5451
+#define FIOASYNC	0x5452
+#define TIOCSERCONFIG	0x5453
+#define TIOCSERGWILD	0x5454
+#define TIOCSERSWILD	0x5455
+#define TIOCGLCKTRMIOS	0x5456
+#define TIOCSLCKTRMIOS	0x5457
+#define TIOCSERGSTRUCT	0x5458 /* For debugging only */
+#define TIOCSERGETLSR   0x5459 /* Get line status register */
+#define TIOCSERGETMULTI 0x545A /* Get multiport config  */
+#define TIOCSERSETMULTI 0x545B /* Set multiport config */
+
+#define TIOCMIWAIT	0x545C	/* wait for a change on serial input line(s) */
+#define TIOCGICOUNT	0x545D	/* read serial port inline interrupt counts */
+#define TIOCGHAYESESP   0x545E  /* Get Hayes ESP configuration */
+#define TIOCSHAYESESP   0x545F  /* Set Hayes ESP configuration */
+#define FIOQSIZE       0x5460
+
+/* Used for packet mode */
+#define TIOCPKT_DATA		 0
+#define TIOCPKT_FLUSHREAD	 1
+#define TIOCPKT_FLUSHWRITE	 2
+#define TIOCPKT_STOP		 4
+#define TIOCPKT_START		 8
+#define TIOCPKT_NOSTOP		16
+#define TIOCPKT_DOSTOP		32
+
+#define TIOCSER_TEMT    0x01	/* Transmitter physically empty */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/io.h testtry/include/asm/io.h
--- linux-2.6.23-sabayon/include/asm/io.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/io.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,276 @@
+#ifndef _ASM_IO_H
+#define _ASM_IO_H
+
+
+/*
+ * This file contains the definitions for the x86 IO instructions
+ * inb/inw/inl/outb/outw/outl and the "string versions" of the same
+ * (insb/insw/insl/outsb/outsw/outsl). You can also use "pausing"
+ * versions of the single-IO instructions (inb_p/inw_p/..).
+ *
+ * This file is not meant to be obfuscating: it's just complicated
+ * to (a) handle it all in a way that makes gcc able to optimize it
+ * as well as possible and (b) trying to avoid writing the same thing
+ * over and over again with slight variations and possibly making a
+ * mistake somewhere.
+ */
+
+/*
+ * Thanks to James van Artsdalen for a better timing-fix than
+ * the two short jumps: using outb's to a nonexistent port seems
+ * to guarantee better timings even on fast machines.
+ *
+ * On the other hand, I'd like to be sure of a non-existent port:
+ * I feel a bit unsafe about using 0x80 (should be safe, though)
+ *
+ *		Linus
+ */
+
+ /*
+  *  Bit simplified and optimized by Jan Hubicka
+  *  Support of BIGMEM added by Gerhard Wichert, Siemens AG, July 1999.
+  *
+  *  isa_memset_io, isa_memcpy_fromio, isa_memcpy_toio added,
+  *  isa_read[wl] and isa_write[wl] fixed
+  *  - Arnaldo Carvalho de Melo <acme@conectiva.com.br>
+  */
+
+#define __SLOW_DOWN_IO "\noutb %%al,$0x80"
+
+#ifdef REALLY_SLOW_IO
+#define __FULL_SLOW_DOWN_IO __SLOW_DOWN_IO __SLOW_DOWN_IO __SLOW_DOWN_IO __SLOW_DOWN_IO
+#else
+#define __FULL_SLOW_DOWN_IO __SLOW_DOWN_IO
+#endif
+
+/*
+ * Talk about misusing macros..
+ */
+#define __OUT1(s,x) \
+static inline void out##s(unsigned x value, unsigned short port) {
+
+#define __OUT2(s,s1,s2) \
+__asm__ __volatile__ ("out" #s " %" s1 "0,%" s2 "1"
+
+#define __OUT(s,s1,x) \
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
+
+#define __IN1(s) \
+static inline RETURN_TYPE in##s(unsigned short port) { RETURN_TYPE _v;
+
+#define __IN2(s,s1,s2) \
+__asm__ __volatile__ ("in" #s " %" s2 "1,%" s1 "0"
+
+#define __IN(s,s1,i...) \
+__IN1(s) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+__IN1(s##_p) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+
+#define __INS(s) \
+static inline void ins##s(unsigned short port, void * addr, unsigned long count) \
+{ __asm__ __volatile__ ("rep ; ins" #s \
+: "=D" (addr), "=c" (count) : "d" (port),"0" (addr),"1" (count)); }
+
+#define __OUTS(s) \
+static inline void outs##s(unsigned short port, const void * addr, unsigned long count) \
+{ __asm__ __volatile__ ("rep ; outs" #s \
+: "=S" (addr), "=c" (count) : "d" (port),"0" (addr),"1" (count)); }
+
+#define RETURN_TYPE unsigned char
+__IN(b,"")
+#undef RETURN_TYPE
+#define RETURN_TYPE unsigned short
+__IN(w,"")
+#undef RETURN_TYPE
+#define RETURN_TYPE unsigned int
+__IN(l,"")
+#undef RETURN_TYPE
+
+__OUT(b,"b",char)
+__OUT(w,"w",short)
+__OUT(l,,int)
+
+__INS(b)
+__INS(w)
+__INS(l)
+
+__OUTS(b)
+__OUTS(w)
+__OUTS(l)
+
+#define IO_SPACE_LIMIT 0xffff
+
+#if defined(__KERNEL__) && defined(__x86_64__)
+
+#include <linux/vmalloc.h>
+
+#ifndef __i386__
+/*
+ * Change virtual addresses to physical addresses and vv.
+ * These are pretty trivial
+ */
+static inline unsigned long virt_to_phys(volatile void * address)
+{
+	return __pa(address);
+}
+
+static inline void * phys_to_virt(unsigned long address)
+{
+	return __va(address);
+}
+#endif
+
+/*
+ * Change "struct page" to physical address.
+ */
+#define page_to_phys(page)    ((dma_addr_t)page_to_pfn(page) << PAGE_SHIFT)
+
+#include <asm-generic/iomap.h>
+
+extern void __iomem *__ioremap(unsigned long offset, unsigned long size, unsigned long flags);
+
+static inline void __iomem * ioremap (unsigned long offset, unsigned long size)
+{
+	return __ioremap(offset, size, 0);
+}
+
+extern void *early_ioremap(unsigned long addr, unsigned long size);
+extern void early_iounmap(void *addr, unsigned long size);
+
+/*
+ * This one maps high address device memory and turns off caching for that area.
+ * it's useful if some control registers are in such an area and write combining
+ * or read caching is not desirable:
+ */
+extern void __iomem * ioremap_nocache (unsigned long offset, unsigned long size);
+extern void iounmap(volatile void __iomem *addr);
+extern void __iomem *fix_ioremap(unsigned idx, unsigned long phys);
+
+/*
+ * ISA I/O bus memory addresses are 1:1 with the physical address.
+ */
+#define isa_virt_to_bus virt_to_phys
+#define isa_page_to_bus page_to_phys
+#define isa_bus_to_virt phys_to_virt
+
+/*
+ * However PCI ones are not necessarily 1:1 and therefore these interfaces
+ * are forbidden in portable PCI drivers.
+ *
+ * Allow them on x86 for legacy drivers, though.
+ */
+#define virt_to_bus virt_to_phys
+#define bus_to_virt phys_to_virt
+
+/*
+ * readX/writeX() are used to access memory mapped devices. On some
+ * architectures the memory mapped IO stuff needs to be accessed
+ * differently. On the x86 architecture, we just read/write the
+ * memory location directly.
+ */
+
+static inline __u8 __readb(const volatile void __iomem *addr)
+{
+	return *(__force volatile __u8 *)addr;
+}
+static inline __u16 __readw(const volatile void __iomem *addr)
+{
+	return *(__force volatile __u16 *)addr;
+}
+static __always_inline __u32 __readl(const volatile void __iomem *addr)
+{
+	return *(__force volatile __u32 *)addr;
+}
+static inline __u64 __readq(const volatile void __iomem *addr)
+{
+	return *(__force volatile __u64 *)addr;
+}
+#define readb(x) __readb(x)
+#define readw(x) __readw(x)
+#define readl(x) __readl(x)
+#define readq(x) __readq(x)
+#define readb_relaxed(a) readb(a)
+#define readw_relaxed(a) readw(a)
+#define readl_relaxed(a) readl(a)
+#define readq_relaxed(a) readq(a)
+#define __raw_readb readb
+#define __raw_readw readw
+#define __raw_readl readl
+#define __raw_readq readq
+
+#define mmiowb()
+
+static inline void __writel(__u32 b, volatile void __iomem *addr)
+{
+	*(__force volatile __u32 *)addr = b;
+}
+static inline void __writeq(__u64 b, volatile void __iomem *addr)
+{
+	*(__force volatile __u64 *)addr = b;
+}
+static inline void __writeb(__u8 b, volatile void __iomem *addr)
+{
+	*(__force volatile __u8 *)addr = b;
+}
+static inline void __writew(__u16 b, volatile void __iomem *addr)
+{
+	*(__force volatile __u16 *)addr = b;
+}
+#define writeq(val,addr) __writeq((val),(addr))
+#define writel(val,addr) __writel((val),(addr))
+#define writew(val,addr) __writew((val),(addr))
+#define writeb(val,addr) __writeb((val),(addr))
+#define __raw_writeb writeb
+#define __raw_writew writew
+#define __raw_writel writel
+#define __raw_writeq writeq
+
+void __memcpy_fromio(void*,unsigned long,unsigned);
+void __memcpy_toio(unsigned long,const void*,unsigned);
+
+static inline void memcpy_fromio(void *to, const volatile void __iomem *from, unsigned len)
+{
+	__memcpy_fromio(to,(unsigned long)from,len);
+}
+static inline void memcpy_toio(volatile void __iomem *to, const void *from, unsigned len)
+{
+	__memcpy_toio((unsigned long)to,from,len);
+}
+
+void memset_io(volatile void __iomem *a, int b, size_t c);
+
+/*
+ * ISA space is 'always mapped' on a typical x86 system, no need to
+ * explicitly ioremap() it. The fact that the ISA IO space is mapped
+ * to PAGE_OFFSET is pure coincidence - it does not mean ISA values
+ * are physical addresses. The following constant pointer can be
+ * used as the IO-area pointer (it can be iounmapped as well, so the
+ * analogy with PCI is quite large):
+ */
+#define __ISA_IO_base ((char __iomem *)(PAGE_OFFSET))
+
+/* Nothing to do */
+
+#define dma_cache_inv(_start,_size)		do { } while (0)
+#define dma_cache_wback(_start,_size)		do { } while (0)
+#define dma_cache_wback_inv(_start,_size)	do { } while (0)
+
+#define flush_write_buffers() 
+
+extern int iommu_bio_merge;
+#define BIO_VMERGE_BOUNDARY iommu_bio_merge
+
+/*
+ * Convert a physical pointer to a virtual kernel pointer for /dev/mem
+ * access
+ */
+#define xlate_dev_mem_ptr(p)	__va(p)
+
+/*
+ * Convert a virtual cached pointer to an uncached pointer
+ */
+#define xlate_dev_kmem_ptr(p)	p
+
+#endif /* __KERNEL__ */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/iommu.h testtry/include/asm/iommu.h
--- linux-2.6.23-sabayon/include/asm/iommu.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/iommu.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,29 @@
+#ifndef _ASM_X8664_IOMMU_H
+#define _ASM_X8664_IOMMU_H 1
+
+extern void pci_iommu_shutdown(void);
+extern void no_iommu_init(void);
+extern int force_iommu, no_iommu;
+extern int iommu_detected;
+#ifdef CONFIG_IOMMU
+extern void gart_iommu_init(void);
+extern void gart_iommu_shutdown(void);
+extern void __init gart_parse_options(char *);
+extern void iommu_hole_init(void);
+extern int fallback_aper_order;
+extern int fallback_aper_force;
+extern int iommu_aperture;
+extern int iommu_aperture_allowed;
+extern int iommu_aperture_disabled;
+extern int fix_aperture;
+#else
+#define iommu_aperture 0
+#define iommu_aperture_allowed 0
+
+static inline void gart_iommu_shutdown(void)
+{
+}
+
+#endif
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/ipcbuf.h testtry/include/asm/ipcbuf.h
--- linux-2.6.23-sabayon/include/asm/ipcbuf.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ipcbuf.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,29 @@
+#ifndef __x86_64_IPCBUF_H__
+#define __x86_64_IPCBUF_H__
+
+/*
+ * The ipc64_perm structure for x86_64 architecture.
+ * Note extra padding because this structure is passed back and forth
+ * between kernel and user space.
+ *
+ * Pad space is left for:
+ * - 32-bit mode_t and seq
+ * - 2 miscellaneous 32-bit values
+ */
+
+struct ipc64_perm
+{
+	__kernel_key_t		key;
+	__kernel_uid32_t	uid;
+	__kernel_gid32_t	gid;
+	__kernel_uid32_t	cuid;
+	__kernel_gid32_t	cgid;
+	__kernel_mode_t		mode;
+	unsigned short		__pad1;
+	unsigned short		seq;
+	unsigned short		__pad2;
+	unsigned long		__unused1;
+	unsigned long		__unused2;
+};
+
+#endif /* __x86_64_IPCBUF_H__ */
diff -urpN linux-2.6.23-sabayon/include/asm/ipi.h testtry/include/asm/ipi.h
--- linux-2.6.23-sabayon/include/asm/ipi.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ipi.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,128 @@
+#ifndef __ASM_IPI_H
+#define __ASM_IPI_H
+
+/*
+ * Copyright 2004 James Cleverdon, IBM.
+ * Subject to the GNU Public License, v.2
+ *
+ * Generic APIC InterProcessor Interrupt code.
+ *
+ * Moved to include file by James Cleverdon from
+ * arch/x86-64/kernel/smp.c
+ *
+ * Copyrights from kernel/smp.c:
+ *
+ * (c) 1995 Alan Cox, Building #3 <alan@redhat.com>
+ * (c) 1998-99, 2000 Ingo Molnar <mingo@redhat.com>
+ * (c) 2002,2003 Andi Kleen, SuSE Labs.
+ * Subject to the GNU Public License, v.2
+ */
+
+#include <asm/hw_irq.h>
+#include <asm/apic.h>
+
+/*
+ * the following functions deal with sending IPIs between CPUs.
+ *
+ * We use 'broadcast', CPU->CPU IPIs and self-IPIs too.
+ */
+
+static inline unsigned int __prepare_ICR (unsigned int shortcut, int vector, unsigned int dest)
+{
+	unsigned int icr = shortcut | dest;
+
+	switch (vector) {
+	default:
+		icr |= APIC_DM_FIXED | vector;
+		break;
+	case NMI_VECTOR:
+		icr |= APIC_DM_NMI;
+		break;
+	}
+	return icr;
+}
+
+static inline int __prepare_ICR2 (unsigned int mask)
+{
+	return SET_APIC_DEST_FIELD(mask);
+}
+
+static inline void __send_IPI_shortcut(unsigned int shortcut, int vector, unsigned int dest)
+{
+	/*
+	 * Subtle. In the case of the 'never do double writes' workaround
+	 * we have to lock out interrupts to be safe.  As we don't care
+	 * of the value read we use an atomic rmw access to avoid costly
+	 * cli/sti.  Otherwise we use an even cheaper single atomic write
+	 * to the APIC.
+	 */
+	unsigned int cfg;
+
+	/*
+	 * Wait for idle.
+	 */
+	apic_wait_icr_idle();
+
+	/*
+	 * No need to touch the target chip field
+	 */
+	cfg = __prepare_ICR(shortcut, vector, dest);
+
+	/*
+	 * Send the IPI. The write to APIC_ICR fires this off.
+	 */
+	apic_write(APIC_ICR, cfg);
+}
+
+/*
+ * This is used to send an IPI with no shorthand notation (the destination is
+ * specified in bits 56 to 63 of the ICR).
+ */
+static inline void __send_IPI_dest_field(unsigned int mask, int vector, unsigned int dest)
+{
+	unsigned long cfg;
+
+	/*
+	 * Wait for idle.
+	 */
+	if (unlikely(vector == NMI_VECTOR))
+		safe_apic_wait_icr_idle();
+	else
+		apic_wait_icr_idle();
+
+	/*
+	 * prepare target chip field
+	 */
+	cfg = __prepare_ICR2(mask);
+	apic_write(APIC_ICR2, cfg);
+
+	/*
+	 * program the ICR
+	 */
+	cfg = __prepare_ICR(0, vector, dest);
+
+	/*
+	 * Send the IPI. The write to APIC_ICR fires this off.
+	 */
+	apic_write(APIC_ICR, cfg);
+}
+
+static inline void send_IPI_mask_sequence(cpumask_t mask, int vector)
+{
+	unsigned long flags;
+	unsigned long query_cpu;
+
+	/*
+	 * Hack. The clustered APIC addressing mode doesn't allow us to send
+	 * to an arbitrary mask, so I do a unicast to each CPU instead.
+	 * - mbligh
+	 */
+	local_irq_save(flags);
+	for_each_cpu_mask(query_cpu, mask) {
+		__send_IPI_dest_field(x86_cpu_to_apicid[query_cpu],
+				      vector, APIC_DEST_PHYSICAL);
+	}
+	local_irq_restore(flags);
+}
+
+#endif /* __ASM_IPI_H */
diff -urpN linux-2.6.23-sabayon/include/asm/irqflags.h testtry/include/asm/irqflags.h
--- linux-2.6.23-sabayon/include/asm/irqflags.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/irqflags.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,142 @@
+/*
+ * include/asm-x86_64/irqflags.h
+ *
+ * IRQ flags handling
+ *
+ * This file gets included from lowlevel asm headers too, to provide
+ * wrapped versions of the local_irq_*() APIs, based on the
+ * raw_local_irq_*() functions from the lowlevel headers.
+ */
+#ifndef _ASM_IRQFLAGS_H
+#define _ASM_IRQFLAGS_H
+#include <asm/processor-flags.h>
+
+#ifndef __ASSEMBLY__
+/*
+ * Interrupt control:
+ */
+
+static inline unsigned long __raw_local_save_flags(void)
+{
+	unsigned long flags;
+
+	__asm__ __volatile__(
+		"# __raw_save_flags\n\t"
+		"pushfq ; popq %q0"
+		: "=g" (flags)
+		: /* no input */
+		: "memory"
+	);
+
+	return flags;
+}
+
+#define raw_local_save_flags(flags) \
+		do { (flags) = __raw_local_save_flags(); } while (0)
+
+static inline void raw_local_irq_restore(unsigned long flags)
+{
+	__asm__ __volatile__(
+		"pushq %0 ; popfq"
+		: /* no output */
+		:"g" (flags)
+		:"memory", "cc"
+	);
+}
+
+#ifdef CONFIG_X86_VSMP
+
+/*
+ * Interrupt control for the VSMP architecture:
+ */
+
+static inline void raw_local_irq_disable(void)
+{
+	unsigned long flags = __raw_local_save_flags();
+
+	raw_local_irq_restore((flags & ~X86_EFLAGS_IF) | X86_EFLAGS_AC);
+}
+
+static inline void raw_local_irq_enable(void)
+{
+	unsigned long flags = __raw_local_save_flags();
+
+	raw_local_irq_restore((flags | X86_EFLAGS_IF) & (~X86_EFLAGS_AC));
+}
+
+static inline int raw_irqs_disabled_flags(unsigned long flags)
+{
+	return !(flags & X86_EFLAGS_IF) || (flags & X86_EFLAGS_AC);
+}
+
+#else /* CONFIG_X86_VSMP */
+
+static inline void raw_local_irq_disable(void)
+{
+	__asm__ __volatile__("cli" : : : "memory");
+}
+
+static inline void raw_local_irq_enable(void)
+{
+	__asm__ __volatile__("sti" : : : "memory");
+}
+
+static inline int raw_irqs_disabled_flags(unsigned long flags)
+{
+	return !(flags & X86_EFLAGS_IF);
+}
+
+#endif
+
+/*
+ * For spinlocks, etc.:
+ */
+
+static inline unsigned long __raw_local_irq_save(void)
+{
+	unsigned long flags = __raw_local_save_flags();
+
+	raw_local_irq_disable();
+
+	return flags;
+}
+
+#define raw_local_irq_save(flags) \
+		do { (flags) = __raw_local_irq_save(); } while (0)
+
+static inline int raw_irqs_disabled(void)
+{
+	unsigned long flags = __raw_local_save_flags();
+
+	return raw_irqs_disabled_flags(flags);
+}
+
+/*
+ * Used in the idle loop; sti takes one instruction cycle
+ * to complete:
+ */
+static inline void raw_safe_halt(void)
+{
+	__asm__ __volatile__("sti; hlt" : : : "memory");
+}
+
+/*
+ * Used when interrupts are already enabled or to
+ * shutdown the processor:
+ */
+static inline void halt(void)
+{
+	__asm__ __volatile__("hlt": : :"memory");
+}
+
+#else /* __ASSEMBLY__: */
+# ifdef CONFIG_TRACE_IRQFLAGS
+#  define TRACE_IRQS_ON		call trace_hardirqs_on_thunk
+#  define TRACE_IRQS_OFF	call trace_hardirqs_off_thunk
+# else
+#  define TRACE_IRQS_ON
+#  define TRACE_IRQS_OFF
+# endif
+#endif
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/irq.h testtry/include/asm/irq.h
--- linux-2.6.23-sabayon/include/asm/irq.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/irq.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,51 @@
+#ifndef _ASM_IRQ_H
+#define _ASM_IRQ_H
+
+/*
+ *	linux/include/asm/irq.h
+ *
+ *	(C) 1992, 1993 Linus Torvalds, (C) 1997 Ingo Molnar
+ *
+ *	IRQ/IPI changes taken from work by Thomas Radke
+ *	<tomsoft@informatik.tu-chemnitz.de>
+ */
+
+#define TIMER_IRQ 0
+
+/*
+ * 16 8259A IRQ's, 208 potential APIC interrupt sources.
+ * Right now the APIC is mostly only used for SMP.
+ * 256 vectors is an architectural limit. (we can have
+ * more than 256 devices theoretically, but they will
+ * have to use shared interrupts)
+ * Since vectors 0x00-0x1f are used/reserved for the CPU,
+ * the usable vector space is 0x20-0xff (224 vectors)
+ */
+
+/*
+ * The maximum number of vectors supported by x86_64 processors
+ * is limited to 256. For processors other than x86_64, NR_VECTORS
+ * should be changed accordingly.
+ */
+#define NR_VECTORS 256
+
+#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in hw_irq.h */
+
+#define NR_IRQS (NR_VECTORS + (32 *NR_CPUS))
+#define NR_IRQ_VECTORS NR_IRQS
+
+static __inline__ int irq_canonicalize(int irq)
+{
+	return ((irq == 2) ? 9 : irq);
+}
+
+#define ARCH_HAS_NMI_WATCHDOG		/* See include/linux/nmi.h */
+
+#ifdef CONFIG_HOTPLUG_CPU
+#include <linux/cpumask.h>
+extern void fixup_irqs(cpumask_t map);
+#endif
+
+#define __ARCH_HAS_DO_SOFTIRQ 1
+
+#endif /* _ASM_IRQ_H */
diff -urpN linux-2.6.23-sabayon/include/asm/irq_regs.h testtry/include/asm/irq_regs.h
--- linux-2.6.23-sabayon/include/asm/irq_regs.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/irq_regs.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-generic/irq_regs.h>
diff -urpN linux-2.6.23-sabayon/include/asm/ist.h testtry/include/asm/ist.h
--- linux-2.6.23-sabayon/include/asm/ist.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ist.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/ist.h>
diff -urpN linux-2.6.23-sabayon/include/asm/k8.h testtry/include/asm/k8.h
--- linux-2.6.23-sabayon/include/asm/k8.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/k8.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,14 @@
+#ifndef _ASM_K8_H
+#define _ASM_K8_H 1
+
+#include <linux/pci.h>
+
+extern struct pci_device_id k8_nb_ids[];
+
+extern int early_is_k8_nb(u32 value);
+extern struct pci_dev **k8_northbridges;
+extern int num_k8_northbridges;
+extern int cache_k8_northbridges(void);
+extern void k8_flush_garts(void);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/Kbuild testtry/include/asm/Kbuild
--- linux-2.6.23-sabayon/include/asm/Kbuild	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/Kbuild	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,21 @@
+include include/asm-generic/Kbuild.asm
+
+ALTARCH := i386
+ARCHDEF := defined __x86_64__
+ALTARCHDEF := defined __i386__
+
+header-y += boot.h
+header-y += bootsetup.h
+header-y += debugreg.h
+header-y += ldt.h
+header-y += msr-index.h
+header-y += prctl.h
+header-y += ptrace-abi.h
+header-y += sigcontext32.h
+header-y += ucontext.h
+header-y += vsyscall32.h
+
+unifdef-y += mce.h
+unifdef-y += msr.h
+unifdef-y += mtrr.h
+unifdef-y += vsyscall.h
diff -urpN linux-2.6.23-sabayon/include/asm/kdebug.h testtry/include/asm/kdebug.h
--- linux-2.6.23-sabayon/include/asm/kdebug.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/kdebug.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,36 @@
+#ifndef _X86_64_KDEBUG_H
+#define _X86_64_KDEBUG_H 1
+
+#include <linux/notifier.h>
+
+struct pt_regs;
+
+extern int register_page_fault_notifier(struct notifier_block *);
+extern int unregister_page_fault_notifier(struct notifier_block *);
+
+/* Grossly misnamed. */
+enum die_val {
+	DIE_OOPS = 1,
+	DIE_INT3,
+	DIE_DEBUG,
+	DIE_PANIC,
+	DIE_NMI,
+	DIE_DIE,
+	DIE_NMIWATCHDOG,
+	DIE_KERNELDEBUG,
+	DIE_TRAP,
+	DIE_GPF,
+	DIE_CALL,
+	DIE_NMI_IPI,
+	DIE_PAGE_FAULT,
+};
+
+extern void printk_address(unsigned long address);
+extern void die(const char *,struct pt_regs *,long);
+extern void __die(const char *,struct pt_regs *,long);
+extern void show_registers(struct pt_regs *regs);
+extern void dump_pagetable(unsigned long);
+extern unsigned long oops_begin(void);
+extern void oops_end(unsigned long);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/kexec.h testtry/include/asm/kexec.h
--- linux-2.6.23-sabayon/include/asm/kexec.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/kexec.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,94 @@
+#ifndef _X86_64_KEXEC_H
+#define _X86_64_KEXEC_H
+
+#define PA_CONTROL_PAGE  0
+#define VA_CONTROL_PAGE  1
+#define PA_PGD           2
+#define VA_PGD           3
+#define PA_PUD_0         4
+#define VA_PUD_0         5
+#define PA_PMD_0         6
+#define VA_PMD_0         7
+#define PA_PTE_0         8
+#define VA_PTE_0         9
+#define PA_PUD_1         10
+#define VA_PUD_1         11
+#define PA_PMD_1         12
+#define VA_PMD_1         13
+#define PA_PTE_1         14
+#define VA_PTE_1         15
+#define PA_TABLE_PAGE    16
+#define PAGES_NR         17
+
+#ifndef __ASSEMBLY__
+
+#include <linux/string.h>
+
+#include <asm/page.h>
+#include <asm/ptrace.h>
+
+/*
+ * KEXEC_SOURCE_MEMORY_LIMIT maximum page get_free_page can return.
+ * I.e. Maximum page that is mapped directly into kernel memory,
+ * and kmap is not required.
+ *
+ * So far x86_64 is limited to 40 physical address bits.
+ */
+
+/* Maximum physical address we can use pages from */
+#define KEXEC_SOURCE_MEMORY_LIMIT      (0xFFFFFFFFFFUL)
+/* Maximum address we can reach in physical address mode */
+#define KEXEC_DESTINATION_MEMORY_LIMIT (0xFFFFFFFFFFUL)
+/* Maximum address we can use for the control pages */
+#define KEXEC_CONTROL_MEMORY_LIMIT     (0xFFFFFFFFFFUL)
+
+/* Allocate one page for the pdp and the second for the code */
+#define KEXEC_CONTROL_CODE_SIZE  (4096UL + 4096UL)
+
+/* The native architecture */
+#define KEXEC_ARCH KEXEC_ARCH_X86_64
+
+/*
+ * Saving the registers of the cpu on which panic occured in
+ * crash_kexec to save a valid sp. The registers of other cpus
+ * will be saved in machine_crash_shutdown while shooting down them.
+ */
+
+static inline void crash_setup_regs(struct pt_regs *newregs,
+						struct pt_regs *oldregs)
+{
+	if (oldregs)
+		memcpy(newregs, oldregs, sizeof(*newregs));
+	else {
+		__asm__ __volatile__("movq %%rbx,%0" : "=m"(newregs->rbx));
+		__asm__ __volatile__("movq %%rcx,%0" : "=m"(newregs->rcx));
+		__asm__ __volatile__("movq %%rdx,%0" : "=m"(newregs->rdx));
+		__asm__ __volatile__("movq %%rsi,%0" : "=m"(newregs->rsi));
+		__asm__ __volatile__("movq %%rdi,%0" : "=m"(newregs->rdi));
+		__asm__ __volatile__("movq %%rbp,%0" : "=m"(newregs->rbp));
+		__asm__ __volatile__("movq %%rax,%0" : "=m"(newregs->rax));
+		__asm__ __volatile__("movq %%rsp,%0" : "=m"(newregs->rsp));
+		__asm__ __volatile__("movq %%r8,%0" : "=m"(newregs->r8));
+		__asm__ __volatile__("movq %%r9,%0" : "=m"(newregs->r9));
+		__asm__ __volatile__("movq %%r10,%0" : "=m"(newregs->r10));
+		__asm__ __volatile__("movq %%r11,%0" : "=m"(newregs->r11));
+		__asm__ __volatile__("movq %%r12,%0" : "=m"(newregs->r12));
+		__asm__ __volatile__("movq %%r13,%0" : "=m"(newregs->r13));
+		__asm__ __volatile__("movq %%r14,%0" : "=m"(newregs->r14));
+		__asm__ __volatile__("movq %%r15,%0" : "=m"(newregs->r15));
+		__asm__ __volatile__("movl %%ss, %%eax;" :"=a"(newregs->ss));
+		__asm__ __volatile__("movl %%cs, %%eax;" :"=a"(newregs->cs));
+		__asm__ __volatile__("pushfq; popq %0" :"=m"(newregs->eflags));
+
+		newregs->rip = (unsigned long)current_text_addr();
+	}
+}
+
+NORET_TYPE void
+relocate_kernel(unsigned long indirection_page,
+		unsigned long page_list,
+		unsigned long start_address) ATTRIB_NORET;
+
+#endif /* __ASSEMBLY__ */
+
+#endif /* _X86_64_KEXEC_H */
diff -urpN linux-2.6.23-sabayon/include/asm/kmap_types.h testtry/include/asm/kmap_types.h
--- linux-2.6.23-sabayon/include/asm/kmap_types.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/kmap_types.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,19 @@
+#ifndef _ASM_KMAP_TYPES_H
+#define _ASM_KMAP_TYPES_H
+
+enum km_type {
+	KM_BOUNCE_READ,
+	KM_SKB_SUNRPC_DATA,
+	KM_SKB_DATA_SOFTIRQ,
+	KM_USER0,
+	KM_USER1,
+	KM_BIO_SRC_IRQ,
+	KM_BIO_DST_IRQ,
+	KM_IRQ0,
+	KM_IRQ1,
+	KM_SOFTIRQ0,
+	KM_SOFTIRQ1,
+	KM_TYPE_NR
+};
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/kprobes.h testtry/include/asm/kprobes.h
--- linux-2.6.23-sabayon/include/asm/kprobes.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/kprobes.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,90 @@
+#ifndef _ASM_KPROBES_H
+#define _ASM_KPROBES_H
+/*
+ *  Kernel Probes (KProbes)
+ *  include/asm-x86_64/kprobes.h
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ *
+ * Copyright (C) IBM Corporation, 2002, 2004
+ *
+ * 2004-Oct	Prasanna S Panchamukhi <prasanna@in.ibm.com> and Jim Keniston
+ *		kenistoj@us.ibm.com adopted from i386.
+ */
+#include <linux/types.h>
+#include <linux/ptrace.h>
+#include <linux/percpu.h>
+
+#define  __ARCH_WANT_KPROBES_INSN_SLOT
+
+struct pt_regs;
+struct kprobe;
+
+typedef u8 kprobe_opcode_t;
+#define BREAKPOINT_INSTRUCTION	0xcc
+#define MAX_INSN_SIZE 15
+#define MAX_STACK_SIZE 64
+#define MIN_STACK_SIZE(ADDR) (((MAX_STACK_SIZE) < \
+	(((unsigned long)current_thread_info()) + THREAD_SIZE - (ADDR))) \
+	? (MAX_STACK_SIZE) \
+	: (((unsigned long)current_thread_info()) + THREAD_SIZE - (ADDR)))
+
+#define ARCH_SUPPORTS_KRETPROBES
+#define  ARCH_INACTIVE_KPROBE_COUNT 1
+
+void kretprobe_trampoline(void);
+extern void arch_remove_kprobe(struct kprobe *p);
+#define flush_insn_slot(p)	do { } while (0)
+
+/* Architecture specific copy of original instruction*/
+struct arch_specific_insn {
+	/* copy of the original instruction */
+	kprobe_opcode_t *insn;
+};
+
+struct prev_kprobe {
+	struct kprobe *kp;
+	unsigned long status;
+	unsigned long old_rflags;
+	unsigned long saved_rflags;
+};
+
+/* per-cpu kprobe control block */
+struct kprobe_ctlblk {
+	unsigned long kprobe_status;
+	unsigned long kprobe_old_rflags;
+	unsigned long kprobe_saved_rflags;
+	long *jprobe_saved_rsp;
+	struct pt_regs jprobe_saved_regs;
+	kprobe_opcode_t jprobes_stack[MAX_STACK_SIZE];
+	struct prev_kprobe prev_kprobe;
+};
+
+/* trap3/1 are intr gates for kprobes.  So, restore the status of IF,
+ * if necessary, before executing the original int3/1 (trap) handler.
+ */
+static inline void restore_interrupts(struct pt_regs *regs)
+{
+	if (regs->eflags & IF_MASK)
+		local_irq_enable();
+}
+
+extern int post_kprobe_handler(struct pt_regs *regs);
+extern int kprobe_fault_handler(struct pt_regs *regs, int trapnr);
+extern int kprobe_handler(struct pt_regs *regs);
+
+extern int kprobe_exceptions_notify(struct notifier_block *self,
+				    unsigned long val, void *data);
+#endif				/* _ASM_KPROBES_H */
diff -urpN linux-2.6.23-sabayon/include/asm/ldt.h testtry/include/asm/ldt.h
--- linux-2.6.23-sabayon/include/asm/ldt.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ldt.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,36 @@
+/*
+ * ldt.h
+ *
+ * Definitions of structures used with the modify_ldt system call.
+ */
+#ifndef _LINUX_LDT_H
+#define _LINUX_LDT_H
+
+/* Maximum number of LDT entries supported. */
+#define LDT_ENTRIES	8192
+/* The size of each LDT entry. */
+#define LDT_ENTRY_SIZE	8
+
+#ifndef __ASSEMBLY__
+/* Note on 64bit base and limit is ignored and you cannot set
+   DS/ES/CS not to the default values if you still want to do syscalls. This
+   call is more for 32bit mode therefore. */
+struct user_desc {
+	unsigned int  entry_number;
+	unsigned int  base_addr;
+	unsigned int  limit;
+	unsigned int  seg_32bit:1;
+	unsigned int  contents:2;
+	unsigned int  read_exec_only:1;
+	unsigned int  limit_in_pages:1;
+	unsigned int  seg_not_present:1;
+	unsigned int  useable:1;
+	unsigned int  lm:1;
+};
+
+#define MODIFY_LDT_CONTENTS_DATA	0
+#define MODIFY_LDT_CONTENTS_STACK	1
+#define MODIFY_LDT_CONTENTS_CODE	2
+
+#endif /* !__ASSEMBLY__ */
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/linkage.h testtry/include/asm/linkage.h
--- linux-2.6.23-sabayon/include/asm/linkage.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/linkage.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef __ASM_LINKAGE_H
+#define __ASM_LINKAGE_H
+
+#define __ALIGN .p2align 4,,15
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/local.h testtry/include/asm/local.h
--- linux-2.6.23-sabayon/include/asm/local.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/local.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,222 @@
+#ifndef _ARCH_X8664_LOCAL_H
+#define _ARCH_X8664_LOCAL_H
+
+#include <linux/percpu.h>
+#include <asm/atomic.h>
+
+typedef struct
+{
+	atomic_long_t a;
+} local_t;
+
+#define LOCAL_INIT(i)	{ ATOMIC_LONG_INIT(i) }
+
+#define local_read(l)	atomic_long_read(&(l)->a)
+#define local_set(l,i)	atomic_long_set(&(l)->a, (i))
+
+static inline void local_inc(local_t *l)
+{
+	__asm__ __volatile__(
+		"incq %0"
+		:"=m" (l->a.counter)
+		:"m" (l->a.counter));
+}
+
+static inline void local_dec(local_t *l)
+{
+	__asm__ __volatile__(
+		"decq %0"
+		:"=m" (l->a.counter)
+		:"m" (l->a.counter));
+}
+
+static inline void local_add(long i, local_t *l)
+{
+	__asm__ __volatile__(
+		"addq %1,%0"
+		:"=m" (l->a.counter)
+		:"ir" (i), "m" (l->a.counter));
+}
+
+static inline void local_sub(long i, local_t *l)
+{
+	__asm__ __volatile__(
+		"subq %1,%0"
+		:"=m" (l->a.counter)
+		:"ir" (i), "m" (l->a.counter));
+}
+
+/**
+ * local_sub_and_test - subtract value from variable and test result
+ * @i: integer value to subtract
+ * @l: pointer to type local_t
+ *
+ * Atomically subtracts @i from @l and returns
+ * true if the result is zero, or false for all
+ * other cases.
+ */
+static __inline__ int local_sub_and_test(long i, local_t *l)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		"subq %2,%0; sete %1"
+		:"=m" (l->a.counter), "=qm" (c)
+		:"ir" (i), "m" (l->a.counter) : "memory");
+	return c;
+}
+
+/**
+ * local_dec_and_test - decrement and test
+ * @l: pointer to type local_t
+ *
+ * Atomically decrements @l by 1 and
+ * returns true if the result is 0, or false for all other
+ * cases.
+ */
+static __inline__ int local_dec_and_test(local_t *l)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		"decq %0; sete %1"
+		:"=m" (l->a.counter), "=qm" (c)
+		:"m" (l->a.counter) : "memory");
+	return c != 0;
+}
+
+/**
+ * local_inc_and_test - increment and test
+ * @l: pointer to type local_t
+ *
+ * Atomically increments @l by 1
+ * and returns true if the result is zero, or false for all
+ * other cases.
+ */
+static __inline__ int local_inc_and_test(local_t *l)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		"incq %0; sete %1"
+		:"=m" (l->a.counter), "=qm" (c)
+		:"m" (l->a.counter) : "memory");
+	return c != 0;
+}
+
+/**
+ * local_add_negative - add and test if negative
+ * @i: integer value to add
+ * @l: pointer to type local_t
+ *
+ * Atomically adds @i to @l and returns true
+ * if the result is negative, or false when
+ * result is greater than or equal to zero.
+ */
+static __inline__ int local_add_negative(long i, local_t *l)
+{
+	unsigned char c;
+
+	__asm__ __volatile__(
+		"addq %2,%0; sets %1"
+		:"=m" (l->a.counter), "=qm" (c)
+		:"ir" (i), "m" (l->a.counter) : "memory");
+	return c;
+}
+
+/**
+ * local_add_return - add and return
+ * @i: integer value to add
+ * @l: pointer to type local_t
+ *
+ * Atomically adds @i to @l and returns @i + @l
+ */
+static __inline__ long local_add_return(long i, local_t *l)
+{
+	long __i = i;
+	__asm__ __volatile__(
+		"xaddq %0, %1;"
+		:"+r" (i), "+m" (l->a.counter)
+		: : "memory");
+	return i + __i;
+}
+
+static __inline__ long local_sub_return(long i, local_t *l)
+{
+	return local_add_return(-i,l);
+}
+
+#define local_inc_return(l)  (local_add_return(1,l))
+#define local_dec_return(l)  (local_sub_return(1,l))
+
+#define local_cmpxchg(l, o, n) \
+	(cmpxchg_local(&((l)->a.counter), (o), (n)))
+/* Always has a lock prefix */
+#define local_xchg(l, n) (xchg(&((l)->a.counter), (n)))
+
+/**
+ * atomic_up_add_unless - add unless the number is a given value
+ * @l: pointer of type local_t
+ * @a: the amount to add to l...
+ * @u: ...unless l is equal to u.
+ *
+ * Atomically adds @a to @l, so long as it was not @u.
+ * Returns non-zero if @l was not @u, and zero otherwise.
+ */
+#define local_add_unless(l, a, u)				\
+({								\
+	long c, old;						\
+	c = local_read(l);					\
+	for (;;) {						\
+		if (unlikely(c == (u)))				\
+			break;					\
+		old = local_cmpxchg((l), c, c + (a));	\
+		if (likely(old == c))				\
+			break;					\
+		c = old;					\
+	}							\
+	c != (u);						\
+})
+#define local_inc_not_zero(l) local_add_unless((l), 1, 0)
+
+/* On x86-64 these are better than the atomic variants on SMP kernels
+   because they dont use a lock prefix. */
+#define __local_inc(l)		local_inc(l)
+#define __local_dec(l)		local_dec(l)
+#define __local_add(i,l)	local_add((i),(l))
+#define __local_sub(i,l)	local_sub((i),(l))
+
+/* Use these for per-cpu local_t variables: on some archs they are
+ * much more efficient than these naive implementations.  Note they take
+ * a variable, not an address.
+ *
+ * This could be done better if we moved the per cpu data directly
+ * after GS.
+ */
+
+/* Need to disable preemption for the cpu local counters otherwise we could
+   still access a variable of a previous CPU in a non atomic way. */
+#define cpu_local_wrap_v(l)	 	\
+	({ local_t res__;		\
+	   preempt_disable(); 		\
+	   res__ = (l);			\
+	   preempt_enable();		\
+	   res__; })
+#define cpu_local_wrap(l)		\
+	({ preempt_disable();		\
+	   l;				\
+	   preempt_enable(); })		\
+
+#define cpu_local_read(l)    cpu_local_wrap_v(local_read(&__get_cpu_var(l)))
+#define cpu_local_set(l, i)  cpu_local_wrap(local_set(&__get_cpu_var(l), (i)))
+#define cpu_local_inc(l)     cpu_local_wrap(local_inc(&__get_cpu_var(l)))
+#define cpu_local_dec(l)     cpu_local_wrap(local_dec(&__get_cpu_var(l)))
+#define cpu_local_add(i, l)  cpu_local_wrap(local_add((i), &__get_cpu_var(l)))
+#define cpu_local_sub(i, l)  cpu_local_wrap(local_sub((i), &__get_cpu_var(l)))
+
+#define __cpu_local_inc(l)	cpu_local_inc(l)
+#define __cpu_local_dec(l)	cpu_local_dec(l)
+#define __cpu_local_add(i, l)	cpu_local_add((i), (l))
+#define __cpu_local_sub(i, l)	cpu_local_sub((i), (l))
+
+#endif /* _ARCH_X8664_LOCAL_H */
diff -urpN linux-2.6.23-sabayon/include/asm/mach_apic.h testtry/include/asm/mach_apic.h
--- linux-2.6.23-sabayon/include/asm/mach_apic.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mach_apic.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,29 @@
+#ifndef __ASM_MACH_APIC_H
+#define __ASM_MACH_APIC_H
+
+/*
+ * Copyright 2004 James Cleverdon, IBM.
+ * Subject to the GNU Public License, v.2
+ *
+ * Generic APIC sub-arch defines.
+ *
+ * Hacked for x86-64 by James Cleverdon from i386 architecture code by
+ * Martin Bligh, Andi Kleen, James Bottomley, John Stultz, and
+ * James Cleverdon.
+ */
+
+#include <asm/genapic.h>
+
+#define INT_DELIVERY_MODE (genapic->int_delivery_mode)
+#define INT_DEST_MODE (genapic->int_dest_mode)
+#define TARGET_CPUS	  (genapic->target_cpus())
+#define vector_allocation_domain	(genapic->vector_allocation_domain)
+#define apic_id_registered (genapic->apic_id_registered)
+#define init_apic_ldr (genapic->init_apic_ldr)
+#define send_IPI_mask (genapic->send_IPI_mask)
+#define send_IPI_allbutself (genapic->send_IPI_allbutself)
+#define send_IPI_all (genapic->send_IPI_all)
+#define cpu_mask_to_apicid (genapic->cpu_mask_to_apicid)
+#define phys_pkg_id	(genapic->phys_pkg_id)
+
+#endif /* __ASM_MACH_APIC_H */
diff -urpN linux-2.6.23-sabayon/include/asm/mc146818rtc.h testtry/include/asm/mc146818rtc.h
--- linux-2.6.23-sabayon/include/asm/mc146818rtc.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mc146818rtc.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,29 @@
+/*
+ * Machine dependent access functions for RTC registers.
+ */
+#ifndef _ASM_MC146818RTC_H
+#define _ASM_MC146818RTC_H
+
+#include <asm/io.h>
+
+#ifndef RTC_PORT
+#define RTC_PORT(x)	(0x70 + (x))
+#define RTC_ALWAYS_BCD	1	/* RTC operates in binary mode */
+#endif
+
+/*
+ * The yet supported machines all access the RTC index register via
+ * an ISA port access but the way to access the date register differs ...
+ */
+#define CMOS_READ(addr) ({ \
+outb_p((addr),RTC_PORT(0)); \
+inb_p(RTC_PORT(1)); \
+})
+#define CMOS_WRITE(val, addr) ({ \
+outb_p((addr),RTC_PORT(0)); \
+outb_p((val),RTC_PORT(1)); \
+})
+
+#define RTC_IRQ 8
+
+#endif /* _ASM_MC146818RTC_H */
diff -urpN linux-2.6.23-sabayon/include/asm/mce.h testtry/include/asm/mce.h
--- linux-2.6.23-sabayon/include/asm/mce.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mce.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,115 @@
+#ifndef _ASM_MCE_H
+#define _ASM_MCE_H 1
+
+#include <asm/ioctls.h>
+#include <asm/types.h>
+
+/* 
+ * Machine Check support for x86
+ */
+
+#define MCG_CTL_P        (1UL<<8)   /* MCG_CAP register available */
+
+#define MCG_STATUS_RIPV  (1UL<<0)   /* restart ip valid */
+#define MCG_STATUS_EIPV  (1UL<<1)   /* eip points to correct instruction */
+#define MCG_STATUS_MCIP  (1UL<<2)   /* machine check in progress */
+
+#define MCI_STATUS_VAL   (1UL<<63)  /* valid error */
+#define MCI_STATUS_OVER  (1UL<<62)  /* previous errors lost */
+#define MCI_STATUS_UC    (1UL<<61)  /* uncorrected error */
+#define MCI_STATUS_EN    (1UL<<60)  /* error enabled */
+#define MCI_STATUS_MISCV (1UL<<59)  /* misc error reg. valid */
+#define MCI_STATUS_ADDRV (1UL<<58)  /* addr reg. valid */
+#define MCI_STATUS_PCC   (1UL<<57)  /* processor context corrupt */
+
+/* Fields are zero when not available */
+struct mce {
+	__u64 status;
+	__u64 misc;
+	__u64 addr;
+	__u64 mcgstatus;
+	__u64 rip;	
+	__u64 tsc;	/* cpu time stamp counter */
+	__u64 res1;	/* for future extension */	
+	__u64 res2;	/* dito. */
+	__u8  cs;		/* code segment */
+	__u8  bank;	/* machine check bank */
+	__u8  cpu;	/* cpu that raised the error */
+	__u8  finished;   /* entry is valid */
+	__u32 pad;   
+};
+
+/* 
+ * This structure contains all data related to the MCE log.
+ * Also carries a signature to make it easier to find from external debugging tools.
+ * Each entry is only valid when its finished flag is set.
+ */
+
+#define MCE_LOG_LEN 32
+
+struct mce_log { 
+	char signature[12]; /* "MACHINECHECK" */ 
+	unsigned len;  	    /* = MCE_LOG_LEN */ 
+	unsigned next;
+	unsigned flags;
+	unsigned pad0; 
+	struct mce entry[MCE_LOG_LEN];
+};
+
+#define MCE_OVERFLOW 0		/* bit 0 in flags means overflow */
+
+#define MCE_LOG_SIGNATURE 	"MACHINECHECK"
+
+#define MCE_GET_RECORD_LEN   _IOR('M', 1, int)
+#define MCE_GET_LOG_LEN      _IOR('M', 2, int)
+#define MCE_GETCLEAR_FLAGS   _IOR('M', 3, int)
+
+/* Software defined banks */
+#define MCE_EXTENDED_BANK	128
+#define MCE_THERMAL_BANK	MCE_EXTENDED_BANK + 0
+
+#define K8_MCE_THRESHOLD_BASE      (MCE_EXTENDED_BANK + 1)      /* MCE_AMD */
+#define K8_MCE_THRESHOLD_BANK_0    (MCE_THRESHOLD_BASE + 0 * 9)
+#define K8_MCE_THRESHOLD_BANK_1    (MCE_THRESHOLD_BASE + 1 * 9)
+#define K8_MCE_THRESHOLD_BANK_2    (MCE_THRESHOLD_BASE + 2 * 9)
+#define K8_MCE_THRESHOLD_BANK_3    (MCE_THRESHOLD_BASE + 3 * 9)
+#define K8_MCE_THRESHOLD_BANK_4    (MCE_THRESHOLD_BASE + 4 * 9)
+#define K8_MCE_THRESHOLD_BANK_5    (MCE_THRESHOLD_BASE + 5 * 9)
+#define K8_MCE_THRESHOLD_DRAM_ECC  (MCE_THRESHOLD_BANK_4 + 0)
+
+#ifdef __KERNEL__
+#include <asm/atomic.h>
+
+void mce_log(struct mce *m);
+DECLARE_PER_CPU(struct sys_device, device_mce);
+
+#ifdef CONFIG_X86_MCE_INTEL
+void mce_intel_feature_init(struct cpuinfo_x86 *c);
+#else
+static inline void mce_intel_feature_init(struct cpuinfo_x86 *c)
+{
+}
+#endif
+
+#ifdef CONFIG_X86_MCE_AMD
+void mce_amd_feature_init(struct cpuinfo_x86 *c);
+#else
+static inline void mce_amd_feature_init(struct cpuinfo_x86 *c)
+{
+}
+#endif
+
+void mce_log_therm_throt_event(unsigned int cpu, __u64 status);
+
+extern atomic_t mce_entry;
+
+extern void do_machine_check(struct pt_regs *, long);
+
+extern int mce_notify_user(void);
+
+extern void stop_mce(void);
+extern void restart_mce(void);
+
+#endif
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/mman.h testtry/include/asm/mman.h
--- linux-2.6.23-sabayon/include/asm/mman.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mman.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,19 @@
+#ifndef __X8664_MMAN_H__
+#define __X8664_MMAN_H__
+
+#include <asm-generic/mman.h>
+
+#define MAP_32BIT	0x40		/* only give out 32bit addresses */
+
+#define MAP_GROWSDOWN	0x0100		/* stack-like segment */
+#define MAP_DENYWRITE	0x0800		/* ETXTBSY */
+#define MAP_EXECUTABLE	0x1000		/* mark it as an executable */
+#define MAP_LOCKED	0x2000		/* pages are locked */
+#define MAP_NORESERVE	0x4000		/* don't check for reservations */
+#define MAP_POPULATE	0x8000		/* populate (prefault) pagetables */
+#define MAP_NONBLOCK	0x10000		/* do not block on IO */
+
+#define MCL_CURRENT	1		/* lock all current mappings */
+#define MCL_FUTURE	2		/* lock all future mappings */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/mmsegment.h testtry/include/asm/mmsegment.h
--- linux-2.6.23-sabayon/include/asm/mmsegment.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mmsegment.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,8 @@
+#ifndef _ASM_MMSEGMENT_H
+#define _ASM_MMSEGMENT_H 1
+
+typedef struct {
+	unsigned long seg;
+} mm_segment_t;
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/mmu_context.h testtry/include/asm/mmu_context.h
--- linux-2.6.23-sabayon/include/asm/mmu_context.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mmu_context.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,74 @@
+#ifndef __X86_64_MMU_CONTEXT_H
+#define __X86_64_MMU_CONTEXT_H
+
+#include <asm/desc.h>
+#include <asm/atomic.h>
+#include <asm/pgalloc.h>
+#include <asm/pda.h>
+#include <asm/pgtable.h>
+#include <asm/tlbflush.h>
+#include <asm-generic/mm_hooks.h>
+
+/*
+ * possibly do the LDT unload here?
+ */
+int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
+void destroy_context(struct mm_struct *mm);
+
+static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
+{
+#ifdef CONFIG_SMP
+	if (read_pda(mmu_state) == TLBSTATE_OK) 
+		write_pda(mmu_state, TLBSTATE_LAZY);
+#endif
+}
+
+static inline void load_cr3(pgd_t *pgd)
+{
+	asm volatile("movq %0,%%cr3" :: "r" (__pa(pgd)) : "memory");
+}
+
+static inline void switch_mm(struct mm_struct *prev, struct mm_struct *next, 
+			     struct task_struct *tsk)
+{
+	unsigned cpu = smp_processor_id();
+	if (likely(prev != next)) {
+		/* stop flush ipis for the previous mm */
+		cpu_clear(cpu, prev->cpu_vm_mask);
+#ifdef CONFIG_SMP
+		write_pda(mmu_state, TLBSTATE_OK);
+		write_pda(active_mm, next);
+#endif
+		cpu_set(cpu, next->cpu_vm_mask);
+		load_cr3(next->pgd);
+
+		if (unlikely(next->context.ldt != prev->context.ldt)) 
+			load_LDT_nolock(&next->context, cpu);
+	}
+#ifdef CONFIG_SMP
+	else {
+		write_pda(mmu_state, TLBSTATE_OK);
+		if (read_pda(active_mm) != next)
+			out_of_line_bug();
+		if (!cpu_test_and_set(cpu, next->cpu_vm_mask)) {
+			/* We were in lazy tlb mode and leave_mm disabled 
+			 * tlb flush IPI delivery. We must reload CR3
+			 * to make sure to use no freed page tables.
+			 */
+			load_cr3(next->pgd);
+			load_LDT_nolock(&next->context, cpu);
+		}
+	}
+#endif
+}
+
+#define deactivate_mm(tsk,mm)	do { \
+	load_gs_index(0); \
+	asm volatile("movl %0,%%fs"::"r"(0));  \
+} while(0)
+
+#define activate_mm(prev, next) \
+	switch_mm((prev),(next),NULL)
+
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/mmu.h testtry/include/asm/mmu.h
--- linux-2.6.23-sabayon/include/asm/mmu.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mmu.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,21 @@
+#ifndef __x86_64_MMU_H
+#define __x86_64_MMU_H
+
+#include <linux/spinlock.h>
+#include <asm/semaphore.h>
+
+/*
+ * The x86_64 doesn't have a mmu context, but
+ * we put the segment information here.
+ *
+ * cpu_vm_mask is used to optimize ldt flushing.
+ */
+typedef struct { 
+	void *ldt;
+	rwlock_t ldtlock; 
+	int size;
+	struct semaphore sem; 
+	void *vdso;
+} mm_context_t;
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/mmzone.h testtry/include/asm/mmzone.h
--- linux-2.6.23-sabayon/include/asm/mmzone.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mmzone.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,56 @@
+/* K8 NUMA support */
+/* Copyright 2002,2003 by Andi Kleen, SuSE Labs */
+/* 2.5 Version loosely based on the NUMAQ Code by Pat Gaughen. */
+#ifndef _ASM_X86_64_MMZONE_H
+#define _ASM_X86_64_MMZONE_H 1
+
+
+#ifdef CONFIG_NUMA
+
+#define VIRTUAL_BUG_ON(x) 
+
+#include <asm/smp.h>
+
+/* Simple perfect hash to map physical addresses to node numbers */
+struct memnode {
+	int shift;
+	unsigned int mapsize;
+	u8 *map;
+	u8 embedded_map[64-16];
+} ____cacheline_aligned; /* total size = 64 bytes */
+extern struct memnode memnode;
+#define memnode_shift memnode.shift
+#define memnodemap memnode.map
+#define memnodemapsize memnode.mapsize
+
+extern struct pglist_data *node_data[];
+
+static inline __attribute__((pure)) int phys_to_nid(unsigned long addr) 
+{ 
+	unsigned nid; 
+	VIRTUAL_BUG_ON(!memnodemap);
+	VIRTUAL_BUG_ON((addr >> memnode_shift) >= memnodemapsize);
+	nid = memnodemap[addr >> memnode_shift]; 
+	VIRTUAL_BUG_ON(nid >= MAX_NUMNODES || !node_data[nid]); 
+	return nid; 
+} 
+
+#define NODE_DATA(nid)		(node_data[nid])
+
+#define node_start_pfn(nid)	(NODE_DATA(nid)->node_start_pfn)
+#define node_end_pfn(nid)       (NODE_DATA(nid)->node_start_pfn + \
+				 NODE_DATA(nid)->node_spanned_pages)
+
+#ifdef CONFIG_DISCONTIGMEM
+#define pfn_to_nid(pfn) phys_to_nid((unsigned long)(pfn) << PAGE_SHIFT)
+
+extern int pfn_valid(unsigned long pfn);
+#endif
+
+#ifdef CONFIG_NUMA_EMU
+#define FAKE_NODE_MIN_SIZE	(64*1024*1024)
+#define FAKE_NODE_MIN_HASH_MASK	(~(FAKE_NODE_MIN_SIZE - 1uL))
+#endif
+
+#endif
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/module.h testtry/include/asm/module.h
--- linux-2.6.23-sabayon/include/asm/module.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/module.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,10 @@
+#ifndef _ASM_X8664_MODULE_H
+#define _ASM_X8664_MODULE_H
+
+struct mod_arch_specific {}; 
+
+#define Elf_Shdr Elf64_Shdr
+#define Elf_Sym Elf64_Sym
+#define Elf_Ehdr Elf64_Ehdr
+
+#endif 
diff -urpN linux-2.6.23-sabayon/include/asm/mpspec.h testtry/include/asm/mpspec.h
--- linux-2.6.23-sabayon/include/asm/mpspec.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mpspec.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,233 @@
+#ifndef __ASM_MPSPEC_H
+#define __ASM_MPSPEC_H
+
+/*
+ * Structure definitions for SMP machines following the
+ * Intel Multiprocessing Specification 1.1 and 1.4.
+ */
+
+/*
+ * This tag identifies where the SMP configuration
+ * information is. 
+ */
+ 
+#define SMP_MAGIC_IDENT	(('_'<<24)|('P'<<16)|('M'<<8)|'_')
+
+/*
+ * A maximum of 255 APICs with the current APIC ID architecture.
+ */
+#define MAX_APICS 255
+
+struct intel_mp_floating
+{
+	char mpf_signature[4];		/* "_MP_" 			*/
+	unsigned int mpf_physptr;	/* Configuration table address	*/
+	unsigned char mpf_length;	/* Our length (paragraphs)	*/
+	unsigned char mpf_specification;/* Specification version	*/
+	unsigned char mpf_checksum;	/* Checksum (makes sum 0)	*/
+	unsigned char mpf_feature1;	/* Standard or configuration ? 	*/
+	unsigned char mpf_feature2;	/* Bit7 set for IMCR|PIC	*/
+	unsigned char mpf_feature3;	/* Unused (0)			*/
+	unsigned char mpf_feature4;	/* Unused (0)			*/
+	unsigned char mpf_feature5;	/* Unused (0)			*/
+};
+
+struct mp_config_table
+{
+	char mpc_signature[4];
+#define MPC_SIGNATURE "PCMP"
+	unsigned short mpc_length;	/* Size of table */
+	char  mpc_spec;			/* 0x01 */
+	char  mpc_checksum;
+	char  mpc_oem[8];
+	char  mpc_productid[12];
+	unsigned int mpc_oemptr;	/* 0 if not present */
+	unsigned short mpc_oemsize;	/* 0 if not present */
+	unsigned short mpc_oemcount;
+	unsigned int mpc_lapic;	/* APIC address */
+	unsigned int reserved;
+};
+
+/* Followed by entries */
+
+#define	MP_PROCESSOR	0
+#define	MP_BUS		1
+#define	MP_IOAPIC	2
+#define	MP_INTSRC	3
+#define	MP_LINTSRC	4
+
+struct mpc_config_processor
+{
+	unsigned char mpc_type;
+	unsigned char mpc_apicid;	/* Local APIC number */
+	unsigned char mpc_apicver;	/* Its versions */
+	unsigned char mpc_cpuflag;
+#define CPU_ENABLED		1	/* Processor is available */
+#define CPU_BOOTPROCESSOR	2	/* Processor is the BP */
+	unsigned int mpc_cpufeature;		
+#define CPU_STEPPING_MASK 0x0F
+#define CPU_MODEL_MASK	0xF0
+#define CPU_FAMILY_MASK	0xF00
+	unsigned int mpc_featureflag;	/* CPUID feature value */
+	unsigned int mpc_reserved[2];
+};
+
+struct mpc_config_bus
+{
+	unsigned char mpc_type;
+	unsigned char mpc_busid;
+	unsigned char mpc_bustype[6];
+};
+
+/* List of Bus Type string values, Intel MP Spec. */
+#define BUSTYPE_EISA	"EISA"
+#define BUSTYPE_ISA	"ISA"
+#define BUSTYPE_INTERN	"INTERN"	/* Internal BUS */
+#define BUSTYPE_MCA	"MCA"
+#define BUSTYPE_VL	"VL"		/* Local bus */
+#define BUSTYPE_PCI	"PCI"
+#define BUSTYPE_PCMCIA	"PCMCIA"
+#define BUSTYPE_CBUS	"CBUS"
+#define BUSTYPE_CBUSII	"CBUSII"
+#define BUSTYPE_FUTURE	"FUTURE"
+#define BUSTYPE_MBI	"MBI"
+#define BUSTYPE_MBII	"MBII"
+#define BUSTYPE_MPI	"MPI"
+#define BUSTYPE_MPSA	"MPSA"
+#define BUSTYPE_NUBUS	"NUBUS"
+#define BUSTYPE_TC	"TC"
+#define BUSTYPE_VME	"VME"
+#define BUSTYPE_XPRESS	"XPRESS"
+
+struct mpc_config_ioapic
+{
+	unsigned char mpc_type;
+	unsigned char mpc_apicid;
+	unsigned char mpc_apicver;
+	unsigned char mpc_flags;
+#define MPC_APIC_USABLE		0x01
+	unsigned int mpc_apicaddr;
+};
+
+struct mpc_config_intsrc
+{
+	unsigned char mpc_type;
+	unsigned char mpc_irqtype;
+	unsigned short mpc_irqflag;
+	unsigned char mpc_srcbus;
+	unsigned char mpc_srcbusirq;
+	unsigned char mpc_dstapic;
+	unsigned char mpc_dstirq;
+};
+
+enum mp_irq_source_types {
+	mp_INT = 0,
+	mp_NMI = 1,
+	mp_SMI = 2,
+	mp_ExtINT = 3
+};
+
+#define MP_IRQDIR_DEFAULT	0
+#define MP_IRQDIR_HIGH		1
+#define MP_IRQDIR_LOW		3
+
+
+struct mpc_config_lintsrc
+{
+	unsigned char mpc_type;
+	unsigned char mpc_irqtype;
+	unsigned short mpc_irqflag;
+	unsigned char mpc_srcbusid;
+	unsigned char mpc_srcbusirq;
+	unsigned char mpc_destapic;	
+#define MP_APIC_ALL	0xFF
+	unsigned char mpc_destapiclint;
+};
+
+/*
+ *	Default configurations
+ *
+ *	1	2 CPU ISA 82489DX
+ *	2	2 CPU EISA 82489DX neither IRQ 0 timer nor IRQ 13 DMA chaining
+ *	3	2 CPU EISA 82489DX
+ *	4	2 CPU MCA 82489DX
+ *	5	2 CPU ISA+PCI
+ *	6	2 CPU EISA+PCI
+ *	7	2 CPU MCA+PCI
+ */
+
+#define MAX_MP_BUSSES 256
+/* Each PCI slot may be a combo card with its own bus.  4 IRQ pins per slot. */
+#define MAX_IRQ_SOURCES (MAX_MP_BUSSES * 4)
+extern DECLARE_BITMAP(mp_bus_not_pci, MAX_MP_BUSSES);
+extern int mp_bus_id_to_pci_bus [MAX_MP_BUSSES];
+
+extern unsigned int boot_cpu_physical_apicid;
+extern int smp_found_config;
+extern void find_smp_config (void);
+extern void get_smp_config (void);
+extern int nr_ioapics;
+extern unsigned char apic_version [MAX_APICS];
+extern int mp_irq_entries;
+extern struct mpc_config_intsrc mp_irqs [MAX_IRQ_SOURCES];
+extern int mpc_default_type;
+extern unsigned long mp_lapic_addr;
+
+#ifdef CONFIG_ACPI
+extern void mp_register_lapic (u8 id, u8 enabled);
+extern void mp_register_lapic_address (u64 address);
+
+extern void mp_register_ioapic (u8 id, u32 address, u32 gsi_base);
+extern void mp_override_legacy_irq (u8 bus_irq, u8 polarity, u8 trigger, u32 gsi);
+extern void mp_config_acpi_legacy_irqs (void);
+extern int mp_register_gsi (u32 gsi, int triggering, int polarity);
+#endif
+
+extern int using_apic_timer;
+
+#define PHYSID_ARRAY_SIZE	BITS_TO_LONGS(MAX_APICS)
+
+struct physid_mask
+{
+	unsigned long mask[PHYSID_ARRAY_SIZE];
+};
+
+typedef struct physid_mask physid_mask_t;
+
+#define physid_set(physid, map)			set_bit(physid, (map).mask)
+#define physid_clear(physid, map)		clear_bit(physid, (map).mask)
+#define physid_isset(physid, map)		test_bit(physid, (map).mask)
+#define physid_test_and_set(physid, map)	test_and_set_bit(physid, (map).mask)
+
+#define physids_and(dst, src1, src2)		bitmap_and((dst).mask, (src1).mask, (src2).mask, MAX_APICS)
+#define physids_or(dst, src1, src2)		bitmap_or((dst).mask, (src1).mask, (src2).mask, MAX_APICS)
+#define physids_clear(map)			bitmap_zero((map).mask, MAX_APICS)
+#define physids_complement(dst, src)		bitmap_complement((dst).mask, (src).mask, MAX_APICS)
+#define physids_empty(map)			bitmap_empty((map).mask, MAX_APICS)
+#define physids_equal(map1, map2)		bitmap_equal((map1).mask, (map2).mask, MAX_APICS)
+#define physids_weight(map)			bitmap_weight((map).mask, MAX_APICS)
+#define physids_shift_right(d, s, n)		bitmap_shift_right((d).mask, (s).mask, n, MAX_APICS)
+#define physids_shift_left(d, s, n)		bitmap_shift_left((d).mask, (s).mask, n, MAX_APICS)
+#define physids_coerce(map)			((map).mask[0])
+
+#define physids_promote(physids)						\
+	({									\
+		physid_mask_t __physid_mask = PHYSID_MASK_NONE;			\
+		__physid_mask.mask[0] = physids;				\
+		__physid_mask;							\
+	})
+
+#define physid_mask_of_physid(physid)						\
+	({									\
+		physid_mask_t __physid_mask = PHYSID_MASK_NONE;			\
+		physid_set(physid, __physid_mask);				\
+		__physid_mask;							\
+	})
+
+#define PHYSID_MASK_ALL		{ {[0 ... PHYSID_ARRAY_SIZE-1] = ~0UL} }
+#define PHYSID_MASK_NONE	{ {[0 ... PHYSID_ARRAY_SIZE-1] = 0UL} }
+
+extern physid_mask_t phys_cpu_present_map;
+
+#endif
+
diff -urpN linux-2.6.23-sabayon/include/asm/msgbuf.h testtry/include/asm/msgbuf.h
--- linux-2.6.23-sabayon/include/asm/msgbuf.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/msgbuf.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,27 @@
+#ifndef _X8664_MSGBUF_H
+#define _X8664_MSGBUF_H
+
+/* 
+ * The msqid64_ds structure for x86-64 architecture.
+ * Note extra padding because this structure is passed back and forth
+ * between kernel and user space.
+ *
+ * Pad space is left for:
+ * - 2 miscellaneous 64-bit values
+ */
+
+struct msqid64_ds {
+	struct ipc64_perm msg_perm;
+	__kernel_time_t msg_stime;	/* last msgsnd time */
+	__kernel_time_t msg_rtime;	/* last msgrcv time */
+	__kernel_time_t msg_ctime;	/* last change time */
+	unsigned long  msg_cbytes;	/* current number of bytes on queue */
+	unsigned long  msg_qnum;	/* number of messages in queue */
+	unsigned long  msg_qbytes;	/* max number of bytes on queue */
+	__kernel_pid_t msg_lspid;	/* pid of last msgsnd */
+	__kernel_pid_t msg_lrpid;	/* last receive pid */
+	unsigned long  __unused4;
+	unsigned long  __unused5;
+};
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/msidef.h testtry/include/asm/msidef.h
--- linux-2.6.23-sabayon/include/asm/msidef.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/msidef.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/msidef.h>
diff -urpN linux-2.6.23-sabayon/include/asm/msr.h testtry/include/asm/msr.h
--- linux-2.6.23-sabayon/include/asm/msr.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/msr.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,187 @@
+#ifndef X86_64_MSR_H
+#define X86_64_MSR_H 1
+
+#include <asm/msr-index.h>
+
+#ifndef __ASSEMBLY__
+#include <linux/errno.h>
+/*
+ * Access to machine-specific registers (available on 586 and better only)
+ * Note: the rd* operations modify the parameters directly (without using
+ * pointer indirection), this allows gcc to optimize better
+ */
+
+#define rdmsr(msr,val1,val2) \
+       __asm__ __volatile__("rdmsr" \
+			    : "=a" (val1), "=d" (val2) \
+			    : "c" (msr))
+
+
+#define rdmsrl(msr,val) do { unsigned long a__,b__; \
+       __asm__ __volatile__("rdmsr" \
+			    : "=a" (a__), "=d" (b__) \
+			    : "c" (msr)); \
+       val = a__ | (b__<<32); \
+} while(0)
+
+#define wrmsr(msr,val1,val2) \
+     __asm__ __volatile__("wrmsr" \
+			  : /* no outputs */ \
+			  : "c" (msr), "a" (val1), "d" (val2))
+
+#define wrmsrl(msr,val) wrmsr(msr,(__u32)((__u64)(val)),((__u64)(val))>>32) 
+
+/* wrmsr with exception handling */
+#define wrmsr_safe(msr,a,b) ({ int ret__;			\
+	asm volatile("2: wrmsr ; xorl %0,%0\n"			\
+		     "1:\n\t"					\
+		     ".section .fixup,\"ax\"\n\t"		\
+		     "3:  movl %4,%0 ; jmp 1b\n\t"		\
+		     ".previous\n\t"				\
+ 		     ".section __ex_table,\"a\"\n"		\
+		     "   .align 8\n\t"				\
+		     "   .quad 	2b,3b\n\t"			\
+		     ".previous"				\
+		     : "=a" (ret__)				\
+		     : "c" (msr), "0" (a), "d" (b), "i" (-EFAULT)); \
+	ret__; })
+
+#define checking_wrmsrl(msr,val) wrmsr_safe(msr,(u32)(val),(u32)((val)>>32))
+
+#define rdmsr_safe(msr,a,b) \
+	({ int ret__;						\
+	  asm volatile ("1:       rdmsr\n"			\
+                      "2:\n"					\
+                      ".section .fixup,\"ax\"\n"		\
+                      "3:       movl %4,%0\n"			\
+                      " jmp 2b\n"				\
+                      ".previous\n"				\
+                      ".section __ex_table,\"a\"\n"		\
+                      " .align 8\n"				\
+                      " .quad 1b,3b\n"				\
+                      ".previous":"=&bDS" (ret__), "=a"(*(a)), "=d"(*(b))\
+                      :"c"(msr), "i"(-EIO), "0"(0));		\
+	  ret__; })		
+
+#define rdtsc(low,high) \
+     __asm__ __volatile__("rdtsc" : "=a" (low), "=d" (high))
+
+#define rdtscl(low) \
+     __asm__ __volatile__ ("rdtsc" : "=a" (low) : : "edx")
+
+#define rdtscp(low,high,aux) \
+     asm volatile (".byte 0x0f,0x01,0xf9" : "=a" (low), "=d" (high), "=c" (aux))
+
+#define rdtscll(val) do { \
+     unsigned int __a,__d; \
+     asm volatile("rdtsc" : "=a" (__a), "=d" (__d)); \
+     (val) = ((unsigned long)__a) | (((unsigned long)__d)<<32); \
+} while(0)
+
+#define rdtscpll(val, aux) do { \
+     unsigned long __a, __d; \
+     asm volatile (".byte 0x0f,0x01,0xf9" : "=a" (__a), "=d" (__d), "=c" (aux)); \
+     (val) = (__d << 32) | __a; \
+} while (0)
+
+#define write_tsc(val1,val2) wrmsr(0x10, val1, val2)
+
+#define write_rdtscp_aux(val) wrmsr(0xc0000103, val, 0)
+
+#define rdpmc(counter,low,high) \
+     __asm__ __volatile__("rdpmc" \
+			  : "=a" (low), "=d" (high) \
+			  : "c" (counter))
+
+static inline void cpuid(int op, unsigned int *eax, unsigned int *ebx,
+			 unsigned int *ecx, unsigned int *edx)
+{
+	__asm__("cpuid"
+		: "=a" (*eax),
+		  "=b" (*ebx),
+		  "=c" (*ecx),
+		  "=d" (*edx)
+		: "0" (op));
+}
+
+/* Some CPUID calls want 'count' to be placed in ecx */
+static inline void cpuid_count(int op, int count, int *eax, int *ebx, int *ecx,
+	       	int *edx)
+{
+	__asm__("cpuid"
+		: "=a" (*eax),
+		  "=b" (*ebx),
+		  "=c" (*ecx),
+		  "=d" (*edx)
+		: "0" (op), "c" (count));
+}
+
+/*
+ * CPUID functions returning a single datum
+ */
+static inline unsigned int cpuid_eax(unsigned int op)
+{
+	unsigned int eax;
+
+	__asm__("cpuid"
+		: "=a" (eax)
+		: "0" (op)
+		: "bx", "cx", "dx");
+	return eax;
+}
+static inline unsigned int cpuid_ebx(unsigned int op)
+{
+	unsigned int eax, ebx;
+
+	__asm__("cpuid"
+		: "=a" (eax), "=b" (ebx)
+		: "0" (op)
+		: "cx", "dx" );
+	return ebx;
+}
+static inline unsigned int cpuid_ecx(unsigned int op)
+{
+	unsigned int eax, ecx;
+
+	__asm__("cpuid"
+		: "=a" (eax), "=c" (ecx)
+		: "0" (op)
+		: "bx", "dx" );
+	return ecx;
+}
+static inline unsigned int cpuid_edx(unsigned int op)
+{
+	unsigned int eax, edx;
+
+	__asm__("cpuid"
+		: "=a" (eax), "=d" (edx)
+		: "0" (op)
+		: "bx", "cx");
+	return edx;
+}
+
+#ifdef CONFIG_SMP
+void rdmsr_on_cpu(unsigned int cpu, u32 msr_no, u32 *l, u32 *h);
+void wrmsr_on_cpu(unsigned int cpu, u32 msr_no, u32 l, u32 h);
+int rdmsr_safe_on_cpu(unsigned int cpu, u32 msr_no, u32 *l, u32 *h);
+int wrmsr_safe_on_cpu(unsigned int cpu, u32 msr_no, u32 l, u32 h);
+#else  /*  CONFIG_SMP  */
+static inline void rdmsr_on_cpu(unsigned int cpu, u32 msr_no, u32 *l, u32 *h)
+{
+	rdmsr(msr_no, *l, *h);
+}
+static inline void wrmsr_on_cpu(unsigned int cpu, u32 msr_no, u32 l, u32 h)
+{
+	wrmsr(msr_no, l, h);
+}
+static inline int rdmsr_safe_on_cpu(unsigned int cpu, u32 msr_no, u32 *l, u32 *h)
+{
+	return rdmsr_safe(msr_no, l, h);
+}
+static inline int wrmsr_safe_on_cpu(unsigned int cpu, u32 msr_no, u32 l, u32 h)
+{
+	return wrmsr_safe(msr_no, l, h);
+}
+#endif  /* CONFIG_SMP */
+#endif /* __ASSEMBLY__ */
+#endif	/* X86_64_MSR_H */
diff -urpN linux-2.6.23-sabayon/include/asm/msr-index.h testtry/include/asm/msr-index.h
--- linux-2.6.23-sabayon/include/asm/msr-index.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/msr-index.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/msr-index.h>
diff -urpN linux-2.6.23-sabayon/include/asm/mtrr.h testtry/include/asm/mtrr.h
--- linux-2.6.23-sabayon/include/asm/mtrr.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mtrr.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,152 @@
+/*  Generic MTRR (Memory Type Range Register) ioctls.
+
+    Copyright (C) 1997-1999  Richard Gooch
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public
+    License along with this library; if not, write to the Free
+    Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+
+    Richard Gooch may be reached by email at  rgooch@atnf.csiro.au
+    The postal address is:
+      Richard Gooch, c/o ATNF, P. O. Box 76, Epping, N.S.W., 2121, Australia.
+*/
+#ifndef _LINUX_MTRR_H
+#define _LINUX_MTRR_H
+
+#include <linux/ioctl.h>
+
+#define	MTRR_IOCTL_BASE	'M'
+
+struct mtrr_sentry
+{
+    unsigned long base;    /*  Base address     */
+    unsigned int size;    /*  Size of region   */
+    unsigned int type;     /*  Type of region   */
+};
+
+/* Warning: this structure has a different order from i386
+   on x86-64. The 32bit emulation code takes care of that.
+   But you need to use this for 64bit, otherwise your X server
+   will break. */
+struct mtrr_gentry
+{
+    unsigned long base;    /*  Base address     */
+    unsigned int size;    /*  Size of region   */
+    unsigned int regnum;   /*  Register number  */
+    unsigned int type;     /*  Type of region   */
+};
+
+/*  These are the various ioctls  */
+#define MTRRIOC_ADD_ENTRY        _IOW(MTRR_IOCTL_BASE,  0, struct mtrr_sentry)
+#define MTRRIOC_SET_ENTRY        _IOW(MTRR_IOCTL_BASE,  1, struct mtrr_sentry)
+#define MTRRIOC_DEL_ENTRY        _IOW(MTRR_IOCTL_BASE,  2, struct mtrr_sentry)
+#define MTRRIOC_GET_ENTRY        _IOWR(MTRR_IOCTL_BASE, 3, struct mtrr_gentry)
+#define MTRRIOC_KILL_ENTRY       _IOW(MTRR_IOCTL_BASE,  4, struct mtrr_sentry)
+#define MTRRIOC_ADD_PAGE_ENTRY   _IOW(MTRR_IOCTL_BASE,  5, struct mtrr_sentry)
+#define MTRRIOC_SET_PAGE_ENTRY   _IOW(MTRR_IOCTL_BASE,  6, struct mtrr_sentry)
+#define MTRRIOC_DEL_PAGE_ENTRY   _IOW(MTRR_IOCTL_BASE,  7, struct mtrr_sentry)
+#define MTRRIOC_GET_PAGE_ENTRY   _IOWR(MTRR_IOCTL_BASE, 8, struct mtrr_gentry)
+#define MTRRIOC_KILL_PAGE_ENTRY  _IOW(MTRR_IOCTL_BASE,  9, struct mtrr_sentry)
+
+/*  These are the region types  */
+#define MTRR_TYPE_UNCACHABLE 0
+#define MTRR_TYPE_WRCOMB     1
+/*#define MTRR_TYPE_         2*/
+/*#define MTRR_TYPE_         3*/
+#define MTRR_TYPE_WRTHROUGH  4
+#define MTRR_TYPE_WRPROT     5
+#define MTRR_TYPE_WRBACK     6
+#define MTRR_NUM_TYPES       7
+
+#ifdef __KERNEL__
+
+/*  The following functions are for use by other drivers  */
+# ifdef CONFIG_MTRR
+extern int mtrr_add (unsigned long base, unsigned long size,
+		     unsigned int type, char increment);
+extern int mtrr_add_page (unsigned long base, unsigned long size,
+		     unsigned int type, char increment);
+extern int mtrr_del (int reg, unsigned long base, unsigned long size);
+extern int mtrr_del_page (int reg, unsigned long base, unsigned long size);
+#  else
+static __inline__ int mtrr_add (unsigned long base, unsigned long size,
+				unsigned int type, char increment)
+{
+    return -ENODEV;
+}
+static __inline__ int mtrr_add_page (unsigned long base, unsigned long size,
+				unsigned int type, char increment)
+{
+    return -ENODEV;
+}
+static __inline__ int mtrr_del (int reg, unsigned long base,
+				unsigned long size)
+{
+    return -ENODEV;
+}
+static __inline__ int mtrr_del_page (int reg, unsigned long base,
+				unsigned long size)
+{
+    return -ENODEV;
+}
+
+#endif /* CONFIG_MTRR */
+
+#ifdef CONFIG_COMPAT
+#include <linux/compat.h>
+
+struct mtrr_sentry32
+{
+    compat_ulong_t base;    /*  Base address     */
+    compat_uint_t size;    /*  Size of region   */
+    compat_uint_t type;     /*  Type of region   */
+};
+
+struct mtrr_gentry32
+{
+    compat_ulong_t regnum;   /*  Register number  */
+    compat_uint_t base;    /*  Base address     */
+    compat_uint_t size;    /*  Size of region   */
+    compat_uint_t type;     /*  Type of region   */
+};
+
+#define MTRR_IOCTL_BASE 'M'
+
+#define MTRRIOC32_ADD_ENTRY        _IOW(MTRR_IOCTL_BASE,  0, struct mtrr_sentry32)
+#define MTRRIOC32_SET_ENTRY        _IOW(MTRR_IOCTL_BASE,  1, struct mtrr_sentry32)
+#define MTRRIOC32_DEL_ENTRY        _IOW(MTRR_IOCTL_BASE,  2, struct mtrr_sentry32)
+#define MTRRIOC32_GET_ENTRY        _IOWR(MTRR_IOCTL_BASE, 3, struct mtrr_gentry32)
+#define MTRRIOC32_KILL_ENTRY       _IOW(MTRR_IOCTL_BASE,  4, struct mtrr_sentry32)
+#define MTRRIOC32_ADD_PAGE_ENTRY   _IOW(MTRR_IOCTL_BASE,  5, struct mtrr_sentry32)
+#define MTRRIOC32_SET_PAGE_ENTRY   _IOW(MTRR_IOCTL_BASE,  6, struct mtrr_sentry32)
+#define MTRRIOC32_DEL_PAGE_ENTRY   _IOW(MTRR_IOCTL_BASE,  7, struct mtrr_sentry32)
+#define MTRRIOC32_GET_PAGE_ENTRY   _IOWR(MTRR_IOCTL_BASE, 8, struct mtrr_gentry32)
+#define MTRRIOC32_KILL_PAGE_ENTRY  _IOW(MTRR_IOCTL_BASE,  9, struct mtrr_sentry32)
+
+#endif /* CONFIG_COMPAT */
+
+#ifdef CONFIG_MTRR
+extern void mtrr_ap_init(void);
+extern void mtrr_bp_init(void);
+extern void mtrr_save_fixed_ranges(void *);
+extern void mtrr_save_state(void);
+#else
+#define mtrr_ap_init() do {} while (0)
+#define mtrr_bp_init() do {} while (0)
+#define mtrr_save_fixed_ranges(arg) do {} while (0)
+#define mtrr_save_state() do {} while (0)
+#endif
+
+#endif /* __KERNEL__ */
+
+#endif  /*  _LINUX_MTRR_H  */
diff -urpN linux-2.6.23-sabayon/include/asm/mutex.h testtry/include/asm/mutex.h
--- linux-2.6.23-sabayon/include/asm/mutex.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/mutex.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,105 @@
+/*
+ * Assembly implementation of the mutex fastpath, based on atomic
+ * decrement/increment.
+ *
+ * started by Ingo Molnar:
+ *
+ *  Copyright (C) 2004, 2005, 2006 Red Hat, Inc., Ingo Molnar <mingo@redhat.com>
+ */
+#ifndef _ASM_MUTEX_H
+#define _ASM_MUTEX_H
+
+/**
+ * __mutex_fastpath_lock - decrement and call function if negative
+ * @v: pointer of type atomic_t
+ * @fail_fn: function to call if the result is negative
+ *
+ * Atomically decrements @v and calls <fail_fn> if the result is negative.
+ */
+#define __mutex_fastpath_lock(v, fail_fn)				\
+do {									\
+	unsigned long dummy;						\
+									\
+	typecheck(atomic_t *, v);					\
+	typecheck_fn(void (*)(atomic_t *), fail_fn);			\
+									\
+	__asm__ __volatile__(						\
+		LOCK_PREFIX "   decl (%%rdi)	\n"			\
+			"   jns 1f		\n"			\
+			"   call "#fail_fn"	\n"			\
+			"1:"						\
+									\
+		:"=D" (dummy)						\
+		: "D" (v)						\
+		: "rax", "rsi", "rdx", "rcx",				\
+		  "r8", "r9", "r10", "r11", "memory");			\
+} while (0)
+
+/**
+ *  __mutex_fastpath_lock_retval - try to take the lock by moving the count
+ *                                 from 1 to a 0 value
+ *  @count: pointer of type atomic_t
+ *  @fail_fn: function to call if the original value was not 1
+ *
+ * Change the count from 1 to a value lower than 1, and call <fail_fn> if
+ * it wasn't 1 originally. This function returns 0 if the fastpath succeeds,
+ * or anything the slow path function returns
+ */
+static inline int
+__mutex_fastpath_lock_retval(atomic_t *count,
+			     int (*fail_fn)(atomic_t *))
+{
+	if (unlikely(atomic_dec_return(count) < 0))
+		return fail_fn(count);
+	else
+		return 0;
+}
+
+/**
+ * __mutex_fastpath_unlock - increment and call function if nonpositive
+ * @v: pointer of type atomic_t
+ * @fail_fn: function to call if the result is nonpositive
+ *
+ * Atomically increments @v and calls <fail_fn> if the result is nonpositive.
+ */
+#define __mutex_fastpath_unlock(v, fail_fn)				\
+do {									\
+	unsigned long dummy;						\
+									\
+	typecheck(atomic_t *, v);					\
+	typecheck_fn(void (*)(atomic_t *), fail_fn);			\
+									\
+	__asm__ __volatile__(						\
+		LOCK_PREFIX "   incl (%%rdi)	\n"			\
+			"   jg 1f		\n"			\
+			"   call "#fail_fn"	\n"			\
+			"1:			  "			\
+									\
+		:"=D" (dummy)						\
+		: "D" (v)						\
+		: "rax", "rsi", "rdx", "rcx",				\
+		  "r8", "r9", "r10", "r11", "memory");			\
+} while (0)
+
+#define __mutex_slowpath_needs_to_unlock()	1
+
+/**
+ * __mutex_fastpath_trylock - try to acquire the mutex, without waiting
+ *
+ *  @count: pointer of type atomic_t
+ *  @fail_fn: fallback function
+ *
+ * Change the count from 1 to 0 and return 1 (success), or return 0 (failure)
+ * if it wasn't 1 originally. [the fallback function is never used on
+ * x86_64, because all x86_64 CPUs have a CMPXCHG instruction.]
+ */
+static inline int
+__mutex_fastpath_trylock(atomic_t *count, int (*fail_fn)(atomic_t *))
+{
+	if (likely(atomic_cmpxchg(count, 1, 0) == 1))
+		return 1;
+	else
+		return 0;
+}
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/namei.h testtry/include/asm/namei.h
--- linux-2.6.23-sabayon/include/asm/namei.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/namei.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,11 @@
+#ifndef __X8664_NAMEI_H
+#define __X8664_NAMEI_H
+
+/* This dummy routine maybe changed to something useful
+ * for /usr/gnemul/ emulation stuff.
+ * Look at asm-sparc/namei.h for details.
+ */
+
+#define __emul_prefix() NULL
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/nmi.h testtry/include/asm/nmi.h
--- linux-2.6.23-sabayon/include/asm/nmi.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/nmi.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,95 @@
+/*
+ *  linux/include/asm-i386/nmi.h
+ */
+#ifndef ASM_NMI_H
+#define ASM_NMI_H
+
+#include <linux/pm.h>
+#include <asm/io.h>
+ 
+/**
+ * do_nmi_callback
+ *
+ * Check to see if a callback exists and execute it.  Return 1
+ * if the handler exists and was handled successfully.
+ */
+int do_nmi_callback(struct pt_regs *regs, int cpu);
+
+#ifdef CONFIG_PM
+ 
+/** Replace the PM callback routine for NMI. */
+struct pm_dev * set_nmi_pm_callback(pm_callback callback);
+
+/** Unset the PM callback routine back to the default. */
+void unset_nmi_pm_callback(struct pm_dev * dev);
+
+#else
+
+static inline struct pm_dev * set_nmi_pm_callback(pm_callback callback)
+{
+	return 0;
+} 
+ 
+static inline void unset_nmi_pm_callback(struct pm_dev * dev)
+{
+}
+
+#endif /* CONFIG_PM */
+ 
+extern void default_do_nmi(struct pt_regs *);
+extern void die_nmi(char *str, struct pt_regs *regs, int do_panic);
+
+#define get_nmi_reason() inb(0x61)
+
+extern int panic_on_timeout;
+extern int unknown_nmi_panic;
+extern int nmi_watchdog_enabled;
+
+extern int check_nmi_watchdog(void);
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);
+extern int avail_to_resrv_perfctr_nmi(unsigned int);
+extern int reserve_perfctr_nmi(unsigned int);
+extern void release_perfctr_nmi(unsigned int);
+extern int reserve_evntsel_nmi(unsigned int);
+extern void release_evntsel_nmi(unsigned int);
+
+extern void setup_apic_nmi_watchdog (void *);
+extern void stop_apic_nmi_watchdog (void *);
+extern void disable_timer_nmi_watchdog(void);
+extern void enable_timer_nmi_watchdog(void);
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);
+
+extern void nmi_watchdog_default(void);
+extern int setup_nmi_watchdog(char *);
+
+extern atomic_t nmi_active;
+extern unsigned int nmi_watchdog;
+#define NMI_DISABLED    -1
+#define NMI_NONE	0
+#define NMI_IO_APIC	1
+#define NMI_LOCAL_APIC	2
+#define NMI_INVALID	3
+#define NMI_DEFAULT	NMI_DISABLED
+
+struct ctl_table;
+struct file;
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,
+			void __user *, size_t *, loff_t *);
+
+extern int unknown_nmi_panic;
+
+void __trigger_all_cpu_backtrace(void);
+#define trigger_all_cpu_backtrace() __trigger_all_cpu_backtrace()
+
+
+void lapic_watchdog_stop(void);
+int lapic_watchdog_init(unsigned nmi_hz);
+int lapic_wd_event(unsigned nmi_hz);
+unsigned lapic_adjust_nmi_hz(unsigned hz);
+int lapic_watchdog_ok(void);
+void disable_lapic_nmi_watchdog(void);
+void enable_lapic_nmi_watchdog(void);
+void stop_nmi(void);
+void restart_nmi(void);
+
+#endif /* ASM_NMI_H */
diff -urpN linux-2.6.23-sabayon/include/asm/node.h testtry/include/asm/node.h
--- linux-2.6.23-sabayon/include/asm/node.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/node.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/node.h>
diff -urpN linux-2.6.23-sabayon/include/asm/numa.h testtry/include/asm/numa.h
--- linux-2.6.23-sabayon/include/asm/numa.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/numa.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,38 @@
+#ifndef _ASM_X8664_NUMA_H 
+#define _ASM_X8664_NUMA_H 1
+
+#include <linux/nodemask.h>
+
+struct bootnode {
+	u64 start,end; 
+};
+
+extern int compute_hash_shift(struct bootnode *nodes, int numnodes);
+
+#define ZONE_ALIGN (1UL << (MAX_ORDER+PAGE_SHIFT))
+
+extern void numa_add_cpu(int cpu);
+extern void numa_init_array(void);
+extern int numa_off;
+
+extern void numa_set_node(int cpu, int node);
+extern void srat_reserve_add_area(int nodeid);
+extern int hotadd_percent;
+
+extern unsigned char apicid_to_node[256];
+#ifdef CONFIG_NUMA
+extern void __init init_cpu_to_node(void);
+
+static inline void clear_node_cpumask(int cpu)
+{
+	clear_bit(cpu, &node_to_cpumask[cpu_to_node(cpu)]);
+}
+
+#else
+#define init_cpu_to_node() do {} while (0)
+#define clear_node_cpumask(cpu) do {} while (0)
+#endif
+
+#define NUMA_NO_NODE 0xff
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/page.h testtry/include/asm/page.h
--- linux-2.6.23-sabayon/include/asm/page.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/page.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,143 @@
+#ifndef _X86_64_PAGE_H
+#define _X86_64_PAGE_H
+
+#include <linux/const.h>
+
+/* PAGE_SHIFT determines the page size */
+#define PAGE_SHIFT	12
+#define PAGE_SIZE	(_AC(1,UL) << PAGE_SHIFT)
+#define PAGE_MASK	(~(PAGE_SIZE-1))
+#define PHYSICAL_PAGE_MASK	(~(PAGE_SIZE-1) & __PHYSICAL_MASK)
+
+#define THREAD_ORDER 1 
+#define THREAD_SIZE  (PAGE_SIZE << THREAD_ORDER)
+#define CURRENT_MASK (~(THREAD_SIZE-1))
+
+#define EXCEPTION_STACK_ORDER 0
+#define EXCEPTION_STKSZ (PAGE_SIZE << EXCEPTION_STACK_ORDER)
+
+#define DEBUG_STACK_ORDER (EXCEPTION_STACK_ORDER + 1)
+#define DEBUG_STKSZ (PAGE_SIZE << DEBUG_STACK_ORDER)
+
+#define IRQSTACK_ORDER 2
+#define IRQSTACKSIZE (PAGE_SIZE << IRQSTACK_ORDER)
+
+#define STACKFAULT_STACK 1
+#define DOUBLEFAULT_STACK 2
+#define NMI_STACK 3
+#define DEBUG_STACK 4
+#define MCE_STACK 5
+#define N_EXCEPTION_STACKS 5  /* hw limit: 7 */
+
+#define LARGE_PAGE_MASK (~(LARGE_PAGE_SIZE-1))
+#define LARGE_PAGE_SIZE (_AC(1,UL) << PMD_SHIFT)
+
+#define HPAGE_SHIFT PMD_SHIFT
+#define HPAGE_SIZE	(_AC(1,UL) << HPAGE_SHIFT)
+#define HPAGE_MASK	(~(HPAGE_SIZE - 1))
+#define HUGETLB_PAGE_ORDER	(HPAGE_SHIFT - PAGE_SHIFT)
+
+#ifdef __KERNEL__
+#ifndef __ASSEMBLY__
+
+extern unsigned long end_pfn;
+
+void clear_page(void *);
+void copy_page(void *, void *);
+
+#define clear_user_page(page, vaddr, pg)	clear_page(page)
+#define copy_user_page(to, from, vaddr, pg)	copy_page(to, from)
+
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)
+#define __HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE
+/*
+ * These are used to make use of C type-checking..
+ */
+typedef struct { unsigned long pte; } pte_t;
+typedef struct { unsigned long pmd; } pmd_t;
+typedef struct { unsigned long pud; } pud_t;
+typedef struct { unsigned long pgd; } pgd_t;
+#define PTE_MASK	PHYSICAL_PAGE_MASK
+
+typedef struct { unsigned long pgprot; } pgprot_t;
+
+extern unsigned long phys_base;
+
+#define pte_val(x)	((x).pte)
+#define pmd_val(x)	((x).pmd)
+#define pud_val(x)	((x).pud)
+#define pgd_val(x)	((x).pgd)
+#define pgprot_val(x)	((x).pgprot)
+
+#define __pte(x) ((pte_t) { (x) } )
+#define __pmd(x) ((pmd_t) { (x) } )
+#define __pud(x) ((pud_t) { (x) } )
+#define __pgd(x) ((pgd_t) { (x) } )
+#define __pgprot(x)	((pgprot_t) { (x) } )
+
+#endif /* !__ASSEMBLY__ */
+
+#define __PHYSICAL_START	CONFIG_PHYSICAL_START
+#define __KERNEL_ALIGN		0x200000
+
+/*
+ * Make sure kernel is aligned to 2MB address. Catching it at compile
+ * time is better. Change your config file and compile the kernel
+ * for a 2MB aligned address (CONFIG_PHYSICAL_START)
+ */
+#if (CONFIG_PHYSICAL_START % __KERNEL_ALIGN) != 0
+#error "CONFIG_PHYSICAL_START must be a multiple of 2MB"
+#endif
+
+#define __START_KERNEL		(__START_KERNEL_map + __PHYSICAL_START)
+#define __START_KERNEL_map	_AC(0xffffffff80000000, UL)
+#define __PAGE_OFFSET           _AC(0xffff810000000000, UL)
+
+/* to align the pointer to the (next) page boundary */
+#define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
+
+/* See Documentation/x86_64/mm.txt for a description of the memory map. */
+#define __PHYSICAL_MASK_SHIFT	46
+#define __PHYSICAL_MASK		((_AC(1,UL) << __PHYSICAL_MASK_SHIFT) - 1)
+#define __VIRTUAL_MASK_SHIFT	48
+#define __VIRTUAL_MASK		((_AC(1,UL) << __VIRTUAL_MASK_SHIFT) - 1)
+
+#define KERNEL_TEXT_SIZE  (40*1024*1024)
+#define KERNEL_TEXT_START _AC(0xffffffff80000000, UL)
+#define PAGE_OFFSET		__PAGE_OFFSET
+
+#ifndef __ASSEMBLY__
+
+#include <asm/bug.h>
+
+extern unsigned long __phys_addr(unsigned long);
+
+#endif /* __ASSEMBLY__ */
+
+#define __pa(x)		__phys_addr((unsigned long)(x))
+#define __pa_symbol(x)	__phys_addr((unsigned long)(x))
+
+#define __va(x)			((void *)((unsigned long)(x)+PAGE_OFFSET))
+#define __boot_va(x)		__va(x)
+#define __boot_pa(x)		__pa(x)
+#ifdef CONFIG_FLATMEM
+#define pfn_valid(pfn)		((pfn) < end_pfn)
+#endif
+
+#define virt_to_page(kaddr)	pfn_to_page(__pa(kaddr) >> PAGE_SHIFT)
+#define virt_addr_valid(kaddr)	pfn_valid(__pa(kaddr) >> PAGE_SHIFT)
+#define pfn_to_kaddr(pfn)      __va((pfn) << PAGE_SHIFT)
+
+#define VM_DATA_DEFAULT_FLAGS \
+	(((current->personality & READ_IMPLIES_EXEC) ? VM_EXEC : 0 ) | \
+	 VM_READ | VM_WRITE | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC)
+
+#define __HAVE_ARCH_GATE_AREA 1	
+
+#include <asm-generic/memory_model.h>
+#include <asm-generic/page.h>
+
+#endif /* __KERNEL__ */
+
+#endif /* _X86_64_PAGE_H */
diff -urpN linux-2.6.23-sabayon/include/asm/param.h testtry/include/asm/param.h
--- linux-2.6.23-sabayon/include/asm/param.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/param.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,22 @@
+#ifndef _ASMx86_64_PARAM_H
+#define _ASMx86_64_PARAM_H
+
+#ifdef __KERNEL__
+# define HZ            CONFIG_HZ	/* Internal kernel timer frequency */
+# define USER_HZ       100		/* .. some user interfaces are in "ticks */
+#define CLOCKS_PER_SEC        (USER_HZ)       /* like times() */
+#endif
+
+#ifndef HZ
+#define HZ 100
+#endif
+
+#define EXEC_PAGESIZE	4096
+
+#ifndef NOGROUP
+#define NOGROUP		(-1)
+#endif
+
+#define MAXHOSTNAMELEN	64	/* max length of hostname */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/parport.h testtry/include/asm/parport.h
--- linux-2.6.23-sabayon/include/asm/parport.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/parport.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,18 @@
+/*
+ * parport.h: ia32-specific parport initialisation
+ *
+ * Copyright (C) 1999, 2000  Tim Waugh <tim@cyberelk.demon.co.uk>
+ *
+ * This file should only be included by drivers/parport/parport_pc.c.
+ */
+
+#ifndef _ASM_X8664_PARPORT_H
+#define _ASM_X8664_PARPORT_H 1
+
+static int __devinit parport_pc_find_isa_ports (int autoirq, int autodma);
+static int __devinit parport_pc_find_nonpci_ports (int autoirq, int autodma)
+{
+	return parport_pc_find_isa_ports (autoirq, autodma);
+}
+
+#endif 
diff -urpN linux-2.6.23-sabayon/include/asm/pci-direct.h testtry/include/asm/pci-direct.h
--- linux-2.6.23-sabayon/include/asm/pci-direct.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/pci-direct.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,17 @@
+#ifndef ASM_PCI_DIRECT_H
+#define ASM_PCI_DIRECT_H 1
+
+#include <linux/types.h>
+
+/* Direct PCI access. This is used for PCI accesses in early boot before
+   the PCI subsystem works. */ 
+
+extern u32 read_pci_config(u8 bus, u8 slot, u8 func, u8 offset);
+extern u8 read_pci_config_byte(u8 bus, u8 slot, u8 func, u8 offset);
+extern u16 read_pci_config_16(u8 bus, u8 slot, u8 func, u8 offset);
+extern void write_pci_config(u8 bus, u8 slot, u8 func, u8 offset, u32 val);
+extern void write_pci_config_byte(u8 bus, u8 slot, u8 func, u8 offset, u8 val);
+
+extern int early_pci_allowed(void);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/pci.h testtry/include/asm/pci.h
--- linux-2.6.23-sabayon/include/asm/pci.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/pci.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,126 @@
+#ifndef __x8664_PCI_H
+#define __x8664_PCI_H
+
+#include <asm/io.h>
+
+#ifdef __KERNEL__
+
+struct pci_sysdata {
+	int		node;		/* NUMA node */
+	void*		iommu;		/* IOMMU private data */
+};
+
+extern struct pci_bus *pci_scan_bus_with_sysdata(int busno);
+
+#ifdef CONFIG_CALGARY_IOMMU
+static inline void* pci_iommu(struct pci_bus *bus)
+{
+	struct pci_sysdata *sd = bus->sysdata;
+	return sd->iommu;
+}
+
+static inline void set_pci_iommu(struct pci_bus *bus, void *val)
+{
+	struct pci_sysdata *sd = bus->sysdata;
+	sd->iommu = val;
+}
+#endif /* CONFIG_CALGARY_IOMMU */
+
+#include <linux/mm.h> /* for struct page */
+
+/* Can be used to override the logic in pci_scan_bus for skipping
+   already-configured bus numbers - to be used for buggy BIOSes
+   or architectures with incomplete PCI setup by the loader */
+
+#ifdef CONFIG_PCI
+extern unsigned int pcibios_assign_all_busses(void);
+#else
+#define pcibios_assign_all_busses()	0
+#endif
+#define pcibios_scan_all_fns(a, b)	0
+
+extern unsigned long pci_mem_start;
+#define PCIBIOS_MIN_IO		0x1000
+#define PCIBIOS_MIN_MEM		(pci_mem_start)
+
+#define PCIBIOS_MIN_CARDBUS_IO	0x4000
+
+void pcibios_config_init(void);
+struct pci_bus * pcibios_scan_root(int bus);
+extern int (*pci_config_read)(int seg, int bus, int dev, int fn, int reg, int len, u32 *value);
+extern int (*pci_config_write)(int seg, int bus, int dev, int fn, int reg, int len, u32 value);
+
+void pcibios_set_master(struct pci_dev *dev);
+void pcibios_penalize_isa_irq(int irq, int active);
+struct irq_routing_table *pcibios_get_irq_routing_table(void);
+int pcibios_set_irq_routing(struct pci_dev *dev, int pin, int irq);
+
+#include <linux/types.h>
+#include <linux/slab.h>
+#include <asm/scatterlist.h>
+#include <linux/string.h>
+#include <asm/page.h>
+
+extern void pci_iommu_alloc(void);
+extern int iommu_setup(char *opt);
+
+/* The PCI address space does equal the physical memory
+ * address space.  The networking and block device layers use
+ * this boolean for bounce buffer decisions
+ *
+ * On AMD64 it mostly equals, but we set it to zero if a hardware
+ * IOMMU (gart) of sotware IOMMU (swiotlb) is available.
+ */
+#define PCI_DMA_BUS_IS_PHYS (dma_ops->is_phys)
+
+#if defined(CONFIG_IOMMU) || defined(CONFIG_CALGARY_IOMMU)
+
+#define DECLARE_PCI_UNMAP_ADDR(ADDR_NAME)	\
+	dma_addr_t ADDR_NAME;
+#define DECLARE_PCI_UNMAP_LEN(LEN_NAME)		\
+	__u32 LEN_NAME;
+#define pci_unmap_addr(PTR, ADDR_NAME)			\
+	((PTR)->ADDR_NAME)
+#define pci_unmap_addr_set(PTR, ADDR_NAME, VAL)		\
+	(((PTR)->ADDR_NAME) = (VAL))
+#define pci_unmap_len(PTR, LEN_NAME)			\
+	((PTR)->LEN_NAME)
+#define pci_unmap_len_set(PTR, LEN_NAME, VAL)		\
+	(((PTR)->LEN_NAME) = (VAL))
+
+#else
+/* No IOMMU */
+
+#define DECLARE_PCI_UNMAP_ADDR(ADDR_NAME)
+#define DECLARE_PCI_UNMAP_LEN(LEN_NAME)
+#define pci_unmap_addr(PTR, ADDR_NAME)		(0)
+#define pci_unmap_addr_set(PTR, ADDR_NAME, VAL)	do { } while (0)
+#define pci_unmap_len(PTR, LEN_NAME)		(0)
+#define pci_unmap_len_set(PTR, LEN_NAME, VAL)	do { } while (0)
+
+#endif
+
+#include <asm-generic/pci-dma-compat.h>
+
+#ifdef CONFIG_PCI
+static inline void pci_dma_burst_advice(struct pci_dev *pdev,
+					enum pci_dma_burst_strategy *strat,
+					unsigned long *strategy_parameter)
+{
+	*strat = PCI_DMA_BURST_INFINITY;
+	*strategy_parameter = ~0UL;
+}
+#endif
+
+#define HAVE_PCI_MMAP
+extern int pci_mmap_page_range(struct pci_dev *dev, struct vm_area_struct *vma,
+			       enum pci_mmap_state mmap_state, int write_combine);
+
+#endif /* __KERNEL__ */
+
+/* generic pci stuff */
+#ifdef CONFIG_PCI
+#include <asm-generic/pci.h>
+#endif
+
+#endif /* __x8664_PCI_H */
diff -urpN linux-2.6.23-sabayon/include/asm/pda.h testtry/include/asm/pda.h
--- linux-2.6.23-sabayon/include/asm/pda.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/pda.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,125 @@
+#ifndef X86_64_PDA_H
+#define X86_64_PDA_H
+
+#ifndef __ASSEMBLY__
+#include <linux/stddef.h>
+#include <linux/types.h>
+#include <linux/cache.h>
+#include <asm/page.h>
+
+/* Per processor datastructure. %gs points to it while the kernel runs */ 
+struct x8664_pda {
+	struct task_struct *pcurrent;	/* 0  Current process */
+	unsigned long data_offset;	/* 8 Per cpu data offset from linker
+					   address */
+	unsigned long kernelstack;  /* 16 top of kernel stack for current */
+	unsigned long oldrsp; 	    /* 24 user rsp for system call */
+        int irqcount;		    /* 32 Irq nesting counter. Starts with -1 */
+	int cpunumber;		    /* 36 Logical CPU number */
+#ifdef CONFIG_CC_STACKPROTECTOR
+	unsigned long stack_canary;	/* 40 stack canary value */
+					/* gcc-ABI: this canary MUST be at
+					   offset 40!!! */
+#endif
+	char *irqstackptr;
+	int nodenumber;		    /* number of current node */
+	unsigned int __softirq_pending;
+	unsigned int __nmi_count;	/* number of NMI on this CPUs */
+	short mmu_state;
+	short isidle;
+	struct mm_struct *active_mm;
+	unsigned apic_timer_irqs;
+} ____cacheline_aligned_in_smp;
+
+extern struct x8664_pda *_cpu_pda[];
+extern struct x8664_pda boot_cpu_pda[];
+
+#define cpu_pda(i) (_cpu_pda[i])
+
+/* 
+ * There is no fast way to get the base address of the PDA, all the accesses
+ * have to mention %fs/%gs.  So it needs to be done this Torvaldian way.
+ */ 
+extern void __bad_pda_field(void) __attribute__((noreturn));
+
+/*
+ * proxy_pda doesn't actually exist, but tell gcc it is accessed for
+ * all PDA accesses so it gets read/write dependencies right.
+ */
+extern struct x8664_pda _proxy_pda;
+
+#define pda_offset(field) offsetof(struct x8664_pda, field)
+
+#define pda_to_op(op,field,val) do {		\
+	typedef typeof(_proxy_pda.field) T__;	\
+	if (0) { T__ tmp__; tmp__ = (val); }	/* type checking */ \
+	switch (sizeof(_proxy_pda.field)) {	\
+	case 2:					\
+		asm(op "w %1,%%gs:%c2" : 	\
+		    "+m" (_proxy_pda.field) :	\
+		    "ri" ((T__)val),		\
+		    "i"(pda_offset(field))); 	\
+ 		break;				\
+	case 4:					\
+		asm(op "l %1,%%gs:%c2" : 	\
+		    "+m" (_proxy_pda.field) :	\
+		    "ri" ((T__)val),		\
+		    "i" (pda_offset(field))); 	\
+		break;				\
+	case 8:					\
+		asm(op "q %1,%%gs:%c2": 	\
+		    "+m" (_proxy_pda.field) :	\
+		    "ri" ((T__)val),		\
+		    "i"(pda_offset(field))); 	\
+		break;				\
+       default: 				\
+		__bad_pda_field();		\
+       }					\
+       } while (0)
+
+#define pda_from_op(op,field) ({		\
+	typeof(_proxy_pda.field) ret__;		\
+	switch (sizeof(_proxy_pda.field)) {	\
+       	case 2:					\
+		asm(op "w %%gs:%c1,%0" : 	\
+		    "=r" (ret__) :		\
+		    "i" (pda_offset(field)), 	\
+		    "m" (_proxy_pda.field)); 	\
+		 break;				\
+	case 4:					\
+		asm(op "l %%gs:%c1,%0":		\
+		    "=r" (ret__):		\
+		    "i" (pda_offset(field)), 	\
+		    "m" (_proxy_pda.field)); 	\
+		 break;				\
+       case 8:					\
+		asm(op "q %%gs:%c1,%0":		\
+		    "=r" (ret__) :		\
+		    "i" (pda_offset(field)), 	\
+		    "m" (_proxy_pda.field)); 	\
+		 break;				\
+       default: 				\
+		__bad_pda_field();		\
+       }					\
+       ret__; })
+
+#define read_pda(field) pda_from_op("mov",field)
+#define write_pda(field,val) pda_to_op("mov",field,val)
+#define add_pda(field,val) pda_to_op("add",field,val)
+#define sub_pda(field,val) pda_to_op("sub",field,val)
+#define or_pda(field,val) pda_to_op("or",field,val)
+
+/* This is not atomic against other CPUs -- CPU preemption needs to be off */
+#define test_and_clear_bit_pda(bit,field) ({		\
+	int old__;						\
+	asm volatile("btr %2,%%gs:%c3\n\tsbbl %0,%0"		\
+	    : "=r" (old__), "+m" (_proxy_pda.field) 		\
+	    : "dIr" (bit), "i" (pda_offset(field)) : "memory");	\
+	old__;							\
+})
+
+#endif
+
+#define PDA_STACKOFFSET (5*8)
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/percpu.h testtry/include/asm/percpu.h
--- linux-2.6.23-sabayon/include/asm/percpu.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/percpu.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,68 @@
+#ifndef _ASM_X8664_PERCPU_H_
+#define _ASM_X8664_PERCPU_H_
+#include <linux/compiler.h>
+
+/* Same as asm-generic/percpu.h, except that we store the per cpu offset
+   in the PDA. Longer term the PDA and every per cpu variable
+   should be just put into a single section and referenced directly
+   from %gs */
+
+#ifdef CONFIG_SMP
+
+#include <asm/pda.h>
+
+#define __per_cpu_offset(cpu) (cpu_pda(cpu)->data_offset)
+#define __my_cpu_offset() read_pda(data_offset)
+
+#define per_cpu_offset(x) (__per_cpu_offset(x))
+
+/* Separate out the type, so (int[3], foo) works. */
+#define DEFINE_PER_CPU(type, name) \
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name
+
+#define DEFINE_PER_CPU_SHARED_ALIGNED(type, name)		\
+    __attribute__((__section__(".data.percpu.shared_aligned"))) \
+    __typeof__(type) per_cpu__##name				\
+    ____cacheline_internodealigned_in_smp
+
+/* var is in discarded region: offset to particular copy we want */
+#define per_cpu(var, cpu) (*({				\
+	extern int simple_identifier_##var(void);	\
+	RELOC_HIDE(&per_cpu__##var, __per_cpu_offset(cpu)); }))
+#define __get_cpu_var(var) (*({				\
+	extern int simple_identifier_##var(void);	\
+	RELOC_HIDE(&per_cpu__##var, __my_cpu_offset()); }))
+#define __raw_get_cpu_var(var) (*({			\
+	extern int simple_identifier_##var(void);	\
+	RELOC_HIDE(&per_cpu__##var, __my_cpu_offset()); }))
+
+/* A macro to avoid #include hell... */
+#define percpu_modcopy(pcpudst, src, size)			\
+do {								\
+	unsigned int __i;					\
+	for_each_possible_cpu(__i)				\
+		memcpy((pcpudst)+__per_cpu_offset(__i),		\
+		       (src), (size));				\
+} while (0)
+
+extern void setup_per_cpu_areas(void);
+
+#else /* ! SMP */
+
+#define DEFINE_PER_CPU(type, name) \
+    __typeof__(type) per_cpu__##name
+#define DEFINE_PER_CPU_SHARED_ALIGNED(type, name)	\
+    DEFINE_PER_CPU(type, name)
+
+#define per_cpu(var, cpu)			(*((void)(cpu), &per_cpu__##var))
+#define __get_cpu_var(var)			per_cpu__##var
+#define __raw_get_cpu_var(var)			per_cpu__##var
+
+#endif	/* SMP */
+
+#define DECLARE_PER_CPU(type, name) extern __typeof__(type) per_cpu__##name
+
+#define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(per_cpu__##var)
+#define EXPORT_PER_CPU_SYMBOL_GPL(var) EXPORT_SYMBOL_GPL(per_cpu__##var)
+
+#endif /* _ASM_X8664_PERCPU_H_ */
diff -urpN linux-2.6.23-sabayon/include/asm/pgalloc.h testtry/include/asm/pgalloc.h
--- linux-2.6.23-sabayon/include/asm/pgalloc.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/pgalloc.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,119 @@
+#ifndef _X86_64_PGALLOC_H
+#define _X86_64_PGALLOC_H
+
+#include <asm/pda.h>
+#include <linux/threads.h>
+#include <linux/mm.h>
+
+#define pmd_populate_kernel(mm, pmd, pte) \
+		set_pmd(pmd, __pmd(_PAGE_TABLE | __pa(pte)))
+#define pud_populate(mm, pud, pmd) \
+		set_pud(pud, __pud(_PAGE_TABLE | __pa(pmd)))
+#define pgd_populate(mm, pgd, pud) \
+		set_pgd(pgd, __pgd(_PAGE_TABLE | __pa(pud)))
+
+static inline void pmd_populate(struct mm_struct *mm, pmd_t *pmd, struct page *pte)
+{
+	set_pmd(pmd, __pmd(_PAGE_TABLE | (page_to_pfn(pte) << PAGE_SHIFT)));
+}
+
+static inline void pmd_free(pmd_t *pmd)
+{
+	BUG_ON((unsigned long)pmd & (PAGE_SIZE-1));
+	free_page((unsigned long)pmd);
+}
+
+static inline pmd_t *pmd_alloc_one (struct mm_struct *mm, unsigned long addr)
+{
+	return (pmd_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
+}
+
+static inline pud_t *pud_alloc_one(struct mm_struct *mm, unsigned long addr)
+{
+	return (pud_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
+}
+
+static inline void pud_free (pud_t *pud)
+{
+	BUG_ON((unsigned long)pud & (PAGE_SIZE-1));
+	free_page((unsigned long)pud);
+}
+
+static inline void pgd_list_add(pgd_t *pgd)
+{
+	struct page *page = virt_to_page(pgd);
+
+	spin_lock(&pgd_lock);
+	list_add(&page->lru, &pgd_list);
+	spin_unlock(&pgd_lock);
+}
+
+static inline void pgd_list_del(pgd_t *pgd)
+{
+	struct page *page = virt_to_page(pgd);
+
+	spin_lock(&pgd_lock);
+	list_del(&page->lru);
+	spin_unlock(&pgd_lock);
+}
+
+static inline pgd_t *pgd_alloc(struct mm_struct *mm)
+{
+	unsigned boundary;
+	pgd_t *pgd = (pgd_t *)__get_free_page(GFP_KERNEL|__GFP_REPEAT);
+	if (!pgd)
+		return NULL;
+	pgd_list_add(pgd);
+	/*
+	 * Copy kernel pointers in from init.
+	 * Could keep a freelist or slab cache of those because the kernel
+	 * part never changes.
+	 */
+	boundary = pgd_index(__PAGE_OFFSET);
+	memset(pgd, 0, boundary * sizeof(pgd_t));
+	memcpy(pgd + boundary,
+	       init_level4_pgt + boundary,
+	       (PTRS_PER_PGD - boundary) * sizeof(pgd_t));
+	return pgd;
+}
+
+static inline void pgd_free(pgd_t *pgd)
+{
+	BUG_ON((unsigned long)pgd & (PAGE_SIZE-1));
+	pgd_list_del(pgd);
+	free_page((unsigned long)pgd);
+}
+
+static inline pte_t *pte_alloc_one_kernel(struct mm_struct *mm, unsigned long address)
+{
+	return (pte_t *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
+}
+
+static inline struct page *pte_alloc_one(struct mm_struct *mm, unsigned long address)
+{
+	void *p = (void *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
+	if (!p)
+		return NULL;
+	return virt_to_page(p);
+}
+
+/* Should really implement gc for free page table pages. This could be
+   done with a reference count in struct page. */
+
+static inline void pte_free_kernel(pte_t *pte)
+{
+	BUG_ON((unsigned long)pte & (PAGE_SIZE-1));
+	free_page((unsigned long)pte); 
+}
+
+static inline void pte_free(struct page *pte)
+{
+	__free_page(pte);
+} 
+
+#define __pte_free_tlb(tlb,pte) tlb_remove_page((tlb),(pte))
+
+#define __pmd_free_tlb(tlb,x)   tlb_remove_page((tlb),virt_to_page(x))
+#define __pud_free_tlb(tlb,x)   tlb_remove_page((tlb),virt_to_page(x))
+
+#endif /* _X86_64_PGALLOC_H */
diff -urpN linux-2.6.23-sabayon/include/asm/pgtable.h testtry/include/asm/pgtable.h
--- linux-2.6.23-sabayon/include/asm/pgtable.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/pgtable.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,432 @@
+#ifndef _X86_64_PGTABLE_H
+#define _X86_64_PGTABLE_H
+
+#include <linux/const.h>
+#ifndef __ASSEMBLY__
+
+/*
+ * This file contains the functions and defines necessary to modify and use
+ * the x86-64 page table tree.
+ */
+#include <asm/processor.h>
+#include <asm/bitops.h>
+#include <linux/threads.h>
+#include <asm/pda.h>
+
+extern pud_t level3_kernel_pgt[512];
+extern pud_t level3_ident_pgt[512];
+extern pmd_t level2_kernel_pgt[512];
+extern pgd_t init_level4_pgt[];
+extern unsigned long __supported_pte_mask;
+
+#define swapper_pg_dir init_level4_pgt
+
+extern void paging_init(void);
+extern void clear_kernel_mapping(unsigned long addr, unsigned long size);
+
+/*
+ * ZERO_PAGE is a global shared page that is always zero: used
+ * for zero-mapped memory areas etc..
+ */
+extern unsigned long empty_zero_page[PAGE_SIZE/sizeof(unsigned long)];
+#define ZERO_PAGE(vaddr) (virt_to_page(empty_zero_page))
+
+#endif /* !__ASSEMBLY__ */
+
+/*
+ * PGDIR_SHIFT determines what a top-level page table entry can map
+ */
+#define PGDIR_SHIFT	39
+#define PTRS_PER_PGD	512
+
+/*
+ * 3rd level page
+ */
+#define PUD_SHIFT	30
+#define PTRS_PER_PUD	512
+
+/*
+ * PMD_SHIFT determines the size of the area a middle-level
+ * page table can map
+ */
+#define PMD_SHIFT	21
+#define PTRS_PER_PMD	512
+
+/*
+ * entries per page directory level
+ */
+#define PTRS_PER_PTE	512
+
+#ifndef __ASSEMBLY__
+
+#define pte_ERROR(e) \
+	printk("%s:%d: bad pte %p(%016lx).\n", __FILE__, __LINE__, &(e), pte_val(e))
+#define pmd_ERROR(e) \
+	printk("%s:%d: bad pmd %p(%016lx).\n", __FILE__, __LINE__, &(e), pmd_val(e))
+#define pud_ERROR(e) \
+	printk("%s:%d: bad pud %p(%016lx).\n", __FILE__, __LINE__, &(e), pud_val(e))
+#define pgd_ERROR(e) \
+	printk("%s:%d: bad pgd %p(%016lx).\n", __FILE__, __LINE__, &(e), pgd_val(e))
+
+#define pgd_none(x)	(!pgd_val(x))
+#define pud_none(x)	(!pud_val(x))
+
+static inline void set_pte(pte_t *dst, pte_t val)
+{
+	pte_val(*dst) = pte_val(val);
+} 
+#define set_pte_at(mm,addr,ptep,pteval) set_pte(ptep,pteval)
+
+static inline void set_pmd(pmd_t *dst, pmd_t val)
+{
+        pmd_val(*dst) = pmd_val(val); 
+} 
+
+static inline void set_pud(pud_t *dst, pud_t val)
+{
+	pud_val(*dst) = pud_val(val);
+}
+
+static inline void pud_clear (pud_t *pud)
+{
+	set_pud(pud, __pud(0));
+}
+
+static inline void set_pgd(pgd_t *dst, pgd_t val)
+{
+	pgd_val(*dst) = pgd_val(val); 
+} 
+
+static inline void pgd_clear (pgd_t * pgd)
+{
+	set_pgd(pgd, __pgd(0));
+}
+
+#define ptep_get_and_clear(mm,addr,xp)	__pte(xchg(&(xp)->pte, 0))
+
+struct mm_struct;
+
+static inline pte_t ptep_get_and_clear_full(struct mm_struct *mm, unsigned long addr, pte_t *ptep, int full)
+{
+	pte_t pte;
+	if (full) {
+		pte = *ptep;
+		*ptep = __pte(0);
+	} else {
+		pte = ptep_get_and_clear(mm, addr, ptep);
+	}
+	return pte;
+}
+
+#define pte_same(a, b)		((a).pte == (b).pte)
+
+#define pte_pgprot(a)	(__pgprot((a).pte & ~PHYSICAL_PAGE_MASK))
+
+#endif /* !__ASSEMBLY__ */
+
+#define PMD_SIZE	(_AC(1,UL) << PMD_SHIFT)
+#define PMD_MASK	(~(PMD_SIZE-1))
+#define PUD_SIZE	(_AC(1,UL) << PUD_SHIFT)
+#define PUD_MASK	(~(PUD_SIZE-1))
+#define PGDIR_SIZE	(_AC(1,UL) << PGDIR_SHIFT)
+#define PGDIR_MASK	(~(PGDIR_SIZE-1))
+
+#define USER_PTRS_PER_PGD	((TASK_SIZE-1)/PGDIR_SIZE+1)
+#define FIRST_USER_ADDRESS	0
+
+#define MAXMEM		 _AC(0x3fffffffffff, UL)
+#define VMALLOC_START    _AC(0xffffc20000000000, UL)
+#define VMALLOC_END      _AC(0xffffe1ffffffffff, UL)
+#define MODULES_VADDR    _AC(0xffffffff88000000, UL)
+#define MODULES_END      _AC(0xfffffffffff00000, UL)
+#define MODULES_LEN   (MODULES_END - MODULES_VADDR)
+
+#define _PAGE_BIT_PRESENT	0
+#define _PAGE_BIT_RW		1
+#define _PAGE_BIT_USER		2
+#define _PAGE_BIT_PWT		3
+#define _PAGE_BIT_PCD		4
+#define _PAGE_BIT_ACCESSED	5
+#define _PAGE_BIT_DIRTY		6
+#define _PAGE_BIT_PSE		7	/* 4 MB (or 2MB) page */
+#define _PAGE_BIT_GLOBAL	8	/* Global TLB entry PPro+ */
+#define _PAGE_BIT_NX           63       /* No execute: only valid after cpuid check */
+
+#define _PAGE_PRESENT	0x001
+#define _PAGE_RW	0x002
+#define _PAGE_USER	0x004
+#define _PAGE_PWT	0x008
+#define _PAGE_PCD	0x010
+#define _PAGE_ACCESSED	0x020
+#define _PAGE_DIRTY	0x040
+#define _PAGE_PSE	0x080	/* 2MB page */
+#define _PAGE_FILE	0x040	/* nonlinear file mapping, saved PTE; unset:swap */
+#define _PAGE_GLOBAL	0x100	/* Global TLB entry */
+
+#define _PAGE_PROTNONE	0x080	/* If not present */
+#define _PAGE_NX        (_AC(1,UL)<<_PAGE_BIT_NX)
+
+#define _PAGE_TABLE	(_PAGE_PRESENT | _PAGE_RW | _PAGE_USER | _PAGE_ACCESSED | _PAGE_DIRTY)
+#define _KERNPG_TABLE	(_PAGE_PRESENT | _PAGE_RW | _PAGE_ACCESSED | _PAGE_DIRTY)
+
+#define _PAGE_CHG_MASK	(PTE_MASK | _PAGE_ACCESSED | _PAGE_DIRTY)
+
+#define PAGE_NONE	__pgprot(_PAGE_PROTNONE | _PAGE_ACCESSED)
+#define PAGE_SHARED	__pgprot(_PAGE_PRESENT | _PAGE_RW | _PAGE_USER | _PAGE_ACCESSED | _PAGE_NX)
+#define PAGE_SHARED_EXEC __pgprot(_PAGE_PRESENT | _PAGE_RW | _PAGE_USER | _PAGE_ACCESSED)
+#define PAGE_COPY_NOEXEC __pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED | _PAGE_NX)
+#define PAGE_COPY PAGE_COPY_NOEXEC
+#define PAGE_COPY_EXEC __pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED)
+#define PAGE_READONLY	__pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED | _PAGE_NX)
+#define PAGE_READONLY_EXEC __pgprot(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED)
+#define __PAGE_KERNEL \
+	(_PAGE_PRESENT | _PAGE_RW | _PAGE_DIRTY | _PAGE_ACCESSED | _PAGE_NX)
+#define __PAGE_KERNEL_EXEC \
+	(_PAGE_PRESENT | _PAGE_RW | _PAGE_DIRTY | _PAGE_ACCESSED)
+#define __PAGE_KERNEL_NOCACHE \
+	(_PAGE_PRESENT | _PAGE_RW | _PAGE_DIRTY | _PAGE_PCD | _PAGE_ACCESSED | _PAGE_NX)
+#define __PAGE_KERNEL_RO \
+	(_PAGE_PRESENT | _PAGE_DIRTY | _PAGE_ACCESSED | _PAGE_NX)
+#define __PAGE_KERNEL_VSYSCALL \
+	(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED)
+#define __PAGE_KERNEL_VSYSCALL_NOCACHE \
+	(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED | _PAGE_PCD)
+#define __PAGE_KERNEL_LARGE \
+	(__PAGE_KERNEL | _PAGE_PSE)
+#define __PAGE_KERNEL_LARGE_EXEC \
+	(__PAGE_KERNEL_EXEC | _PAGE_PSE)
+
+#define MAKE_GLOBAL(x) __pgprot((x) | _PAGE_GLOBAL)
+
+#define PAGE_KERNEL MAKE_GLOBAL(__PAGE_KERNEL)
+#define PAGE_KERNEL_EXEC MAKE_GLOBAL(__PAGE_KERNEL_EXEC)
+#define PAGE_KERNEL_RO MAKE_GLOBAL(__PAGE_KERNEL_RO)
+#define PAGE_KERNEL_NOCACHE MAKE_GLOBAL(__PAGE_KERNEL_NOCACHE)
+#define PAGE_KERNEL_VSYSCALL32 __pgprot(__PAGE_KERNEL_VSYSCALL)
+#define PAGE_KERNEL_VSYSCALL MAKE_GLOBAL(__PAGE_KERNEL_VSYSCALL)
+#define PAGE_KERNEL_LARGE MAKE_GLOBAL(__PAGE_KERNEL_LARGE)
+#define PAGE_KERNEL_VSYSCALL_NOCACHE MAKE_GLOBAL(__PAGE_KERNEL_VSYSCALL_NOCACHE)
+
+/*         xwr */
+#define __P000	PAGE_NONE
+#define __P001	PAGE_READONLY
+#define __P010	PAGE_COPY
+#define __P011	PAGE_COPY
+#define __P100	PAGE_READONLY_EXEC
+#define __P101	PAGE_READONLY_EXEC
+#define __P110	PAGE_COPY_EXEC
+#define __P111	PAGE_COPY_EXEC
+
+#define __S000	PAGE_NONE
+#define __S001	PAGE_READONLY
+#define __S010	PAGE_SHARED
+#define __S011	PAGE_SHARED
+#define __S100	PAGE_READONLY_EXEC
+#define __S101	PAGE_READONLY_EXEC
+#define __S110	PAGE_SHARED_EXEC
+#define __S111	PAGE_SHARED_EXEC
+
+#ifndef __ASSEMBLY__
+
+static inline unsigned long pgd_bad(pgd_t pgd)
+{
+	return pgd_val(pgd) & ~(PTE_MASK | _KERNPG_TABLE | _PAGE_USER);
+}
+
+static inline unsigned long pud_bad(pud_t pud)
+{
+	return pud_val(pud) & ~(PTE_MASK | _KERNPG_TABLE | _PAGE_USER);
+}
+
+static inline unsigned long pmd_bad(pmd_t pmd)
+{
+	return pmd_val(pmd) & ~(PTE_MASK | _KERNPG_TABLE | _PAGE_USER);
+}
+
+#define pte_none(x)	(!pte_val(x))
+#define pte_present(x)	(pte_val(x) & (_PAGE_PRESENT | _PAGE_PROTNONE))
+#define pte_clear(mm,addr,xp)	do { set_pte_at(mm, addr, xp, __pte(0)); } while (0)
+
+#define pages_to_mb(x) ((x) >> (20-PAGE_SHIFT))	/* FIXME: is this
+						   right? */
+#define pte_page(x)	pfn_to_page(pte_pfn(x))
+#define pte_pfn(x)  ((pte_val(x) & __PHYSICAL_MASK) >> PAGE_SHIFT)
+
+static inline pte_t pfn_pte(unsigned long page_nr, pgprot_t pgprot)
+{
+	pte_t pte;
+	pte_val(pte) = (page_nr << PAGE_SHIFT);
+	pte_val(pte) |= pgprot_val(pgprot);
+	pte_val(pte) &= __supported_pte_mask;
+	return pte;
+}
+
+/*
+ * The following only work if pte_present() is true.
+ * Undefined behaviour if not..
+ */
+#define __LARGE_PTE (_PAGE_PSE|_PAGE_PRESENT)
+static inline int pte_dirty(pte_t pte)		{ return pte_val(pte) & _PAGE_DIRTY; }
+static inline int pte_young(pte_t pte)		{ return pte_val(pte) & _PAGE_ACCESSED; }
+static inline int pte_write(pte_t pte)		{ return pte_val(pte) & _PAGE_RW; }
+static inline int pte_file(pte_t pte)		{ return pte_val(pte) & _PAGE_FILE; }
+static inline int pte_huge(pte_t pte)		{ return pte_val(pte) & _PAGE_PSE; }
+
+static inline pte_t pte_mkclean(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_DIRTY)); return pte; }
+static inline pte_t pte_mkold(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_ACCESSED)); return pte; }
+static inline pte_t pte_wrprotect(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_RW)); return pte; }
+static inline pte_t pte_mkexec(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_NX)); return pte; }
+static inline pte_t pte_mkdirty(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_DIRTY)); return pte; }
+static inline pte_t pte_mkyoung(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_ACCESSED)); return pte; }
+static inline pte_t pte_mkwrite(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_RW)); return pte; }
+static inline pte_t pte_mkhuge(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) | _PAGE_PSE)); return pte; }
+static inline pte_t pte_clrhuge(pte_t pte)	{ set_pte(&pte, __pte(pte_val(pte) & ~_PAGE_PSE)); return pte; }
+
+struct vm_area_struct;
+
+static inline int ptep_test_and_clear_young(struct vm_area_struct *vma, unsigned long addr, pte_t *ptep)
+{
+	if (!pte_young(*ptep))
+		return 0;
+	return test_and_clear_bit(_PAGE_BIT_ACCESSED, &ptep->pte);
+}
+
+static inline void ptep_set_wrprotect(struct mm_struct *mm, unsigned long addr, pte_t *ptep)
+{
+	clear_bit(_PAGE_BIT_RW, &ptep->pte);
+}
+
+/*
+ * Macro to mark a page protection value as "uncacheable".
+ */
+#define pgprot_noncached(prot)	(__pgprot(pgprot_val(prot) | _PAGE_PCD | _PAGE_PWT))
+
+static inline int pmd_large(pmd_t pte) { 
+	return (pmd_val(pte) & __LARGE_PTE) == __LARGE_PTE; 
+} 	
+
+
+/*
+ * Conversion functions: convert a page and protection to a page entry,
+ * and a page entry and page directory to the page they refer to.
+ */
+
+/*
+ * Level 4 access.
+ */
+#define pgd_page_vaddr(pgd) ((unsigned long) __va((unsigned long)pgd_val(pgd) & PTE_MASK))
+#define pgd_page(pgd)		(pfn_to_page(pgd_val(pgd) >> PAGE_SHIFT))
+#define pgd_index(address) (((address) >> PGDIR_SHIFT) & (PTRS_PER_PGD-1))
+#define pgd_offset(mm, addr) ((mm)->pgd + pgd_index(addr))
+#define pgd_offset_k(address) (init_level4_pgt + pgd_index(address))
+#define pgd_present(pgd) (pgd_val(pgd) & _PAGE_PRESENT)
+#define mk_kernel_pgd(address) ((pgd_t){ (address) | _KERNPG_TABLE })
+
+/* PUD - Level3 access */
+/* to find an entry in a page-table-directory. */
+#define pud_page_vaddr(pud) ((unsigned long) __va(pud_val(pud) & PHYSICAL_PAGE_MASK))
+#define pud_page(pud)		(pfn_to_page(pud_val(pud) >> PAGE_SHIFT))
+#define pud_index(address) (((address) >> PUD_SHIFT) & (PTRS_PER_PUD-1))
+#define pud_offset(pgd, address) ((pud_t *) pgd_page_vaddr(*(pgd)) + pud_index(address))
+#define pud_present(pud) (pud_val(pud) & _PAGE_PRESENT)
+
+/* PMD  - Level 2 access */
+#define pmd_page_vaddr(pmd) ((unsigned long) __va(pmd_val(pmd) & PTE_MASK))
+#define pmd_page(pmd)		(pfn_to_page(pmd_val(pmd) >> PAGE_SHIFT))
+
+#define pmd_index(address) (((address) >> PMD_SHIFT) & (PTRS_PER_PMD-1))
+#define pmd_offset(dir, address) ((pmd_t *) pud_page_vaddr(*(dir)) + \
+			pmd_index(address))
+#define pmd_none(x)	(!pmd_val(x))
+#define pmd_present(x)	(pmd_val(x) & _PAGE_PRESENT)
+#define pmd_clear(xp)	do { set_pmd(xp, __pmd(0)); } while (0)
+#define pfn_pmd(nr,prot) (__pmd(((nr) << PAGE_SHIFT) | pgprot_val(prot)))
+#define pmd_pfn(x)  ((pmd_val(x) & __PHYSICAL_MASK) >> PAGE_SHIFT)
+
+#define pte_to_pgoff(pte) ((pte_val(pte) & PHYSICAL_PAGE_MASK) >> PAGE_SHIFT)
+#define pgoff_to_pte(off) ((pte_t) { ((off) << PAGE_SHIFT) | _PAGE_FILE })
+#define PTE_FILE_MAX_BITS __PHYSICAL_MASK_SHIFT
+
+/* PTE - Level 1 access. */
+
+/* page, protection -> pte */
+#define mk_pte(page, pgprot)	pfn_pte(page_to_pfn(page), (pgprot))
+#define mk_pte_huge(entry) (pte_val(entry) |= _PAGE_PRESENT | _PAGE_PSE)
+ 
+/* Change flags of a PTE */
+static inline pte_t pte_modify(pte_t pte, pgprot_t newprot)
+{ 
+	pte_val(pte) &= _PAGE_CHG_MASK;
+	pte_val(pte) |= pgprot_val(newprot);
+	pte_val(pte) &= __supported_pte_mask;
+       return pte; 
+}
+
+#define pte_index(address) \
+		(((address) >> PAGE_SHIFT) & (PTRS_PER_PTE - 1))
+#define pte_offset_kernel(dir, address) ((pte_t *) pmd_page_vaddr(*(dir)) + \
+			pte_index(address))
+
+/* x86-64 always has all page tables mapped. */
+#define pte_offset_map(dir,address) pte_offset_kernel(dir,address)
+#define pte_offset_map_nested(dir,address) pte_offset_kernel(dir,address)
+#define pte_unmap(pte) /* NOP */
+#define pte_unmap_nested(pte) /* NOP */ 
+
+#define update_mmu_cache(vma,address,pte) do { } while (0)
+
+/* We only update the dirty/accessed state if we set
+ * the dirty bit by hand in the kernel, since the hardware
+ * will do the accessed bit for us, and we don't want to
+ * race with other CPU's that might be updating the dirty
+ * bit at the same time. */
+#define  __HAVE_ARCH_PTEP_SET_ACCESS_FLAGS
+#define ptep_set_access_flags(__vma, __address, __ptep, __entry, __dirty) \
+({									  \
+	int __changed = !pte_same(*(__ptep), __entry);			  \
+	if (__changed && __dirty) {					  \
+		set_pte(__ptep, __entry);			  	  \
+		flush_tlb_page(__vma, __address);		  	  \
+	}								  \
+	__changed;							  \
+})
+
+/* Encode and de-code a swap entry */
+#define __swp_type(x)			(((x).val >> 1) & 0x3f)
+#define __swp_offset(x)			((x).val >> 8)
+#define __swp_entry(type, offset)	((swp_entry_t) { ((type) << 1) | ((offset) << 8) })
+#define __pte_to_swp_entry(pte)		((swp_entry_t) { pte_val(pte) })
+#define __swp_entry_to_pte(x)		((pte_t) { (x).val })
+
+extern spinlock_t pgd_lock;
+extern struct list_head pgd_list;
+
+extern int kern_addr_valid(unsigned long addr); 
+
+pte_t *lookup_address(unsigned long addr);
+
+#define io_remap_pfn_range(vma, vaddr, pfn, size, prot)		\
+		remap_pfn_range(vma, vaddr, pfn, size, prot)
+
+#define HAVE_ARCH_UNMAPPED_AREA
+
+#define pgtable_cache_init()   do { } while (0)
+#define check_pgt_cache()      do { } while (0)
+
+#define PAGE_AGP    PAGE_KERNEL_NOCACHE
+#define HAVE_PAGE_AGP 1
+
+/* fs/proc/kcore.c */
+#define	kc_vaddr_to_offset(v) ((v) & __VIRTUAL_MASK)
+#define	kc_offset_to_vaddr(o) \
+   (((o) & (1UL << (__VIRTUAL_MASK_SHIFT-1))) ? ((o) | (~__VIRTUAL_MASK)) : (o))
+
+#define __HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG
+#define __HAVE_ARCH_PTEP_GET_AND_CLEAR
+#define __HAVE_ARCH_PTEP_GET_AND_CLEAR_FULL
+#define __HAVE_ARCH_PTEP_SET_WRPROTECT
+#define __HAVE_ARCH_PTE_SAME
+#include <asm-generic/pgtable.h>
+#endif /* !__ASSEMBLY__ */
+
+#endif /* _X86_64_PGTABLE_H */
diff -urpN linux-2.6.23-sabayon/include/asm/poll.h testtry/include/asm/poll.h
--- linux-2.6.23-sabayon/include/asm/poll.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/poll.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-generic/poll.h>
diff -urpN linux-2.6.23-sabayon/include/asm/posix_types.h testtry/include/asm/posix_types.h
--- linux-2.6.23-sabayon/include/asm/posix_types.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/posix_types.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,119 @@
+#ifndef _ASM_X86_64_POSIX_TYPES_H
+#define _ASM_X86_64_POSIX_TYPES_H
+
+/*
+ * This file is generally used by user-level software, so you need to
+ * be a little careful about namespace pollution etc.  Also, we cannot
+ * assume GCC is being used.
+ */
+
+typedef unsigned long	__kernel_ino_t;
+typedef unsigned int	__kernel_mode_t;
+typedef unsigned long	__kernel_nlink_t;
+typedef long		__kernel_off_t;
+typedef int		__kernel_pid_t;
+typedef int		__kernel_ipc_pid_t;
+typedef unsigned int	__kernel_uid_t;
+typedef unsigned int	__kernel_gid_t;
+typedef unsigned long	__kernel_size_t;
+typedef long		__kernel_ssize_t;
+typedef long		__kernel_ptrdiff_t;
+typedef long		__kernel_time_t;
+typedef long		__kernel_suseconds_t;
+typedef long		__kernel_clock_t;
+typedef int		__kernel_timer_t;
+typedef int		__kernel_clockid_t;
+typedef int		__kernel_daddr_t;
+typedef char *		__kernel_caddr_t;
+typedef unsigned short	__kernel_uid16_t;
+typedef unsigned short	__kernel_gid16_t;
+
+#ifdef __GNUC__
+typedef long long	__kernel_loff_t;
+#endif
+
+typedef struct {
+	int	val[2];
+} __kernel_fsid_t;
+
+typedef unsigned short __kernel_old_uid_t;
+typedef unsigned short __kernel_old_gid_t;
+typedef __kernel_uid_t __kernel_uid32_t;
+typedef __kernel_gid_t __kernel_gid32_t;
+
+typedef unsigned long	__kernel_old_dev_t;
+
+#ifdef __KERNEL__
+
+#undef __FD_SET
+static __inline__ void __FD_SET(unsigned long fd, __kernel_fd_set *fdsetp)
+{
+	unsigned long _tmp = fd / __NFDBITS;
+	unsigned long _rem = fd % __NFDBITS;
+	fdsetp->fds_bits[_tmp] |= (1UL<<_rem);
+}
+
+#undef __FD_CLR
+static __inline__ void __FD_CLR(unsigned long fd, __kernel_fd_set *fdsetp)
+{
+	unsigned long _tmp = fd / __NFDBITS;
+	unsigned long _rem = fd % __NFDBITS;
+	fdsetp->fds_bits[_tmp] &= ~(1UL<<_rem);
+}
+
+#undef __FD_ISSET
+static __inline__ int __FD_ISSET(unsigned long fd, __const__ __kernel_fd_set *p)
+{
+	unsigned long _tmp = fd / __NFDBITS;
+	unsigned long _rem = fd % __NFDBITS;
+	return (p->fds_bits[_tmp] & (1UL<<_rem)) != 0;
+}
+
+/*
+ * This will unroll the loop for the normal constant cases (8 or 32 longs,
+ * for 256 and 1024-bit fd_sets respectively)
+ */
+#undef __FD_ZERO
+static __inline__ void __FD_ZERO(__kernel_fd_set *p)
+{
+	unsigned long *tmp = p->fds_bits;
+	int i;
+
+	if (__builtin_constant_p(__FDSET_LONGS)) {
+		switch (__FDSET_LONGS) {
+			case 32:
+			  tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
+			  tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
+			  tmp[ 8] = 0; tmp[ 9] = 0; tmp[10] = 0; tmp[11] = 0;
+			  tmp[12] = 0; tmp[13] = 0; tmp[14] = 0; tmp[15] = 0;
+			  tmp[16] = 0; tmp[17] = 0; tmp[18] = 0; tmp[19] = 0;
+			  tmp[20] = 0; tmp[21] = 0; tmp[22] = 0; tmp[23] = 0;
+			  tmp[24] = 0; tmp[25] = 0; tmp[26] = 0; tmp[27] = 0;
+			  tmp[28] = 0; tmp[29] = 0; tmp[30] = 0; tmp[31] = 0;
+			  return;
+			case 16:
+			  tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
+			  tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
+			  tmp[ 8] = 0; tmp[ 9] = 0; tmp[10] = 0; tmp[11] = 0;
+			  tmp[12] = 0; tmp[13] = 0; tmp[14] = 0; tmp[15] = 0;
+			  return;
+			case 8:
+			  tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
+			  tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
+			  return;
+			case 4:
+			  tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
+			  return;
+		}
+	}
+	i = __FDSET_LONGS;
+	while (i) {
+		i--;
+		*tmp = 0;
+		tmp++;
+	}
+}
+
+#endif /* defined(__KERNEL__) */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/prctl.h testtry/include/asm/prctl.h
--- linux-2.6.23-sabayon/include/asm/prctl.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/prctl.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,10 @@
+#ifndef X86_64_PRCTL_H
+#define X86_64_PRCTL_H 1
+
+#define ARCH_SET_GS 0x1001
+#define ARCH_SET_FS 0x1002
+#define ARCH_GET_FS 0x1003
+#define ARCH_GET_GS 0x1004
+
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/processor-flags.h testtry/include/asm/processor-flags.h
--- linux-2.6.23-sabayon/include/asm/processor-flags.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/processor-flags.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/processor-flags.h>
diff -urpN linux-2.6.23-sabayon/include/asm/processor.h testtry/include/asm/processor.h
--- linux-2.6.23-sabayon/include/asm/processor.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/processor.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,439 @@
+/*
+ * include/asm-x86_64/processor.h
+ *
+ * Copyright (C) 1994 Linus Torvalds
+ */
+
+#ifndef __ASM_X86_64_PROCESSOR_H
+#define __ASM_X86_64_PROCESSOR_H
+
+#include <asm/segment.h>
+#include <asm/page.h>
+#include <asm/types.h>
+#include <asm/sigcontext.h>
+#include <asm/cpufeature.h>
+#include <linux/threads.h>
+#include <asm/msr.h>
+#include <asm/current.h>
+#include <asm/system.h>
+#include <asm/mmsegment.h>
+#include <asm/percpu.h>
+#include <linux/personality.h>
+#include <linux/cpumask.h>
+#include <asm/processor-flags.h>
+
+#define TF_MASK		0x00000100
+#define IF_MASK		0x00000200
+#define IOPL_MASK	0x00003000
+#define NT_MASK		0x00004000
+#define VM_MASK		0x00020000
+#define AC_MASK		0x00040000
+#define VIF_MASK	0x00080000	/* virtual interrupt flag */
+#define VIP_MASK	0x00100000	/* virtual interrupt pending */
+#define ID_MASK		0x00200000
+
+#define desc_empty(desc) \
+               (!((desc)->a | (desc)->b))
+
+#define desc_equal(desc1, desc2) \
+               (((desc1)->a == (desc2)->a) && ((desc1)->b == (desc2)->b))
+
+/*
+ * Default implementation of macro that returns current
+ * instruction pointer ("program counter").
+ */
+#define current_text_addr() ({ void *pc; asm volatile("leaq 1f(%%rip),%0\n1:":"=r"(pc)); pc; })
+
+/*
+ *  CPU type and hardware bug flags. Kept separately for each CPU.
+ */
+
+struct cpuinfo_x86 {
+	__u8	x86;		/* CPU family */
+	__u8	x86_vendor;	/* CPU vendor */
+	__u8	x86_model;
+	__u8	x86_mask;
+	int	cpuid_level;	/* Maximum supported CPUID level, -1=no CPUID */
+	__u32	x86_capability[NCAPINTS];
+	char	x86_vendor_id[16];
+	char	x86_model_id[64];
+	int 	x86_cache_size;  /* in KB */
+	int	x86_clflush_size;
+	int	x86_cache_alignment;
+	int	x86_tlbsize;	/* number of 4K pages in DTLB/ITLB combined(in pages)*/
+        __u8    x86_virt_bits, x86_phys_bits;
+	__u8	x86_max_cores;	/* cpuid returned max cores value */
+        __u32   x86_power; 	
+	__u32   extended_cpuid_level;	/* Max extended CPUID function supported */
+	unsigned long loops_per_jiffy;
+#ifdef CONFIG_SMP
+	cpumask_t llc_shared_map;	/* cpus sharing the last level cache */
+#endif
+	__u8	apicid;
+#ifdef CONFIG_SMP
+	__u8	booted_cores;	/* number of cores as seen by OS */
+	__u8	phys_proc_id;	/* Physical Processor id. */
+	__u8	cpu_core_id;	/* Core id. */
+#endif
+} ____cacheline_aligned;
+
+#define X86_VENDOR_INTEL 0
+#define X86_VENDOR_CYRIX 1
+#define X86_VENDOR_AMD 2
+#define X86_VENDOR_UMC 3
+#define X86_VENDOR_NEXGEN 4
+#define X86_VENDOR_CENTAUR 5
+#define X86_VENDOR_TRANSMETA 7
+#define X86_VENDOR_NUM 8
+#define X86_VENDOR_UNKNOWN 0xff
+
+#ifdef CONFIG_SMP
+extern struct cpuinfo_x86 cpu_data[];
+#define current_cpu_data cpu_data[smp_processor_id()]
+#else
+#define cpu_data (&boot_cpu_data)
+#define current_cpu_data boot_cpu_data
+#endif
+
+extern char ignore_irq13;
+
+extern void identify_cpu(struct cpuinfo_x86 *);
+extern void print_cpu_info(struct cpuinfo_x86 *);
+extern void init_scattered_cpuid_features(struct cpuinfo_x86 *c);
+extern unsigned int init_intel_cacheinfo(struct cpuinfo_x86 *c);
+extern unsigned short num_cache_leaves;
+
+/*
+ * Save the cr4 feature set we're using (ie
+ * Pentium 4MB enable and PPro Global page
+ * enable), so that any CPU's that boot up
+ * after us can get the correct flags.
+ */
+extern unsigned long mmu_cr4_features;
+
+static inline void set_in_cr4 (unsigned long mask)
+{
+	mmu_cr4_features |= mask;
+	__asm__("movq %%cr4,%%rax\n\t"
+		"orq %0,%%rax\n\t"
+		"movq %%rax,%%cr4\n"
+		: : "irg" (mask)
+		:"ax");
+}
+
+static inline void clear_in_cr4 (unsigned long mask)
+{
+	mmu_cr4_features &= ~mask;
+	__asm__("movq %%cr4,%%rax\n\t"
+		"andq %0,%%rax\n\t"
+		"movq %%rax,%%cr4\n"
+		: : "irg" (~mask)
+		:"ax");
+}
+
+
+/*
+ * User space process size. 47bits minus one guard page.
+ */
+#define TASK_SIZE64	(0x800000000000UL - 4096)
+
+/* This decides where the kernel will search for a free chunk of vm
+ * space during mmap's.
+ */
+#define IA32_PAGE_OFFSET ((current->personality & ADDR_LIMIT_3GB) ? 0xc0000000 : 0xFFFFe000)
+
+#define TASK_SIZE 		(test_thread_flag(TIF_IA32) ? IA32_PAGE_OFFSET : TASK_SIZE64)
+#define TASK_SIZE_OF(child) 	((test_tsk_thread_flag(child, TIF_IA32)) ? IA32_PAGE_OFFSET : TASK_SIZE64)
+
+#define TASK_UNMAPPED_BASE	PAGE_ALIGN(TASK_SIZE/3)
+
+/*
+ * Size of io_bitmap.
+ */
+#define IO_BITMAP_BITS  65536
+#define IO_BITMAP_BYTES (IO_BITMAP_BITS/8)
+#define IO_BITMAP_LONGS (IO_BITMAP_BYTES/sizeof(long))
+#define IO_BITMAP_OFFSET offsetof(struct tss_struct,io_bitmap)
+#define INVALID_IO_BITMAP_OFFSET 0x8000
+
+struct i387_fxsave_struct {
+	u16	cwd;
+	u16	swd;
+	u16	twd;
+	u16	fop;
+	u64	rip;
+	u64	rdp; 
+	u32	mxcsr;
+	u32	mxcsr_mask;
+	u32	st_space[32];	/* 8*16 bytes for each FP-reg = 128 bytes */
+	u32	xmm_space[64];	/* 16*16 bytes for each XMM-reg = 256 bytes */
+	u32	padding[24];
+} __attribute__ ((aligned (16)));
+
+union i387_union {
+	struct i387_fxsave_struct	fxsave;
+};
+
+struct tss_struct {
+	u32 reserved1;
+	u64 rsp0;	
+	u64 rsp1;
+	u64 rsp2;
+	u64 reserved2;
+	u64 ist[7];
+	u32 reserved3;
+	u32 reserved4;
+	u16 reserved5;
+	u16 io_bitmap_base;
+	/*
+	 * The extra 1 is there because the CPU will access an
+	 * additional byte beyond the end of the IO permission
+	 * bitmap. The extra byte must be all 1 bits, and must
+	 * be within the limit. Thus we have:
+	 *
+	 * 128 bytes, the bitmap itself, for ports 0..0x3ff
+	 * 8 bytes, for an extra "long" of ~0UL
+	 */
+	unsigned long io_bitmap[IO_BITMAP_LONGS + 1];
+} __attribute__((packed)) ____cacheline_aligned;
+
+
+extern struct cpuinfo_x86 boot_cpu_data;
+DECLARE_PER_CPU(struct tss_struct,init_tss);
+/* Save the original ist values for checking stack pointers during debugging */
+struct orig_ist {
+	unsigned long ist[7];
+};
+DECLARE_PER_CPU(struct orig_ist, orig_ist);
+
+#ifdef CONFIG_X86_VSMP
+#define ARCH_MIN_TASKALIGN	(1 << INTERNODE_CACHE_SHIFT)
+#define ARCH_MIN_MMSTRUCT_ALIGN	(1 << INTERNODE_CACHE_SHIFT)
+#else
+#define ARCH_MIN_TASKALIGN	16
+#define ARCH_MIN_MMSTRUCT_ALIGN	0
+#endif
+
+struct thread_struct {
+	unsigned long	rsp0;
+	unsigned long	rsp;
+	unsigned long 	userrsp;	/* Copy from PDA */ 
+	unsigned long	fs;
+	unsigned long	gs;
+	unsigned short	es, ds, fsindex, gsindex;	
+/* Hardware debugging registers */
+	unsigned long	debugreg0;  
+	unsigned long	debugreg1;  
+	unsigned long	debugreg2;  
+	unsigned long	debugreg3;  
+	unsigned long	debugreg6;  
+	unsigned long	debugreg7;  
+/* fault info */
+	unsigned long	cr2, trap_no, error_code;
+/* floating point info */
+	union i387_union	i387  __attribute__((aligned(16)));
+/* IO permissions. the bitmap could be moved into the GDT, that would make
+   switch faster for a limited number of ioperm using tasks. -AK */
+	int		ioperm;
+	unsigned long	*io_bitmap_ptr;
+	unsigned io_bitmap_max;
+/* cached TLS descriptors. */
+	u64 tls_array[GDT_ENTRY_TLS_ENTRIES];
+} __attribute__((aligned(16)));
+
+#define INIT_THREAD  { \
+	.rsp0 = (unsigned long)&init_stack + sizeof(init_stack) \
+}
+
+#define INIT_TSS  { \
+	.rsp0 = (unsigned long)&init_stack + sizeof(init_stack) \
+}
+
+#define INIT_MMAP \
+{ &init_mm, 0, 0, NULL, PAGE_SHARED, VM_READ | VM_WRITE | VM_EXEC, 1, NULL, NULL }
+
+#define start_thread(regs,new_rip,new_rsp) do { \
+	asm volatile("movl %0,%%fs; movl %0,%%es; movl %0,%%ds": :"r" (0));	 \
+	load_gs_index(0);							\
+	(regs)->rip = (new_rip);						 \
+	(regs)->rsp = (new_rsp);						 \
+	write_pda(oldrsp, (new_rsp));						 \
+	(regs)->cs = __USER_CS;							 \
+	(regs)->ss = __USER_DS;							 \
+	(regs)->eflags = 0x200;							 \
+	set_fs(USER_DS);							 \
+} while(0) 
+
+#define get_debugreg(var, register)				\
+		__asm__("movq %%db" #register ", %0"		\
+			:"=r" (var))
+#define set_debugreg(value, register)			\
+		__asm__("movq %0,%%db" #register		\
+			: /* no output */			\
+			:"r" (value))
+
+struct task_struct;
+struct mm_struct;
+
+/* Free all resources held by a thread. */
+extern void release_thread(struct task_struct *);
+
+/* Prepare to copy thread state - unlazy all lazy status */
+extern void prepare_to_copy(struct task_struct *tsk);
+
+/*
+ * create a kernel thread without removing it from tasklists
+ */
+extern long kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);
+
+/*
+ * Return saved PC of a blocked thread.
+ * What is this good for? it will be always the scheduler or ret_from_fork.
+ */
+#define thread_saved_pc(t) (*(unsigned long *)((t)->thread.rsp - 8))
+
+extern unsigned long get_wchan(struct task_struct *p);
+#define task_pt_regs(tsk) ((struct pt_regs *)(tsk)->thread.rsp0 - 1)
+#define KSTK_EIP(tsk) (task_pt_regs(tsk)->rip)
+#define KSTK_ESP(tsk) -1 /* sorry. doesn't work for syscall. */
+
+
+struct microcode_header {
+	unsigned int hdrver;
+	unsigned int rev;
+	unsigned int date;
+	unsigned int sig;
+	unsigned int cksum;
+	unsigned int ldrver;
+	unsigned int pf;
+	unsigned int datasize;
+	unsigned int totalsize;
+	unsigned int reserved[3];
+};
+
+struct microcode {
+	struct microcode_header hdr;
+	unsigned int bits[0];
+};
+
+typedef struct microcode microcode_t;
+typedef struct microcode_header microcode_header_t;
+
+/* microcode format is extended from prescott processors */
+struct extended_signature {
+	unsigned int sig;
+	unsigned int pf;
+	unsigned int cksum;
+};
+
+struct extended_sigtable {
+	unsigned int count;
+	unsigned int cksum;
+	unsigned int reserved[3];
+	struct extended_signature sigs[0];
+};
+
+
+#define ASM_NOP1 K8_NOP1
+#define ASM_NOP2 K8_NOP2
+#define ASM_NOP3 K8_NOP3
+#define ASM_NOP4 K8_NOP4
+#define ASM_NOP5 K8_NOP5
+#define ASM_NOP6 K8_NOP6
+#define ASM_NOP7 K8_NOP7
+#define ASM_NOP8 K8_NOP8
+
+/* Opteron nops */
+#define K8_NOP1 ".byte 0x90\n"
+#define K8_NOP2	".byte 0x66,0x90\n" 
+#define K8_NOP3	".byte 0x66,0x66,0x90\n" 
+#define K8_NOP4	".byte 0x66,0x66,0x66,0x90\n" 
+#define K8_NOP5	K8_NOP3 K8_NOP2 
+#define K8_NOP6	K8_NOP3 K8_NOP3
+#define K8_NOP7	K8_NOP4 K8_NOP3
+#define K8_NOP8	K8_NOP4 K8_NOP4
+
+#define ASM_NOP_MAX 8
+
+/* REP NOP (PAUSE) is a good thing to insert into busy-wait loops. */
+static inline void rep_nop(void)
+{
+	__asm__ __volatile__("rep;nop": : :"memory");
+}
+
+/* Stop speculative execution */
+static inline void sync_core(void)
+{ 
+	int tmp;
+	asm volatile("cpuid" : "=a" (tmp) : "0" (1) : "ebx","ecx","edx","memory");
+} 
+
+#define ARCH_HAS_PREFETCH
+static inline void prefetch(void *x) 
+{ 
+	asm volatile("prefetcht0 (%0)" :: "r" (x));
+} 
+
+#define ARCH_HAS_PREFETCHW 1
+static inline void prefetchw(void *x) 
+{ 
+	alternative_input("prefetcht0 (%1)",
+			  "prefetchw (%1)",
+			  X86_FEATURE_3DNOW,
+			  "r" (x));
+} 
+
+#define ARCH_HAS_SPINLOCK_PREFETCH 1
+
+#define spin_lock_prefetch(x)  prefetchw(x)
+
+#define cpu_relax()   rep_nop()
+
+static inline void serialize_cpu(void)
+{
+	__asm__ __volatile__ ("cpuid" : : : "ax", "bx", "cx", "dx");
+}
+
+static inline void __monitor(const void *eax, unsigned long ecx,
+		unsigned long edx)
+{
+	/* "monitor %eax,%ecx,%edx;" */
+	asm volatile(
+		".byte 0x0f,0x01,0xc8;"
+		: :"a" (eax), "c" (ecx), "d"(edx));
+}
+
+static inline void __mwait(unsigned long eax, unsigned long ecx)
+{
+	/* "mwait %eax,%ecx;" */
+	asm volatile(
+		".byte 0x0f,0x01,0xc9;"
+		: :"a" (eax), "c" (ecx));
+}
+
+static inline void __sti_mwait(unsigned long eax, unsigned long ecx)
+{
+	/* "mwait %eax,%ecx;" */
+	asm volatile(
+		"sti; .byte 0x0f,0x01,0xc9;"
+		: :"a" (eax), "c" (ecx));
+}
+
+extern void mwait_idle_with_hints(unsigned long eax, unsigned long ecx);
+
+#define stack_current() \
+({								\
+	struct thread_info *ti;					\
+	asm("andq %%rsp,%0; ":"=r" (ti) : "0" (CURRENT_MASK));	\
+	ti->task;					\
+})
+
+#define cache_line_size() (boot_cpu_data.x86_cache_alignment)
+
+extern unsigned long boot_option_idle_override;
+/* Boot loader type from the setup header */
+extern int bootloader_type;
+
+#define HAVE_ARCH_PICK_MMAP_LAYOUT 1
+
+#endif /* __ASM_X86_64_PROCESSOR_H */
diff -urpN linux-2.6.23-sabayon/include/asm/proto.h testtry/include/asm/proto.h
--- linux-2.6.23-sabayon/include/asm/proto.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/proto.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,97 @@
+#ifndef _ASM_X8664_PROTO_H
+#define _ASM_X8664_PROTO_H 1
+
+#include <asm/ldt.h>
+
+/* misc architecture specific prototypes */
+
+struct cpuinfo_x86; 
+struct pt_regs;
+
+extern void start_kernel(void);
+extern void pda_init(int); 
+
+extern void early_idt_handler(void);
+
+extern void mcheck_init(struct cpuinfo_x86 *c);
+extern void init_memory_mapping(unsigned long start, unsigned long end);
+
+extern void system_call(void); 
+extern int kernel_syscall(void);
+extern void syscall_init(void);
+
+extern void ia32_syscall(void);
+extern void ia32_cstar_target(void); 
+extern void ia32_sysenter_target(void); 
+
+extern void config_acpi_tables(void);
+extern void ia32_syscall(void);
+
+extern int pmtimer_mark_offset(void);
+extern void pmtimer_resume(void);
+extern void pmtimer_wait(unsigned);
+extern unsigned int do_gettimeoffset_pm(void);
+#ifdef CONFIG_X86_PM_TIMER
+extern u32 pmtmr_ioport;
+#else
+#define pmtmr_ioport 0
+#endif
+extern int nohpet;
+
+extern void early_printk(const char *fmt, ...) __attribute__((format(printf,1,2)));
+
+extern void early_identify_cpu(struct cpuinfo_x86 *c);
+
+extern int k8_scan_nodes(unsigned long start, unsigned long end);
+
+extern void numa_initmem_init(unsigned long start_pfn, unsigned long end_pfn);
+extern unsigned long numa_free_all_bootmem(void);
+
+extern void reserve_bootmem_generic(unsigned long phys, unsigned len);
+
+extern void load_gs_index(unsigned gs);
+
+extern unsigned long end_pfn_map; 
+
+extern void show_trace(struct task_struct *, struct pt_regs *, unsigned long * rsp);
+extern void show_registers(struct pt_regs *regs);
+
+extern void exception_table_check(void);
+
+extern void acpi_reserve_bootmem(void);
+
+extern void swap_low_mappings(void);
+
+extern void __show_regs(struct pt_regs * regs);
+extern void show_regs(struct pt_regs * regs);
+
+extern void syscall32_cpu_init(void);
+
+extern void setup_node_bootmem(int nodeid, unsigned long start, unsigned long end);
+
+extern void early_quirks(void);
+extern void check_efer(void);
+
+extern void select_idle_routine(const struct cpuinfo_x86 *c);
+
+extern unsigned long table_start, table_end;
+
+extern int exception_trace;
+extern unsigned cpu_khz;
+extern unsigned tsc_khz;
+
+extern int reboot_force;
+extern int notsc_setup(char *);
+
+extern int timer_over_8254;
+
+extern int gsi_irq_sharing(int gsi);
+
+extern int force_mwait;
+
+long do_arch_prctl(struct task_struct *task, int code, unsigned long addr);
+
+#define round_up(x,y) (((x) + (y) - 1) & ~((y)-1))
+#define round_down(x,y) ((x) & ~((y)-1))
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/ptrace-abi.h testtry/include/asm/ptrace-abi.h
--- linux-2.6.23-sabayon/include/asm/ptrace-abi.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ptrace-abi.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,51 @@
+#ifndef _X86_64_PTRACE_ABI_H
+#define _X86_64_PTRACE_ABI_H
+
+#if defined(__ASSEMBLY__) || defined(__FRAME_OFFSETS)
+#define R15 0
+#define R14 8
+#define R13 16
+#define R12 24
+#define RBP 32
+#define RBX 40
+/* arguments: interrupts/non tracing syscalls only save upto here*/
+#define R11 48
+#define R10 56
+#define R9 64
+#define R8 72
+#define RAX 80
+#define RCX 88
+#define RDX 96
+#define RSI 104
+#define RDI 112
+#define ORIG_RAX 120       /* = ERROR */
+/* end of arguments */
+/* cpu exception frame or undefined in case of fast syscall. */
+#define RIP 128
+#define CS 136
+#define EFLAGS 144
+#define RSP 152
+#define SS 160
+#define ARGOFFSET R11
+#endif /* __ASSEMBLY__ */
+
+/* top of stack page */
+#define FRAME_SIZE 168
+
+#define PTRACE_OLDSETOPTIONS         21
+
+/* Arbitrarily choose the same ptrace numbers as used by the Sparc code. */
+#define PTRACE_GETREGS            12
+#define PTRACE_SETREGS            13
+#define PTRACE_GETFPREGS          14
+#define PTRACE_SETFPREGS          15
+#define PTRACE_GETFPXREGS         18
+#define PTRACE_SETFPXREGS         19
+
+/* only useful for access 32bit programs */
+#define PTRACE_GET_THREAD_AREA    25
+#define PTRACE_SET_THREAD_AREA    26
+
+#define PTRACE_ARCH_PRCTL	  30	/* arch_prctl for child */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/ptrace.h testtry/include/asm/ptrace.h
--- linux-2.6.23-sabayon/include/asm/ptrace.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ptrace.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,78 @@
+#ifndef _X86_64_PTRACE_H
+#define _X86_64_PTRACE_H
+
+#include <linux/compiler.h>	/* For __user */
+#include <asm/ptrace-abi.h>
+
+#ifndef __ASSEMBLY__
+
+struct pt_regs {
+	unsigned long r15;
+	unsigned long r14;
+	unsigned long r13;
+	unsigned long r12;
+	unsigned long rbp;
+	unsigned long rbx;
+/* arguments: non interrupts/non tracing syscalls only save upto here*/
+ 	unsigned long r11;
+	unsigned long r10;
+	unsigned long r9;
+	unsigned long r8;
+	unsigned long rax;
+	unsigned long rcx;
+	unsigned long rdx;
+	unsigned long rsi;
+	unsigned long rdi;
+	unsigned long orig_rax;
+/* end of arguments */
+/* cpu exception frame or undefined */
+	unsigned long rip;
+	unsigned long cs;
+	unsigned long eflags;
+	unsigned long rsp;
+	unsigned long ss;
+/* top of stack page */
+};
+
+#endif
+
+#if defined(__KERNEL__) && !defined(__ASSEMBLY__) 
+#define user_mode(regs) (!!((regs)->cs & 3))
+#define user_mode_vm(regs) user_mode(regs)
+#define instruction_pointer(regs) ((regs)->rip)
+#define regs_return_value(regs) ((regs)->rax)
+
+extern unsigned long profile_pc(struct pt_regs *regs);
+void signal_fault(struct pt_regs *regs, void __user *frame, char *where);
+
+struct task_struct;
+
+extern unsigned long
+convert_rip_to_linear(struct task_struct *child, struct pt_regs *regs);
+
+enum {
+        EF_CF   = 0x00000001,
+        EF_PF   = 0x00000004,
+        EF_AF   = 0x00000010,
+        EF_ZF   = 0x00000040,
+        EF_SF   = 0x00000080,
+        EF_TF   = 0x00000100,
+        EF_IE   = 0x00000200,
+        EF_DF   = 0x00000400,
+        EF_OF   = 0x00000800,
+        EF_IOPL = 0x00003000,
+        EF_IOPL_RING0 = 0x00000000,
+        EF_IOPL_RING1 = 0x00001000,
+        EF_IOPL_RING2 = 0x00002000,
+        EF_NT   = 0x00004000,   /* nested task */
+        EF_RF   = 0x00010000,   /* resume */
+        EF_VM   = 0x00020000,   /* virtual mode */
+        EF_AC   = 0x00040000,   /* alignment */
+        EF_VIF  = 0x00080000,   /* virtual interrupt */
+        EF_VIP  = 0x00100000,   /* virtual interrupt pending */
+        EF_ID   = 0x00200000,   /* id */
+};
+
+#endif
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/required-features.h testtry/include/asm/required-features.h
--- linux-2.6.23-sabayon/include/asm/required-features.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/required-features.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,46 @@
+#ifndef _ASM_REQUIRED_FEATURES_H
+#define _ASM_REQUIRED_FEATURES_H 1
+
+/* Define minimum CPUID feature set for kernel These bits are checked
+   really early to actually display a visible error message before the
+   kernel dies.  Make sure to assign features to the proper mask!
+
+   The real information is in arch/x86_64/Kconfig.cpu, this just converts
+   the CONFIGs into a bitmask */
+
+/* x86-64 baseline features */
+#define NEED_FPU	(1<<(X86_FEATURE_FPU & 31))
+#define NEED_PSE	(1<<(X86_FEATURE_PSE & 31))
+#define NEED_MSR	(1<<(X86_FEATURE_MSR & 31))
+#define NEED_PAE	(1<<(X86_FEATURE_PAE & 31))
+#define NEED_CX8	(1<<(X86_FEATURE_CX8 & 31))
+#define NEED_PGE	(1<<(X86_FEATURE_PGE & 31))
+#define NEED_FXSR	(1<<(X86_FEATURE_FXSR & 31))
+#define NEED_CMOV	(1<<(X86_FEATURE_CMOV & 31))
+#define NEED_XMM	(1<<(X86_FEATURE_XMM & 31))
+#define NEED_XMM2	(1<<(X86_FEATURE_XMM2 & 31))
+
+#define REQUIRED_MASK0	(NEED_FPU|NEED_PSE|NEED_MSR|NEED_PAE|\
+			 NEED_CX8|NEED_PGE|NEED_FXSR|NEED_CMOV|\
+			 NEED_XMM|NEED_XMM2)
+#define SSE_MASK	(NEED_XMM|NEED_XMM2)
+
+/* x86-64 baseline features */
+#define NEED_LM		(1<<(X86_FEATURE_LM & 31))
+
+#ifdef CONFIG_X86_USE_3DNOW
+# define NEED_3DNOW	(1<<(X86_FEATURE_3DNOW & 31))
+#else
+# define NEED_3DNOW	0
+#endif
+
+#define REQUIRED_MASK1	(NEED_LM|NEED_3DNOW)
+
+#define REQUIRED_MASK2	0
+#define REQUIRED_MASK3	0
+#define REQUIRED_MASK4	0
+#define REQUIRED_MASK5	0
+#define REQUIRED_MASK6	0
+#define REQUIRED_MASK7	0
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/resource.h testtry/include/asm/resource.h
--- linux-2.6.23-sabayon/include/asm/resource.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/resource.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef _X8664_RESOURCE_H
+#define _X8664_RESOURCE_H
+
+#include <asm-generic/resource.h>
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/resume-trace.h testtry/include/asm/resume-trace.h
--- linux-2.6.23-sabayon/include/asm/resume-trace.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/resume-trace.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,13 @@
+#define TRACE_RESUME(user) do {					\
+	if (pm_trace_enabled) {					\
+		void *tracedata;				\
+		asm volatile("movq $1f,%0\n"			\
+			".section .tracedata,\"a\"\n"		\
+			"1:\t.word %c1\n"			\
+			"\t.quad %c2\n"				\
+			".previous"				\
+			:"=r" (tracedata)			\
+			: "i" (__LINE__), "i" (__FILE__));	\
+		generate_resume_trace(tracedata, user);		\
+	}							\
+} while (0)
diff -urpN linux-2.6.23-sabayon/include/asm/rio.h testtry/include/asm/rio.h
--- linux-2.6.23-sabayon/include/asm/rio.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/rio.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,74 @@
+/*
+ * Derived from include/asm-i386/mach-summit/mach_mpparse.h
+ *          and include/asm-i386/mach-default/bios_ebda.h
+ *
+ * Author: Laurent Vivier <Laurent.Vivier@bull.net>
+ */
+
+#ifndef __ASM_RIO_H
+#define __ASM_RIO_H
+
+#define RIO_TABLE_VERSION	3
+
+struct rio_table_hdr {
+	u8 version;      /* Version number of this data structure  */
+	u8 num_scal_dev; /* # of Scalability devices               */
+	u8 num_rio_dev;  /* # of RIO I/O devices                   */
+} __attribute__((packed));
+
+struct scal_detail {
+	u8 node_id;      /* Scalability Node ID                    */
+	u32 CBAR;        /* Address of 1MB register space          */
+	u8 port0node;    /* Node ID port connected to: 0xFF=None   */
+	u8 port0port;    /* Port num port connected to: 0,1,2, or  */
+	                 /* 0xFF=None                              */
+	u8 port1node;    /* Node ID port connected to: 0xFF = None */
+	u8 port1port;    /* Port num port connected to: 0,1,2, or  */
+	                 /* 0xFF=None                              */
+	u8 port2node;    /* Node ID port connected to: 0xFF = None */
+	u8 port2port;    /* Port num port connected to: 0,1,2, or  */
+	                 /* 0xFF=None                              */
+	u8 chassis_num;  /* 1 based Chassis number (1 = boot node) */
+} __attribute__((packed));
+
+struct rio_detail {
+	u8 node_id;      /* RIO Node ID                            */
+	u32 BBAR;        /* Address of 1MB register space          */
+	u8 type;         /* Type of device                         */
+	u8 owner_id;     /* Node ID of Hurricane that owns this    */
+	                 /* node                                   */
+	u8 port0node;    /* Node ID port connected to: 0xFF=None   */
+	u8 port0port;    /* Port num port connected to: 0,1,2, or  */
+	                 /* 0xFF=None                              */
+	u8 port1node;    /* Node ID port connected to: 0xFF=None   */
+	u8 port1port;    /* Port num port connected to: 0,1,2, or  */
+	                 /* 0xFF=None                              */
+	u8 first_slot;   /* Lowest slot number below this Calgary  */
+	u8 status;       /* Bit 0 = 1 : the XAPIC is used          */
+	                 /*       = 0 : the XAPIC is not used, ie: */
+	                 /*            ints fwded to another XAPIC */
+	                 /*           Bits1:7 Reserved             */
+	u8 WP_index;     /* instance index - lower ones have       */
+	                 /*     lower slot numbers/PCI bus numbers */
+	u8 chassis_num;  /* 1 based Chassis number                 */
+} __attribute__((packed));
+
+enum {
+	HURR_SCALABILTY	= 0,  /* Hurricane Scalability info */
+	HURR_RIOIB	= 2,  /* Hurricane RIOIB info       */
+	COMPAT_CALGARY	= 4,  /* Compatibility Calgary      */
+	ALT_CALGARY	= 5,  /* Second Planar Calgary      */
+};
+
+/*
+ * there is a real-mode segmented pointer pointing to the
+ * 4K EBDA area at 0x40E.
+ */
+static inline unsigned long get_bios_ebda(void)
+{
+	unsigned long address = *(unsigned short *)phys_to_virt(0x40EUL);
+	address <<= 4;
+	return address;
+}
+
+#endif /* __ASM_RIO_H */
diff -urpN linux-2.6.23-sabayon/include/asm/rtc.h testtry/include/asm/rtc.h
--- linux-2.6.23-sabayon/include/asm/rtc.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/rtc.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,10 @@
+#ifndef _X86_64_RTC_H
+#define _X86_64_RTC_H
+
+/*
+ * x86 uses the default access methods for the RTC.
+ */
+
+#include <asm-generic/rtc.h>
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/rwlock.h testtry/include/asm/rwlock.h
--- linux-2.6.23-sabayon/include/asm/rwlock.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/rwlock.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,26 @@
+/* include/asm-x86_64/rwlock.h
+ *
+ *	Helpers used by both rw spinlocks and rw semaphores.
+ *
+ *	Based in part on code from semaphore.h and
+ *	spinlock.h Copyright 1996 Linus Torvalds.
+ *
+ *	Copyright 1999 Red Hat, Inc.
+ *	Copyright 2001,2002 SuSE labs 
+ *
+ *	Written by Benjamin LaHaise.
+ *
+ *	This program is free software; you can redistribute it and/or
+ *	modify it under the terms of the GNU General Public License
+ *	as published by the Free Software Foundation; either version
+ *	2 of the License, or (at your option) any later version.
+ */
+#ifndef _ASM_X86_64_RWLOCK_H
+#define _ASM_X86_64_RWLOCK_H
+
+#define RW_LOCK_BIAS		 0x01000000
+#define RW_LOCK_BIAS_STR	 "0x01000000"
+
+/* Actual code is in asm/spinlock.h or in arch/x86_64/lib/rwlock.S */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/scatterlist.h testtry/include/asm/scatterlist.h
--- linux-2.6.23-sabayon/include/asm/scatterlist.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/scatterlist.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,24 @@
+#ifndef _X8664_SCATTERLIST_H
+#define _X8664_SCATTERLIST_H
+
+#include <asm/types.h>
+
+struct scatterlist {
+    struct page		*page;
+    unsigned int	offset;
+    unsigned int	length;
+    dma_addr_t		dma_address;
+    unsigned int        dma_length;
+};
+
+#define ISA_DMA_THRESHOLD (0x00ffffff)
+
+/* These macros should be used after a pci_map_sg call has been done
+ * to get bus addresses of each of the SG entries and their lengths.
+ * You should only work with the number of sg entries pci_map_sg
+ * returns.
+ */
+#define sg_dma_address(sg)     ((sg)->dma_address)
+#define sg_dma_len(sg)         ((sg)->dma_length)
+
+#endif 
diff -urpN linux-2.6.23-sabayon/include/asm/seccomp.h testtry/include/asm/seccomp.h
--- linux-2.6.23-sabayon/include/asm/seccomp.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/seccomp.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,24 @@
+#ifndef _ASM_SECCOMP_H
+
+#include <linux/thread_info.h>
+
+#ifdef TIF_32BIT
+#error "unexpected TIF_32BIT on x86_64"
+#else
+#define TIF_32BIT TIF_IA32
+#endif
+
+#include <linux/unistd.h>
+#include <asm/ia32_unistd.h>
+
+#define __NR_seccomp_read __NR_read
+#define __NR_seccomp_write __NR_write
+#define __NR_seccomp_exit __NR_exit
+#define __NR_seccomp_sigreturn __NR_rt_sigreturn
+
+#define __NR_seccomp_read_32 __NR_ia32_read
+#define __NR_seccomp_write_32 __NR_ia32_write
+#define __NR_seccomp_exit_32 __NR_ia32_exit
+#define __NR_seccomp_sigreturn_32 __NR_ia32_sigreturn
+
+#endif /* _ASM_SECCOMP_H */
diff -urpN linux-2.6.23-sabayon/include/asm/sections.h testtry/include/asm/sections.h
--- linux-2.6.23-sabayon/include/asm/sections.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/sections.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,7 @@
+#ifndef _X8664_SECTIONS_H
+#define _X8664_SECTIONS_H
+
+/* nothing to see, move along */
+#include <asm-generic/sections.h>
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/segment.h testtry/include/asm/segment.h
--- linux-2.6.23-sabayon/include/asm/segment.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/segment.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,53 @@
+#ifndef _ASM_SEGMENT_H
+#define _ASM_SEGMENT_H
+
+#include <asm/cache.h>
+
+/* Simple and small GDT entries for booting only */
+
+#define GDT_ENTRY_BOOT_CS		2
+#define __BOOT_CS	(GDT_ENTRY_BOOT_CS * 8)
+
+#define GDT_ENTRY_BOOT_DS		(GDT_ENTRY_BOOT_CS + 1)
+#define __BOOT_DS	(GDT_ENTRY_BOOT_DS * 8)
+
+#define __KERNEL_CS	0x10
+#define __KERNEL_DS	0x18
+
+#define __KERNEL32_CS   0x08
+
+/* 
+ * we cannot use the same code segment descriptor for user and kernel
+ * -- not even in the long flat mode, because of different DPL /kkeil 
+ * The segment offset needs to contain a RPL. Grr. -AK
+ * GDT layout to get 64bit syscall right (sysret hardcodes gdt offsets) 
+ */
+
+#define __USER32_CS   0x23   /* 4*8+3 */ 
+#define __USER_DS     0x2b   /* 5*8+3 */ 
+#define __USER_CS     0x33   /* 6*8+3 */ 
+#define __USER32_DS	__USER_DS 
+
+#define GDT_ENTRY_TSS 8	/* needs two entries */
+#define GDT_ENTRY_LDT 10 /* needs two entries */
+#define GDT_ENTRY_TLS_MIN 12
+#define GDT_ENTRY_TLS_MAX 14
+
+#define GDT_ENTRY_TLS_ENTRIES 3
+
+#define GDT_ENTRY_PER_CPU 15	/* Abused to load per CPU data from limit */
+#define __PER_CPU_SEG	(GDT_ENTRY_PER_CPU * 8 + 3)
+
+/* TLS indexes for 64bit - hardcoded in arch_prctl */
+#define FS_TLS 0	
+#define GS_TLS 1	
+
+#define GS_TLS_SEL ((GDT_ENTRY_TLS_MIN+GS_TLS)*8 + 3)
+#define FS_TLS_SEL ((GDT_ENTRY_TLS_MIN+FS_TLS)*8 + 3)
+
+#define IDT_ENTRIES 256
+#define GDT_ENTRIES 16
+#define GDT_SIZE (GDT_ENTRIES * 8)
+#define TLS_SIZE (GDT_ENTRY_TLS_ENTRIES * 8) 
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/semaphore.h testtry/include/asm/semaphore.h
--- linux-2.6.23-sabayon/include/asm/semaphore.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/semaphore.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,181 @@
+#ifndef _X86_64_SEMAPHORE_H
+#define _X86_64_SEMAPHORE_H
+
+#include <linux/linkage.h>
+
+#ifdef __KERNEL__
+
+/*
+ * SMP- and interrupt-safe semaphores..
+ *
+ * (C) Copyright 1996 Linus Torvalds
+ *
+ * Modified 1996-12-23 by Dave Grothe <dave@gcom.com> to fix bugs in
+ *                     the original code and to make semaphore waits
+ *                     interruptible so that processes waiting on
+ *                     semaphores can be killed.
+ * Modified 1999-02-14 by Andrea Arcangeli, split the sched.c helper
+ *		       functions in asm/sempahore-helper.h while fixing a
+ *		       potential and subtle race discovered by Ulrich Schmid
+ *		       in down_interruptible(). Since I started to play here I
+ *		       also implemented the `trylock' semaphore operation.
+ *          1999-07-02 Artur Skawina <skawina@geocities.com>
+ *                     Optimized "0(ecx)" -> "(ecx)" (the assembler does not
+ *                     do this). Changed calling sequences from push/jmp to
+ *                     traditional call/ret.
+ * Modified 2001-01-01 Andreas Franck <afranck@gmx.de>
+ *		       Some hacks to ensure compatibility with recent
+ *		       GCC snapshots, to avoid stack corruption when compiling
+ *		       with -fomit-frame-pointer. It's not sure if this will
+ *		       be fixed in GCC, as our previous implementation was a
+ *		       bit dubious.
+ *
+ * If you would like to see an analysis of this implementation, please
+ * ftp to gcom.com and download the file
+ * /pub/linux/src/semaphore/semaphore-2.0.24.tar.gz.
+ *
+ */
+
+#include <asm/system.h>
+#include <asm/atomic.h>
+#include <asm/rwlock.h>
+#include <linux/wait.h>
+#include <linux/rwsem.h>
+#include <linux/stringify.h>
+
+struct semaphore {
+	atomic_t count;
+	int sleepers;
+	wait_queue_head_t wait;
+};
+
+#define __SEMAPHORE_INITIALIZER(name, n)				\
+{									\
+	.count		= ATOMIC_INIT(n),				\
+	.sleepers	= 0,						\
+	.wait		= __WAIT_QUEUE_HEAD_INITIALIZER((name).wait)	\
+}
+
+#define __DECLARE_SEMAPHORE_GENERIC(name,count) \
+	struct semaphore name = __SEMAPHORE_INITIALIZER(name,count)
+
+#define DECLARE_MUTEX(name) __DECLARE_SEMAPHORE_GENERIC(name,1)
+#define DECLARE_MUTEX_LOCKED(name) __DECLARE_SEMAPHORE_GENERIC(name,0)
+
+static inline void sema_init (struct semaphore *sem, int val)
+{
+/*
+ *	*sem = (struct semaphore)__SEMAPHORE_INITIALIZER((*sem),val);
+ *
+ * i'd rather use the more flexible initialization above, but sadly
+ * GCC 2.7.2.3 emits a bogus warning. EGCS doesn't. Oh well.
+ */
+	atomic_set(&sem->count, val);
+	sem->sleepers = 0;
+	init_waitqueue_head(&sem->wait);
+}
+
+static inline void init_MUTEX (struct semaphore *sem)
+{
+	sema_init(sem, 1);
+}
+
+static inline void init_MUTEX_LOCKED (struct semaphore *sem)
+{
+	sema_init(sem, 0);
+}
+
+asmlinkage void __down_failed(void /* special register calling convention */);
+asmlinkage int  __down_failed_interruptible(void  /* params in registers */);
+asmlinkage int  __down_failed_trylock(void  /* params in registers */);
+asmlinkage void __up_wakeup(void /* special register calling convention */);
+
+asmlinkage void __down(struct semaphore * sem);
+asmlinkage int  __down_interruptible(struct semaphore * sem);
+asmlinkage int  __down_trylock(struct semaphore * sem);
+asmlinkage void __up(struct semaphore * sem);
+
+/*
+ * This is ugly, but we want the default case to fall through.
+ * "__down_failed" is a special asm handler that calls the C
+ * routine that actually waits. See arch/x86_64/kernel/semaphore.c
+ */
+static inline void down(struct semaphore * sem)
+{
+	might_sleep();
+
+	__asm__ __volatile__(
+		"# atomic down operation\n\t"
+		LOCK_PREFIX "decl %0\n\t"     /* --sem->count */
+		"jns 1f\n\t"
+		"call __down_failed\n"
+		"1:"
+		:"=m" (sem->count)
+		:"D" (sem)
+		:"memory");
+}
+
+/*
+ * Interruptible try to acquire a semaphore.  If we obtained
+ * it, return zero.  If we were interrupted, returns -EINTR
+ */
+static inline int down_interruptible(struct semaphore * sem)
+{
+	int result;
+
+	might_sleep();
+
+	__asm__ __volatile__(
+		"# atomic interruptible down operation\n\t"
+		"xorl %0,%0\n\t"
+		LOCK_PREFIX "decl %1\n\t"     /* --sem->count */
+		"jns 2f\n\t"
+		"call __down_failed_interruptible\n"
+		"2:\n"
+		:"=&a" (result), "=m" (sem->count)
+		:"D" (sem)
+		:"memory");
+	return result;
+}
+
+/*
+ * Non-blockingly attempt to down() a semaphore.
+ * Returns zero if we acquired it
+ */
+static inline int down_trylock(struct semaphore * sem)
+{
+	int result;
+
+	__asm__ __volatile__(
+		"# atomic interruptible down operation\n\t"
+		"xorl %0,%0\n\t"
+		LOCK_PREFIX "decl %1\n\t"     /* --sem->count */
+		"jns 2f\n\t"
+		"call __down_failed_trylock\n\t"
+		"2:\n"
+		:"=&a" (result), "=m" (sem->count)
+		:"D" (sem)
+		:"memory","cc");
+	return result;
+}
+
+/*
+ * Note! This is subtle. We jump to wake people up only if
+ * the semaphore was negative (== somebody was waiting on it).
+ * The default case (no contention) will result in NO
+ * jumps for both down() and up().
+ */
+static inline void up(struct semaphore * sem)
+{
+	__asm__ __volatile__(
+		"# atomic up operation\n\t"
+		LOCK_PREFIX "incl %0\n\t"     /* ++sem->count */
+		"jg 1f\n\t"
+		"call __up_wakeup\n"
+		"1:"
+		:"=m" (sem->count)
+		:"D" (sem)
+		:"memory");
+}
+#endif /* __KERNEL__ */
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/sembuf.h testtry/include/asm/sembuf.h
--- linux-2.6.23-sabayon/include/asm/sembuf.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/sembuf.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,25 @@
+#ifndef _X86_64_SEMBUF_H
+#define _X86_64_SEMBUF_H
+
+/* 
+ * The semid64_ds structure for x86_64 architecture.
+ * Note extra padding because this structure is passed back and forth
+ * between kernel and user space.
+ *
+ * Pad space is left for:
+ * - 64-bit time_t to solve y2038 problem
+ * - 2 miscellaneous 32-bit values
+ */
+
+struct semid64_ds {
+	struct ipc64_perm sem_perm;		/* permissions .. see ipc.h */
+	__kernel_time_t	sem_otime;		/* last semop time */
+	unsigned long	__unused1;
+	__kernel_time_t	sem_ctime;		/* last change time */
+	unsigned long	__unused2;
+	unsigned long	sem_nsems;		/* no. of semaphores in array */
+	unsigned long	__unused3;
+	unsigned long	__unused4;
+};
+
+#endif /* _X86_64_SEMBUF_H */
diff -urpN linux-2.6.23-sabayon/include/asm/serial.h testtry/include/asm/serial.h
--- linux-2.6.23-sabayon/include/asm/serial.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/serial.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,29 @@
+/*
+ * include/asm-x86_64/serial.h
+ */
+
+
+/*
+ * This assumes you have a 1.8432 MHz clock for your UART.
+ *
+ * It'd be nice if someone built a serial card with a 24.576 MHz
+ * clock, since the 16550A is capable of handling a top speed of 1.5
+ * megabits/second; but this requires the faster clock.
+ */
+#define BASE_BAUD ( 1843200 / 16 )
+
+/* Standard COM flags (except for COM4, because of the 8514 problem) */
+#ifdef CONFIG_SERIAL_DETECT_IRQ
+#define STD_COM_FLAGS (ASYNC_BOOT_AUTOCONF | ASYNC_SKIP_TEST | ASYNC_AUTO_IRQ)
+#define STD_COM4_FLAGS (ASYNC_BOOT_AUTOCONF | ASYNC_AUTO_IRQ)
+#else
+#define STD_COM_FLAGS (ASYNC_BOOT_AUTOCONF | ASYNC_SKIP_TEST)
+#define STD_COM4_FLAGS ASYNC_BOOT_AUTOCONF
+#endif
+
+#define SERIAL_PORT_DFNS			\
+	/* UART CLK   PORT IRQ     FLAGS        */			\
+	{ 0, BASE_BAUD, 0x3F8, 4, STD_COM_FLAGS },	/* ttyS0 */	\
+	{ 0, BASE_BAUD, 0x2F8, 3, STD_COM_FLAGS },	/* ttyS1 */	\
+	{ 0, BASE_BAUD, 0x3E8, 4, STD_COM_FLAGS },	/* ttyS2 */	\
+	{ 0, BASE_BAUD, 0x2E8, 3, STD_COM4_FLAGS },	/* ttyS3 */
diff -urpN linux-2.6.23-sabayon/include/asm/setup.h testtry/include/asm/setup.h
--- linux-2.6.23-sabayon/include/asm/setup.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/setup.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef _x8664_SETUP_H
+#define _x8664_SETUP_H
+
+#define COMMAND_LINE_SIZE	2048
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/shmbuf.h testtry/include/asm/shmbuf.h
--- linux-2.6.23-sabayon/include/asm/shmbuf.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/shmbuf.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,38 @@
+#ifndef _X8664_SHMBUF_H
+#define _X8664_SHMBUF_H
+
+/* 
+ * The shmid64_ds structure for x8664 architecture.
+ * Note extra padding because this structure is passed back and forth
+ * between kernel and user space.
+ *
+ * Pad space is left for:
+ * - 2 miscellaneous 64-bit values
+ */
+
+struct shmid64_ds {
+	struct ipc64_perm	shm_perm;	/* operation perms */
+	size_t			shm_segsz;	/* size of segment (bytes) */
+	__kernel_time_t		shm_atime;	/* last attach time */
+	__kernel_time_t		shm_dtime;	/* last detach time */
+	__kernel_time_t		shm_ctime;	/* last change time */
+	__kernel_pid_t		shm_cpid;	/* pid of creator */
+	__kernel_pid_t		shm_lpid;	/* pid of last operator */
+	unsigned long		shm_nattch;	/* no. of current attaches */
+	unsigned long		__unused4;
+	unsigned long		__unused5;
+};
+
+struct shminfo64 {
+	unsigned long	shmmax;
+	unsigned long	shmmin;
+	unsigned long	shmmni;
+	unsigned long	shmseg;
+	unsigned long	shmall;
+	unsigned long	__unused1;
+	unsigned long	__unused2;
+	unsigned long	__unused3;
+	unsigned long	__unused4;
+};
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/shmparam.h testtry/include/asm/shmparam.h
--- linux-2.6.23-sabayon/include/asm/shmparam.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/shmparam.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,6 @@
+#ifndef _ASMX8664_SHMPARAM_H
+#define _ASMX8664_SHMPARAM_H
+
+#define	SHMLBA PAGE_SIZE		 /* attach addr a multiple of this */
+
+#endif /* _ASMX8664_SHMPARAM_H */
diff -urpN linux-2.6.23-sabayon/include/asm/sigcontext32.h testtry/include/asm/sigcontext32.h
--- linux-2.6.23-sabayon/include/asm/sigcontext32.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/sigcontext32.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,71 @@
+#ifndef _SIGCONTEXT32_H
+#define _SIGCONTEXT32_H 1
+
+/* signal context for 32bit programs. */
+
+#define X86_FXSR_MAGIC		0x0000
+
+struct _fpreg {
+	unsigned short significand[4];
+	unsigned short exponent;
+};
+
+struct _fpxreg {
+	unsigned short significand[4];
+	unsigned short exponent;
+	unsigned short padding[3];
+};
+
+struct _xmmreg {
+	__u32	element[4];
+};
+
+/* FSAVE frame with extensions */
+struct _fpstate_ia32 {
+	/* Regular FPU environment */
+	__u32 	cw;
+	__u32	sw;
+	__u32	tag;	/* not compatible to 64bit twd */
+	__u32	ipoff;			
+	__u32	cssel;
+	__u32	dataoff;
+	__u32	datasel;
+	struct _fpreg	_st[8];
+	unsigned short	status;
+	unsigned short	magic;		/* 0xffff = regular FPU data only */
+
+	/* FXSR FPU environment */
+	__u32	_fxsr_env[6];
+	__u32	mxcsr;
+	__u32	reserved;
+	struct _fpxreg	_fxsr_st[8];
+	struct _xmmreg	_xmm[8];	/* It's actually 16 */ 
+	__u32	padding[56];
+};
+
+struct sigcontext_ia32 {
+       unsigned short gs, __gsh;
+       unsigned short fs, __fsh;
+       unsigned short es, __esh;
+       unsigned short ds, __dsh;
+       unsigned int edi;
+       unsigned int esi;
+       unsigned int ebp;
+       unsigned int esp;
+       unsigned int ebx;
+       unsigned int edx;
+       unsigned int ecx;
+       unsigned int eax;
+       unsigned int trapno;
+       unsigned int err;
+       unsigned int eip;
+       unsigned short cs, __csh;
+       unsigned int eflags;
+       unsigned int esp_at_signal;
+       unsigned short ss, __ssh;
+       unsigned int fpstate;		/* really (struct _fpstate_ia32 *) */
+       unsigned int oldmask;
+       unsigned int cr2;
+};
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/sigcontext.h testtry/include/asm/sigcontext.h
--- linux-2.6.23-sabayon/include/asm/sigcontext.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/sigcontext.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,55 @@
+#ifndef _ASM_X86_64_SIGCONTEXT_H
+#define _ASM_X86_64_SIGCONTEXT_H
+
+#include <asm/types.h>
+#include <linux/compiler.h>
+
+/* FXSAVE frame */
+/* Note: reserved1/2 may someday contain valuable data. Always save/restore
+   them when you change signal frames. */
+struct _fpstate {
+	__u16	cwd;
+	__u16	swd;
+	__u16	twd;	/* Note this is not the same as the 32bit/x87/FSAVE twd */
+	__u16	fop;
+	__u64	rip;
+	__u64	rdp; 
+	__u32	mxcsr;
+	__u32	mxcsr_mask;
+	__u32	st_space[32];	/* 8*16 bytes for each FP-reg */
+	__u32	xmm_space[64];	/* 16*16 bytes for each XMM-reg  */
+	__u32	reserved2[24];
+};
+
+struct sigcontext { 
+	unsigned long r8;
+	unsigned long r9;
+	unsigned long r10;
+	unsigned long r11;
+	unsigned long r12;
+	unsigned long r13;
+	unsigned long r14;
+	unsigned long r15;
+	unsigned long rdi;
+	unsigned long rsi;
+	unsigned long rbp;
+	unsigned long rbx;
+	unsigned long rdx;
+	unsigned long rax;
+	unsigned long rcx;
+	unsigned long rsp;
+	unsigned long rip;
+	unsigned long eflags;		/* RFLAGS */
+	unsigned short cs;
+	unsigned short gs;
+	unsigned short fs;
+	unsigned short __pad0; 
+	unsigned long err;
+	unsigned long trapno;
+	unsigned long oldmask;
+	unsigned long cr2;
+	struct _fpstate __user *fpstate;	/* zero when no FPU context */
+	unsigned long reserved1[8];
+};
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/siginfo.h testtry/include/asm/siginfo.h
--- linux-2.6.23-sabayon/include/asm/siginfo.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/siginfo.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,8 @@
+#ifndef _X8664_SIGINFO_H
+#define _X8664_SIGINFO_H
+
+#define __ARCH_SI_PREAMBLE_SIZE	(4 * sizeof(int))
+
+#include <asm-generic/siginfo.h>
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/signal.h testtry/include/asm/signal.h
--- linux-2.6.23-sabayon/include/asm/signal.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/signal.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,181 @@
+#ifndef _ASMx8664_SIGNAL_H
+#define _ASMx8664_SIGNAL_H
+
+#ifndef __ASSEMBLY__
+#include <linux/types.h>
+#include <linux/time.h>
+
+/* Avoid too many header ordering problems.  */
+struct siginfo;
+
+#ifdef __KERNEL__
+#include <linux/linkage.h>
+/* Most things should be clean enough to redefine this at will, if care
+   is taken to make libc match.  */
+
+#define _NSIG		64
+#define _NSIG_BPW	64
+#define _NSIG_WORDS	(_NSIG / _NSIG_BPW)
+
+typedef unsigned long old_sigset_t;		/* at least 32 bits */
+
+typedef struct {
+	unsigned long sig[_NSIG_WORDS];
+} sigset_t;
+
+
+#else
+/* Here we must cater to libcs that poke about in kernel headers.  */
+
+#define NSIG		32
+typedef unsigned long sigset_t;
+
+#endif /* __KERNEL__ */
+#endif
+
+#define SIGHUP		 1
+#define SIGINT		 2
+#define SIGQUIT		 3
+#define SIGILL		 4
+#define SIGTRAP		 5
+#define SIGABRT		 6
+#define SIGIOT		 6
+#define SIGBUS		 7
+#define SIGFPE		 8
+#define SIGKILL		 9
+#define SIGUSR1		10
+#define SIGSEGV		11
+#define SIGUSR2		12
+#define SIGPIPE		13
+#define SIGALRM		14
+#define SIGTERM		15
+#define SIGSTKFLT	16
+#define SIGCHLD		17
+#define SIGCONT		18
+#define SIGSTOP		19
+#define SIGTSTP		20
+#define SIGTTIN		21
+#define SIGTTOU		22
+#define SIGURG		23
+#define SIGXCPU		24
+#define SIGXFSZ		25
+#define SIGVTALRM	26
+#define SIGPROF		27
+#define SIGWINCH	28
+#define SIGIO		29
+#define SIGPOLL		SIGIO
+/*
+#define SIGLOST		29
+*/
+#define SIGPWR		30
+#define SIGSYS		31
+#define	SIGUNUSED	31
+
+/* These should not be considered constants from userland.  */
+#define SIGRTMIN	32
+#define SIGRTMAX	_NSIG
+
+/*
+ * SA_FLAGS values:
+ *
+ * SA_ONSTACK indicates that a registered stack_t will be used.
+ * SA_RESTART flag to get restarting signals (which were the default long ago)
+ * SA_NOCLDSTOP flag to turn off SIGCHLD when children stop.
+ * SA_RESETHAND clears the handler when the signal is delivered.
+ * SA_NOCLDWAIT flag on SIGCHLD to inhibit zombies.
+ * SA_NODEFER prevents the current signal from being masked in the handler.
+ *
+ * SA_ONESHOT and SA_NOMASK are the historical Linux names for the Single
+ * Unix names RESETHAND and NODEFER respectively.
+ */
+#define SA_NOCLDSTOP	0x00000001
+#define SA_NOCLDWAIT	0x00000002
+#define SA_SIGINFO	0x00000004
+#define SA_ONSTACK	0x08000000
+#define SA_RESTART	0x10000000
+#define SA_NODEFER	0x40000000
+#define SA_RESETHAND	0x80000000
+
+#define SA_NOMASK	SA_NODEFER
+#define SA_ONESHOT	SA_RESETHAND
+
+#define SA_RESTORER	0x04000000
+
+/*
+ * sigaltstack controls
+ */
+#define SS_ONSTACK	1
+#define SS_DISABLE	2
+
+#define MINSIGSTKSZ	2048
+#define SIGSTKSZ	8192
+
+#include <asm-generic/signal.h>
+
+#ifndef __ASSEMBLY__
+
+struct sigaction {
+	__sighandler_t sa_handler;
+	unsigned long sa_flags;
+	__sigrestore_t sa_restorer;
+	sigset_t sa_mask;		/* mask last for extensibility */
+};
+
+struct k_sigaction {
+	struct sigaction sa;
+};
+
+typedef struct sigaltstack {
+	void __user *ss_sp;
+	int ss_flags;
+	size_t ss_size;
+} stack_t;
+
+#ifdef __KERNEL__
+#include <asm/sigcontext.h>
+
+#undef __HAVE_ARCH_SIG_BITOPS
+#if 0
+
+static inline void sigaddset(sigset_t *set, int _sig)
+{
+	__asm__("btsq %1,%0" : "=m"(*set) : "Ir"(_sig - 1) : "cc");
+}
+
+static inline void sigdelset(sigset_t *set, int _sig)
+{
+	__asm__("btrq %1,%0" : "=m"(*set) : "Ir"(_sig - 1) : "cc");
+}
+
+static inline int __const_sigismember(sigset_t *set, int _sig)
+{
+	unsigned long sig = _sig - 1;
+	return 1 & (set->sig[sig / _NSIG_BPW] >> (sig & ~(_NSIG_BPW-1)));
+}
+
+static inline int __gen_sigismember(sigset_t *set, int _sig)
+{
+	int ret;
+	__asm__("btq %2,%1\n\tsbbq %0,%0"
+		: "=r"(ret) : "m"(*set), "Ir"(_sig-1) : "cc");
+	return ret;
+}
+
+#define sigismember(set,sig)			\
+	(__builtin_constant_p(sig) ?		\
+	 __const_sigismember((set),(sig)) :	\
+	 __gen_sigismember((set),(sig)))
+
+static inline int sigfindinword(unsigned long word)
+{
+	__asm__("bsfq %1,%0" : "=r"(word) : "rm"(word) : "cc");
+	return word;
+}
+#endif
+#endif
+
+#define ptrace_signal_deliver(regs, cookie) do { } while (0)
+
+#endif /* __KERNEL__ */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/smp.h testtry/include/asm/smp.h
--- linux-2.6.23-sabayon/include/asm/smp.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/smp.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,117 @@
+#ifndef __ASM_SMP_H
+#define __ASM_SMP_H
+
+/*
+ * We need the APIC definitions automatically as part of 'smp.h'
+ */
+#include <linux/threads.h>
+#include <linux/cpumask.h>
+#include <linux/bitops.h>
+#include <linux/init.h>
+extern int disable_apic;
+
+#include <asm/mpspec.h>
+#include <asm/apic.h>
+#include <asm/io_apic.h>
+#include <asm/thread_info.h>
+
+#ifdef CONFIG_SMP
+
+#include <asm/pda.h>
+
+struct pt_regs;
+
+extern cpumask_t cpu_present_mask;
+extern cpumask_t cpu_possible_map;
+extern cpumask_t cpu_online_map;
+extern cpumask_t cpu_callout_map;
+extern cpumask_t cpu_initialized;
+
+/*
+ * Private routines/data
+ */
+ 
+extern void smp_alloc_memory(void);
+extern volatile unsigned long smp_invalidate_needed;
+extern void lock_ipi_call_lock(void);
+extern void unlock_ipi_call_lock(void);
+extern int smp_num_siblings;
+extern void smp_send_reschedule(int cpu);
+
+extern cpumask_t cpu_sibling_map[NR_CPUS];
+extern cpumask_t cpu_core_map[NR_CPUS];
+extern u8 cpu_llc_id[NR_CPUS];
+
+#define SMP_TRAMPOLINE_BASE 0x6000
+
+/*
+ * On x86 all CPUs are mapped 1:1 to the APIC space.
+ * This simplifies scheduling and IPI sending and
+ * compresses data structures.
+ */
+
+static inline int num_booting_cpus(void)
+{
+	return cpus_weight(cpu_callout_map);
+}
+
+#define raw_smp_processor_id() read_pda(cpunumber)
+
+extern int __cpu_disable(void);
+extern void __cpu_die(unsigned int cpu);
+extern void prefill_possible_map(void);
+extern unsigned num_processors;
+extern unsigned __cpuinitdata disabled_cpus;
+
+#define NO_PROC_ID		0xFF		/* No processor magic marker */
+
+#endif /* CONFIG_SMP */
+
+static inline int hard_smp_processor_id(void)
+{
+	/* we don't want to mark this access volatile - bad code generation */
+	return GET_APIC_ID(*(unsigned int *)(APIC_BASE+APIC_ID));
+}
+
+/*
+ * Some lowlevel functions might want to know about
+ * the real APIC ID <-> CPU # mapping.
+ */
+extern u8 x86_cpu_to_apicid[NR_CPUS];	/* physical ID */
+extern u8 x86_cpu_to_log_apicid[NR_CPUS];
+extern u8 bios_cpu_apicid[];
+
+static inline int cpu_present_to_apicid(int mps_cpu)
+{
+	if (mps_cpu < NR_CPUS)
+		return (int)bios_cpu_apicid[mps_cpu];
+	else
+		return BAD_APICID;
+}
+
+#ifndef CONFIG_SMP
+#define stack_smp_processor_id() 0
+#define cpu_logical_map(x) (x)
+#else
+#include <asm/thread_info.h>
+#define stack_smp_processor_id() \
+({ 								\
+	struct thread_info *ti;					\
+	__asm__("andq %%rsp,%0; ":"=r" (ti) : "0" (CURRENT_MASK));	\
+	ti->cpu;						\
+})
+#endif
+
+static __inline int logical_smp_processor_id(void)
+{
+	/* we don't want to mark this access volatile - bad code generation */
+	return GET_APIC_LOGICAL_ID(*(unsigned long *)(APIC_BASE+APIC_LDR));
+}
+
+#ifdef CONFIG_SMP
+#define cpu_physical_id(cpu)		x86_cpu_to_apicid[cpu]
+#else
+#define cpu_physical_id(cpu)		boot_cpu_id
+#endif /* !CONFIG_SMP */
+#endif
+
diff -urpN linux-2.6.23-sabayon/include/asm/socket.h testtry/include/asm/socket.h
--- linux-2.6.23-sabayon/include/asm/socket.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/socket.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,55 @@
+#ifndef _ASM_SOCKET_H
+#define _ASM_SOCKET_H
+
+#include <asm/sockios.h>
+
+/* For setsockopt(2) */
+#define SOL_SOCKET	1
+
+#define SO_DEBUG	1
+#define SO_REUSEADDR	2
+#define SO_TYPE		3
+#define SO_ERROR	4
+#define SO_DONTROUTE	5
+#define SO_BROADCAST	6
+#define SO_SNDBUF	7
+#define SO_RCVBUF	8
+#define SO_SNDBUFFORCE	32
+#define SO_RCVBUFFORCE	33
+#define SO_KEEPALIVE	9
+#define SO_OOBINLINE	10
+#define SO_NO_CHECK	11
+#define SO_PRIORITY	12
+#define SO_LINGER	13
+#define SO_BSDCOMPAT	14
+/* To add :#define SO_REUSEPORT 15 */
+#define SO_PASSCRED	16
+#define SO_PEERCRED	17
+#define SO_RCVLOWAT	18
+#define SO_SNDLOWAT	19
+#define SO_RCVTIMEO	20
+#define SO_SNDTIMEO	21
+
+/* Security levels - as per NRL IPv6 - don't actually do anything */
+#define SO_SECURITY_AUTHENTICATION		22
+#define SO_SECURITY_ENCRYPTION_TRANSPORT	23
+#define SO_SECURITY_ENCRYPTION_NETWORK		24
+
+#define SO_BINDTODEVICE	25
+
+/* Socket filtering */
+#define SO_ATTACH_FILTER        26
+#define SO_DETACH_FILTER        27
+
+#define SO_PEERNAME		28
+#define SO_TIMESTAMP		29
+#define SCM_TIMESTAMP		SO_TIMESTAMP
+
+#define SO_ACCEPTCONN		30
+
+#define SO_PEERSEC             31
+#define SO_PASSSEC		34
+#define SO_TIMESTAMPNS		35
+#define SCM_TIMESTAMPNS		SO_TIMESTAMPNS
+
+#endif /* _ASM_SOCKET_H */
diff -urpN linux-2.6.23-sabayon/include/asm/sockios.h testtry/include/asm/sockios.h
--- linux-2.6.23-sabayon/include/asm/sockios.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/sockios.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,13 @@
+#ifndef __ARCH_X8664_SOCKIOS__
+#define __ARCH_X8664_SOCKIOS__
+
+/* Socket-level I/O control calls. */
+#define FIOSETOWN 	0x8901
+#define SIOCSPGRP	0x8902
+#define FIOGETOWN	0x8903
+#define SIOCGPGRP	0x8904
+#define SIOCATMARK	0x8905
+#define SIOCGSTAMP	0x8906		/* Get stamp (timeval) */
+#define SIOCGSTAMPNS	0x8907		/* Get stamp (timespec) */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/sparsemem.h testtry/include/asm/sparsemem.h
--- linux-2.6.23-sabayon/include/asm/sparsemem.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/sparsemem.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,26 @@
+#ifndef _ASM_X86_64_SPARSEMEM_H
+#define _ASM_X86_64_SPARSEMEM_H 1
+
+#ifdef CONFIG_SPARSEMEM
+
+/*
+ * generic non-linear memory support:
+ *
+ * 1) we will not split memory into more chunks than will fit into the flags
+ *    field of the struct page
+ *
+ * SECTION_SIZE_BITS		2^n: size of each section
+ * MAX_PHYSADDR_BITS		2^n: max size of physical address space
+ * MAX_PHYSMEM_BITS		2^n: how much memory we can have in that space
+ *
+ */
+
+#define SECTION_SIZE_BITS	27 /* matt - 128 is convenient right now */
+#define MAX_PHYSADDR_BITS	40
+#define MAX_PHYSMEM_BITS	40
+
+extern int early_pfn_to_nid(unsigned long pfn);
+
+#endif /* CONFIG_SPARSEMEM */
+
+#endif /* _ASM_X86_64_SPARSEMEM_H */
diff -urpN linux-2.6.23-sabayon/include/asm/spinlock.h testtry/include/asm/spinlock.h
--- linux-2.6.23-sabayon/include/asm/spinlock.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/spinlock.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,167 @@
+#ifndef __ASM_SPINLOCK_H
+#define __ASM_SPINLOCK_H
+
+#include <asm/atomic.h>
+#include <asm/rwlock.h>
+#include <asm/page.h>
+#include <asm/processor.h>
+
+/*
+ * Your basic SMP spinlocks, allowing only a single CPU anywhere
+ *
+ * Simple spin lock operations.  There are two variants, one clears IRQ's
+ * on the local processor, one does not.
+ *
+ * We make no fairness assumptions. They have a cost.
+ *
+ * (the type definitions are in asm/spinlock_types.h)
+ */
+
+static inline int __raw_spin_is_locked(raw_spinlock_t *lock)
+{
+	return *(volatile signed int *)(&(lock)->slock) <= 0;
+}
+
+static inline void __raw_spin_lock(raw_spinlock_t *lock)
+{
+	asm volatile(
+		"\n1:\t"
+		LOCK_PREFIX " ; decl %0\n\t"
+		"jns 2f\n"
+		"3:\n"
+		"rep;nop\n\t"
+		"cmpl $0,%0\n\t"
+		"jle 3b\n\t"
+		"jmp 1b\n"
+		"2:\t" : "=m" (lock->slock) : : "memory");
+}
+
+/*
+ * Same as __raw_spin_lock, but reenable interrupts during spinning.
+ */
+#ifndef CONFIG_PROVE_LOCKING
+static inline void __raw_spin_lock_flags(raw_spinlock_t *lock, unsigned long flags)
+{
+	asm volatile(
+		"\n1:\t"
+		LOCK_PREFIX " ; decl %0\n\t"
+		"jns 5f\n"
+		"testl $0x200, %1\n\t"	/* interrupts were disabled? */
+		"jz 4f\n\t"
+	        "sti\n"
+		"3:\t"
+		"rep;nop\n\t"
+		"cmpl $0, %0\n\t"
+		"jle 3b\n\t"
+		"cli\n\t"
+		"jmp 1b\n"
+		"4:\t"
+		"rep;nop\n\t"
+		"cmpl $0, %0\n\t"
+		"jg 1b\n\t"
+		"jmp 4b\n"
+		"5:\n\t"
+		: "+m" (lock->slock) : "r" ((unsigned)flags) : "memory");
+}
+#endif
+
+static inline int __raw_spin_trylock(raw_spinlock_t *lock)
+{
+	int oldval;
+
+	asm volatile(
+		"xchgl %0,%1"
+		:"=q" (oldval), "=m" (lock->slock)
+		:"0" (0) : "memory");
+
+	return oldval > 0;
+}
+
+static inline void __raw_spin_unlock(raw_spinlock_t *lock)
+{
+	asm volatile("movl $1,%0" :"=m" (lock->slock) :: "memory");
+}
+
+static inline void __raw_spin_unlock_wait(raw_spinlock_t *lock)
+{
+	while (__raw_spin_is_locked(lock))
+		cpu_relax();
+}
+
+/*
+ * Read-write spinlocks, allowing multiple readers
+ * but only one writer.
+ *
+ * NOTE! it is quite common to have readers in interrupts
+ * but no interrupt writers. For those circumstances we
+ * can "mix" irq-safe locks - any writer needs to get a
+ * irq-safe write-lock, but readers can get non-irqsafe
+ * read-locks.
+ *
+ * On x86, we implement read-write locks as a 32-bit counter
+ * with the high bit (sign) being the "contended" bit.
+ */
+
+static inline int __raw_read_can_lock(raw_rwlock_t *lock)
+{
+	return (int)(lock)->lock > 0;
+}
+
+static inline int __raw_write_can_lock(raw_rwlock_t *lock)
+{
+	return (lock)->lock == RW_LOCK_BIAS;
+}
+
+static inline void __raw_read_lock(raw_rwlock_t *rw)
+{
+	asm volatile(LOCK_PREFIX "subl $1,(%0)\n\t"
+		     "jns 1f\n"
+		     "call __read_lock_failed\n"
+		     "1:\n"
+		     ::"D" (rw), "i" (RW_LOCK_BIAS) : "memory");
+}
+
+static inline void __raw_write_lock(raw_rwlock_t *rw)
+{
+	asm volatile(LOCK_PREFIX "subl %1,(%0)\n\t"
+		     "jz 1f\n"
+		     "\tcall __write_lock_failed\n\t"
+		     "1:\n"
+		     ::"D" (rw), "i" (RW_LOCK_BIAS) : "memory");
+}
+
+static inline int __raw_read_trylock(raw_rwlock_t *lock)
+{
+	atomic_t *count = (atomic_t *)lock;
+	atomic_dec(count);
+	if (atomic_read(count) >= 0)
+		return 1;
+	atomic_inc(count);
+	return 0;
+}
+
+static inline int __raw_write_trylock(raw_rwlock_t *lock)
+{
+	atomic_t *count = (atomic_t *)lock;
+	if (atomic_sub_and_test(RW_LOCK_BIAS, count))
+		return 1;
+	atomic_add(RW_LOCK_BIAS, count);
+	return 0;
+}
+
+static inline void __raw_read_unlock(raw_rwlock_t *rw)
+{
+	asm volatile(LOCK_PREFIX " ; incl %0" :"=m" (rw->lock) : : "memory");
+}
+
+static inline void __raw_write_unlock(raw_rwlock_t *rw)
+{
+	asm volatile(LOCK_PREFIX " ; addl $" RW_LOCK_BIAS_STR ",%0"
+				: "=m" (rw->lock) : : "memory");
+}
+
+#define _raw_spin_relax(lock)	cpu_relax()
+#define _raw_read_relax(lock)	cpu_relax()
+#define _raw_write_relax(lock)	cpu_relax()
+
+#endif /* __ASM_SPINLOCK_H */
diff -urpN linux-2.6.23-sabayon/include/asm/spinlock_types.h testtry/include/asm/spinlock_types.h
--- linux-2.6.23-sabayon/include/asm/spinlock_types.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/spinlock_types.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,20 @@
+#ifndef __ASM_SPINLOCK_TYPES_H
+#define __ASM_SPINLOCK_TYPES_H
+
+#ifndef __LINUX_SPINLOCK_TYPES_H
+# error "please don't include this file directly"
+#endif
+
+typedef struct {
+	unsigned int slock;
+} raw_spinlock_t;
+
+#define __RAW_SPIN_LOCK_UNLOCKED	{ 1 }
+
+typedef struct {
+	unsigned int lock;
+} raw_rwlock_t;
+
+#define __RAW_RW_LOCK_UNLOCKED		{ RW_LOCK_BIAS }
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/stacktrace.h testtry/include/asm/stacktrace.h
--- linux-2.6.23-sabayon/include/asm/stacktrace.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/stacktrace.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,20 @@
+#ifndef _ASM_STACKTRACE_H
+#define _ASM_STACKTRACE_H 1
+
+extern int kstack_depth_to_print;
+
+/* Generic stack tracer with callbacks */
+
+struct stacktrace_ops {
+	void (*warning)(void *data, char *msg);
+	/* msg must contain %s for the symbol */
+	void (*warning_symbol)(void *data, char *msg, unsigned long symbol);
+	void (*address)(void *data, unsigned long address);
+	/* On negative return stop dumping */
+	int (*stack)(void *data, char *name);
+};
+
+void dump_trace(struct task_struct *tsk, struct pt_regs *regs, unsigned long *stack,
+		struct stacktrace_ops *ops, void *data);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/statfs.h testtry/include/asm/statfs.h
--- linux-2.6.23-sabayon/include/asm/statfs.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/statfs.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,58 @@
+#ifndef _X86_64_STATFS_H
+#define _X86_64_STATFS_H
+
+#ifndef __KERNEL_STRICT_NAMES
+
+#include <linux/types.h>
+
+typedef __kernel_fsid_t	fsid_t;
+
+#endif
+
+/*
+ * This is ugly -- we're already 64-bit clean, so just duplicate the 
+ * definitions.
+ */
+struct statfs {
+	long f_type;
+	long f_bsize;
+	long f_blocks;
+	long f_bfree;
+	long f_bavail;
+	long f_files;
+	long f_ffree;
+	__kernel_fsid_t f_fsid;
+	long f_namelen;
+	long f_frsize;
+	long f_spare[5];
+};
+
+struct statfs64 {
+	long f_type;
+	long f_bsize;
+	long f_blocks;
+	long f_bfree;
+	long f_bavail;
+	long f_files;
+	long f_ffree;
+	__kernel_fsid_t f_fsid;
+	long f_namelen;
+	long f_frsize;
+	long f_spare[5];
+};
+
+struct compat_statfs64 {
+	__u32 f_type;
+	__u32 f_bsize;
+	__u64 f_blocks;
+	__u64 f_bfree;
+	__u64 f_bavail;
+	__u64 f_files;
+	__u64 f_ffree;
+	__kernel_fsid_t f_fsid;
+	__u32 f_namelen;
+	__u32 f_frsize;
+	__u32 f_spare[5];
+} __attribute__((packed));
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/stat.h testtry/include/asm/stat.h
--- linux-2.6.23-sabayon/include/asm/stat.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/stat.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,44 @@
+#ifndef _ASM_X86_64_STAT_H
+#define _ASM_X86_64_STAT_H
+
+#define STAT_HAVE_NSEC 1
+
+struct stat {
+	unsigned long	st_dev;
+	unsigned long	st_ino;
+	unsigned long	st_nlink;
+
+	unsigned int	st_mode;
+	unsigned int	st_uid;
+	unsigned int	st_gid;
+	unsigned int	__pad0;
+	unsigned long	st_rdev;
+	long		st_size;
+	long		st_blksize;
+	long		st_blocks;	/* Number 512-byte blocks allocated. */
+
+	unsigned long	st_atime;
+	unsigned long 	st_atime_nsec; 
+	unsigned long	st_mtime;
+	unsigned long	st_mtime_nsec;
+	unsigned long	st_ctime;
+	unsigned long   st_ctime_nsec;
+  	long		__unused[3];
+};
+
+/* For 32bit emulation */
+struct __old_kernel_stat {
+	unsigned short st_dev;
+	unsigned short st_ino;
+	unsigned short st_mode;
+	unsigned short st_nlink;
+	unsigned short st_uid;
+	unsigned short st_gid;
+	unsigned short st_rdev;
+	unsigned int  st_size;
+	unsigned int  st_atime;
+	unsigned int  st_mtime;
+	unsigned int  st_ctime;
+};
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/string.h testtry/include/asm/string.h
--- linux-2.6.23-sabayon/include/asm/string.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/string.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,60 @@
+#ifndef _X86_64_STRING_H_
+#define _X86_64_STRING_H_
+
+#ifdef __KERNEL__
+
+/* Written 2002 by Andi Kleen */ 
+
+/* Only used for special circumstances. Stolen from i386/string.h */ 
+static __always_inline void *
+__inline_memcpy(void * to, const void * from, size_t n)
+{
+unsigned long d0, d1, d2;
+__asm__ __volatile__(
+	"rep ; movsl\n\t"
+	"testb $2,%b4\n\t"
+	"je 1f\n\t"
+	"movsw\n"
+	"1:\ttestb $1,%b4\n\t"
+	"je 2f\n\t"
+	"movsb\n"
+	"2:"
+	: "=&c" (d0), "=&D" (d1), "=&S" (d2)
+	:"0" (n/4), "q" (n),"1" ((long) to),"2" ((long) from)
+	: "memory");
+return (to);
+}
+
+/* Even with __builtin_ the compiler may decide to use the out of line
+   function. */
+
+#define __HAVE_ARCH_MEMCPY 1
+#if (__GNUC__ == 4 && __GNUC_MINOR__ >= 3) || __GNUC__ > 4
+extern void *memcpy(void *to, const void *from, size_t len);
+#else
+extern void *__memcpy(void *to, const void *from, size_t len); 
+#define memcpy(dst,src,len) \
+	({ size_t __len = (len);				\
+	   void *__ret;						\
+	   if (__builtin_constant_p(len) && __len >= 64)	\
+		 __ret = __memcpy((dst),(src),__len);		\
+	   else							\
+		 __ret = __builtin_memcpy((dst),(src),__len);	\
+	   __ret; }) 
+#endif
+
+#define __HAVE_ARCH_MEMSET
+void *memset(void *s, int c, size_t n);
+
+#define __HAVE_ARCH_MEMMOVE
+void * memmove(void * dest,const void *src,size_t count);
+
+int memcmp(const void * cs,const void * ct,size_t count);
+size_t strlen(const char * s);
+char *strcpy(char * dest,const char *src);
+char *strcat(char * dest, const char * src);
+int strcmp(const char * cs,const char * ct);
+
+#endif /* __KERNEL__ */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/suspend.h testtry/include/asm/suspend.h
--- linux-2.6.23-sabayon/include/asm/suspend.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/suspend.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2001-2003 Pavel Machek <pavel@suse.cz>
+ * Based on code
+ * Copyright 2001 Patrick Mochel <mochel@osdl.org>
+ */
+#include <asm/desc.h>
+#include <asm/i387.h>
+
+static inline int
+arch_prepare_suspend(void)
+{
+	return 0;
+}
+
+#define toi_faulted (0)
+#define clear_toi_fault() do { } while(0)
+
+/* Image of the saved processor state. If you touch this, fix acpi_wakeup.S. */
+struct saved_context {
+  	u16 ds, es, fs, gs, ss;
+	unsigned long gs_base, gs_kernel_base, fs_base;
+	unsigned long cr0, cr2, cr3, cr4, cr8;
+	unsigned long efer;
+	u16 gdt_pad;
+	u16 gdt_limit;
+	unsigned long gdt_base;
+	u16 idt_pad;
+	u16 idt_limit;
+	unsigned long idt_base;
+	u16 ldt;
+	u16 tss;
+	unsigned long tr;
+	unsigned long safety;
+	unsigned long return_address;
+	unsigned long eflags;
+} __attribute__((packed));
+
+/* We'll access these from assembly, so we'd better have them outside struct */
+extern unsigned long saved_context_eax, saved_context_ebx, saved_context_ecx, saved_context_edx;
+extern unsigned long saved_context_esp, saved_context_ebp, saved_context_esi, saved_context_edi;
+extern unsigned long saved_context_r08, saved_context_r09, saved_context_r10, saved_context_r11;
+extern unsigned long saved_context_r12, saved_context_r13, saved_context_r14, saved_context_r15;
+extern unsigned long saved_context_eflags;
+
+#define loaddebug(thread,register) \
+	set_debugreg((thread)->debugreg##register, register)
+
+extern void fix_processor_context(void);
+
+extern unsigned long saved_rip;
+extern unsigned long saved_rsp;
+extern unsigned long saved_rbp;
+extern unsigned long saved_rbx;
+extern unsigned long saved_rsi;
+extern unsigned long saved_rdi;
+
+/* routines for saving/restoring kernel state */
+extern int acpi_save_state_mem(void);
diff -urpN linux-2.6.23-sabayon/include/asm/swiotlb.h testtry/include/asm/swiotlb.h
--- linux-2.6.23-sabayon/include/asm/swiotlb.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/swiotlb.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,56 @@
+#ifndef _ASM_SWIOTLB_H
+#define _ASM_SWIOTLB_H 1
+
+#include <asm/dma-mapping.h>
+
+/* SWIOTLB interface */
+
+extern dma_addr_t swiotlb_map_single(struct device *hwdev, void *ptr,
+				     size_t size, int dir);
+extern void *swiotlb_alloc_coherent(struct device *hwdev, size_t size,
+                       dma_addr_t *dma_handle, gfp_t flags);
+extern void swiotlb_unmap_single(struct device *hwdev, dma_addr_t dev_addr,
+				  size_t size, int dir);
+extern void swiotlb_sync_single_for_cpu(struct device *hwdev,
+					 dma_addr_t dev_addr,
+					 size_t size, int dir);
+extern void swiotlb_sync_single_for_device(struct device *hwdev,
+					    dma_addr_t dev_addr,
+					    size_t size, int dir);
+extern void swiotlb_sync_single_range_for_cpu(struct device *hwdev,
+					      dma_addr_t dev_addr,
+					      unsigned long offset,
+					      size_t size, int dir);
+extern void swiotlb_sync_single_range_for_device(struct device *hwdev,
+						 dma_addr_t dev_addr,
+						 unsigned long offset,
+						 size_t size, int dir);
+extern void swiotlb_sync_sg_for_cpu(struct device *hwdev,
+				     struct scatterlist *sg, int nelems,
+				     int dir);
+extern void swiotlb_sync_sg_for_device(struct device *hwdev,
+					struct scatterlist *sg, int nelems,
+					int dir);
+extern int swiotlb_map_sg(struct device *hwdev, struct scatterlist *sg,
+		      int nents, int direction);
+extern void swiotlb_unmap_sg(struct device *hwdev, struct scatterlist *sg,
+			 int nents, int direction);
+extern int swiotlb_dma_mapping_error(dma_addr_t dma_addr);
+extern void swiotlb_free_coherent (struct device *hwdev, size_t size,
+				   void *vaddr, dma_addr_t dma_handle);
+extern int swiotlb_dma_supported(struct device *hwdev, u64 mask);
+extern void swiotlb_init(void);
+
+extern int swiotlb_force;
+
+#ifdef CONFIG_SWIOTLB
+extern int swiotlb;
+#else
+#define swiotlb 0
+#endif
+
+extern void pci_swiotlb_init(void);
+
+static inline void dma_mark_clean(void *addr, size_t size) {}
+
+#endif /* _ASM_SWIOTLB_H */
diff -urpN linux-2.6.23-sabayon/include/asm/system.h testtry/include/asm/system.h
--- linux-2.6.23-sabayon/include/asm/system.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/system.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,180 @@
+#ifndef __ASM_SYSTEM_H
+#define __ASM_SYSTEM_H
+
+#include <linux/kernel.h>
+#include <asm/segment.h>
+#include <asm/cmpxchg.h>
+
+#ifdef __KERNEL__
+
+#define __STR(x) #x
+#define STR(x) __STR(x)
+
+#define __SAVE(reg,offset) "movq %%" #reg ",(14-" #offset ")*8(%%rsp)\n\t"
+#define __RESTORE(reg,offset) "movq (14-" #offset ")*8(%%rsp),%%" #reg "\n\t"
+
+/* frame pointer must be last for get_wchan */
+#define SAVE_CONTEXT    "pushf ; pushq %%rbp ; movq %%rsi,%%rbp\n\t"
+#define RESTORE_CONTEXT "movq %%rbp,%%rsi ; popq %%rbp ; popf\t"
+
+#define __EXTRA_CLOBBER  \
+	,"rcx","rbx","rdx","r8","r9","r10","r11","r12","r13","r14","r15"
+
+/* Save restore flags to clear handle leaking NT */
+#define switch_to(prev,next,last) \
+	asm volatile(SAVE_CONTEXT						    \
+		     "movq %%rsp,%P[threadrsp](%[prev])\n\t" /* save RSP */	  \
+		     "movq %P[threadrsp](%[next]),%%rsp\n\t" /* restore RSP */	  \
+		     "call __switch_to\n\t"					  \
+		     ".globl thread_return\n"					\
+		     "thread_return:\n\t"					    \
+		     "movq %%gs:%P[pda_pcurrent],%%rsi\n\t"			  \
+		     "movq %P[thread_info](%%rsi),%%r8\n\t"			  \
+		     LOCK_PREFIX "btr  %[tif_fork],%P[ti_flags](%%r8)\n\t"	  \
+		     "movq %%rax,%%rdi\n\t" 					  \
+		     "jc   ret_from_fork\n\t"					  \
+		     RESTORE_CONTEXT						    \
+		     : "=a" (last)					  	  \
+		     : [next] "S" (next), [prev] "D" (prev),			  \
+		       [threadrsp] "i" (offsetof(struct task_struct, thread.rsp)), \
+		       [ti_flags] "i" (offsetof(struct thread_info, flags)),\
+		       [tif_fork] "i" (TIF_FORK),			  \
+		       [thread_info] "i" (offsetof(struct task_struct, stack)), \
+		       [pda_pcurrent] "i" (offsetof(struct x8664_pda, pcurrent))   \
+		     : "memory", "cc" __EXTRA_CLOBBER)
+    
+extern void load_gs_index(unsigned); 
+
+/*
+ * Load a segment. Fall back on loading the zero
+ * segment if something goes wrong..
+ */
+#define loadsegment(seg,value)	\
+	asm volatile("\n"			\
+		"1:\t"				\
+		"movl %k0,%%" #seg "\n"		\
+		"2:\n"				\
+		".section .fixup,\"ax\"\n"	\
+		"3:\t"				\
+		"movl %1,%%" #seg "\n\t" 	\
+		"jmp 2b\n"			\
+		".previous\n"			\
+		".section __ex_table,\"a\"\n\t"	\
+		".align 8\n\t"			\
+		".quad 1b,3b\n"			\
+		".previous"			\
+		: :"r" (value), "r" (0))
+
+/*
+ * Clear and set 'TS' bit respectively
+ */
+#define clts() __asm__ __volatile__ ("clts")
+
+static inline unsigned long read_cr0(void)
+{ 
+	unsigned long cr0;
+	asm volatile("movq %%cr0,%0" : "=r" (cr0));
+	return cr0;
+}
+
+static inline void write_cr0(unsigned long val) 
+{ 
+	asm volatile("movq %0,%%cr0" :: "r" (val));
+}
+
+static inline unsigned long read_cr2(void)
+{
+	unsigned long cr2;
+	asm("movq %%cr2,%0" : "=r" (cr2));
+	return cr2;
+}
+
+static inline void write_cr2(unsigned long val)
+{
+	asm volatile("movq %0,%%cr2" :: "r" (val));
+}
+
+static inline unsigned long read_cr3(void)
+{ 
+	unsigned long cr3;
+	asm("movq %%cr3,%0" : "=r" (cr3));
+	return cr3;
+}
+
+static inline void write_cr3(unsigned long val)
+{
+	asm volatile("movq %0,%%cr3" :: "r" (val) : "memory");
+}
+
+static inline unsigned long read_cr4(void)
+{ 
+	unsigned long cr4;
+	asm("movq %%cr4,%0" : "=r" (cr4));
+	return cr4;
+}
+
+static inline void write_cr4(unsigned long val)
+{ 
+	asm volatile("movq %0,%%cr4" :: "r" (val) : "memory");
+}
+
+static inline unsigned long read_cr8(void)
+{
+	unsigned long cr8;
+	asm("movq %%cr8,%0" : "=r" (cr8));
+	return cr8;
+}
+
+static inline void write_cr8(unsigned long val)
+{
+	asm volatile("movq %0,%%cr8" :: "r" (val) : "memory");
+}
+
+#define stts() write_cr0(8 | read_cr0())
+
+#define wbinvd() \
+	__asm__ __volatile__ ("wbinvd": : :"memory")
+
+#endif	/* __KERNEL__ */
+
+#define nop() __asm__ __volatile__ ("nop")
+
+#ifdef CONFIG_SMP
+#define smp_mb()	mb()
+#define smp_rmb()	rmb()
+#define smp_wmb()	wmb()
+#define smp_read_barrier_depends()	do {} while(0)
+#else
+#define smp_mb()	barrier()
+#define smp_rmb()	barrier()
+#define smp_wmb()	barrier()
+#define smp_read_barrier_depends()	do {} while(0)
+#endif
+
+    
+/*
+ * Force strict CPU ordering.
+ * And yes, this is required on UP too when we're talking
+ * to devices.
+ */
+#define mb() 	asm volatile("mfence":::"memory")
+#define rmb()	asm volatile("lfence":::"memory")
+
+#ifdef CONFIG_UNORDERED_IO
+#define wmb()	asm volatile("sfence" ::: "memory")
+#else
+#define wmb()	asm volatile("" ::: "memory")
+#endif
+#define read_barrier_depends()	do {} while(0)
+#define set_mb(var, value) do { (void) xchg(&var, value); } while (0)
+
+#define warn_if_not_ulong(x) do { unsigned long foo; (void) (&(x) == &foo); } while (0)
+
+#include <linux/irqflags.h>
+
+void cpu_idle_wait(void);
+
+extern unsigned long arch_align_stack(unsigned long sp);
+extern void free_init_pages(char *what, unsigned long begin, unsigned long end);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/tce.h testtry/include/asm/tce.h
--- linux-2.6.23-sabayon/include/asm/tce.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/tce.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,48 @@
+/*
+ * This file is derived from asm-powerpc/tce.h.
+ *
+ * Copyright (C) IBM Corporation, 2006
+ *
+ * Author: Muli Ben-Yehuda <muli@il.ibm.com>
+ * Author: Jon Mason <jdmason@us.ibm.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
+ */
+
+#ifndef _ASM_X86_64_TCE_H
+#define _ASM_X86_64_TCE_H
+
+extern unsigned int specified_table_size;
+struct iommu_table;
+
+#define TCE_ENTRY_SIZE   8   /* in bytes */
+
+#define TCE_READ_SHIFT   0
+#define TCE_WRITE_SHIFT  1
+#define TCE_HUBID_SHIFT  2   /* unused */
+#define TCE_RSVD_SHIFT   8   /* unused */
+#define TCE_RPN_SHIFT    12
+#define TCE_UNUSED_SHIFT 48  /* unused */
+
+#define TCE_RPN_MASK     0x0000fffffffff000ULL
+
+extern void tce_build(struct iommu_table *tbl, unsigned long index,
+        unsigned int npages, unsigned long uaddr, int direction);
+extern void tce_free(struct iommu_table *tbl, long index, unsigned int npages);
+extern void * __init alloc_tce_table(void);
+extern void __init free_tce_table(void *tbl);
+extern int __init build_tce_table(struct pci_dev *dev, void __iomem *bbar);
+
+#endif /* _ASM_X86_64_TCE_H */
diff -urpN linux-2.6.23-sabayon/include/asm/termbits.h testtry/include/asm/termbits.h
--- linux-2.6.23-sabayon/include/asm/termbits.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/termbits.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,198 @@
+#ifndef __ARCH_X8664_TERMBITS_H__
+#define __ARCH_X8664_TERMBITS_H__
+
+#include <linux/posix_types.h>
+
+typedef unsigned char	cc_t;
+typedef unsigned int	speed_t;
+typedef unsigned int	tcflag_t;
+
+#define NCCS 19
+struct termios {
+	tcflag_t c_iflag;		/* input mode flags */
+	tcflag_t c_oflag;		/* output mode flags */
+	tcflag_t c_cflag;		/* control mode flags */
+	tcflag_t c_lflag;		/* local mode flags */
+	cc_t c_line;			/* line discipline */
+	cc_t c_cc[NCCS];		/* control characters */
+};
+
+struct termios2 {
+	tcflag_t c_iflag;		/* input mode flags */
+	tcflag_t c_oflag;		/* output mode flags */
+	tcflag_t c_cflag;		/* control mode flags */
+	tcflag_t c_lflag;		/* local mode flags */
+	cc_t c_line;			/* line discipline */
+	cc_t c_cc[NCCS];		/* control characters */
+	speed_t c_ispeed;		/* input speed */
+	speed_t c_ospeed;		/* output speed */
+};
+
+struct ktermios {
+	tcflag_t c_iflag;		/* input mode flags */
+	tcflag_t c_oflag;		/* output mode flags */
+	tcflag_t c_cflag;		/* control mode flags */
+	tcflag_t c_lflag;		/* local mode flags */
+	cc_t c_line;			/* line discipline */
+	cc_t c_cc[NCCS];		/* control characters */
+	speed_t c_ispeed;		/* input speed */
+	speed_t c_ospeed;		/* output speed */
+};
+
+/* c_cc characters */
+#define VINTR 0
+#define VQUIT 1
+#define VERASE 2
+#define VKILL 3
+#define VEOF 4
+#define VTIME 5
+#define VMIN 6
+#define VSWTC 7
+#define VSTART 8
+#define VSTOP 9
+#define VSUSP 10
+#define VEOL 11
+#define VREPRINT 12
+#define VDISCARD 13
+#define VWERASE 14
+#define VLNEXT 15
+#define VEOL2 16
+
+/* c_iflag bits */
+#define IGNBRK	0000001
+#define BRKINT	0000002
+#define IGNPAR	0000004
+#define PARMRK	0000010
+#define INPCK	0000020
+#define ISTRIP	0000040
+#define INLCR	0000100
+#define IGNCR	0000200
+#define ICRNL	0000400
+#define IUCLC	0001000
+#define IXON	0002000
+#define IXANY	0004000
+#define IXOFF	0010000
+#define IMAXBEL	0020000
+#define IUTF8	0040000
+
+/* c_oflag bits */
+#define OPOST	0000001
+#define OLCUC	0000002
+#define ONLCR	0000004
+#define OCRNL	0000010
+#define ONOCR	0000020
+#define ONLRET	0000040
+#define OFILL	0000100
+#define OFDEL	0000200
+#define NLDLY	0000400
+#define   NL0	0000000
+#define   NL1	0000400
+#define CRDLY	0003000
+#define   CR0	0000000
+#define   CR1	0001000
+#define   CR2	0002000
+#define   CR3	0003000
+#define TABDLY	0014000
+#define   TAB0	0000000
+#define   TAB1	0004000
+#define   TAB2	0010000
+#define   TAB3	0014000
+#define   XTABS	0014000
+#define BSDLY	0020000
+#define   BS0	0000000
+#define   BS1	0020000
+#define VTDLY	0040000
+#define   VT0	0000000
+#define   VT1	0040000
+#define FFDLY	0100000
+#define   FF0	0000000
+#define   FF1	0100000
+
+/* c_cflag bit meaning */
+#define CBAUD	0010017
+#define  B0	0000000		/* hang up */
+#define  B50	0000001
+#define  B75	0000002
+#define  B110	0000003
+#define  B134	0000004
+#define  B150	0000005
+#define  B200	0000006
+#define  B300	0000007
+#define  B600	0000010
+#define  B1200	0000011
+#define  B1800	0000012
+#define  B2400	0000013
+#define  B4800	0000014
+#define  B9600	0000015
+#define  B19200	0000016
+#define  B38400	0000017
+#define EXTA B19200
+#define EXTB B38400
+#define CSIZE	0000060
+#define   CS5	0000000
+#define   CS6	0000020
+#define   CS7	0000040
+#define   CS8	0000060
+#define CSTOPB	0000100
+#define CREAD	0000200
+#define PARENB	0000400
+#define PARODD	0001000
+#define HUPCL	0002000
+#define CLOCAL	0004000
+#define CBAUDEX 0010000
+#define	   BOTHER 0010000		/* non standard rate */
+#define    B57600 0010001
+#define   B115200 0010002
+#define   B230400 0010003
+#define   B460800 0010004
+#define   B500000 0010005
+#define   B576000 0010006
+#define   B921600 0010007
+#define  B1000000 0010010
+#define  B1152000 0010011
+#define  B1500000 0010012
+#define  B2000000 0010013
+#define  B2500000 0010014
+#define  B3000000 0010015
+#define  B3500000 0010016
+#define  B4000000 0010017
+#define CIBAUD	  002003600000	/* input baud rate */
+#define CMSPAR	  010000000000		/* mark or space (stick) parity */
+#define CRTSCTS	  020000000000		/* flow control */
+
+#define IBSHIFT	  16		/* Shift from CBAUD to CIBAUD */
+
+/* c_lflag bits */
+#define ISIG	0000001
+#define ICANON	0000002
+#define XCASE	0000004
+#define ECHO	0000010
+#define ECHOE	0000020
+#define ECHOK	0000040
+#define ECHONL	0000100
+#define NOFLSH	0000200
+#define TOSTOP	0000400
+#define ECHOCTL	0001000
+#define ECHOPRT	0002000
+#define ECHOKE	0004000
+#define FLUSHO	0010000
+#define PENDIN	0040000
+#define IEXTEN	0100000
+
+/* tcflow() and TCXONC use these */
+#define	TCOOFF		0
+#define	TCOON		1
+#define	TCIOFF		2
+#define	TCION		3
+
+/* tcflush() and TCFLSH use these */
+#define	TCIFLUSH	0
+#define	TCOFLUSH	1
+#define	TCIOFLUSH	2
+
+/* tcsetattr uses these */
+#define	TCSANOW		0
+#define	TCSADRAIN	1
+#define	TCSAFLUSH	2
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/termios.h testtry/include/asm/termios.h
--- linux-2.6.23-sabayon/include/asm/termios.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/termios.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,90 @@
+#ifndef _X8664_TERMIOS_H
+#define _X8664_TERMIOS_H
+
+#include <asm/termbits.h>
+#include <asm/ioctls.h>
+
+struct winsize {
+	unsigned short ws_row;
+	unsigned short ws_col;
+	unsigned short ws_xpixel;
+	unsigned short ws_ypixel;
+};
+
+#define NCC 8
+struct termio {
+	unsigned short c_iflag;		/* input mode flags */
+	unsigned short c_oflag;		/* output mode flags */
+	unsigned short c_cflag;		/* control mode flags */
+	unsigned short c_lflag;		/* local mode flags */
+	unsigned char c_line;		/* line discipline */
+	unsigned char c_cc[NCC];	/* control characters */
+};
+
+/* modem lines */
+#define TIOCM_LE	0x001
+#define TIOCM_DTR	0x002
+#define TIOCM_RTS	0x004
+#define TIOCM_ST	0x008
+#define TIOCM_SR	0x010
+#define TIOCM_CTS	0x020
+#define TIOCM_CAR	0x040
+#define TIOCM_RNG	0x080
+#define TIOCM_DSR	0x100
+#define TIOCM_CD	TIOCM_CAR
+#define TIOCM_RI	TIOCM_RNG
+#define TIOCM_OUT1	0x2000
+#define TIOCM_OUT2	0x4000
+#define TIOCM_LOOP	0x8000
+
+/* ioctl (fd, TIOCSERGETLSR, &result) where result may be as below */
+
+#ifdef __KERNEL__
+
+/*	intr=^C		quit=^\		erase=del	kill=^U
+	eof=^D		vtime=\0	vmin=\1		sxtc=\0
+	start=^Q	stop=^S		susp=^Z		eol=\0
+	reprint=^R	discard=^U	werase=^W	lnext=^V
+	eol2=\0
+*/
+#define INIT_C_CC "\003\034\177\025\004\0\1\0\021\023\032\0\022\017\027\026\0"
+
+/*
+ * Translate a "termio" structure into a "termios". Ugh.
+ */
+#define SET_LOW_TERMIOS_BITS(termios, termio, x) { \
+	unsigned short __tmp; \
+	get_user(__tmp,&(termio)->x); \
+	*(unsigned short *) &(termios)->x = __tmp; \
+}
+
+#define user_termio_to_kernel_termios(termios, termio) \
+({ \
+	SET_LOW_TERMIOS_BITS(termios, termio, c_iflag); \
+	SET_LOW_TERMIOS_BITS(termios, termio, c_oflag); \
+	SET_LOW_TERMIOS_BITS(termios, termio, c_cflag); \
+	SET_LOW_TERMIOS_BITS(termios, termio, c_lflag); \
+	copy_from_user((termios)->c_cc, (termio)->c_cc, NCC); \
+})
+
+/*
+ * Translate a "termios" structure into a "termio". Ugh.
+ */
+#define kernel_termios_to_user_termio(termio, termios) \
+({ \
+	put_user((termios)->c_iflag, &(termio)->c_iflag); \
+	put_user((termios)->c_oflag, &(termio)->c_oflag); \
+	put_user((termios)->c_cflag, &(termio)->c_cflag); \
+	put_user((termios)->c_lflag, &(termio)->c_lflag); \
+	put_user((termios)->c_line,  &(termio)->c_line); \
+	copy_to_user((termio)->c_cc, (termios)->c_cc, NCC); \
+})
+
+#define user_termios_to_kernel_termios(k, u) copy_from_user(k, u, sizeof(struct termios2))
+#define kernel_termios_to_user_termios(u, k) copy_to_user(u, k, sizeof(struct termios2))
+#define user_termios_to_kernel_termios_1(k, u) copy_from_user(k, u, sizeof(struct termios))
+#define kernel_termios_to_user_termios_1(u, k) copy_to_user(u, k, sizeof(struct termios))
+
+#endif	/* __KERNEL__ */
+
+#endif	/* _X8664_TERMIOS_H */
diff -urpN linux-2.6.23-sabayon/include/asm/therm_throt.h testtry/include/asm/therm_throt.h
--- linux-2.6.23-sabayon/include/asm/therm_throt.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/therm_throt.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/therm_throt.h>
diff -urpN linux-2.6.23-sabayon/include/asm/thread_info.h testtry/include/asm/thread_info.h
--- linux-2.6.23-sabayon/include/asm/thread_info.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/thread_info.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,169 @@
+/* thread_info.h: x86_64 low-level thread information
+ *
+ * Copyright (C) 2002  David Howells (dhowells@redhat.com)
+ * - Incorporating suggestions made by Linus Torvalds and Dave Miller
+ */
+
+#ifndef _ASM_THREAD_INFO_H
+#define _ASM_THREAD_INFO_H
+
+#ifdef __KERNEL__
+
+#include <asm/page.h>
+#include <asm/types.h>
+#include <asm/pda.h>
+
+/*
+ * low level task data that entry.S needs immediate access to
+ * - this struct should fit entirely inside of one cache line
+ * - this struct shares the supervisor stack pages
+ */
+#ifndef __ASSEMBLY__
+struct task_struct;
+struct exec_domain;
+#include <asm/mmsegment.h>
+
+struct thread_info {
+	struct task_struct	*task;		/* main task structure */
+	struct exec_domain	*exec_domain;	/* execution domain */
+	__u32			flags;		/* low level flags */
+	__u32			status;		/* thread synchronous flags */
+	__u32			cpu;		/* current CPU */
+	int 			preempt_count;	/* 0 => preemptable, <0 => BUG */
+
+	mm_segment_t		addr_limit;	
+	struct restart_block    restart_block;
+};
+#endif
+
+/*
+ * macros/functions for gaining access to the thread information structure
+ * preempt_count needs to be 1 initially, until the scheduler is functional.
+ */
+#ifndef __ASSEMBLY__
+#define INIT_THREAD_INFO(tsk)			\
+{						\
+	.task	       = &tsk,			\
+	.exec_domain   = &default_exec_domain,	\
+	.flags	       = 0,			\
+	.cpu	       = 0,			\
+	.preempt_count = 1,			\
+	.addr_limit     = KERNEL_DS,		\
+	.restart_block = {			\
+		.fn = do_no_restart_syscall,	\
+	},					\
+}
+
+#define init_thread_info	(init_thread_union.thread_info)
+#define init_stack		(init_thread_union.stack)
+
+static inline struct thread_info *current_thread_info(void)
+{ 
+	struct thread_info *ti;
+	ti = (void *)(read_pda(kernelstack) + PDA_STACKOFFSET - THREAD_SIZE);
+	return ti; 
+}
+
+/* do not use in interrupt context */
+static inline struct thread_info *stack_thread_info(void)
+{
+	struct thread_info *ti;
+	__asm__("andq %%rsp,%0; ":"=r" (ti) : "0" (~(THREAD_SIZE - 1)));
+	return ti;
+}
+
+/* thread information allocation */
+#ifdef CONFIG_DEBUG_STACK_USAGE
+#define alloc_thread_info(tsk)					\
+    ({								\
+	struct thread_info *ret;				\
+								\
+	ret = ((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER)); \
+	if (ret)						\
+		memset(ret, 0, THREAD_SIZE);			\
+	ret;							\
+    })
+#else
+#define alloc_thread_info(tsk) \
+	((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))
+#endif
+
+#define free_thread_info(ti) free_pages((unsigned long) (ti), THREAD_ORDER)
+
+#else /* !__ASSEMBLY__ */
+
+/* how to get the thread information struct from ASM */
+#define GET_THREAD_INFO(reg) \
+	movq %gs:pda_kernelstack,reg ; \
+	subq $(THREAD_SIZE-PDA_STACKOFFSET),reg
+
+#endif
+
+/*
+ * thread information flags
+ * - these are process state flags that various assembly files may need to access
+ * - pending work-to-be-done flags are in LSW
+ * - other flags in MSW
+ * Warning: layout of LSW is hardcoded in entry.S
+ */
+#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
+#define TIF_SIGPENDING		2	/* signal pending */
+#define TIF_NEED_RESCHED	3	/* rescheduling necessary */
+#define TIF_SINGLESTEP		4	/* reenable singlestep on user return*/
+#define TIF_IRET		5	/* force IRET */
+#define TIF_SYSCALL_AUDIT	7	/* syscall auditing active */
+#define TIF_SECCOMP		8	/* secure computing */
+#define TIF_RESTORE_SIGMASK	9	/* restore signal mask in do_signal */
+#define TIF_MCE_NOTIFY		10	/* notify userspace of an MCE */
+/* 16 free */
+#define TIF_IA32		17	/* 32bit process */ 
+#define TIF_FORK		18	/* ret_from_fork */
+#define TIF_ABI_PENDING		19
+#define TIF_MEMDIE		20
+#define TIF_DEBUG		21	/* uses debug registers */
+#define TIF_IO_BITMAP		22	/* uses I/O bitmap */
+#define TIF_FREEZE		23	/* is freezing for suspend */
+
+#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
+#define _TIF_SIGPENDING		(1<<TIF_SIGPENDING)
+#define _TIF_SINGLESTEP		(1<<TIF_SINGLESTEP)
+#define _TIF_NEED_RESCHED	(1<<TIF_NEED_RESCHED)
+#define _TIF_IRET		(1<<TIF_IRET)
+#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
+#define _TIF_SECCOMP		(1<<TIF_SECCOMP)
+#define _TIF_RESTORE_SIGMASK	(1<<TIF_RESTORE_SIGMASK)
+#define _TIF_MCE_NOTIFY		(1<<TIF_MCE_NOTIFY)
+#define _TIF_IA32		(1<<TIF_IA32)
+#define _TIF_FORK		(1<<TIF_FORK)
+#define _TIF_ABI_PENDING	(1<<TIF_ABI_PENDING)
+#define _TIF_DEBUG		(1<<TIF_DEBUG)
+#define _TIF_IO_BITMAP		(1<<TIF_IO_BITMAP)
+#define _TIF_FREEZE		(1<<TIF_FREEZE)
+
+/* work to do on interrupt/exception return */
+#define _TIF_WORK_MASK \
+  (0x0000FFFF & ~(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|_TIF_SINGLESTEP|_TIF_SECCOMP))
+/* work to do on any return to user space */
+#define _TIF_ALLWORK_MASK (0x0000FFFF & ~_TIF_SECCOMP)
+
+/* flags to check in __switch_to() */
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP)
+
+#define PREEMPT_ACTIVE     0x10000000
+
+/*
+ * Thread-synchronous status.
+ *
+ * This is different from the flags in that nobody else
+ * ever touches our thread-synchronous status, so we don't
+ * have to worry about atomic accesses.
+ */
+#define TS_USEDFPU		0x0001	/* FPU was used by this task this quantum (SMP) */
+#define TS_COMPAT		0x0002	/* 32bit syscall active */
+#define TS_POLLING		0x0004	/* true if in idle loop and not sleeping */
+
+#define tsk_is_polling(t) (task_thread_info(t)->status & TS_POLLING)
+
+#endif /* __KERNEL__ */
+
+#endif /* _ASM_THREAD_INFO_H */
diff -urpN linux-2.6.23-sabayon/include/asm/timex.h testtry/include/asm/timex.h
--- linux-2.6.23-sabayon/include/asm/timex.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/timex.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,31 @@
+/*
+ * linux/include/asm-x86_64/timex.h
+ *
+ * x86-64 architecture timex specifications
+ */
+#ifndef _ASMx8664_TIMEX_H
+#define _ASMx8664_TIMEX_H
+
+#include <asm/8253pit.h>
+#include <asm/msr.h>
+#include <asm/vsyscall.h>
+#include <asm/system.h>
+#include <asm/processor.h>
+#include <asm/tsc.h>
+#include <linux/compiler.h>
+
+#define CLOCK_TICK_RATE	PIT_TICK_RATE	/* Underlying HZ */
+
+extern int read_current_timer(unsigned long *timer_value);
+#define ARCH_HAS_READ_CURRENT_TIMER	1
+
+#define USEC_PER_TICK (USEC_PER_SEC / HZ)
+#define NSEC_PER_TICK (NSEC_PER_SEC / HZ)
+#define FSEC_PER_TICK (FSEC_PER_SEC / HZ)
+
+#define NS_SCALE        10 /* 2^10, carefully chosen */
+#define US_SCALE        32 /* 2^32, arbitralrily chosen */
+
+extern void mark_tsc_unstable(char *msg);
+extern void set_cyc2ns_scale(unsigned long khz);
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/tlbflush.h testtry/include/asm/tlbflush.h
--- linux-2.6.23-sabayon/include/asm/tlbflush.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/tlbflush.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,109 @@
+#ifndef _X8664_TLBFLUSH_H
+#define _X8664_TLBFLUSH_H
+
+#include <linux/mm.h>
+#include <linux/sched.h>
+#include <asm/processor.h>
+#include <asm/system.h>
+
+static inline void __flush_tlb(void)
+{
+	write_cr3(read_cr3());
+}
+
+static inline void __flush_tlb_all(void)
+{
+	unsigned long cr4 = read_cr4();
+	write_cr4(cr4 & ~X86_CR4_PGE);	/* clear PGE */
+	write_cr4(cr4);			/* write old PGE again and flush TLBs */
+}
+
+#define __flush_tlb_one(addr) \
+	__asm__ __volatile__("invlpg (%0)" :: "r" (addr) : "memory")
+
+
+/*
+ * TLB flushing:
+ *
+ *  - flush_tlb() flushes the current mm struct TLBs
+ *  - flush_tlb_all() flushes all processes TLBs
+ *  - flush_tlb_mm(mm) flushes the specified mm context TLB's
+ *  - flush_tlb_page(vma, vmaddr) flushes one page
+ *  - flush_tlb_range(vma, start, end) flushes a range of pages
+ *  - flush_tlb_kernel_range(start, end) flushes a range of kernel pages
+ *  - flush_tlb_pgtables(mm, start, end) flushes a range of page tables
+ *
+ * x86-64 can only flush individual pages or full VMs. For a range flush
+ * we always do the full VM. Might be worth trying if for a small
+ * range a few INVLPGs in a row are a win.
+ */
+
+#ifndef CONFIG_SMP
+
+#define flush_tlb() __flush_tlb()
+#define flush_tlb_all() __flush_tlb_all()
+#define local_flush_tlb() __flush_tlb()
+
+static inline void flush_tlb_mm(struct mm_struct *mm)
+{
+	if (mm == current->active_mm)
+		__flush_tlb();
+}
+
+static inline void flush_tlb_page(struct vm_area_struct *vma,
+	unsigned long addr)
+{
+	if (vma->vm_mm == current->active_mm)
+		__flush_tlb_one(addr);
+}
+
+static inline void flush_tlb_range(struct vm_area_struct *vma,
+	unsigned long start, unsigned long end)
+{
+	if (vma->vm_mm == current->active_mm)
+		__flush_tlb();
+}
+
+#else
+
+#include <asm/smp.h>
+
+#define local_flush_tlb() \
+	__flush_tlb()
+
+extern void flush_tlb_all(void);
+extern void flush_tlb_current_task(void);
+extern void flush_tlb_mm(struct mm_struct *);
+extern void flush_tlb_page(struct vm_area_struct *, unsigned long);
+
+#define flush_tlb()	flush_tlb_current_task()
+
+static inline void flush_tlb_range(struct vm_area_struct * vma, unsigned long start, unsigned long end)
+{
+	flush_tlb_mm(vma->vm_mm);
+}
+
+#define TLBSTATE_OK	1
+#define TLBSTATE_LAZY	2
+
+/* Roughly an IPI every 20MB with 4k pages for freeing page table
+   ranges. Cost is about 42k of memory for each CPU. */
+#define ARCH_FREE_PTE_NR 5350	
+
+#endif
+
+static inline void flush_tlb_kernel_range(unsigned long start,
+					unsigned long end)
+{
+	flush_tlb_all();
+}
+
+static inline void flush_tlb_pgtables(struct mm_struct *mm,
+				      unsigned long start, unsigned long end)
+{
+	/* x86_64 does not keep any page table caches in a software TLB.
+	   The CPUs do in their hardware TLBs, but they are handled
+	   by the normal TLB flushing algorithms. */
+}
+
+#endif /* _X8664_TLBFLUSH_H */
diff -urpN linux-2.6.23-sabayon/include/asm/tlb.h testtry/include/asm/tlb.h
--- linux-2.6.23-sabayon/include/asm/tlb.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/tlb.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,13 @@
+#ifndef TLB_H
+#define TLB_H 1
+
+
+#define tlb_start_vma(tlb, vma) do { } while (0)
+#define tlb_end_vma(tlb, vma) do { } while (0)
+#define __tlb_remove_tlb_entry(tlb, ptep, address) do { } while (0)
+
+#define tlb_flush(tlb) flush_tlb_mm((tlb)->mm)
+
+#include <asm-generic/tlb.h>
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/topology.h testtry/include/asm/topology.h
--- linux-2.6.23-sabayon/include/asm/topology.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/topology.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,71 @@
+#ifndef _ASM_X86_64_TOPOLOGY_H
+#define _ASM_X86_64_TOPOLOGY_H
+
+
+#ifdef CONFIG_NUMA
+
+#include <asm/mpspec.h>
+#include <asm/bitops.h>
+
+extern cpumask_t cpu_online_map;
+
+extern unsigned char cpu_to_node[];
+extern cpumask_t     node_to_cpumask[];
+
+#ifdef CONFIG_ACPI_NUMA
+extern int __node_distance(int, int);
+#define node_distance(a,b) __node_distance(a,b)
+/* #else fallback version */
+#endif
+
+#define cpu_to_node(cpu)		(cpu_to_node[cpu])
+#define parent_node(node)		(node)
+#define node_to_first_cpu(node) 	(first_cpu(node_to_cpumask[node]))
+#define node_to_cpumask(node)		(node_to_cpumask[node])
+#define pcibus_to_node(bus)	((struct pci_sysdata *)((bus)->sysdata))->node
+#define pcibus_to_cpumask(bus)		node_to_cpumask(pcibus_to_node(bus));
+
+#define numa_node_id()			read_pda(nodenumber)
+
+/* sched_domains SD_NODE_INIT for x86_64 machines */
+#define SD_NODE_INIT (struct sched_domain) {		\
+	.span			= CPU_MASK_NONE,	\
+	.parent			= NULL,			\
+	.child			= NULL,			\
+	.groups			= NULL,			\
+	.min_interval		= 8,			\
+	.max_interval		= 32,			\
+	.busy_factor		= 32,			\
+	.imbalance_pct		= 125,			\
+	.cache_nice_tries	= 2,			\
+	.busy_idx		= 3,			\
+	.idle_idx		= 2,			\
+	.newidle_idx		= 0, 			\
+	.wake_idx		= 1,			\
+	.forkexec_idx		= 1,			\
+	.flags			= SD_LOAD_BALANCE	\
+				| SD_BALANCE_FORK	\
+				| SD_BALANCE_EXEC	\
+				| SD_SERIALIZE		\
+				| SD_WAKE_BALANCE,	\
+	.last_balance		= jiffies,		\
+	.balance_interval	= 1,			\
+	.nr_balance_failed	= 0,			\
+}
+
+#endif
+
+#ifdef CONFIG_SMP
+#define topology_physical_package_id(cpu)	(cpu_data[cpu].phys_proc_id)
+#define topology_core_id(cpu)			(cpu_data[cpu].cpu_core_id)
+#define topology_core_siblings(cpu)		(cpu_core_map[cpu])
+#define topology_thread_siblings(cpu)		(cpu_sibling_map[cpu])
+#define mc_capable()			(boot_cpu_data.x86_max_cores > 1)
+#define smt_capable() 			(smp_num_siblings > 1)
+#endif
+
+#include <asm-generic/topology.h>
+
+extern cpumask_t cpu_coregroup_map(int cpu);
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/tsc.h testtry/include/asm/tsc.h
--- linux-2.6.23-sabayon/include/asm/tsc.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/tsc.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1 @@
+#include <asm-i386/tsc.h>
diff -urpN linux-2.6.23-sabayon/include/asm/types.h testtry/include/asm/types.h
--- linux-2.6.23-sabayon/include/asm/types.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/types.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,55 @@
+#ifndef _X86_64_TYPES_H
+#define _X86_64_TYPES_H
+
+#ifndef __ASSEMBLY__
+
+typedef unsigned short umode_t;
+
+/*
+ * __xx is ok: it doesn't pollute the POSIX namespace. Use these in the
+ * header files exported to user space
+ */
+
+typedef __signed__ char __s8;
+typedef unsigned char __u8;
+
+typedef __signed__ short __s16;
+typedef unsigned short __u16;
+
+typedef __signed__ int __s32;
+typedef unsigned int __u32;
+
+typedef __signed__ long long __s64;
+typedef unsigned long long  __u64;
+
+#endif /* __ASSEMBLY__ */
+
+/*
+ * These aren't exported outside the kernel to avoid name space clashes
+ */
+#ifdef __KERNEL__
+
+#define BITS_PER_LONG 64
+
+#ifndef __ASSEMBLY__
+
+typedef signed char s8;
+typedef unsigned char u8;
+
+typedef signed short s16;
+typedef unsigned short u16;
+
+typedef signed int s32;
+typedef unsigned int u32;
+
+typedef signed long long s64;
+typedef unsigned long long u64;
+
+typedef u64 dma64_addr_t;
+typedef u64 dma_addr_t;
+
+#endif /* __ASSEMBLY__ */
+
+#endif /* __KERNEL__ */
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/uaccess.h testtry/include/asm/uaccess.h
--- linux-2.6.23-sabayon/include/asm/uaccess.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/uaccess.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,384 @@
+#ifndef __X86_64_UACCESS_H
+#define __X86_64_UACCESS_H
+
+/*
+ * User space memory access functions
+ */
+#include <linux/compiler.h>
+#include <linux/errno.h>
+#include <linux/prefetch.h>
+#include <asm/page.h>
+
+#define VERIFY_READ 0
+#define VERIFY_WRITE 1
+
+/*
+ * The fs value determines whether argument validity checking should be
+ * performed or not.  If get_fs() == USER_DS, checking is performed, with
+ * get_fs() == KERNEL_DS, checking is bypassed.
+ *
+ * For historical reasons, these macros are grossly misnamed.
+ */
+
+#define MAKE_MM_SEG(s)	((mm_segment_t) { (s) })
+
+#define KERNEL_DS	MAKE_MM_SEG(0xFFFFFFFFFFFFFFFFUL)
+#define USER_DS		MAKE_MM_SEG(PAGE_OFFSET)
+
+#define get_ds()	(KERNEL_DS)
+#define get_fs()	(current_thread_info()->addr_limit)
+#define set_fs(x)	(current_thread_info()->addr_limit = (x))
+
+#define segment_eq(a,b)	((a).seg == (b).seg)
+
+#define __addr_ok(addr) (!((unsigned long)(addr) & (current_thread_info()->addr_limit.seg)))
+
+/*
+ * Uhhuh, this needs 65-bit arithmetic. We have a carry..
+ */
+#define __range_not_ok(addr,size) ({ \
+	unsigned long flag,roksum; \
+	__chk_user_ptr(addr); \
+	asm("# range_ok\n\r" \
+		"addq %3,%1 ; sbbq %0,%0 ; cmpq %1,%4 ; sbbq $0,%0"  \
+		:"=&r" (flag), "=r" (roksum) \
+		:"1" (addr),"g" ((long)(size)),"g" (current_thread_info()->addr_limit.seg)); \
+	flag; })
+
+#define access_ok(type, addr, size) (__range_not_ok(addr,size) == 0)
+
+/*
+ * The exception table consists of pairs of addresses: the first is the
+ * address of an instruction that is allowed to fault, and the second is
+ * the address at which the program should continue.  No registers are
+ * modified, so it is entirely up to the continuation code to figure out
+ * what to do.
+ *
+ * All the routines below use bits of fixup code that are out of line
+ * with the main instruction path.  This means when everything is well,
+ * we don't even have to jump over them.  Further, they do not intrude
+ * on our cache or tlb entries.
+ */
+
+struct exception_table_entry
+{
+	unsigned long insn, fixup;
+};
+
+#define ARCH_HAS_SEARCH_EXTABLE
+
+/*
+ * These are the main single-value transfer routines.  They automatically
+ * use the right size if we just have the right pointer type.
+ *
+ * This gets kind of ugly. We want to return _two_ values in "get_user()"
+ * and yet we don't want to do any pointers, because that is too much
+ * of a performance impact. Thus we have a few rather ugly macros here,
+ * and hide all the ugliness from the user.
+ *
+ * The "__xxx" versions of the user access functions are versions that
+ * do not verify the address space, that must have been done previously
+ * with a separate "access_ok()" call (this is used when we do multiple
+ * accesses to the same area of user memory).
+ */
+
+#define __get_user_x(size,ret,x,ptr) \
+	asm volatile("call __get_user_" #size \
+		:"=a" (ret),"=d" (x) \
+		:"c" (ptr) \
+		:"r8")
+
+/* Careful: we have to cast the result to the type of the pointer for sign reasons */
+#define get_user(x,ptr)							\
+({	unsigned long __val_gu;						\
+	int __ret_gu; 							\
+	__chk_user_ptr(ptr);						\
+	switch(sizeof (*(ptr))) {					\
+	case 1:  __get_user_x(1,__ret_gu,__val_gu,ptr); break;		\
+	case 2:  __get_user_x(2,__ret_gu,__val_gu,ptr); break;		\
+	case 4:  __get_user_x(4,__ret_gu,__val_gu,ptr); break;		\
+	case 8:  __get_user_x(8,__ret_gu,__val_gu,ptr); break;		\
+	default: __get_user_bad(); break;				\
+	}								\
+	(x) = (__force typeof(*(ptr)))__val_gu;				\
+	__ret_gu;							\
+})
+
+extern void __put_user_1(void);
+extern void __put_user_2(void);
+extern void __put_user_4(void);
+extern void __put_user_8(void);
+extern void __put_user_bad(void);
+
+#define __put_user_x(size,ret,x,ptr)					\
+	asm volatile("call __put_user_" #size			\
+		:"=a" (ret)						\
+		:"c" (ptr),"d" (x)					\
+		:"r8")
+
+#define put_user(x,ptr)							\
+  __put_user_check((__typeof__(*(ptr)))(x),(ptr),sizeof(*(ptr)))
+
+#define __get_user(x,ptr) \
+  __get_user_nocheck((x),(ptr),sizeof(*(ptr)))
+#define __put_user(x,ptr) \
+  __put_user_nocheck((__typeof__(*(ptr)))(x),(ptr),sizeof(*(ptr)))
+
+#define __get_user_unaligned __get_user
+#define __put_user_unaligned __put_user
+
+#define __put_user_nocheck(x,ptr,size)			\
+({							\
+	int __pu_err;					\
+	__put_user_size((x),(ptr),(size),__pu_err);	\
+	__pu_err;					\
+})
+
+
+#define __put_user_check(x,ptr,size)			\
+({							\
+	int __pu_err;					\
+	typeof(*(ptr)) __user *__pu_addr = (ptr);	\
+	switch (size) { 				\
+	case 1: __put_user_x(1,__pu_err,x,__pu_addr); break;	\
+	case 2: __put_user_x(2,__pu_err,x,__pu_addr); break;	\
+	case 4: __put_user_x(4,__pu_err,x,__pu_addr); break;	\
+	case 8: __put_user_x(8,__pu_err,x,__pu_addr); break;	\
+	default: __put_user_bad();			\
+	}						\
+	__pu_err;					\
+})
+
+#define __put_user_size(x,ptr,size,retval)				\
+do {									\
+	retval = 0;							\
+	__chk_user_ptr(ptr);						\
+	switch (size) {							\
+	  case 1: __put_user_asm(x,ptr,retval,"b","b","iq",-EFAULT); break;\
+	  case 2: __put_user_asm(x,ptr,retval,"w","w","ir",-EFAULT); break;\
+	  case 4: __put_user_asm(x,ptr,retval,"l","k","ir",-EFAULT); break;\
+	  case 8: __put_user_asm(x,ptr,retval,"q","","Zr",-EFAULT); break;\
+	  default: __put_user_bad();					\
+	}								\
+} while (0)
+
+/* FIXME: this hack is definitely wrong -AK */
+struct __large_struct { unsigned long buf[100]; };
+#define __m(x) (*(struct __large_struct __user *)(x))
+
+/*
+ * Tell gcc we read from memory instead of writing: this is because
+ * we do not write to any memory gcc knows about, so there are no
+ * aliasing issues.
+ */
+#define __put_user_asm(x, addr, err, itype, rtype, ltype, errno)	\
+	asm volatile(					\
+		"1:	mov"itype" %"rtype"1,%2\n"		\
+		"2:\n"						\
+		".section .fixup,\"ax\"\n"			\
+		"3:	mov %3,%0\n"				\
+		"	jmp 2b\n"				\
+		".previous\n"					\
+		".section __ex_table,\"a\"\n"			\
+		"	.align 8\n"				\
+		"	.quad 1b,3b\n"				\
+		".previous"					\
+		: "=r"(err)					\
+		: ltype (x), "m"(__m(addr)), "i"(errno), "0"(err))
+
+
+#define __get_user_nocheck(x,ptr,size)				\
+({								\
+	int __gu_err;						\
+	unsigned long __gu_val;					\
+	__get_user_size(__gu_val,(ptr),(size),__gu_err);	\
+	(x) = (__force typeof(*(ptr)))__gu_val;			\
+	__gu_err;						\
+})
+
+extern int __get_user_1(void);
+extern int __get_user_2(void);
+extern int __get_user_4(void);
+extern int __get_user_8(void);
+extern int __get_user_bad(void);
+
+#define __get_user_size(x,ptr,size,retval)				\
+do {									\
+	retval = 0;							\
+	__chk_user_ptr(ptr);						\
+	switch (size) {							\
+	  case 1: __get_user_asm(x,ptr,retval,"b","b","=q",-EFAULT); break;\
+	  case 2: __get_user_asm(x,ptr,retval,"w","w","=r",-EFAULT); break;\
+	  case 4: __get_user_asm(x,ptr,retval,"l","k","=r",-EFAULT); break;\
+	  case 8: __get_user_asm(x,ptr,retval,"q","","=r",-EFAULT); break;\
+	  default: (x) = __get_user_bad();				\
+	}								\
+} while (0)
+
+#define __get_user_asm(x, addr, err, itype, rtype, ltype, errno)	\
+	asm volatile(					\
+		"1:	mov"itype" %2,%"rtype"1\n"		\
+		"2:\n"						\
+		".section .fixup,\"ax\"\n"			\
+		"3:	mov %3,%0\n"				\
+		"	xor"itype" %"rtype"1,%"rtype"1\n"	\
+		"	jmp 2b\n"				\
+		".previous\n"					\
+		".section __ex_table,\"a\"\n"			\
+		"	.align 8\n"				\
+		"	.quad 1b,3b\n"				\
+		".previous"					\
+		: "=r"(err), ltype (x)				\
+		: "m"(__m(addr)), "i"(errno), "0"(err))
+
+/*
+ * Copy To/From Userspace
+ */
+
+/* Handles exceptions in both to and from, but doesn't do access_ok */
+__must_check unsigned long
+copy_user_generic(void *to, const void *from, unsigned len);
+
+__must_check unsigned long
+copy_to_user(void __user *to, const void *from, unsigned len);
+__must_check unsigned long
+copy_from_user(void *to, const void __user *from, unsigned len);
+__must_check unsigned long
+copy_in_user(void __user *to, const void __user *from, unsigned len);
+
+static __always_inline __must_check
+int __copy_from_user(void *dst, const void __user *src, unsigned size)
+{ 
+	int ret = 0;
+	if (!__builtin_constant_p(size))
+		return copy_user_generic(dst,(__force void *)src,size);
+	switch (size) { 
+	case 1:__get_user_asm(*(u8*)dst,(u8 __user *)src,ret,"b","b","=q",1); 
+		return ret;
+	case 2:__get_user_asm(*(u16*)dst,(u16 __user *)src,ret,"w","w","=r",2);
+		return ret;
+	case 4:__get_user_asm(*(u32*)dst,(u32 __user *)src,ret,"l","k","=r",4);
+		return ret;
+	case 8:__get_user_asm(*(u64*)dst,(u64 __user *)src,ret,"q","","=r",8);
+		return ret; 
+	case 10:
+	       	__get_user_asm(*(u64*)dst,(u64 __user *)src,ret,"q","","=r",16);
+		if (unlikely(ret)) return ret;
+		__get_user_asm(*(u16*)(8+(char*)dst),(u16 __user *)(8+(char __user *)src),ret,"w","w","=r",2);
+		return ret; 
+	case 16:
+		__get_user_asm(*(u64*)dst,(u64 __user *)src,ret,"q","","=r",16);
+		if (unlikely(ret)) return ret;
+		__get_user_asm(*(u64*)(8+(char*)dst),(u64 __user *)(8+(char __user *)src),ret,"q","","=r",8);
+		return ret; 
+	default:
+		return copy_user_generic(dst,(__force void *)src,size); 
+	}
+}	
+
+static __always_inline __must_check
+int __copy_to_user(void __user *dst, const void *src, unsigned size)
+{ 
+	int ret = 0;
+	if (!__builtin_constant_p(size))
+		return copy_user_generic((__force void *)dst,src,size);
+	switch (size) { 
+	case 1:__put_user_asm(*(u8*)src,(u8 __user *)dst,ret,"b","b","iq",1); 
+		return ret;
+	case 2:__put_user_asm(*(u16*)src,(u16 __user *)dst,ret,"w","w","ir",2);
+		return ret;
+	case 4:__put_user_asm(*(u32*)src,(u32 __user *)dst,ret,"l","k","ir",4);
+		return ret;
+	case 8:__put_user_asm(*(u64*)src,(u64 __user *)dst,ret,"q","","ir",8);
+		return ret; 
+	case 10:
+		__put_user_asm(*(u64*)src,(u64 __user *)dst,ret,"q","","ir",10);
+		if (unlikely(ret)) return ret;
+		asm("":::"memory");
+		__put_user_asm(4[(u16*)src],4+(u16 __user *)dst,ret,"w","w","ir",2);
+		return ret; 
+	case 16:
+		__put_user_asm(*(u64*)src,(u64 __user *)dst,ret,"q","","ir",16);
+		if (unlikely(ret)) return ret;
+		asm("":::"memory");
+		__put_user_asm(1[(u64*)src],1+(u64 __user *)dst,ret,"q","","ir",8);
+		return ret; 
+	default:
+		return copy_user_generic((__force void *)dst,src,size); 
+	}
+}	
+
+static __always_inline __must_check
+int __copy_in_user(void __user *dst, const void __user *src, unsigned size)
+{ 
+	int ret = 0;
+	if (!__builtin_constant_p(size))
+		return copy_user_generic((__force void *)dst,(__force void *)src,size);
+	switch (size) { 
+	case 1: { 
+		u8 tmp;
+		__get_user_asm(tmp,(u8 __user *)src,ret,"b","b","=q",1); 
+		if (likely(!ret))
+			__put_user_asm(tmp,(u8 __user *)dst,ret,"b","b","iq",1); 
+		return ret;
+	}
+	case 2: { 
+		u16 tmp;
+		__get_user_asm(tmp,(u16 __user *)src,ret,"w","w","=r",2); 
+		if (likely(!ret))
+			__put_user_asm(tmp,(u16 __user *)dst,ret,"w","w","ir",2); 
+		return ret;
+	}
+
+	case 4: { 
+		u32 tmp;
+		__get_user_asm(tmp,(u32 __user *)src,ret,"l","k","=r",4); 
+		if (likely(!ret))
+			__put_user_asm(tmp,(u32 __user *)dst,ret,"l","k","ir",4); 
+		return ret;
+	}
+	case 8: { 
+		u64 tmp;
+		__get_user_asm(tmp,(u64 __user *)src,ret,"q","","=r",8); 
+		if (likely(!ret))
+			__put_user_asm(tmp,(u64 __user *)dst,ret,"q","","ir",8); 
+		return ret;
+	}
+	default:
+		return copy_user_generic((__force void *)dst,(__force void *)src,size); 
+	}
+}	
+
+__must_check long 
+strncpy_from_user(char *dst, const char __user *src, long count);
+__must_check long 
+__strncpy_from_user(char *dst, const char __user *src, long count);
+__must_check long strnlen_user(const char __user *str, long n);
+__must_check long __strnlen_user(const char __user *str, long n);
+__must_check long strlen_user(const char __user *str);
+__must_check unsigned long clear_user(void __user *mem, unsigned long len);
+__must_check unsigned long __clear_user(void __user *mem, unsigned long len);
+
+__must_check long __copy_from_user_inatomic(void *dst, const void __user *src, unsigned size);
+
+static __must_check __always_inline int
+__copy_to_user_inatomic(void __user *dst, const void *src, unsigned size)
+{
+	return copy_user_generic((__force void *)dst, src, size);
+}
+
+#define ARCH_HAS_NOCACHE_UACCESS 1
+extern long __copy_user_nocache(void *dst, const void __user *src, unsigned size, int zerorest);
+
+static inline int __copy_from_user_nocache(void *dst, const void __user *src, unsigned size)
+{
+	might_sleep();
+	return __copy_user_nocache(dst, src, size, 1);
+}
+
+static inline int __copy_from_user_inatomic_nocache(void *dst, const void __user *src, unsigned size)
+{
+	return __copy_user_nocache(dst, src, size, 0);
+}
+
+#endif /* __X86_64_UACCESS_H */
diff -urpN linux-2.6.23-sabayon/include/asm/ucontext.h testtry/include/asm/ucontext.h
--- linux-2.6.23-sabayon/include/asm/ucontext.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/ucontext.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,12 @@
+#ifndef _ASMX8664_UCONTEXT_H
+#define _ASMX8664_UCONTEXT_H
+
+struct ucontext {
+	unsigned long	  uc_flags;
+	struct ucontext  *uc_link;
+	stack_t		  uc_stack;
+	struct sigcontext uc_mcontext;
+	sigset_t	  uc_sigmask;	/* mask last for extensibility */
+};
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/unaligned.h testtry/include/asm/unaligned.h
--- linux-2.6.23-sabayon/include/asm/unaligned.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/unaligned.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,37 @@
+#ifndef __X8664_UNALIGNED_H
+#define __X8664_UNALIGNED_H
+
+/*
+ * The x86-64 can do unaligned accesses itself. 
+ *
+ * The strange macros are there to make sure these can't
+ * be misused in a way that makes them not work on other
+ * architectures where unaligned accesses aren't as simple.
+ */
+
+/**
+ * get_unaligned - get value from possibly mis-aligned location
+ * @ptr: pointer to value
+ *
+ * This macro should be used for accessing values larger in size than 
+ * single bytes at locations that are expected to be improperly aligned, 
+ * e.g. retrieving a u16 value from a location not u16-aligned.
+ *
+ * Note that unaligned accesses can be very expensive on some architectures.
+ */
+#define get_unaligned(ptr) (*(ptr))
+
+/**
+ * put_unaligned - put value to a possibly mis-aligned location
+ * @val: value to place
+ * @ptr: pointer to location
+ *
+ * This macro should be used for placing values larger in size than 
+ * single bytes at locations that are expected to be improperly aligned, 
+ * e.g. writing a u16 value to a location not u16-aligned.
+ *
+ * Note that unaligned accesses can be very expensive on some architectures.
+ */
+#define put_unaligned(val, ptr) ((void)( *(ptr) = (val) ))
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/unistd.h testtry/include/asm/unistd.h
--- linux-2.6.23-sabayon/include/asm/unistd.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/unistd.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,687 @@
+#ifndef _ASM_X86_64_UNISTD_H_
+#define _ASM_X86_64_UNISTD_H_
+
+#ifndef __SYSCALL
+#define __SYSCALL(a,b) 
+#endif
+
+/*
+ * This file contains the system call numbers.
+ * 
+ * Note: holes are not allowed.
+ */
+
+/* at least 8 syscall per cacheline */
+#define __NR_read                                0
+__SYSCALL(__NR_read, sys_read)
+#define __NR_write                               1
+__SYSCALL(__NR_write, sys_write)
+#define __NR_open                                2
+__SYSCALL(__NR_open, sys_open)
+#define __NR_close                               3
+__SYSCALL(__NR_close, sys_close)
+#define __NR_stat                                4
+__SYSCALL(__NR_stat, sys_newstat)
+#define __NR_fstat                               5
+__SYSCALL(__NR_fstat, sys_newfstat)
+#define __NR_lstat                               6
+__SYSCALL(__NR_lstat, sys_newlstat)
+#define __NR_poll                                7
+__SYSCALL(__NR_poll, sys_poll)
+
+#define __NR_lseek                               8
+__SYSCALL(__NR_lseek, sys_lseek)
+#define __NR_mmap                                9
+__SYSCALL(__NR_mmap, sys_mmap)
+#define __NR_mprotect                           10
+__SYSCALL(__NR_mprotect, sys_mprotect)
+#define __NR_munmap                             11
+__SYSCALL(__NR_munmap, sys_munmap)
+#define __NR_brk                                12
+__SYSCALL(__NR_brk, sys_brk)
+#define __NR_rt_sigaction                       13
+__SYSCALL(__NR_rt_sigaction, sys_rt_sigaction)
+#define __NR_rt_sigprocmask                     14
+__SYSCALL(__NR_rt_sigprocmask, sys_rt_sigprocmask)
+#define __NR_rt_sigreturn                       15
+__SYSCALL(__NR_rt_sigreturn, stub_rt_sigreturn)
+
+#define __NR_ioctl                              16
+__SYSCALL(__NR_ioctl, sys_ioctl)
+#define __NR_pread64                            17
+__SYSCALL(__NR_pread64, sys_pread64)
+#define __NR_pwrite64                           18
+__SYSCALL(__NR_pwrite64, sys_pwrite64)
+#define __NR_readv                              19
+__SYSCALL(__NR_readv, sys_readv)
+#define __NR_writev                             20
+__SYSCALL(__NR_writev, sys_writev)
+#define __NR_access                             21
+__SYSCALL(__NR_access, sys_access)
+#define __NR_pipe                               22
+__SYSCALL(__NR_pipe, sys_pipe)
+#define __NR_select                             23
+__SYSCALL(__NR_select, sys_select)
+
+#define __NR_sched_yield                        24
+__SYSCALL(__NR_sched_yield, sys_sched_yield)
+#define __NR_mremap                             25
+__SYSCALL(__NR_mremap, sys_mremap)
+#define __NR_msync                              26
+__SYSCALL(__NR_msync, sys_msync)
+#define __NR_mincore                            27
+__SYSCALL(__NR_mincore, sys_mincore)
+#define __NR_madvise                            28
+__SYSCALL(__NR_madvise, sys_madvise)
+#define __NR_shmget                             29
+__SYSCALL(__NR_shmget, sys_shmget)
+#define __NR_shmat                              30
+__SYSCALL(__NR_shmat, sys_shmat)
+#define __NR_shmctl                             31
+__SYSCALL(__NR_shmctl, sys_shmctl)
+
+#define __NR_dup                                32
+__SYSCALL(__NR_dup, sys_dup)
+#define __NR_dup2                               33
+__SYSCALL(__NR_dup2, sys_dup2)
+#define __NR_pause                              34
+__SYSCALL(__NR_pause, sys_pause)
+#define __NR_nanosleep                          35
+__SYSCALL(__NR_nanosleep, sys_nanosleep)
+#define __NR_getitimer                          36
+__SYSCALL(__NR_getitimer, sys_getitimer)
+#define __NR_alarm                              37
+__SYSCALL(__NR_alarm, sys_alarm)
+#define __NR_setitimer                          38
+__SYSCALL(__NR_setitimer, sys_setitimer)
+#define __NR_getpid                             39
+__SYSCALL(__NR_getpid, sys_getpid)
+
+#define __NR_sendfile                           40
+__SYSCALL(__NR_sendfile, sys_sendfile64)
+#define __NR_socket                             41
+__SYSCALL(__NR_socket, sys_socket)
+#define __NR_connect                            42
+__SYSCALL(__NR_connect, sys_connect)
+#define __NR_accept                             43
+__SYSCALL(__NR_accept, sys_accept)
+#define __NR_sendto                             44
+__SYSCALL(__NR_sendto, sys_sendto)
+#define __NR_recvfrom                           45
+__SYSCALL(__NR_recvfrom, sys_recvfrom)
+#define __NR_sendmsg                            46
+__SYSCALL(__NR_sendmsg, sys_sendmsg)
+#define __NR_recvmsg                            47
+__SYSCALL(__NR_recvmsg, sys_recvmsg)
+
+#define __NR_shutdown                           48
+__SYSCALL(__NR_shutdown, sys_shutdown)
+#define __NR_bind                               49
+__SYSCALL(__NR_bind, sys_bind)
+#define __NR_listen                             50
+__SYSCALL(__NR_listen, sys_listen)
+#define __NR_getsockname                        51
+__SYSCALL(__NR_getsockname, sys_getsockname)
+#define __NR_getpeername                        52
+__SYSCALL(__NR_getpeername, sys_getpeername)
+#define __NR_socketpair                         53
+__SYSCALL(__NR_socketpair, sys_socketpair)
+#define __NR_setsockopt                         54
+__SYSCALL(__NR_setsockopt, sys_setsockopt)
+#define __NR_getsockopt                         55
+__SYSCALL(__NR_getsockopt, sys_getsockopt)
+
+#define __NR_clone                              56
+__SYSCALL(__NR_clone, stub_clone)
+#define __NR_fork                               57
+__SYSCALL(__NR_fork, stub_fork) 
+#define __NR_vfork                              58
+__SYSCALL(__NR_vfork, stub_vfork)
+#define __NR_execve                             59
+__SYSCALL(__NR_execve, stub_execve)
+#define __NR_exit                               60
+__SYSCALL(__NR_exit, sys_exit)
+#define __NR_wait4                              61
+__SYSCALL(__NR_wait4, sys_wait4)
+#define __NR_kill                               62
+__SYSCALL(__NR_kill, sys_kill)
+#define __NR_uname                              63
+__SYSCALL(__NR_uname, sys_uname)
+
+#define __NR_semget                             64
+__SYSCALL(__NR_semget, sys_semget)
+#define __NR_semop                              65
+__SYSCALL(__NR_semop, sys_semop)
+#define __NR_semctl                             66
+__SYSCALL(__NR_semctl, sys_semctl)
+#define __NR_shmdt                              67
+__SYSCALL(__NR_shmdt, sys_shmdt)
+#define __NR_msgget                             68
+__SYSCALL(__NR_msgget, sys_msgget)
+#define __NR_msgsnd                             69
+__SYSCALL(__NR_msgsnd, sys_msgsnd)
+#define __NR_msgrcv                             70
+__SYSCALL(__NR_msgrcv, sys_msgrcv)
+#define __NR_msgctl                             71
+__SYSCALL(__NR_msgctl, sys_msgctl)
+
+#define __NR_fcntl                              72
+__SYSCALL(__NR_fcntl, sys_fcntl)
+#define __NR_flock                              73
+__SYSCALL(__NR_flock, sys_flock)
+#define __NR_fsync                              74
+__SYSCALL(__NR_fsync, sys_fsync)
+#define __NR_fdatasync                          75
+__SYSCALL(__NR_fdatasync, sys_fdatasync)
+#define __NR_truncate                           76
+__SYSCALL(__NR_truncate, sys_truncate)
+#define __NR_ftruncate                          77
+__SYSCALL(__NR_ftruncate, sys_ftruncate)
+#define __NR_getdents                           78
+__SYSCALL(__NR_getdents, sys_getdents)
+#define __NR_getcwd                             79
+__SYSCALL(__NR_getcwd, sys_getcwd)
+
+#define __NR_chdir                              80
+__SYSCALL(__NR_chdir, sys_chdir)
+#define __NR_fchdir                             81
+__SYSCALL(__NR_fchdir, sys_fchdir)
+#define __NR_rename                             82
+__SYSCALL(__NR_rename, sys_rename)
+#define __NR_mkdir                              83
+__SYSCALL(__NR_mkdir, sys_mkdir)
+#define __NR_rmdir                              84
+__SYSCALL(__NR_rmdir, sys_rmdir)
+#define __NR_creat                              85
+__SYSCALL(__NR_creat, sys_creat)
+#define __NR_link                               86
+__SYSCALL(__NR_link, sys_link)
+#define __NR_unlink                             87
+__SYSCALL(__NR_unlink, sys_unlink)
+
+#define __NR_symlink                            88
+__SYSCALL(__NR_symlink, sys_symlink)
+#define __NR_readlink                           89
+__SYSCALL(__NR_readlink, sys_readlink)
+#define __NR_chmod                              90
+__SYSCALL(__NR_chmod, sys_chmod)
+#define __NR_fchmod                             91
+__SYSCALL(__NR_fchmod, sys_fchmod)
+#define __NR_chown                              92
+__SYSCALL(__NR_chown, sys_chown)
+#define __NR_fchown                             93
+__SYSCALL(__NR_fchown, sys_fchown)
+#define __NR_lchown                             94
+__SYSCALL(__NR_lchown, sys_lchown)
+#define __NR_umask                              95
+__SYSCALL(__NR_umask, sys_umask)
+
+#define __NR_gettimeofday                       96
+__SYSCALL(__NR_gettimeofday, sys_gettimeofday)
+#define __NR_getrlimit                          97
+__SYSCALL(__NR_getrlimit, sys_getrlimit)
+#define __NR_getrusage                          98
+__SYSCALL(__NR_getrusage, sys_getrusage)
+#define __NR_sysinfo                            99
+__SYSCALL(__NR_sysinfo, sys_sysinfo)
+#define __NR_times                             100
+__SYSCALL(__NR_times, sys_times)
+#define __NR_ptrace                            101
+__SYSCALL(__NR_ptrace, sys_ptrace)
+#define __NR_getuid                            102
+__SYSCALL(__NR_getuid, sys_getuid)
+#define __NR_syslog                            103
+__SYSCALL(__NR_syslog, sys_syslog)
+
+/* at the very end the stuff that never runs during the benchmarks */
+#define __NR_getgid                            104
+__SYSCALL(__NR_getgid, sys_getgid)
+#define __NR_setuid                            105
+__SYSCALL(__NR_setuid, sys_setuid)
+#define __NR_setgid                            106
+__SYSCALL(__NR_setgid, sys_setgid)
+#define __NR_geteuid                           107
+__SYSCALL(__NR_geteuid, sys_geteuid)
+#define __NR_getegid                           108
+__SYSCALL(__NR_getegid, sys_getegid)
+#define __NR_setpgid                           109
+__SYSCALL(__NR_setpgid, sys_setpgid)
+#define __NR_getppid                           110
+__SYSCALL(__NR_getppid, sys_getppid)
+#define __NR_getpgrp                           111
+__SYSCALL(__NR_getpgrp, sys_getpgrp)
+
+#define __NR_setsid                            112
+__SYSCALL(__NR_setsid, sys_setsid)
+#define __NR_setreuid                          113
+__SYSCALL(__NR_setreuid, sys_setreuid)
+#define __NR_setregid                          114
+__SYSCALL(__NR_setregid, sys_setregid)
+#define __NR_getgroups                         115
+__SYSCALL(__NR_getgroups, sys_getgroups)
+#define __NR_setgroups                         116
+__SYSCALL(__NR_setgroups, sys_setgroups)
+#define __NR_setresuid                         117
+__SYSCALL(__NR_setresuid, sys_setresuid)
+#define __NR_getresuid                         118
+__SYSCALL(__NR_getresuid, sys_getresuid)
+#define __NR_setresgid                         119
+__SYSCALL(__NR_setresgid, sys_setresgid)
+
+#define __NR_getresgid                         120
+__SYSCALL(__NR_getresgid, sys_getresgid)
+#define __NR_getpgid                           121
+__SYSCALL(__NR_getpgid, sys_getpgid)
+#define __NR_setfsuid                          122
+__SYSCALL(__NR_setfsuid, sys_setfsuid)
+#define __NR_setfsgid                          123
+__SYSCALL(__NR_setfsgid, sys_setfsgid)
+#define __NR_getsid                            124
+__SYSCALL(__NR_getsid, sys_getsid)
+#define __NR_capget                            125
+__SYSCALL(__NR_capget, sys_capget)
+#define __NR_capset                            126
+__SYSCALL(__NR_capset, sys_capset)
+
+#define __NR_rt_sigpending                     127
+__SYSCALL(__NR_rt_sigpending, sys_rt_sigpending)
+#define __NR_rt_sigtimedwait                   128
+__SYSCALL(__NR_rt_sigtimedwait, sys_rt_sigtimedwait)
+#define __NR_rt_sigqueueinfo                   129
+__SYSCALL(__NR_rt_sigqueueinfo, sys_rt_sigqueueinfo)
+#define __NR_rt_sigsuspend                     130
+__SYSCALL(__NR_rt_sigsuspend, stub_rt_sigsuspend)
+#define __NR_sigaltstack                       131
+__SYSCALL(__NR_sigaltstack, stub_sigaltstack)
+#define __NR_utime                             132
+__SYSCALL(__NR_utime, sys_utime)
+#define __NR_mknod                             133
+__SYSCALL(__NR_mknod, sys_mknod)
+
+/* Only needed for a.out */
+#define __NR_uselib                            134
+__SYSCALL(__NR_uselib, sys_ni_syscall)
+#define __NR_personality                       135
+__SYSCALL(__NR_personality, sys_personality)
+
+#define __NR_ustat                             136
+__SYSCALL(__NR_ustat, sys_ustat)
+#define __NR_statfs                            137
+__SYSCALL(__NR_statfs, sys_statfs)
+#define __NR_fstatfs                           138
+__SYSCALL(__NR_fstatfs, sys_fstatfs)
+#define __NR_sysfs                             139
+__SYSCALL(__NR_sysfs, sys_sysfs)
+
+#define __NR_getpriority                       140
+__SYSCALL(__NR_getpriority, sys_getpriority)
+#define __NR_setpriority                       141
+__SYSCALL(__NR_setpriority, sys_setpriority)
+#define __NR_sched_setparam                    142
+__SYSCALL(__NR_sched_setparam, sys_sched_setparam)
+#define __NR_sched_getparam                    143
+__SYSCALL(__NR_sched_getparam, sys_sched_getparam)
+#define __NR_sched_setscheduler                144
+__SYSCALL(__NR_sched_setscheduler, sys_sched_setscheduler)
+#define __NR_sched_getscheduler                145
+__SYSCALL(__NR_sched_getscheduler, sys_sched_getscheduler)
+#define __NR_sched_get_priority_max            146
+__SYSCALL(__NR_sched_get_priority_max, sys_sched_get_priority_max)
+#define __NR_sched_get_priority_min            147
+__SYSCALL(__NR_sched_get_priority_min, sys_sched_get_priority_min)
+#define __NR_sched_rr_get_interval             148
+__SYSCALL(__NR_sched_rr_get_interval, sys_sched_rr_get_interval)
+
+#define __NR_mlock                             149
+__SYSCALL(__NR_mlock, sys_mlock)
+#define __NR_munlock                           150
+__SYSCALL(__NR_munlock, sys_munlock)
+#define __NR_mlockall                          151
+__SYSCALL(__NR_mlockall, sys_mlockall)
+#define __NR_munlockall                        152
+__SYSCALL(__NR_munlockall, sys_munlockall)
+
+#define __NR_vhangup                           153
+__SYSCALL(__NR_vhangup, sys_vhangup)
+
+#define __NR_modify_ldt                        154
+__SYSCALL(__NR_modify_ldt, sys_modify_ldt)
+
+#define __NR_pivot_root                        155
+__SYSCALL(__NR_pivot_root, sys_pivot_root)
+
+#define __NR__sysctl                           156
+__SYSCALL(__NR__sysctl, sys_sysctl)
+
+#define __NR_prctl                             157
+__SYSCALL(__NR_prctl, sys_prctl)
+#define __NR_arch_prctl                        158
+__SYSCALL(__NR_arch_prctl,	sys_arch_prctl) 
+
+#define __NR_adjtimex                          159
+__SYSCALL(__NR_adjtimex, sys_adjtimex)
+
+#define __NR_setrlimit                         160
+__SYSCALL(__NR_setrlimit, sys_setrlimit)
+
+#define __NR_chroot                            161
+__SYSCALL(__NR_chroot, sys_chroot)
+
+#define __NR_sync                              162
+__SYSCALL(__NR_sync, sys_sync)
+
+#define __NR_acct                              163
+__SYSCALL(__NR_acct, sys_acct)
+
+#define __NR_settimeofday                      164
+__SYSCALL(__NR_settimeofday, sys_settimeofday)
+
+#define __NR_mount                             165
+__SYSCALL(__NR_mount, sys_mount)
+#define __NR_umount2                           166
+__SYSCALL(__NR_umount2, sys_umount)
+
+#define __NR_swapon                            167
+__SYSCALL(__NR_swapon, sys_swapon)
+#define __NR_swapoff                           168
+__SYSCALL(__NR_swapoff, sys_swapoff)
+
+#define __NR_reboot                            169
+__SYSCALL(__NR_reboot, sys_reboot)
+
+#define __NR_sethostname                       170
+__SYSCALL(__NR_sethostname, sys_sethostname)
+#define __NR_setdomainname                     171
+__SYSCALL(__NR_setdomainname, sys_setdomainname)
+
+#define __NR_iopl                              172
+__SYSCALL(__NR_iopl, stub_iopl)
+#define __NR_ioperm                            173
+__SYSCALL(__NR_ioperm, sys_ioperm)
+
+#define __NR_create_module                     174
+__SYSCALL(__NR_create_module, sys_ni_syscall)
+#define __NR_init_module                       175
+__SYSCALL(__NR_init_module, sys_init_module)
+#define __NR_delete_module                     176
+__SYSCALL(__NR_delete_module, sys_delete_module)
+#define __NR_get_kernel_syms                   177
+__SYSCALL(__NR_get_kernel_syms, sys_ni_syscall)
+#define __NR_query_module                      178
+__SYSCALL(__NR_query_module, sys_ni_syscall)
+
+#define __NR_quotactl                          179
+__SYSCALL(__NR_quotactl, sys_quotactl)
+
+#define __NR_nfsservctl                        180
+__SYSCALL(__NR_nfsservctl, sys_nfsservctl)
+
+#define __NR_getpmsg                           181	/* reserved for LiS/STREAMS */
+__SYSCALL(__NR_getpmsg, sys_ni_syscall)
+#define __NR_putpmsg                           182	/* reserved for LiS/STREAMS */
+__SYSCALL(__NR_putpmsg, sys_ni_syscall)
+
+#define __NR_afs_syscall                       183	/* reserved for AFS */ 
+__SYSCALL(__NR_afs_syscall, sys_ni_syscall)
+
+#define __NR_tuxcall      		184 /* reserved for tux */
+__SYSCALL(__NR_tuxcall, sys_ni_syscall)
+
+#define __NR_security			185
+__SYSCALL(__NR_security, sys_ni_syscall)
+
+#define __NR_gettid		186
+__SYSCALL(__NR_gettid, sys_gettid)
+
+#define __NR_readahead		187
+__SYSCALL(__NR_readahead, sys_readahead)
+#define __NR_setxattr		188
+__SYSCALL(__NR_setxattr, sys_setxattr)
+#define __NR_lsetxattr		189
+__SYSCALL(__NR_lsetxattr, sys_lsetxattr)
+#define __NR_fsetxattr		190
+__SYSCALL(__NR_fsetxattr, sys_fsetxattr)
+#define __NR_getxattr		191
+__SYSCALL(__NR_getxattr, sys_getxattr)
+#define __NR_lgetxattr		192
+__SYSCALL(__NR_lgetxattr, sys_lgetxattr)
+#define __NR_fgetxattr		193
+__SYSCALL(__NR_fgetxattr, sys_fgetxattr) 
+#define __NR_listxattr		194
+__SYSCALL(__NR_listxattr, sys_listxattr) 
+#define __NR_llistxattr		195
+__SYSCALL(__NR_llistxattr, sys_llistxattr) 
+#define __NR_flistxattr		196
+__SYSCALL(__NR_flistxattr, sys_flistxattr) 
+#define __NR_removexattr	197
+__SYSCALL(__NR_removexattr, sys_removexattr) 
+#define __NR_lremovexattr	198
+__SYSCALL(__NR_lremovexattr, sys_lremovexattr) 
+#define __NR_fremovexattr	199
+__SYSCALL(__NR_fremovexattr, sys_fremovexattr) 
+#define __NR_tkill	200
+__SYSCALL(__NR_tkill, sys_tkill) 
+#define __NR_time      201
+__SYSCALL(__NR_time, sys_time)
+#define __NR_futex     202
+__SYSCALL(__NR_futex, sys_futex)
+#define __NR_sched_setaffinity    203
+__SYSCALL(__NR_sched_setaffinity, sys_sched_setaffinity)
+#define __NR_sched_getaffinity     204
+__SYSCALL(__NR_sched_getaffinity, sys_sched_getaffinity)
+#define __NR_set_thread_area	205
+__SYSCALL(__NR_set_thread_area, sys_ni_syscall)	/* use arch_prctl */
+#define __NR_io_setup	206
+__SYSCALL(__NR_io_setup, sys_io_setup)
+#define __NR_io_destroy	207
+__SYSCALL(__NR_io_destroy, sys_io_destroy)
+#define __NR_io_getevents	208
+__SYSCALL(__NR_io_getevents, sys_io_getevents)
+#define __NR_io_submit	209
+__SYSCALL(__NR_io_submit, sys_io_submit)
+#define __NR_io_cancel	210
+__SYSCALL(__NR_io_cancel, sys_io_cancel)
+#define __NR_get_thread_area	211
+__SYSCALL(__NR_get_thread_area, sys_ni_syscall)	/* use arch_prctl */
+#define __NR_lookup_dcookie	212
+__SYSCALL(__NR_lookup_dcookie, sys_lookup_dcookie)
+#define __NR_epoll_create	213
+__SYSCALL(__NR_epoll_create, sys_epoll_create)
+#define __NR_epoll_ctl_old	214
+__SYSCALL(__NR_epoll_ctl_old, sys_ni_syscall)
+#define __NR_epoll_wait_old	215
+__SYSCALL(__NR_epoll_wait_old, sys_ni_syscall)
+#define __NR_remap_file_pages	216
+__SYSCALL(__NR_remap_file_pages, sys_remap_file_pages)
+#define __NR_getdents64	217
+__SYSCALL(__NR_getdents64, sys_getdents64)
+#define __NR_set_tid_address	218
+__SYSCALL(__NR_set_tid_address, sys_set_tid_address)
+#define __NR_restart_syscall	219
+__SYSCALL(__NR_restart_syscall, sys_restart_syscall)
+#define __NR_semtimedop		220
+__SYSCALL(__NR_semtimedop, sys_semtimedop)
+#define __NR_fadvise64		221
+__SYSCALL(__NR_fadvise64, sys_fadvise64)
+#define __NR_timer_create		222
+__SYSCALL(__NR_timer_create, sys_timer_create)
+#define __NR_timer_settime		223
+__SYSCALL(__NR_timer_settime, sys_timer_settime)
+#define __NR_timer_gettime		224
+__SYSCALL(__NR_timer_gettime, sys_timer_gettime)
+#define __NR_timer_getoverrun		225
+__SYSCALL(__NR_timer_getoverrun, sys_timer_getoverrun)
+#define __NR_timer_delete	226
+__SYSCALL(__NR_timer_delete, sys_timer_delete)
+#define __NR_clock_settime	227
+__SYSCALL(__NR_clock_settime, sys_clock_settime)
+#define __NR_clock_gettime	228
+__SYSCALL(__NR_clock_gettime, sys_clock_gettime)
+#define __NR_clock_getres	229
+__SYSCALL(__NR_clock_getres, sys_clock_getres)
+#define __NR_clock_nanosleep	230
+__SYSCALL(__NR_clock_nanosleep, sys_clock_nanosleep)
+#define __NR_exit_group		231
+__SYSCALL(__NR_exit_group, sys_exit_group)
+#define __NR_epoll_wait		232
+__SYSCALL(__NR_epoll_wait, sys_epoll_wait)
+#define __NR_epoll_ctl		233
+__SYSCALL(__NR_epoll_ctl, sys_epoll_ctl)
+#define __NR_tgkill		234
+__SYSCALL(__NR_tgkill, sys_tgkill)
+#define __NR_utimes		235
+__SYSCALL(__NR_utimes, sys_utimes)
+#define __NR_vserver		236
+__SYSCALL(__NR_vserver, sys_ni_syscall)
+#define __NR_mbind 		237
+__SYSCALL(__NR_mbind, sys_mbind)
+#define __NR_set_mempolicy 	238
+__SYSCALL(__NR_set_mempolicy, sys_set_mempolicy)
+#define __NR_get_mempolicy 	239
+__SYSCALL(__NR_get_mempolicy, sys_get_mempolicy)
+#define __NR_mq_open 		240
+__SYSCALL(__NR_mq_open, sys_mq_open)
+#define __NR_mq_unlink 		241
+__SYSCALL(__NR_mq_unlink, sys_mq_unlink)
+#define __NR_mq_timedsend 	242
+__SYSCALL(__NR_mq_timedsend, sys_mq_timedsend)
+#define __NR_mq_timedreceive	243
+__SYSCALL(__NR_mq_timedreceive, sys_mq_timedreceive)
+#define __NR_mq_notify 		244
+__SYSCALL(__NR_mq_notify, sys_mq_notify)
+#define __NR_mq_getsetattr 	245
+__SYSCALL(__NR_mq_getsetattr, sys_mq_getsetattr)
+#define __NR_kexec_load 	246
+__SYSCALL(__NR_kexec_load, sys_kexec_load)
+#define __NR_waitid		247
+__SYSCALL(__NR_waitid, sys_waitid)
+#define __NR_add_key		248
+__SYSCALL(__NR_add_key, sys_add_key)
+#define __NR_request_key	249
+__SYSCALL(__NR_request_key, sys_request_key)
+#define __NR_keyctl		250
+__SYSCALL(__NR_keyctl, sys_keyctl)
+#define __NR_ioprio_set		251
+__SYSCALL(__NR_ioprio_set, sys_ioprio_set)
+#define __NR_ioprio_get		252
+__SYSCALL(__NR_ioprio_get, sys_ioprio_get)
+#define __NR_inotify_init	253
+__SYSCALL(__NR_inotify_init, sys_inotify_init)
+#define __NR_inotify_add_watch	254
+__SYSCALL(__NR_inotify_add_watch, sys_inotify_add_watch)
+#define __NR_inotify_rm_watch	255
+__SYSCALL(__NR_inotify_rm_watch, sys_inotify_rm_watch)
+#define __NR_migrate_pages	256
+__SYSCALL(__NR_migrate_pages, sys_migrate_pages)
+#define __NR_openat		257
+__SYSCALL(__NR_openat, sys_openat)
+#define __NR_mkdirat		258
+__SYSCALL(__NR_mkdirat, sys_mkdirat)
+#define __NR_mknodat		259
+__SYSCALL(__NR_mknodat, sys_mknodat)
+#define __NR_fchownat		260
+__SYSCALL(__NR_fchownat, sys_fchownat)
+#define __NR_futimesat		261
+__SYSCALL(__NR_futimesat, sys_futimesat)
+#define __NR_newfstatat		262
+__SYSCALL(__NR_newfstatat, sys_newfstatat)
+#define __NR_unlinkat		263
+__SYSCALL(__NR_unlinkat, sys_unlinkat)
+#define __NR_renameat		264
+__SYSCALL(__NR_renameat, sys_renameat)
+#define __NR_linkat		265
+__SYSCALL(__NR_linkat, sys_linkat)
+#define __NR_symlinkat		266
+__SYSCALL(__NR_symlinkat, sys_symlinkat)
+#define __NR_readlinkat		267
+__SYSCALL(__NR_readlinkat, sys_readlinkat)
+#define __NR_fchmodat		268
+__SYSCALL(__NR_fchmodat, sys_fchmodat)
+#define __NR_faccessat		269
+__SYSCALL(__NR_faccessat, sys_faccessat)
+#define __NR_pselect6		270
+__SYSCALL(__NR_pselect6, sys_pselect6)
+#define __NR_ppoll		271
+__SYSCALL(__NR_ppoll,	sys_ppoll)
+#define __NR_unshare		272
+__SYSCALL(__NR_unshare,	sys_unshare)
+#define __NR_set_robust_list	273
+__SYSCALL(__NR_set_robust_list, sys_set_robust_list)
+#define __NR_get_robust_list	274
+__SYSCALL(__NR_get_robust_list, sys_get_robust_list)
+#define __NR_splice		275
+__SYSCALL(__NR_splice, sys_splice)
+#define __NR_tee		276
+__SYSCALL(__NR_tee, sys_tee)
+#define __NR_sync_file_range	277
+__SYSCALL(__NR_sync_file_range, sys_sync_file_range)
+#define __NR_vmsplice		278
+__SYSCALL(__NR_vmsplice, sys_vmsplice)
+#define __NR_move_pages		279
+__SYSCALL(__NR_move_pages, sys_move_pages)
+#define __NR_utimensat		280
+__SYSCALL(__NR_utimensat, sys_utimensat)
+#define __IGNORE_getcpu		/* implemented as a vsyscall */
+#define __NR_epoll_pwait	281
+__SYSCALL(__NR_epoll_pwait, sys_epoll_pwait)
+#define __NR_signalfd		282
+__SYSCALL(__NR_signalfd, sys_signalfd)
+#define __NR_timerfd		283
+__SYSCALL(__NR_timerfd, sys_timerfd)
+#define __NR_eventfd		284
+__SYSCALL(__NR_eventfd, sys_eventfd)
+#define __NR_fallocate		285
+__SYSCALL(__NR_fallocate, sys_fallocate)
+
+#ifndef __NO_STUBS
+#define __ARCH_WANT_OLD_READDIR
+#define __ARCH_WANT_OLD_STAT
+#define __ARCH_WANT_SYS_ALARM
+#define __ARCH_WANT_SYS_GETHOSTNAME
+#define __ARCH_WANT_SYS_PAUSE
+#define __ARCH_WANT_SYS_SGETMASK
+#define __ARCH_WANT_SYS_SIGNAL
+#define __ARCH_WANT_SYS_UTIME
+#define __ARCH_WANT_SYS_WAITPID
+#define __ARCH_WANT_SYS_SOCKETCALL
+#define __ARCH_WANT_SYS_FADVISE64
+#define __ARCH_WANT_SYS_GETPGRP
+#define __ARCH_WANT_SYS_LLSEEK
+#define __ARCH_WANT_SYS_NICE
+#define __ARCH_WANT_SYS_OLD_GETRLIMIT
+#define __ARCH_WANT_SYS_OLDUMOUNT
+#define __ARCH_WANT_SYS_SIGPENDING
+#define __ARCH_WANT_SYS_SIGPROCMASK
+#define __ARCH_WANT_SYS_RT_SIGACTION
+#define __ARCH_WANT_SYS_RT_SIGSUSPEND
+#define __ARCH_WANT_SYS_TIME
+#define __ARCH_WANT_COMPAT_SYS_TIME
+
+#ifdef __KERNEL__
+#ifndef __ASSEMBLY__
+
+#include <linux/linkage.h>
+#include <linux/compiler.h>
+#include <linux/types.h>
+#include <asm/ptrace.h>
+
+asmlinkage long sys_iopl(unsigned int level, struct pt_regs *regs);
+struct sigaction;
+asmlinkage long sys_rt_sigaction(int sig,
+				const struct sigaction __user *act,
+				struct sigaction __user *oact,
+				size_t sigsetsize);
+
+#endif  /* __ASSEMBLY__ */
+#endif	/* __KERNEL__ */
+#endif	/* __NO_STUBS */
+
+/*
+ * "Conditional" syscalls
+ *
+ * What we want is __attribute__((weak,alias("sys_ni_syscall"))),
+ * but it doesn't work on all toolchains, so we just do it by hand
+ */
+#define cond_syscall(x) asm(".weak\t" #x "\n\t.set\t" #x ",sys_ni_syscall")
+
+#endif /* _ASM_X86_64_UNISTD_H_ */
diff -urpN linux-2.6.23-sabayon/include/asm/unwind.h testtry/include/asm/unwind.h
--- linux-2.6.23-sabayon/include/asm/unwind.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/unwind.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,12 @@
+#ifndef _ASM_X86_64_UNWIND_H
+#define _ASM_X86_64_UNWIND_H
+
+#define UNW_PC(frame) ((void)(frame), 0UL)
+#define UNW_SP(frame) ((void)(frame), 0UL)
+
+static inline int arch_unw_user_mode(const void *info)
+{
+	return 0;
+}
+
+#endif /* _ASM_X86_64_UNWIND_H */
diff -urpN linux-2.6.23-sabayon/include/asm/user32.h testtry/include/asm/user32.h
--- linux-2.6.23-sabayon/include/asm/user32.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/user32.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,69 @@
+#ifndef USER32_H
+#define USER32_H 1
+
+/* IA32 compatible user structures for ptrace. These should be used for 32bit coredumps too. */
+
+struct user_i387_ia32_struct {
+	u32	cwd;
+	u32	swd;
+	u32	twd;
+	u32	fip;
+	u32	fcs;
+	u32	foo;
+	u32	fos;
+	u32	st_space[20];   /* 8*10 bytes for each FP-reg = 80 bytes */
+};
+
+/* FSAVE frame with extensions */
+struct user32_fxsr_struct {
+	unsigned short	cwd;
+	unsigned short	swd;
+	unsigned short	twd;	/* not compatible to 64bit twd */
+	unsigned short	fop;
+	int	fip;
+	int	fcs;
+	int	foo;
+	int	fos;
+	int	mxcsr;
+	int	reserved;
+	int	st_space[32];	/* 8*16 bytes for each FP-reg = 128 bytes */
+	int	xmm_space[32];	/* 8*16 bytes for each XMM-reg = 128 bytes */
+	int	padding[56];
+};
+
+struct user_regs_struct32 {
+	__u32 ebx, ecx, edx, esi, edi, ebp, eax;
+	unsigned short ds, __ds, es, __es;
+	unsigned short fs, __fs, gs, __gs;
+	__u32 orig_eax, eip;
+	unsigned short cs, __cs;
+	__u32 eflags, esp;
+	unsigned short ss, __ss;
+};
+
+struct user32 {
+  struct user_regs_struct32 regs;		/* Where the registers are actually stored */
+  int u_fpvalid;		/* True if math co-processor being used. */
+                                /* for this mess. Not yet used. */
+  struct user_i387_ia32_struct i387;	/* Math Co-processor registers. */
+/* The rest of this junk is to help gdb figure out what goes where */
+  __u32 u_tsize;	/* Text segment size (pages). */
+  __u32 u_dsize;	/* Data segment size (pages). */
+  __u32 u_ssize;	/* Stack segment size (pages). */
+  __u32 start_code;     /* Starting virtual address of text. */
+  __u32 start_stack;	/* Starting virtual address of stack area.
+				   This is actually the bottom of the stack,
+				   the top of the stack is always found in the
+				   esp register.  */
+  __u32 signal;     		/* Signal that caused the core dump. */
+  int reserved;			/* No __u32er used */
+  __u32 u_ar0;	/* Used by gdb to help find the values for */
+				/* the registers. */
+  __u32 u_fpstate;	/* Math Co-processor pointer. */
+  __u32 magic;		/* To uniquely identify a core file */
+  char u_comm[32];		/* User command that was responsible */
+  int u_debugreg[8];
+};
+
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/user.h testtry/include/asm/user.h
--- linux-2.6.23-sabayon/include/asm/user.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/user.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,114 @@
+#ifndef _X86_64_USER_H
+#define _X86_64_USER_H
+
+#include <asm/types.h>
+#include <asm/page.h>
+/* Core file format: The core file is written in such a way that gdb
+   can understand it and provide useful information to the user.
+   There are quite a number of obstacles to being able to view the
+   contents of the floating point registers, and until these are
+   solved you will not be able to view the contents of them.
+   Actually, you can read in the core file and look at the contents of
+   the user struct to find out what the floating point registers
+   contain.
+
+   The actual file contents are as follows:
+   UPAGE: 1 page consisting of a user struct that tells gdb what is present
+   in the file.  Directly after this is a copy of the task_struct, which
+   is currently not used by gdb, but it may come in useful at some point.
+   All of the registers are stored as part of the upage.  The upage should
+   always be only one page.
+   DATA: The data area is stored.  We use current->end_text to
+   current->brk to pick up all of the user variables, plus any memory
+   that may have been malloced.  No attempt is made to determine if a page
+   is demand-zero or if a page is totally unused, we just cover the entire
+   range.  All of the addresses are rounded in such a way that an integral
+   number of pages is written.
+   STACK: We need the stack information in order to get a meaningful
+   backtrace.  We need to write the data from (esp) to
+   current->start_stack, so we round each of these off in order to be able
+   to write an integer number of pages.
+   The minimum core file size is 3 pages, or 12288 bytes.  */
+
+/*
+ * Pentium III FXSR, SSE support
+ *	Gareth Hughes <gareth@valinux.com>, May 2000
+ *
+ * Provide support for the GDB 5.0+ PTRACE_{GET|SET}FPXREGS requests for
+ * interacting with the FXSR-format floating point environment.  Floating
+ * point data can be accessed in the regular format in the usual manner,
+ * and both the standard and SIMD floating point data can be accessed via
+ * the new ptrace requests.  In either case, changes to the FPU environment
+ * will be reflected in the task's state as expected.
+ * 
+ * x86-64 support by Andi Kleen.
+ */
+
+/* This matches the 64bit FXSAVE format as defined by AMD. It is the same
+   as the 32bit format defined by Intel, except that the selector:offset pairs for
+   data and eip are replaced with flat 64bit pointers. */ 
+struct user_i387_struct {
+	unsigned short	cwd;
+	unsigned short	swd;
+	unsigned short	twd; /* Note this is not the same as the 32bit/x87/FSAVE twd */
+	unsigned short	fop;
+	__u64	rip;
+	__u64	rdp;
+	__u32	mxcsr;
+	__u32	mxcsr_mask;
+	__u32	st_space[32];	/* 8*16 bytes for each FP-reg = 128 bytes */
+	__u32	xmm_space[64];	/* 16*16 bytes for each XMM-reg = 256 bytes */
+	__u32	padding[24];
+};
+
+/*
+ * Segment register layout in coredumps.
+ */
+struct user_regs_struct {
+	unsigned long r15,r14,r13,r12,rbp,rbx,r11,r10;
+	unsigned long r9,r8,rax,rcx,rdx,rsi,rdi,orig_rax;
+	unsigned long rip,cs,eflags;
+	unsigned long rsp,ss;
+  	unsigned long fs_base, gs_base;
+	unsigned long ds,es,fs,gs; 
+}; 
+
+/* When the kernel dumps core, it starts by dumping the user struct -
+   this will be used by gdb to figure out where the data and stack segments
+   are within the file, and what virtual addresses to use. */
+struct user{
+/* We start with the registers, to mimic the way that "memory" is returned
+   from the ptrace(3,...) function.  */
+  struct user_regs_struct regs;		/* Where the registers are actually stored */
+/* ptrace does not yet supply these.  Someday.... */
+  int u_fpvalid;		/* True if math co-processor being used. */
+                                /* for this mess. Not yet used. */
+  int pad0;
+  struct user_i387_struct i387;	/* Math Co-processor registers. */
+/* The rest of this junk is to help gdb figure out what goes where */
+  unsigned long int u_tsize;	/* Text segment size (pages). */
+  unsigned long int u_dsize;	/* Data segment size (pages). */
+  unsigned long int u_ssize;	/* Stack segment size (pages). */
+  unsigned long start_code;     /* Starting virtual address of text. */
+  unsigned long start_stack;	/* Starting virtual address of stack area.
+				   This is actually the bottom of the stack,
+				   the top of the stack is always found in the
+				   esp register.  */
+  long int signal;     		/* Signal that caused the core dump. */
+  int reserved;			/* No longer used */
+  int pad1;
+  struct user_pt_regs * u_ar0;	/* Used by gdb to help find the values for */
+				/* the registers. */
+  struct user_i387_struct* u_fpstate;	/* Math Co-processor pointer. */
+  unsigned long magic;		/* To uniquely identify a core file */
+  char u_comm[32];		/* User command that was responsible */
+  unsigned long u_debugreg[8];
+  unsigned long error_code; /* CPU error code or 0 */
+  unsigned long fault_address; /* CR3 or 0 */
+};
+#define NBPG PAGE_SIZE
+#define UPAGES 1
+#define HOST_TEXT_START_ADDR (u.start_code)
+#define HOST_STACK_END_ADDR (u.start_stack + u.u_ssize * NBPG)
+
+#endif /* _X86_64_USER_H */
diff -urpN linux-2.6.23-sabayon/include/asm/vga.h testtry/include/asm/vga.h
--- linux-2.6.23-sabayon/include/asm/vga.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/vga.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,20 @@
+/*
+ *	Access to VGA videoram
+ *
+ *	(c) 1998 Martin Mares <mj@ucw.cz>
+ */
+
+#ifndef _LINUX_ASM_VGA_H_
+#define _LINUX_ASM_VGA_H_
+
+/*
+ *	On the PC, we can just recalculate addresses and then
+ *	access the videoram directly without any black magic.
+ */
+
+#define VGA_MAP_MEM(x,s) (unsigned long)phys_to_virt(x)
+
+#define vga_readb(x) (*(x))
+#define vga_writeb(x,y) (*(y) = (x))
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/vgtod.h testtry/include/asm/vgtod.h
--- linux-2.6.23-sabayon/include/asm/vgtod.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/vgtod.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,29 @@
+#ifndef _ASM_VGTOD_H
+#define _ASM_VGTOD_H 1
+
+#include <asm/vsyscall.h>
+#include <linux/clocksource.h>
+
+struct vsyscall_gtod_data {
+	seqlock_t	lock;
+
+	/* open coded 'struct timespec' */
+	time_t		wall_time_sec;
+	u32		wall_time_nsec;
+
+	int		sysctl_enabled;
+	struct timezone sys_tz;
+	struct { /* extract of a clocksource struct */
+		cycle_t (*vread)(void);
+		cycle_t	cycle_last;
+		cycle_t	mask;
+		u32	mult;
+		u32	shift;
+	} clock;
+	struct timespec wall_to_monotonic;
+};
+extern struct vsyscall_gtod_data __vsyscall_gtod_data
+__section_vsyscall_gtod_data;
+extern struct vsyscall_gtod_data vsyscall_gtod_data;
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/vsyscall32.h testtry/include/asm/vsyscall32.h
--- linux-2.6.23-sabayon/include/asm/vsyscall32.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/vsyscall32.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,20 @@
+#ifndef _ASM_VSYSCALL32_H
+#define _ASM_VSYSCALL32_H 1
+
+/* Values need to match arch/x86_64/ia32/vsyscall.lds */
+
+#ifdef __ASSEMBLY__
+#define VSYSCALL32_BASE 0xffffe000
+#define VSYSCALL32_SYSEXIT (VSYSCALL32_BASE + 0x410)
+#else
+#define VSYSCALL32_BASE 0xffffe000UL
+#define VSYSCALL32_END (VSYSCALL32_BASE + PAGE_SIZE)
+#define VSYSCALL32_EHDR ((const struct elf32_hdr *) VSYSCALL32_BASE)
+
+#define VSYSCALL32_VSYSCALL ((void *)VSYSCALL32_BASE + 0x400) 
+#define VSYSCALL32_SYSEXIT ((void *)VSYSCALL32_BASE + 0x410)
+#define VSYSCALL32_SIGRETURN ((void __user *)VSYSCALL32_BASE + 0x500) 
+#define VSYSCALL32_RTSIGRETURN ((void __user *)VSYSCALL32_BASE + 0x600) 
+#endif
+
+#endif
diff -urpN linux-2.6.23-sabayon/include/asm/vsyscall.h testtry/include/asm/vsyscall.h
--- linux-2.6.23-sabayon/include/asm/vsyscall.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/vsyscall.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,41 @@
+#ifndef _ASM_X86_64_VSYSCALL_H_
+#define _ASM_X86_64_VSYSCALL_H_
+
+enum vsyscall_num {
+	__NR_vgettimeofday,
+	__NR_vtime,
+	__NR_vgetcpu,
+};
+
+#define VSYSCALL_START (-10UL << 20)
+#define VSYSCALL_SIZE 1024
+#define VSYSCALL_END (-2UL << 20)
+#define VSYSCALL_MAPPED_PAGES 1
+#define VSYSCALL_ADDR(vsyscall_nr) (VSYSCALL_START+VSYSCALL_SIZE*(vsyscall_nr))
+
+#ifdef __KERNEL__
+#include <linux/seqlock.h>
+
+#define __section_vgetcpu_mode __attribute__ ((unused, __section__ (".vgetcpu_mode"), aligned(16)))
+#define __section_jiffies __attribute__ ((unused, __section__ (".jiffies"), aligned(16)))
+
+/* Definitions for CONFIG_GENERIC_TIME definitions */
+#define __section_vsyscall_gtod_data __attribute__ \
+	((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))
+#define __section_vsyscall_clock __attribute__ \
+	((unused, __section__ (".vsyscall_clock"),aligned(16)))
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))
+
+#define VGETCPU_RDTSCP	1
+#define VGETCPU_LSL	2
+
+extern int __vgetcpu_mode;
+extern volatile unsigned long __jiffies;
+
+/* kernel space (writeable) */
+extern int vgetcpu_mode;
+extern struct timezone sys_tz;
+
+#endif /* __KERNEL__ */
+
+#endif /* _ASM_X86_64_VSYSCALL_H_ */
diff -urpN linux-2.6.23-sabayon/include/asm/xor.h testtry/include/asm/xor.h
--- linux-2.6.23-sabayon/include/asm/xor.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/asm/xor.h	2007-10-15 14:50:50.000000000 +0000
@@ -0,0 +1,354 @@
+/*
+ * include/asm-x86_64/xor.h
+ *
+ * Optimized RAID-5 checksumming functions for MMX and SSE.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2, or (at your option)
+ * any later version.
+ *
+ * You should have received a copy of the GNU General Public License
+ * (for example /usr/src/linux/COPYING); if not, write to the Free
+ * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+
+/*
+ * Cache avoiding checksumming functions utilizing KNI instructions
+ * Copyright (C) 1999 Zach Brown (with obvious credit due Ingo)
+ */
+
+/*
+ * Based on
+ * High-speed RAID5 checksumming functions utilizing SSE instructions.
+ * Copyright (C) 1998 Ingo Molnar.
+ */
+
+/*
+ * x86-64 changes / gcc fixes from Andi Kleen. 
+ * Copyright 2002 Andi Kleen, SuSE Labs.
+ *
+ * This hasn't been optimized for the hammer yet, but there are likely
+ * no advantages to be gotten from x86-64 here anyways.
+ */
+
+typedef struct { unsigned long a,b; } __attribute__((aligned(16))) xmm_store_t;
+
+/* Doesn't use gcc to save the XMM registers, because there is no easy way to 
+   tell it to do a clts before the register saving. */
+#define XMMS_SAVE do {				\
+	preempt_disable();			\
+	asm volatile (				\
+		"movq %%cr0,%0		;\n\t"	\
+		"clts			;\n\t"	\
+		"movups %%xmm0,(%1)	;\n\t"	\
+		"movups %%xmm1,0x10(%1)	;\n\t"	\
+		"movups %%xmm2,0x20(%1)	;\n\t"	\
+		"movups %%xmm3,0x30(%1)	;\n\t"	\
+		: "=&r" (cr0)			\
+		: "r" (xmm_save) 		\
+		: "memory");			\
+} while(0)
+
+#define XMMS_RESTORE do {			\
+	asm volatile (				\
+		"sfence			;\n\t"	\
+		"movups (%1),%%xmm0	;\n\t"	\
+		"movups 0x10(%1),%%xmm1	;\n\t"	\
+		"movups 0x20(%1),%%xmm2	;\n\t"	\
+		"movups 0x30(%1),%%xmm3	;\n\t"	\
+		"movq 	%0,%%cr0	;\n\t"	\
+		:				\
+		: "r" (cr0), "r" (xmm_save)	\
+		: "memory");			\
+	preempt_enable();			\
+} while(0)
+
+#define OFFS(x)		"16*("#x")"
+#define PF_OFFS(x)	"256+16*("#x")"
+#define	PF0(x)		"	prefetchnta "PF_OFFS(x)"(%[p1])		;\n"
+#define LD(x,y)		"       movaps   "OFFS(x)"(%[p1]), %%xmm"#y"	;\n"
+#define ST(x,y)		"       movaps %%xmm"#y",   "OFFS(x)"(%[p1])	;\n"
+#define PF1(x)		"	prefetchnta "PF_OFFS(x)"(%[p2])		;\n"
+#define PF2(x)		"	prefetchnta "PF_OFFS(x)"(%[p3])		;\n"
+#define PF3(x)		"	prefetchnta "PF_OFFS(x)"(%[p4])		;\n"
+#define PF4(x)		"	prefetchnta "PF_OFFS(x)"(%[p5])		;\n"
+#define PF5(x)		"	prefetchnta "PF_OFFS(x)"(%[p6])		;\n"
+#define XO1(x,y)	"       xorps   "OFFS(x)"(%[p2]), %%xmm"#y"	;\n"
+#define XO2(x,y)	"       xorps   "OFFS(x)"(%[p3]), %%xmm"#y"	;\n"
+#define XO3(x,y)	"       xorps   "OFFS(x)"(%[p4]), %%xmm"#y"	;\n"
+#define XO4(x,y)	"       xorps   "OFFS(x)"(%[p5]), %%xmm"#y"	;\n"
+#define XO5(x,y)	"       xorps   "OFFS(x)"(%[p6]), %%xmm"#y"	;\n"
+
+
+static void
+xor_sse_2(unsigned long bytes, unsigned long *p1, unsigned long *p2)
+{
+        unsigned int lines = bytes >> 8;
+	unsigned long cr0;
+	xmm_store_t xmm_save[4];
+
+	XMMS_SAVE;
+
+        asm volatile (
+#undef BLOCK
+#define BLOCK(i) \
+		LD(i,0)					\
+			LD(i+1,1)			\
+		PF1(i)					\
+				PF1(i+2)		\
+				LD(i+2,2)		\
+					LD(i+3,3)	\
+		PF0(i+4)				\
+				PF0(i+6)		\
+		XO1(i,0)				\
+			XO1(i+1,1)			\
+				XO1(i+2,2)		\
+					XO1(i+3,3)	\
+		ST(i,0)					\
+			ST(i+1,1)			\
+				ST(i+2,2)		\
+					ST(i+3,3)	\
+
+
+		PF0(0)
+				PF0(2)
+
+	" .align 32			;\n"
+        " 1:                            ;\n"
+
+		BLOCK(0)
+		BLOCK(4)
+		BLOCK(8)
+		BLOCK(12)
+
+        "       addq %[inc], %[p1]           ;\n"
+        "       addq %[inc], %[p2]           ;\n"
+		"		decl %[cnt] ; jnz 1b"
+	: [p1] "+r" (p1), [p2] "+r" (p2), [cnt] "+r" (lines)
+	: [inc] "r" (256UL) 
+        : "memory");
+
+	XMMS_RESTORE;
+}
+
+static void
+xor_sse_3(unsigned long bytes, unsigned long *p1, unsigned long *p2,
+	  unsigned long *p3)
+{
+	unsigned int lines = bytes >> 8;
+	xmm_store_t xmm_save[4];
+	unsigned long cr0;
+
+	XMMS_SAVE;
+
+        __asm__ __volatile__ (
+#undef BLOCK
+#define BLOCK(i) \
+		PF1(i)					\
+				PF1(i+2)		\
+		LD(i,0)					\
+			LD(i+1,1)			\
+				LD(i+2,2)		\
+					LD(i+3,3)	\
+		PF2(i)					\
+				PF2(i+2)		\
+		PF0(i+4)				\
+				PF0(i+6)		\
+		XO1(i,0)				\
+			XO1(i+1,1)			\
+				XO1(i+2,2)		\
+					XO1(i+3,3)	\
+		XO2(i,0)				\
+			XO2(i+1,1)			\
+				XO2(i+2,2)		\
+					XO2(i+3,3)	\
+		ST(i,0)					\
+			ST(i+1,1)			\
+				ST(i+2,2)		\
+					ST(i+3,3)	\
+
+
+		PF0(0)
+				PF0(2)
+
+	" .align 32			;\n"
+        " 1:                            ;\n"
+
+		BLOCK(0)
+		BLOCK(4)
+		BLOCK(8)
+		BLOCK(12)
+
+        "       addq %[inc], %[p1]           ;\n"
+        "       addq %[inc], %[p2]          ;\n"
+        "       addq %[inc], %[p3]           ;\n"
+		"		decl %[cnt] ; jnz 1b"
+	: [cnt] "+r" (lines),
+	  [p1] "+r" (p1), [p2] "+r" (p2), [p3] "+r" (p3)
+	: [inc] "r" (256UL)
+	: "memory"); 
+	XMMS_RESTORE;
+}
+
+static void
+xor_sse_4(unsigned long bytes, unsigned long *p1, unsigned long *p2,
+	  unsigned long *p3, unsigned long *p4)
+{
+	unsigned int lines = bytes >> 8;
+	xmm_store_t xmm_save[4]; 
+	unsigned long cr0;
+
+	XMMS_SAVE;
+
+        __asm__ __volatile__ (
+#undef BLOCK
+#define BLOCK(i) \
+		PF1(i)					\
+				PF1(i+2)		\
+		LD(i,0)					\
+			LD(i+1,1)			\
+				LD(i+2,2)		\
+					LD(i+3,3)	\
+		PF2(i)					\
+				PF2(i+2)		\
+		XO1(i,0)				\
+			XO1(i+1,1)			\
+				XO1(i+2,2)		\
+					XO1(i+3,3)	\
+		PF3(i)					\
+				PF3(i+2)		\
+		PF0(i+4)				\
+				PF0(i+6)		\
+		XO2(i,0)				\
+			XO2(i+1,1)			\
+				XO2(i+2,2)		\
+					XO2(i+3,3)	\
+		XO3(i,0)				\
+			XO3(i+1,1)			\
+				XO3(i+2,2)		\
+					XO3(i+3,3)	\
+		ST(i,0)					\
+			ST(i+1,1)			\
+				ST(i+2,2)		\
+					ST(i+3,3)	\
+
+
+		PF0(0)
+				PF0(2)
+
+	" .align 32			;\n"
+        " 1:                            ;\n"
+
+		BLOCK(0)
+		BLOCK(4)
+		BLOCK(8)
+		BLOCK(12)
+
+        "       addq %[inc], %[p1]           ;\n"
+        "       addq %[inc], %[p2]           ;\n"
+        "       addq %[inc], %[p3]           ;\n"
+        "       addq %[inc], %[p4]           ;\n"
+	"	decl %[cnt] ; jnz 1b"
+	: [cnt] "+c" (lines),
+	  [p1] "+r" (p1), [p2] "+r" (p2), [p3] "+r" (p3), [p4] "+r" (p4)
+	: [inc] "r" (256UL)
+        : "memory" );
+
+	XMMS_RESTORE;
+}
+
+static void
+xor_sse_5(unsigned long bytes, unsigned long *p1, unsigned long *p2,
+	  unsigned long *p3, unsigned long *p4, unsigned long *p5)
+{
+        unsigned int lines = bytes >> 8;
+	xmm_store_t xmm_save[4];
+	unsigned long cr0;
+
+	XMMS_SAVE;
+
+        __asm__ __volatile__ (
+#undef BLOCK
+#define BLOCK(i) \
+		PF1(i)					\
+				PF1(i+2)		\
+		LD(i,0)					\
+			LD(i+1,1)			\
+				LD(i+2,2)		\
+					LD(i+3,3)	\
+		PF2(i)					\
+				PF2(i+2)		\
+		XO1(i,0)				\
+			XO1(i+1,1)			\
+				XO1(i+2,2)		\
+					XO1(i+3,3)	\
+		PF3(i)					\
+				PF3(i+2)		\
+		XO2(i,0)				\
+			XO2(i+1,1)			\
+				XO2(i+2,2)		\
+					XO2(i+3,3)	\
+		PF4(i)					\
+				PF4(i+2)		\
+		PF0(i+4)				\
+				PF0(i+6)		\
+		XO3(i,0)				\
+			XO3(i+1,1)			\
+				XO3(i+2,2)		\
+					XO3(i+3,3)	\
+		XO4(i,0)				\
+			XO4(i+1,1)			\
+				XO4(i+2,2)		\
+					XO4(i+3,3)	\
+		ST(i,0)					\
+			ST(i+1,1)			\
+				ST(i+2,2)		\
+					ST(i+3,3)	\
+
+
+		PF0(0)
+				PF0(2)
+
+	" .align 32			;\n"
+        " 1:                            ;\n"
+
+		BLOCK(0)
+		BLOCK(4)
+		BLOCK(8)
+		BLOCK(12)
+
+        "       addq %[inc], %[p1]           ;\n"
+        "       addq %[inc], %[p2]           ;\n"
+        "       addq %[inc], %[p3]           ;\n"
+        "       addq %[inc], %[p4]           ;\n"
+        "       addq %[inc], %[p5]           ;\n"
+	"	decl %[cnt] ; jnz 1b"
+	: [cnt] "+c" (lines),
+  	  [p1] "+r" (p1), [p2] "+r" (p2), [p3] "+r" (p3), [p4] "+r" (p4), 
+	  [p5] "+r" (p5)
+	: [inc] "r" (256UL)
+	: "memory");
+
+	XMMS_RESTORE;
+}
+
+static struct xor_block_template xor_block_sse = {
+        .name = "generic_sse",
+        .do_2 = xor_sse_2,
+        .do_3 = xor_sse_3,
+        .do_4 = xor_sse_4,
+        .do_5 = xor_sse_5,
+};
+
+#undef XOR_TRY_TEMPLATES
+#define XOR_TRY_TEMPLATES				\
+	do {						\
+		xor_speed(&xor_block_sse);	\
+	} while (0)
+
+/* We force the use of the SSE xor block because it can write around L2.
+   We may also be able to load into the L1 only depending on how the cpu
+   deals with a load to a line that is being prefetched.  */
+#define XOR_SELECT_TEMPLATE(FASTEST) (&xor_block_sse)
diff -urpN linux-2.6.23-sabayon/include/config/auto.conf testtry/include/config/auto.conf
--- linux-2.6.23-sabayon/include/config/auto.conf	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/config/auto.conf	2007-10-15 16:44:56.000000000 +0000
@@ -0,0 +1,2535 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.23-sabayon
+# Mon Oct 15 16:44:56 2007
+#
+CONFIG_USB_SISUSBVGA=m
+CONFIG_USB_PHIDGETMOTORCONTROL=m
+CONFIG_VIDEO_V4L1_COMPAT=y
+CONFIG_ROADRUNNER=m
+CONFIG_PCMCIA_FMVJ18X=m
+CONFIG_BLK_CPQ_DA=y
+CONFIG_BLK_DEV_FD=y
+CONFIG_AX25=m
+CONFIG_ACPI_AC=m
+CONFIG_PM_STD_PARTITION=""
+CONFIG_SECURITY_NETWORK=y
+CONFIG_ULTRIX_PARTITION=y
+CONFIG_OSF_PARTITION=y
+CONFIG_RTC_DRV_M41T80=m
+CONFIG_USB_LEGOTOWER=m
+CONFIG_SND_SB_COMMON=m
+CONFIG_FB_TRIDENT=m
+CONFIG_DVB_PLUTO2=m
+CONFIG_GAMEPORT_NS558=m
+CONFIG_JOYSTICK_GRIP=m
+CONFIG_RT2X00_LIB_PCI=m
+CONFIG_BONDING=m
+CONFIG_MTD_ABSENT=m
+CONFIG_INET_XFRM_TUNNEL=m
+CONFIG_CRYPTO_ANUBIS=m
+CONFIG_JBD2=y
+CONFIG_P54_USB=m
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+CONFIG_JFFS2_CMODE_PRIORITY=y
+CONFIG_USB_SERIAL_IR=m
+CONFIG_SND_AZT3328=m
+CONFIG_TCP_CONG_SCALABLE=m
+CONFIG_NONIRQ_WAKEUP=y
+CONFIG_JFS_POSIX_ACL=y
+CONFIG_AUXDISPLAY=y
+CONFIG_FONT_MINI_4x6=y
+CONFIG_DVB_USB_AF9005_REMOTE=m
+CONFIG_SENSORS_VT8231=m
+CONFIG_RIO_OLDPCI=y
+CONFIG_ISDN_DIVAS=m
+CONFIG_TIPC_CLUSTERS=1
+CONFIG_IP6_NF_TARGET_REJECT=m
+CONFIG_NF_CT_ACCT=y
+CONFIG_TCP_CONG_VENO=m
+CONFIG_CARDBUS=y
+CONFIG_X86_POWERNOW_K8_ACPI=y
+CONFIG_ACPI_EC=y
+CONFIG_USB_SERIAL_TI=m
+CONFIG_ISDN_DRV_AVMB1_C4=m
+CONFIG_INPUT_POLLDEV=m
+CONFIG_SONYPI_COMPAT=y
+CONFIG_BT_HCIUART=m
+CONFIG_IP_NF_TARGET_TTL=m
+CONFIG_NETFILTER_NETLINK_QUEUE=m
+CONFIG_INET6_XFRM_MODE_BEET=m
+CONFIG_CRYPTO_MD4=y
+CONFIG_TASK_XACCT=y
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+CONFIG_ASYNC_CORE=y
+CONFIG_VIDEO_MEYE=m
+CONFIG_IPW2200_QOS=y
+CONFIG_E1000=m
+CONFIG_ARCNET_RAW=m
+CONFIG_I2O_EXT_ADAPTEC_DMA64=y
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_HIGH=y
+CONFIG_NF_NAT_PROTO_GRE=m
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
+CONFIG_CRYPTO_MD5=y
+CONFIG_ARCH_DISCONTIGMEM_ENABLE=y
+CONFIG_CRYPTO_AES_X86_64=m
+CONFIG_PROC_KCORE=y
+CONFIG_USB_GADGET_NET2280=y
+CONFIG_USB_IOWARRIOR=m
+CONFIG_VIDEO_BTCX=m
+CONFIG_PCMCIA_SMC91C92=m
+CONFIG_BLK_DEV_DM=y
+CONFIG_BLK_DEV_MD=y
+CONFIG_SCSI_FC_ATTRS=y
+CONFIG_IRDA_ULTRA=y
+CONFIG_IP_NF_TARGET_TOS=m
+CONFIG_SND_EMU10K1=m
+CONFIG_DVB_TDA10021=m
+CONFIG_I2C_SAVAGE4=m
+CONFIG_SYNCLINKMP=m
+CONFIG_PPP_MULTILINK=y
+CONFIG_TMD_HERMES=m
+CONFIG_SCSI_DC390T=y
+CONFIG_NET_CLS_RSVP6=m
+CONFIG_TIPC_NODES=255
+CONFIG_CRYPTO_CBC=y
+CONFIG_ACORN_PARTITION_ADFS=y
+CONFIG_USB_SERIAL=m
+CONFIG_DVB_USB_CXUSB=m
+CONFIG_USB_W9968CF=m
+CONFIG_SERIAL_JSM=m
+CONFIG_TOUCHSCREEN_USB_IRTOUCH=y
+CONFIG_USB_RTL8150=m
+CONFIG_MTD_MTDRAM=m
+CONFIG_NF_CONNTRACK_NETBIOS_NS=m
+CONFIG_ACPI_POWER=y
+CONFIG_GFS2_FS=m
+CONFIG_SND_DARLA20=m
+CONFIG_DVB_TDA10023=m
+CONFIG_DVB_STV0297=m
+CONFIG_VIDEO_ZORAN_LML33=m
+CONFIG_HOSTAP_PCI=m
+CONFIG_CASSINI=m
+CONFIG_THINKPAD_ACPI_BAY=y
+CONFIG_CRYPTO_ECB=y
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_SECCOMP=y
+CONFIG_KS0108_PORT=0x378
+CONFIG_USB_SERIAL_WHITEHEAT=m
+CONFIG_VIDEO_W9966=m
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+CONFIG_X25_ASY=m
+CONFIG_NETXEN_NIC=m
+CONFIG_PATA_SIL680=y
+CONFIG_PATA_ARTOP=y
+CONFIG_PNPACPI=y
+CONFIG_BT_HCIBLUECARD=m
+CONFIG_OLD_BELKIN_DONGLE=m
+CONFIG_IP_DCCP_CCID3_RTO=100
+CONFIG_IP6_NF_RAW=m
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_SND_YMFPCI=m
+CONFIG_DVB_STV0299=m
+CONFIG_DVB_TDA826X=m
+CONFIG_SPI_BUTTERFLY=m
+CONFIG_I2C_NFORCE2=m
+CONFIG_RT61PCI_RFKILL=y
+CONFIG_ZD1211RW=m
+CONFIG_NET_POCKET=y
+CONFIG_EEPRO100=m
+CONFIG_WINBOND_840=m
+CONFIG_PATA_MPIIX=y
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_EVENTFD=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EDAC=y
+CONFIG_DVB_TDA827X=m
+CONFIG_ROCKETPORT=m
+CONFIG_USB_KAWETH=m
+CONFIG_DL2K=m
+CONFIG_BLK_DEV_SD=y
+CONFIG_HAS_DMA=y
+CONFIG_RAID_ATTRS=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_LLC2=m
+CONFIG_IP6_NF_MATCH_FRAG=m
+CONFIG_NETFILTER_XT_MATCH_DSCP=m
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_RTC_DRV_M48T59=m
+CONFIG_RTC_DRV_M48T86=m
+CONFIG_SND_DARLA24=m
+CONFIG_VIDEO_BT819=m
+CONFIG_LP_CONSOLE=y
+CONFIG_FUSION_LAN=y
+CONFIG_NETFILTER_XT_MATCH_MARK=m
+CONFIG_CRC7=m
+CONFIG_SUN_PARTITION=y
+CONFIG_CODA_FS=y
+CONFIG_NFS_COMMON=y
+CONFIG_USB_CXACRU=m
+CONFIG_SND_VIA82XX_MODEM=m
+CONFIG_SND_KORG1212_FIRMWARE_IN_KERNEL=y
+CONFIG_VIDEO_BT856=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS=16
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+CONFIG_NET_PKTGEN=m
+CONFIG_X86_TSC=y
+CONFIG_VIDEO_BT848=m
+CONFIG_VIDEO_BT866=m
+CONFIG_SERIO_SERPORT=y
+CONFIG_JOYSTICK_MAGELLAN=m
+CONFIG_PATA_HPT366=y
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_USB_SERIAL_ARK3116=m
+CONFIG_HID_PID=y
+CONFIG_HW_CONSOLE=y
+CONFIG_ATM_FORE200E_MAYBE=m
+CONFIG_NATSEMI=m
+CONFIG_SCSI_IPR_DUMP=y
+CONFIG_MTD_DOCPROBE_HIGH=y
+CONFIG_NET_EMATCH_U32=m
+CONFIG_HOTPLUG_PCI_ACPI_IBM=m
+CONFIG_HPET_TIMER=y
+CONFIG_CIFS_EXPERIMENTAL=y
+CONFIG_XFS_POSIX_ACL=y
+CONFIG_SENSORS_SMSC47B397=m
+CONFIG_HDLC_FR=m
+CONFIG_ATL1=m
+CONFIG_IP_DCCP=m
+CONFIG_CIFS_STATS=y
+CONFIG_NFSD_V3=y
+CONFIG_SND_ATIIXP=m
+CONFIG_DVB_TDA10086=m
+CONFIG_TOUCHSCREEN_TOUCHWIN=m
+CONFIG_ATM_IDT77252_USE_SUNI=y
+CONFIG_I2O_BUS=y
+CONFIG_PARIDE_ON20=m
+CONFIG_NF_NAT_IRC=m
+CONFIG_K8_NUMA=y
+CONFIG_NFSD_V4=y
+CONFIG_VIDEO_VIVI=m
+CONFIG_I2C_ALGOPCA=m
+CONFIG_CHR_DEV_SG=y
+CONFIG_IEEE80211=m
+CONFIG_IP_NF_MATCH_ADDRTYPE=m
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
+CONFIG_CRYPTO_ABLKCIPHER=m
+CONFIG_VIDEO_ZORAN_AVS6EYES=m
+CONFIG_PPP_FILTER=y
+CONFIG_USB_NET_PLUSB=m
+CONFIG_PATA_IT821X=y
+CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=1
+CONFIG_NF_NAT_H323=m
+CONFIG_CRYPTO_CRYPTD=m
+CONFIG_XOR_BLOCKS=y
+CONFIG_ADFS_FS=m
+CONFIG_FB_VESA=y
+CONFIG_SENSORS_SMSC47M192=m
+CONFIG_SPI_SPIDEV=m
+CONFIG_KEYBOARD_ATKBD=y
+CONFIG_FARSYNC=m
+CONFIG_IPW3945_SIM_RX=y
+CONFIG_NETDEV_10000=y
+CONFIG_FUSION_CTL=y
+CONFIG_MTD_CFI=m
+CONFIG_ALI_FIR=m
+CONFIG_NET_CLS_ROUTE=y
+CONFIG_NF_CT_PROTO_SCTP=m
+CONFIG_CIFS_POSIX=y
+CONFIG_CIFS_XATTR=y
+CONFIG_DRM_MGA=m
+CONFIG_AGP_VIA=m
+CONFIG_FDDI=y
+CONFIG_PCMCIA_XIRC2PS=m
+CONFIG_ACX_PCI=y
+CONFIG_PLX_HERMES=m
+CONFIG_3C359=m
+CONFIG_PHANTOM=m
+CONFIG_BLK_DEV=y
+CONFIG_SPI_MASTER=y
+CONFIG_MTD_JEDECPROBE=m
+CONFIG_BRIDGE_EBT_BROUTE=m
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
+CONFIG_X86_MSR=y
+CONFIG_HAS_IOPORT=y
+CONFIG_NLS_KOI8_R=m
+CONFIG_BEFS_FS=m
+CONFIG_AFFS_FS=m
+CONFIG_NET_DMA=y
+CONFIG_SND_USB_USX2Y=m
+CONFIG_SND_SEQ_DUMMY=m
+CONFIG_TOUCHSCREEN_PENMOUNT=m
+CONFIG_KEYBOARD_LKKBD=y
+CONFIG_MSI_LAPTOP=m
+CONFIG_IBM_ASM=m
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_NF_CONNTRACK_IPV4=m
+CONFIG_INET_AH=m
+CONFIG_TOI_USERUI_DEFAULT_PATH="/usr/local/sbin/tuxonice_fbsplash"
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+CONFIG_SND_MIXART=m
+CONFIG_SND_LAYLA20=m
+CONFIG_I2C_AMD756_S4882=m
+CONFIG_I2C_ALGOPCF=m
+CONFIG_CARDMAN_4000=m
+CONFIG_QLA3XXX=m
+CONFIG_PARIDE_ON26=m
+CONFIG_CRYPTO_AES=y
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_MODULES=y
+CONFIG_CRYPTO_TEA=m
+CONFIG_USB_ACM=m
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_DVB_USB_DIB0700=m
+CONFIG_I2C_CHARDEV=m
+CONFIG_USB_USBNET=m
+CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
+CONFIG_PCMCIA_WAVELAN=m
+CONFIG_BNX2=m
+CONFIG_FUSION_SAS=y
+CONFIG_PARPORT_PC=y
+CONFIG_MTD_COMPLEX_MAPPINGS=y
+CONFIG_BT_HIDP=m
+CONFIG_BT_BNEP=m
+CONFIG_NF_CONNTRACK_IPV6=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_EXT2_FS=y
+CONFIG_SND_MIA=m
+CONFIG_DVB_USB_VP702X=m
+CONFIG_INPUT_MISC=y
+CONFIG_MOUSE_VSXXXAA=m
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+CONFIG_HDLC=m
+CONFIG_IWLWIFI=y
+CONFIG_PATA_CMD64X=y
+CONFIG_BLK_DEV_SR=y
+CONFIG_MTD_SCB2_FLASH=m
+CONFIG_TOIM3232_DONGLE=m
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=m
+CONFIG_EXT3_FS=y
+CONFIG_USB_LCD=m
+CONFIG_VIDEO_CX88_DVB=m
+CONFIG_I2C_PARPORT_LIGHT=m
+CONFIG_VT_CONSOLE=y
+CONFIG_ISDN_DIVAS_BRIPCI=y
+CONFIG_DLCI=m
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADVANCED=y
+CONFIG_NF_CONNTRACK_SANE=m
+CONFIG_CRYPTO_DES=y
+CONFIG_HFSPLUS_FS=y
+CONFIG_DNOTIFY=y
+CONFIG_EXT4DEV_FS_POSIX_ACL=y
+CONFIG_USB_SERIAL_BELKIN=m
+CONFIG_SND_LAYLA24=m
+CONFIG_SND_MIXER_OSS=y
+CONFIG_SENSORS_F71805F=m
+CONFIG_CARDMAN_4040=m
+CONFIG_ATM_ENI=m
+CONFIG_S2IO=m
+CONFIG_INET_DCCP_DIAG=m
+CONFIG_NETFILTER_XT_MATCH_SCTP=m
+CONFIG_IP_VS_LBLC=m
+CONFIG_ACPI=y
+CONFIG_QFMT_V1=y
+CONFIG_UIO_CIF=m
+CONFIG_USB_LED=m
+CONFIG_USB_SERIAL_KEYSPAN_USA49WLC=y
+CONFIG_USB_HID=y
+CONFIG_FB_CYBER2000=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_DVB_VES1X93=m
+CONFIG_JOYSTICK_SPACEORB=m
+CONFIG_SLIP_SMART=y
+CONFIG_ATM_AMBASSADOR=m
+CONFIG_TIPC_ZONES=3
+CONFIG_IP_DCCP_ACKVEC=y
+CONFIG_ARCH="x86_64"
+CONFIG_QFMT_V2=y
+CONFIG_KVM_AMD=m
+CONFIG_RTC_LIB=y
+CONFIG_FB_DEFERRED_IO=y
+CONFIG_VIDEO_IVTV=m
+CONFIG_DVB_NXT200X=m
+CONFIG_WDT_501_PCI=y
+CONFIG_DE600=m
+CONFIG_I2C_ALGOBIT=m
+CONFIG_FUSION_SPI=y
+CONFIG_LAPB=m
+CONFIG_NF_NAT_FTP=m
+CONFIG_NETFILTER_XTABLES=m
+CONFIG_ACPI_CONTAINER=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_SPI_TLE62X0=m
+CONFIG_STALDRV=y
+CONFIG_AIRO_CS=m
+CONFIG_MTD_PCI=m
+CONFIG_MTD_DEBUG_VERBOSE=0
+CONFIG_VIA_FIR=m
+CONFIG_IRDA=m
+CONFIG_IPX_INTERN=y
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_DVB_DIB7000P=m
+CONFIG_TCG_NSC=m
+CONFIG_PPPOATM=m
+CONFIG_DE620=m
+CONFIG_SSB_PCIHOST_POSSIBLE=y
+CONFIG_DM_MULTIPATH_RDAC=m
+CONFIG_SATA_QSTOR=y
+CONFIG_CHR_DEV_ST=y
+CONFIG_MTD_DOC2001PLUS=m
+CONFIG_RFD_FTL=m
+CONFIG_NF_NAT_SIP=m
+CONFIG_NETFILTER_NETLINK=m
+CONFIG_INOTIFY=y
+CONFIG_USB_SERIAL_KOBIL_SCT=m
+CONFIG_RADIO_ADAPTERS=y
+CONFIG_SENSORS_ADM1021=m
+CONFIG_DRM_VIA=m
+CONFIG_TABLET_USB_AIPTEK=m
+CONFIG_PCMCIA_3C574=m
+CONFIG_HOSTAP_PLX=m
+CONFIG_NET_PCI=y
+CONFIG_SUSPEND=y
+CONFIG_INFINIBAND_AMSO1100=m
+CONFIG_SND_PORTMAN2X4=m
+CONFIG_DVB_PLL=m
+CONFIG_SENSORS_ADM1031=m
+CONFIG_MCS_FIR=m
+CONFIG_HOTPLUG=y
+CONFIG_USB_ADUTUX=m
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_SND_PCM=y
+CONFIG_W1_SLAVE_DS2433=m
+CONFIG_DEVPORT=y
+CONFIG_DRM_I810=m
+CONFIG_PRINTER=y
+CONFIG_MACINTOSH_DRIVERS=y
+CONFIG_MTD_UBI=m
+CONFIG_MTD_RAM=m
+CONFIG_NSC_FIR=m
+CONFIG_NET_CLS_FW=m
+CONFIG_BRIDGE_EBT_MARK_T=m
+CONFIG_PCI_MSI=y
+CONFIG_SWIOTLB=y
+CONFIG_CIFS=y
+CONFIG_DVB_USB=m
+CONFIG_VIDEO_CPIA2=m
+CONFIG_ACX_USB=y
+CONFIG_IPV6=m
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_INFINIBAND_SRP=m
+CONFIG_USB_SERIAL_GARMIN=m
+CONFIG_SENSORS_ADM1025=m
+CONFIG_I2C_VOODOO3=m
+CONFIG_DRM_I830=m
+CONFIG_AGP_SIS=m
+CONFIG_PC300=m
+CONFIG_PCMCIA_NETWAVE=m
+CONFIG_PARPORT_PC_PCMCIA=m
+CONFIG_WAN_ROUTER=m
+CONFIG_COMPAT_FOR_U64_ALIGNMENT=y
+CONFIG_SPARSEMEM_EXTREME=y
+CONFIG_SUNRPC_GSS=y
+CONFIG_USB_SERIAL_MOS7720=m
+CONFIG_SENSORS_PC87360=m
+CONFIG_SENSORS_ADM1026=m
+CONFIG_W1_SLAVE_DS2760=m
+CONFIG_MTD_DOCPROBE_ADVANCED=y
+CONFIG_TIPC_PORTS=8191
+CONFIG_ARPD=y
+CONFIG_PHYSICAL_ALIGN=0x200000
+CONFIG_CPUSETS=y
+CONFIG_SND_VX_LIB=m
+CONFIG_R3964=m
+CONFIG_ATM_TCP=m
+CONFIG_PCMCIA_3C589=m
+CONFIG_PARPORT=y
+CONFIG_NET_CLS=y
+CONFIG_BRIDGE_EBT_LOG=m
+CONFIG_TOI_USERUI=y
+CONFIG_HPFS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_USB_SERIAL_NAVMAN=m
+CONFIG_USB_STORAGE_KARMA=y
+CONFIG_SND_SOC=m
+CONFIG_JOYSTICK_INTERACT=m
+CONFIG_ATM_IDT77252=m
+CONFIG_SKY2=m
+CONFIG_HP100=y
+CONFIG_PARIDE_FIT2=m
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_MTD_NAND_PLATFORM=m
+CONFIG_MTD_CMDLINE_PARTS=y
+CONFIG_BT_CMTP=m
+CONFIG_BRIDGE_EBT_ARP=m
+CONFIG_IP6_NF_TARGET_LOG=m
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_JFFS2_FS_SECURITY=y
+CONFIG_USB_ETH=m
+CONFIG_USB_SERIAL_MOS7840=m
+CONFIG_SENSORS_ADM1029=m
+CONFIG_DRM_I915=m
+CONFIG_IPMI_SI=m
+CONFIG_INPUT_ATI_REMOTE2=m
+CONFIG_ISDN_DIVAS_PRIPCI=y
+CONFIG_SLHC=m
+CONFIG_IXGB=m
+CONFIG_SKGE=m
+CONFIG_R8169=m
+CONFIG_ARCNET_COM20020_PCI=m
+CONFIG_PATA_NS87410=y
+CONFIG_PARIDE_FIT3=m
+CONFIG_NFSD=y
+CONFIG_UDF_NLS=y
+CONFIG_FUSE_FS=y
+CONFIG_USB_ATM=m
+CONFIG_DVB_USB_DIBUSB_MB=m
+CONFIG_SENSORS_PC87427=m
+CONFIG_TOUCHSCREEN_GUNZE=m
+CONFIG_AIRO=m
+CONFIG_SATA_MV=y
+CONFIG_X86_MCE_AMD=y
+CONFIG_KMOD=y
+CONFIG_CRYPTO_LZF=m
+CONFIG_GENERIC_ACL=y
+CONFIG_FB_KYRO=m
+CONFIG_DVB_USB_OPERA1=m
+CONFIG_DVB_USB_DIBUSB_MC=m
+CONFIG_SBNI=m
+CONFIG_SATA_NV=y
+CONFIG_TOI_CRYPTO=y
+CONFIG_PROC_FS=y
+CONFIG_SND_FM801_TEA575X_BOOL=y
+CONFIG_SENSORS_ADM9240=m
+CONFIG_TCG_TIS=m
+CONFIG_KEYBOARD_XTKBD=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_PARIDE_KBIC=m
+CONFIG_IPDDP_DECAP=y
+CONFIG_PANTHERLORD_FF=y
+CONFIG_TCG_TPM=m
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_ISDN=m
+CONFIG_MYRI10GE=m
+CONFIG_PATA_CMD640_PCI=y
+CONFIG_MTDRAM_ERASE_SIZE=128
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+CONFIG_DRM_R128=m
+CONFIG_KEYBOARD_STOWAWAY=y
+CONFIG_PATA_HPT3X3=y
+CONFIG_TCP_CONG_ILLINOIS=m
+CONFIG_NET_KEY=m
+CONFIG_X86_CMPXCHG=y
+CONFIG_B43_LEDS=y
+CONFIG_DGRS=m
+CONFIG_DM_ZERO=y
+CONFIG_TIPC=m
+CONFIG_INET=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_RT_MUTEXES=y
+CONFIG_LOGO=y
+CONFIG_DVB_TDA1004X=m
+CONFIG_HPET=y
+CONFIG_DRM_SIS=m
+CONFIG_TYPHOON=m
+CONFIG_SCSI_DC395x=y
+CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-1
+CONFIG_SUSPEND_SMP_POSSIBLE=y
+CONFIG_NUMA=y
+CONFIG_SYSVIPC=y
+CONFIG_REISERFS_FS_SECURITY=y
+CONFIG_SENSORS_W83781D=m
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_SSB_PCMCIAHOST=y
+CONFIG_PATA_PCMCIA=m
+CONFIG_ATA_GENERIC=y
+CONFIG_SCSI=y
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_ROM=m
+CONFIG_MTD_CFI_AMDSTD=m
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_IP_SCTP=m
+CONFIG_DEFAULT_BIC=y
+CONFIG_TCP_CONG_CUBIC=m
+CONFIG_X86_L1_CACHE_SHIFT=7
+CONFIG_NTFS_FS=y
+CONFIG_INFINIBAND_ADDR_TRANS=y
+CONFIG_USB_MON=y
+CONFIG_USB_PWC=m
+CONFIG_SENSORS_W83791D=m
+CONFIG_SERIAL_8250_RSA=y
+CONFIG_ATM_FIRESTREAM=m
+CONFIG_PATA_HPT37X=y
+CONFIG_MEGARAID_MM=y
+CONFIG_PARIDE_EPIA=m
+CONFIG_IP6_NF_MATCH_OPTS=m
+CONFIG_NF_CONNTRACK_TFTP=m
+CONFIG_HIBERNATION=y
+CONFIG_SENSORS_W83792D=m
+CONFIG_SKFP=m
+CONFIG_PARIDE_BPCK=m
+CONFIG_NFTL=m
+CONFIG_NF_NAT_SNMP_BASIC=m
+CONFIG_CRYPTO_LRW=m
+CONFIG_CIFS_WEAK_PW_HASH=y
+CONFIG_KS0108_DELAY=2
+CONFIG_USB_SERIAL_KEYSPAN_USA19=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28=y
+CONFIG_INPUT_KEYSPAN_REMOTE=m
+CONFIG_PLIP=m
+CONFIG_TMS380TR=m
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_USB_PHIDGETKIT=m
+CONFIG_DIGIEPCA=m
+CONFIG_JOYSTICK_COBRA=m
+CONFIG_PARPORT_AX88796=m
+CONFIG_SLUB=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_USB_STORAGE_JUMPSHOT=y
+CONFIG_VIDEO_USBVIDEO=m
+CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
+CONFIG_KINGSUN_DONGLE=m
+CONFIG_NET_EMATCH_CMP=m
+CONFIG_IPDDP_ENCAP=y
+CONFIG_IP_NF_TARGET_SAME=m
+CONFIG_INET6_XFRM_TUNNEL=m
+CONFIG_NCPFS_SMALLDOS=y
+CONFIG_SLIP=m
+CONFIG_ZD1211RW_MAC80211=m
+CONFIG_REED_SOLOMON_DEC16=y
+CONFIG_ACTISYS_DONGLE=m
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=m
+CONFIG_IOSCHED_CFQ=y
+CONFIG_SND_SONICVIBES=m
+CONFIG_USB_ET61X251=m
+CONFIG_HDLC_X25=m
+CONFIG_ROSE=m
+CONFIG_NET_ACT_POLICE=m
+CONFIG_NF_CONNTRACK_PPTP=m
+CONFIG_X86_IO_APIC=y
+CONFIG_JFFS2_RUBIN=y
+CONFIG_USB_SERIAL_XIRCOM=m
+CONFIG_LOGITECH_FF=y
+CONFIG_SENSORS_PCA9539=m
+CONFIG_I6300ESB_WDT=m
+CONFIG_ALIM7101_WDT=m
+CONFIG_IPW2100_MONITOR=y
+CONFIG_FUSION_LOGGING=y
+CONFIG_THINKPAD_EC=m
+CONFIG_IP6_NF_MATCH_EUI64=m
+CONFIG_NR_CPUS=8
+CONFIG_GENERIC_BUG=y
+CONFIG_JFFS2_RTIME=y
+CONFIG_VIDEO_CQCAM=m
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_LANMEDIA=m
+CONFIG_IPW2200_MONITOR=y
+CONFIG_MTD_UBI_GLUEBI=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_BT_HCIBFUSB=m
+CONFIG_X86_L1_CACHE_BYTES=128
+CONFIG_SWAP=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_USB_STORAGE_USBAT=y
+CONFIG_VIDEO_CPIA_USB=m
+CONFIG_SENSORS_PCF8591=m
+CONFIG_B43_PCI_AUTOSELECT=y
+CONFIG_IEEE1394_OHCI1394=y
+CONFIG_PARIDE_ATEN=m
+CONFIG_NFTL_RW=y
+CONFIG_MTD_REDBOOT_PARTS=m
+CONFIG_KEYS=y
+CONFIG_MA600_DONGLE=m
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
+CONFIG_TCP_CONG_HYBLA=m
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_ACPI_PROCESSOR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_USB_SPEEDTOUCH=m
+CONFIG_SND_KORG1212=m
+CONFIG_SENSORS_PCF8574=m
+CONFIG_W83627HF_WDT=m
+CONFIG_AC97_BUS=m
+CONFIG_CYCLOMX_X25=y
+CONFIG_B44_PCI_AUTOSELECT=y
+CONFIG_BRIDGE_EBT_STP=m
+CONFIG_XFRM=y
+CONFIG_CRC32=y
+CONFIG_SND_VIA82XX=m
+CONFIG_VIDEO_KS0127=m
+CONFIG_GAMEPORT_L4=m
+CONFIG_AIC79XX_DEBUG_MASK=0
+CONFIG_BLK_DEV_3W_XXXX_RAID=y
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_PARIDE_EPAT=m
+CONFIG_MTD_ESB2ROM=m
+CONFIG_DEFAULT_CFQ=y
+CONFIG_VXFS_FS=m
+CONFIG_ALIM1535_WDT=m
+CONFIG_USB_NET_NET1080=m
+CONFIG_CRC16=m
+CONFIG_IP_NF_IPTABLES=m
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_MD_RAID0=y
+CONFIG_PARIDE_COMM=m
+CONFIG_NET_ACT_MIRRED=m
+CONFIG_IP_NF_MATCH_AH=m
+CONFIG_TEXTSEARCH_FSM=m
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_SECURITY_CAPABILITIES=y
+CONFIG_NFSD_V2_ACL=y
+CONFIG_USB_SERIAL_OPTION=m
+CONFIG_DVB_USB_GP8PSK=m
+CONFIG_W1_SLAVE_THERM=m
+CONFIG_TOUCHSCREEN_UCB1400=m
+CONFIG_MD_RAID1=y
+CONFIG_NET_CLS_U32=m
+CONFIG_BRIDGE_NF_EBTABLES=m
+CONFIG_NFSD_V3_ACL=y
+CONFIG_RTC_DRV_PCF8563=m
+CONFIG_USB_ZR364XX=m
+CONFIG_SPI_BITBANG=m
+CONFIG_MTDRAM_TOTAL_SIZE=4096
+CONFIG_IP_NF_MATCH_OWNER=m
+CONFIG_TEXTSEARCH_KMP=m
+CONFIG_TCP_CONG_VEGAS=m
+CONFIG_PACKET_MMAP=y
+CONFIG_HIBERNATION_SMP_POSSIBLE=y
+CONFIG_NTFS_RW=y
+CONFIG_SND_SEQUENCER_OSS=y
+CONFIG_SENSORS_MAX6650=m
+CONFIG_SENSORS_MAX1619=m
+CONFIG_SCSI_INIA100=y
+CONFIG_NETFILTER_XT_TARGET_SECMARK=m
+CONFIG_RTC_DRV_PCF8583=m
+CONFIG_SENSORS_ABITUGURU=m
+CONFIG_W83697HF_WDT=m
+CONFIG_PPP_DEFLATE=m
+CONFIG_USB_NET_MCS7830=m
+CONFIG_UNIX=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+CONFIG_GENERIC_CPU=y
+CONFIG_CIFS_UPCALL=y
+CONFIG_CIFS_STATS2=y
+CONFIG_JFFS2_FS_XATTR=y
+CONFIG_VIRTUALIZATION=y
+CONFIG_SENSORS_K8TEMP=m
+CONFIG_I2C_PARPORT=m
+CONFIG_BAYCOM_SER_FDX=m
+CONFIG_HAMRADIO=y
+CONFIG_NET_SCH_DSMARK=m
+CONFIG_MTRR=y
+CONFIG_RTC_DRV_ISL1208=m
+CONFIG_PARIDE_FRIQ=m
+CONFIG_CONFIGFS_FS=m
+CONFIG_SENSORS_FSCHER=m
+CONFIG_SPI_AT25=m
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_PARPORT_SERIAL=m
+CONFIG_MTD_ONENAND=m
+CONFIG_BT_L2CAP=m
+CONFIG_BAYCOM_SER_HDX=m
+CONFIG_NETLABEL=y
+CONFIG_VIDEO_OUTPUT_CONTROL=m
+CONFIG_ISA_DMA_API=y
+CONFIG_RTC_DRV_MAX6900=m
+CONFIG_DVB_USB_TTUSB2=m
+CONFIG_VIDEO_TVEEPROM=m
+CONFIG_SERIAL_CORE=y
+CONFIG_CYCLADES=m
+CONFIG_RT2400PCI=m
+CONFIG_LXT_PHY=m
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_MTD_SC520CDP=m
+CONFIG_IP_NF_TARGET_ULOG=m
+CONFIG_TCP_CONG_WESTWOOD=m
+CONFIG_SIGNALFD=y
+CONFIG_FB_GEODE_GX=m
+CONFIG_RT2500PCI=m
+CONFIG_PDC_ADMA=y
+CONFIG_SCSI_QLA_ISCSI=y
+CONFIG_ACPI_PROCFS=y
+CONFIG_UID16=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_64BIT=y
+CONFIG_RTC_DRV_MAX6902=m
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_ISDN_CAPI_CAPIFS_BOOL=y
+CONFIG_DE4X5=m
+CONFIG_SCSI_IPR_TRACE=y
+CONFIG_SCSI_WAIT_SCAN=m
+CONFIG_BLK_DEV_NBD=m
+CONFIG_CRYPTO_ARC4=y
+CONFIG_NET_CLS_ROUTE4=m
+CONFIG_PHYSICAL_START=0x200000
+CONFIG_IKCONFIG=y
+CONFIG_FB_GEODE=y
+CONFIG_DVB_USB_DIGITV=m
+CONFIG_VIDEO_BT848_DVB=y
+CONFIG_SENSORS_TSL2550=m
+CONFIG_INPUT_TSDEV_SCREEN_X=1024
+CONFIG_LIBERTAS_CS=m
+CONFIG_NE2K_PCI=m
+CONFIG_RFKILL_LEDS=y
+CONFIG_BINFMT_MISC=y
+CONFIG_RTC_DRV_RS5C372=m
+CONFIG_SENSORS_MAX6875=m
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_INPUT_TSDEV_SCREEN_Y=768
+CONFIG_IPW3945_MONITOR=y
+CONFIG_CISS_SCSI_TAPE=y
+CONFIG_AX25_DAMA_SLAVE=y
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_IP_FIB_HASH=y
+CONFIG_SYSV_FS=y
+CONFIG_JFS_STATISTICS=y
+CONFIG_REISERFS_FS_XATTR=y
+CONFIG_CRYPTO_SHA1=m
+CONFIG_ANON_INODES=y
+CONFIG_USB_PHIDGET=m
+CONFIG_FB_GEODE_LX=m
+CONFIG_MEGARAID_LEGACY=y
+CONFIG_INET6_AH=m
+CONFIG_TCP_CONG_HSTCP=m
+CONFIG_I82092=m
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_RTC_DRV_RS5C348=m
+CONFIG_RTC_DRV_M41T80_WDT=y
+CONFIG_LOGO_LINUX_CLUT224=y
+CONFIG_VIDEO_OV7670=m
+CONFIG_MTD_BLKDEVS=m
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
+CONFIG_USB_CYPRESS_CY7C63=m
+CONFIG_FONT_ACORN_8x8=y
+CONFIG_VGA_CONSOLE=y
+CONFIG_CDROM_PKTCDVD_BUFFERS=8
+CONFIG_PARIDE_KTTI=m
+CONFIG_IEEE80211_CRYPT_WEP=m
+CONFIG_PCIEPORTBUS=y
+CONFIG_PREEMPT_VOLUNTARY=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_SND_RAWMIDI=m
+CONFIG_FONT_PEARL_8x8=y
+CONFIG_SENSORS_VIA686A=m
+CONFIG_TELCLOCK=m
+CONFIG_WATCHDOG=y
+CONFIG_SERIAL_8250_DETECT_IRQ=y
+CONFIG_DSCC4=m
+CONFIG_SUNDANCE=m
+CONFIG_SGI_IOC4=m
+CONFIG_PARIDE_DSTR=m
+CONFIG_MTD_PARTITIONS=y
+CONFIG_WINBOND_FIR=m
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_ACPI_FAN=y
+CONFIG_CRYPTO_TWOFISH_X86_64=m
+CONFIG_SECURITY_SELINUX_DISABLE=y
+CONFIG_ATA_ACPI=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_BLK_DEV_BSG=y
+CONFIG_SECURITY_ROOTPLUG=m
+CONFIG_JFFS2_FS=m
+CONFIG_USB_STORAGE_SDDR09=y
+CONFIG_USB_ISP116X_HCD=m
+CONFIG_SENSORS_SIS5595=m
+CONFIG_TOUCHSCREEN_ADS7846=m
+CONFIG_DAVICOM_PHY=m
+CONFIG_PARIDE_FRPW=m
+CONFIG_MTD_PHYSMAP_START=0x8000000
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_ACORN_PARTITION_POWERTEC=y
+CONFIG_USB_STORAGE_SDDR55=y
+CONFIG_DVB_LGDT330X=m
+CONFIG_SENSORS_EEPROM=m
+CONFIG_ARCNET_COM90xx=m
+CONFIG_PATA_ATIIXP=y
+CONFIG_MAC80211_LEDS=y
+CONFIG_NETFILTER_XT_MATCH_REALM=m
+CONFIG_SYSVIPC_COMPAT=y
+CONFIG_OCFS2_FS=m
+CONFIG_SND_RIPTIDE=m
+CONFIG_FB_SAVAGE_ACCEL=y
+CONFIG_VIDEO_WM8739=m
+CONFIG_VIDEO_WM8775=m
+CONFIG_APPLICOM=m
+CONFIG_MTD_PLATRAM=m
+CONFIG_BT_HCIBPA10X=m
+CONFIG_6PACK=m
+CONFIG_YENTA_RICOH=y
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_PREEMPT_BKL=y
+CONFIG_CRYPTO_GF128MUL=m
+CONFIG_LOCKD_V4=y
+CONFIG_MLX4_INFINIBAND=m
+CONFIG_VIDEO_CAFE_CCIC=m
+CONFIG_SENSORS_GL520SM=m
+CONFIG_USB_APPLEIR=m
+CONFIG_JOYSTICK_SPACEBALL=m
+CONFIG_LIBERTAS=m
+CONFIG_BLK_DEV_RAM=y
+CONFIG_PARPORT_1284=y
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
+CONFIG_NODES_SHIFT=6
+CONFIG_SCHED_MC=y
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_LIBCRC32C=y
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_DVB_USB_DTT200U=m
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_PPP_BSDCOMP=m
+CONFIG_RT2500USB=m
+CONFIG_FUSION_MAX_SGE=128
+CONFIG_PATA_AMD=y
+CONFIG_SCSI_QLA_FC=y
+CONFIG_INET_IPCOMP=m
+CONFIG_CFAG12864B=m
+CONFIG_USB_SERIAL_IPW=m
+CONFIG_SND_VIRMIDI=m
+CONFIG_FB_ATY128_BACKLIGHT=y
+CONFIG_ACQUIRE_WDT=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_USB_USBNET_MII=m
+CONFIG_CHR_DEV_SCH=m
+CONFIG_MTD_NETSC520=m
+CONFIG_CRYPTO_PCBC=m
+CONFIG_ACPI_BAY=y
+CONFIG_ACPI_BUTTON=y
+CONFIG_SMB_NLS_REMOTE="cp437"
+CONFIG_SCSI_ARCMSR=y
+CONFIG_FUJITSU_LAPTOP=m
+CONFIG_BLK_DEV_SX8=m
+CONFIG_NET_SCH_CBQ=m
+CONFIG_CRYPTO_HMAC=y
+CONFIG_MODVERSIONS=y
+CONFIG_SND_SEQ_RTCTIMER_DEFAULT=y
+CONFIG_SENSORS_FSCPOS=m
+CONFIG_IPV6_TUNNEL=m
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_REISERFS_FS=y
+CONFIG_W1_SLAVE_DS2433_CRC=y
+CONFIG_I2C_STUB=m
+CONFIG_SERIAL_NONSTANDARD=y
+CONFIG_I2O_SCSI=y
+CONFIG_PATA_ALI=y
+CONFIG_BLK_DEV_RAM_BLOCKSIZE=1024
+CONFIG_BPQETHER=m
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_UNUSED_SYMBOLS=y
+CONFIG_DVB_DIB3000MB=m
+CONFIG_HANGCHECK_TIMER=m
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_UNIXWARE_DISKLABEL=y
+CONFIG_DVB_DIB3000MC=m
+CONFIG_DVB_USB_A800=m
+CONFIG_SENSORS_GL518SM=m
+CONFIG_DM9102=m
+CONFIG_I2O_PROC=y
+CONFIG_SCSI_INITIO=y
+CONFIG_MEGARAID_NEWGEN=y
+CONFIG_AIC79XX_REG_PRETTY_PRINT=y
+CONFIG_AIC7XXX_DEBUG_MASK=0
+CONFIG_USB_STORAGE=y
+CONFIG_SND_TRIDENT=m
+CONFIG_B43LEGACY=m
+CONFIG_MTD_ICHXROM=m
+CONFIG_NET_SCH_RED=m
+CONFIG_HOTPLUG_PCI=m
+CONFIG_USB_IDMOUSE=m
+CONFIG_VGASTATE=m
+CONFIG_DVB_USB_DIBUSB_MB_FAULTY=y
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_GAMEPORT=m
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_IEEE1394_SBP2=y
+CONFIG_DM_DELAY=m
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_SCH_TBF=m
+CONFIG_DEBUG_FS=y
+CONFIG_ELF_CORE=y
+CONFIG_CRYPTO_XCBC=m
+CONFIG_SND_EMU10K1X=m
+CONFIG_VIDEO_ZORAN=m
+CONFIG_SYNCLINK_CS=m
+CONFIG_CAPI_AVM=y
+CONFIG_ATM_DRIVERS=y
+CONFIG_DM_SNAPSHOT=y
+CONFIG_PATA_HPT3X3_DMA=y
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_VIDEO_CX88_ALSA=m
+CONFIG_PPPOL2TP=m
+CONFIG_DLCI_MAX=8
+CONFIG_USB_PEGASUS=m
+CONFIG_SSB_PCIHOST=y
+CONFIG_MTD_PHYSMAP_BANKWIDTH=2
+CONFIG_NET_SCH_HTB=m
+CONFIG_ATM_LANE=m
+CONFIG_YENTA_O2=y
+CONFIG_ACPI_SYSTEM=y
+CONFIG_MMC_TIFM_SD=m
+CONFIG_USB_U132_HCD=m
+CONFIG_MTD_CHAR=m
+CONFIG_NET_CLS_IND=y
+CONFIG_NETFILTER_XT_MATCH_LIMIT=m
+CONFIG_NETFILTER_NETLINK_LOG=m
+CONFIG_FB_ATY_GENERIC_LCD=y
+CONFIG_FB_INTEL=m
+CONFIG_MARVELL_PHY=m
+CONFIG_SCSI_DMA=y
+CONFIG_IP_NF_TARGET_REDIRECT=m
+CONFIG_RESOURCES_64BIT=y
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_HASH=y
+CONFIG_INFINIBAND_ISER=m
+CONFIG_INFINIBAND_MTHCA_DEBUG=y
+CONFIG_SND_MAESTRO3_FIRMWARE_IN_KERNEL=y
+CONFIG_DVB_CORE=y
+CONFIG_VIDEO_TUNER=m
+CONFIG_60XX_WDT=m
+CONFIG_LEGACY_PTYS=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_HDLC_RAW=m
+CONFIG_USB_CATC=m
+CONFIG_EEPROM_93CX6=m
+CONFIG_NETFILTER_XT_MATCH_STATE=m
+CONFIG_IP_PIMSM_V1=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_ACPI_SBS=m
+CONFIG_ARCH_DISCONTIGMEM_DEFAULT=y
+CONFIG_USB_CYTHERM=m
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_STORAGE_ALAUDA=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_SYNCLINK_GT=m
+CONFIG_B43_PCICORE_AUTOSELECT=y
+CONFIG_PATA_VIA=y
+CONFIG_SCSI_HPTIOP=y
+CONFIG_SCSI_SAS_ATTRS=y
+CONFIG_MTD_ONENAND_VERIFY_WRITE=y
+CONFIG_MTD_NAND=m
+CONFIG_MTD_DILNETPC_BOOTSIZE=0x80000
+CONFIG_NET_SCH_ATM=m
+CONFIG_IP_PIMSM_V2=y
+CONFIG_INET_TUNNEL=m
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_PRINTK_TIME=y
+CONFIG_SND_MPU401_UART=m
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_B44_PCICORE_AUTOSELECT=y
+CONFIG_MTD_PHYSMAP=m
+CONFIG_SYN_COOKIES=y
+CONFIG_X86_INTERNODE_CACHE_BYTES=128
+CONFIG_SEMAPHORE_SLEEPERS=y
+CONFIG_DMIID=y
+CONFIG_KS0108=m
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=m
+CONFIG_ISDN_DRV_AVMB1_B1PCIV4=y
+CONFIG_IPW2200_RADIOTAP=y
+CONFIG_SATA_SX4=y
+CONFIG_ATM_BR2684_IPFILTER=y
+CONFIG_NETFILTER_XT_TARGET_DSCP=m
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+CONFIG_DS1682=m
+CONFIG_PCI200SYN=m
+CONFIG_8139CP=m
+CONFIG_SATA_VIA=y
+CONFIG_PROC_EVENTS=y
+CONFIG_NETFILTER_XT_TARGET_MARK=m
+CONFIG_IP_VS_TAB_BITS=12
+CONFIG_TCP_CONG_LP=m
+CONFIG_DELL_RBU=m
+CONFIG_TOUCHSCREEN_USB_DMC_TSC10=y
+CONFIG_INPUT_EVDEV=y
+CONFIG_USB_IRDA=m
+CONFIG_ATM_CLIP=m
+CONFIG_INFINIBAND_IPOIB_DEBUG=y
+CONFIG_DVB_USB_UMT_010=m
+CONFIG_VIDEO_ZORAN_ZR36060=m
+CONFIG_ATM_HORIZON=m
+CONFIG_HDLC_PPP=m
+CONFIG_SCSI_SPI_ATTRS=y
+CONFIG_SCSI_MULTI_LUN=y
+CONFIG_PARPORT_NOT_PC=y
+CONFIG_NET_ACT_IPT=m
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_HOTPLUG_CPU=y
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_EXT2_FS_XIP=y
+CONFIG_USB_SUSPEND=y
+CONFIG_CPU5_WDT=m
+CONFIG_SYNCLINK=m
+CONFIG_TOUCHSCREEN_USB_3M=y
+CONFIG_RT2400PCI_RFKILL=y
+CONFIG_I2O_EXT_ADAPTEC=y
+CONFIG_CRYPTO_MICHAEL_MIC=m
+CONFIG_TOI_FILE=y
+CONFIG_BLOCK=y
+CONFIG_MMC_WBSD=m
+CONFIG_SND_OSSEMUL=y
+CONFIG_RADIO_MAXIRADIO=m
+CONFIG_MFD_SM501=m
+CONFIG_RT2500PCI_RFKILL=y
+CONFIG_PD6729=m
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_LOCKD=y
+CONFIG_QUOTACTL=y
+CONFIG_USB_XUSBATM=m
+CONFIG_USB_PRINTER=y
+CONFIG_IWLWIFI_QOS=y
+CONFIG_NET_SCH_SFQ=m
+CONFIG_ATALK=m
+CONFIG_BRIDGE_EBT_DNAT=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA=m
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_ZONE_DMA=y
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+CONFIG_SQUASHFS=y
+CONFIG_HOSTAP_FIRMWARE_NVRAM=y
+CONFIG_ATM_MPOA=m
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_ACORN_PARTITION_EESOX=y
+CONFIG_USB_TRANCEVIBRATOR=m
+CONFIG_ZEROPLUS_FF=y
+CONFIG_SND_MONA=m
+CONFIG_IEEE1394_PCILYNX=m
+CONFIG_ATA_PIIX=y
+CONFIG_CHECK_SIGNATURE=y
+CONFIG_IP_VS_LBLCR=m
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_SND_FM801=m
+CONFIG_FB_ATY128=m
+CONFIG_VIDEO_OVCAMCHIP=m
+CONFIG_IB700_WDT=m
+CONFIG_FB_BACKLIGHT=y
+CONFIG_SATA_SIL=y
+CONFIG_MTD_NETtel=m
+CONFIG_IP_NF_QUEUE=m
+CONFIG_KALLSYMS=y
+CONFIG_NFSD_TCP=y
+CONFIG_HID_SUPPORT=y
+CONFIG_VIDEO_IR=m
+CONFIG_PC8736x_GPIO=m
+CONFIG_NEW_LEDS=y
+CONFIG_MD_RAID10=y
+CONFIG_IPDDP=m
+CONFIG_TIPC_LOG=0
+CONFIG_BRIDGE_EBT_MARK=m
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
+CONFIG_EDAC_MM_EDAC=m
+CONFIG_DVB_MT312=m
+CONFIG_NSC_GPIO=m
+CONFIG_TOUCHSCREEN_MTOUCH=m
+CONFIG_CHELSIO_T1_NAPI=y
+CONFIG_SATA_ULI=y
+CONFIG_SCSI_PPA=m
+CONFIG_MTD_NAND_DISKONCHIP_BBTWRITE=y
+CONFIG_MTD_SBC_GXX=m
+CONFIG_BRIDGE_EBT_802_3=m
+CONFIG_K8_NB=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_NLS_UTF8=y
+CONFIG_UNION_FS_XATTR=y
+CONFIG_SND_HDSP=m
+CONFIG_ATMEL=m
+CONFIG_IBMOL=m
+CONFIG_VITESSE_PHY=m
+CONFIG_SCSI_EATA_LINKED_COMMANDS=y
+CONFIG_SSFDC=m
+CONFIG_NF_NAT_TFTP=m
+CONFIG_NETFILTER_DEBUG=y
+CONFIG_AGP_AMD64=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_USB_DSBR=m
+CONFIG_VIDEO_CX25840=m
+CONFIG_VIDEO_SAA7110=m
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_TOUCHSCREEN_USB_GUNZE=y
+CONFIG_WLAN_PRE80211=y
+CONFIG_PATA_SIS=y
+CONFIG_SCSI_IMM=m
+CONFIG_LITELINK_DONGLE=m
+CONFIG_IPV6_SIT=m
+CONFIG_TOI_CORE=y
+CONFIG_TASK_IO_ACCOUNTING=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_USB_SERIAL_CYPRESS_M8=m
+CONFIG_VIDEO_SAA7111=m
+CONFIG_INPUT_TSDEV=y
+CONFIG_AF_RXRPC=m
+CONFIG_IP6_NF_IPTABLES=m
+CONFIG_CPU_FREQ_STAT_DETAILS=y
+CONFIG_CPU_FREQ=y
+CONFIG_PM_SLEEP=y
+CONFIG_USB_SE401=m
+CONFIG_DVB_MT352=m
+CONFIG_SCSI_AACRAID=y
+CONFIG_IRLAN=m
+CONFIG_IP6_NF_MATCH_AH=m
+CONFIG_USB_MIDI_GADGET=m
+CONFIG_USB_SL811_CS=m
+CONFIG_KEYBOARD_SUNKBD=y
+CONFIG_SSB_DRIVER_PCICORE=y
+CONFIG_SATA_SIS=y
+CONFIG_BRIDGE_EBT_VLAN=m
+CONFIG_BRIDGE_EBT_PKTTYPE=m
+CONFIG_INET_ESP=m
+CONFIG_AUDIT=y
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_AMIGA_PARTITION=y
+CONFIG_SND_PCM_OSS=y
+CONFIG_DVB_CORE_ATTACH=y
+CONFIG_VIDEO_SAA7114=m
+CONFIG_W1_MASTER_DS2490=m
+CONFIG_DRM_TDFX=m
+CONFIG_INPUT_MOUSE=y
+CONFIG_ISDN_DIVAS_USERIDI=m
+CONFIG_PCMCIA_WL3501=m
+CONFIG_SONY_LAPTOP=m
+CONFIG_IP6_NF_MATCH_OWNER=m
+CONFIG_IP_NF_MATCH_RECENT=m
+CONFIG_SECURITY=y
+CONFIG_NET_IPIP=m
+CONFIG_RAMFS=y
+CONFIG_W1_MASTER_DS2482=m
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_USB_NET_ZAURUS=m
+CONFIG_NF_NAT_PPTP=m
+CONFIG_FB_GEODE_GX1=m
+CONFIG_VIDEO_SAA7134=m
+CONFIG_PHONE=m
+CONFIG_HIPPI=y
+CONFIG_SCSI_QLOGIC_1280=y
+CONFIG_RXKAD=m
+CONFIG_IP_PNP_RARP=y
+CONFIG_SHMEM=y
+CONFIG_CRYPTO_NULL=m
+CONFIG_EXPORTFS=y
+CONFIG_LEDS_TRIGGER_TIMER=m
+CONFIG_SENSORS_W83627HF=m
+CONFIG_SC520_WDT=m
+CONFIG_SCSI_AIC94XX=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_REISERFS_FS_POSIX_ACL=y
+CONFIG_SND_NM256=m
+CONFIG_VIDEO_SAA7127=m
+CONFIG_VIDEO_TEA6420=m
+CONFIG_IPW2200_PROMISCUOUS=y
+CONFIG_PATA_HPT3X2N=y
+CONFIG_SCSI_IPR=y
+CONFIG_AIC7XXX_REG_PRETTY_PRINT=y
+CONFIG_BRIDGE_EBT_SNAT=m
+CONFIG_IP_VS_PROTO_AH=y
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_EPOLL=y
+CONFIG_MINIX_FS=m
+CONFIG_FB_SYS_FOPS=m
+CONFIG_VIDEO_SAA7146=m
+CONFIG_VIDEO_SAA7191=m
+CONFIG_ITCO_WDT=m
+CONFIG_JOYSTICK_IFORCE_232=y
+CONFIG_ATM_ZATM=m
+CONFIG_SCSI_IPS=y
+CONFIG_TP_SMAPI=m
+CONFIG_INFTL=m
+CONFIG_BRIDGE_EBT_ULOG=m
+CONFIG_YENTA_TI=y
+CONFIG_RELAY=y
+CONFIG_MSDOS_FS=y
+CONFIG_FONT_8x8=y
+CONFIG_FB_MODE_HELPERS=y
+CONFIG_SCSI_AIC79XX=y
+CONFIG_VLSI_FIR=m
+CONFIG_NET_EMATCH_META=m
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_CRYPTO_WP512=m
+CONFIG_RPCSEC_GSS_KRB5=y
+CONFIG_ROMFS_FS=y
+CONFIG_VIDEO_SAA5249=m
+CONFIG_VIDEO_TDA7432=m
+CONFIG_PPDEV=y
+CONFIG_DEFXX=m
+CONFIG_PCMCIA_ATMEL=m
+CONFIG_PCMCIA_SPECTRUM=m
+CONFIG_PATA_PDC2027X=y
+CONFIG_SCSI_EATA_MAX_TAGS=16
+CONFIG_CRYPTO_TEST=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_SND_INTEL8X0=m
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_FB_INTEL_I2C=y
+CONFIG_VIDEO_ADV7170=m
+CONFIG_VIDEO_SAA7185=m
+CONFIG_MWAVE=m
+CONFIG_TIPAR=m
+CONFIG_MEGARAID_SAS=y
+CONFIG_SCSI_TGT=m
+CONFIG_IEEE80211_SOFTMAC=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_437=m
+CONFIG_UNION_FS=y
+CONFIG_REISERFS_PROC_INFO=y
+CONFIG_INFINIBAND_USER_ACCESS=m
+CONFIG_JOYSTICK_GUILLEMOT=m
+CONFIG_JOYSTICK_ANALOG=m
+CONFIG_PPP_MPPE=m
+CONFIG_IP6_NF_MATCH_HL=m
+CONFIG_YENTA=m
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_USB_SERIAL_OMNINET=m
+CONFIG_VIDEO_EM28XX=m
+CONFIG_GAMEPORT_EMU10K1=m
+CONFIG_TOUCHSCREEN_ELO=m
+CONFIG_SERIO=y
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_ABYSS=m
+CONFIG_DM_CRYPT=y
+CONFIG_IRNET=m
+CONFIG_IP6_NF_MATCH_MH=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_USB_SERIAL_KEYSPAN=m
+CONFIG_SND_CS46XX_NEW_DSP=y
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_SCSI_FUTURE_DOMAIN=m
+CONFIG_MTD_NAND_VERIFY_WRITE=y
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+CONFIG_VIDEO_TDA9840=m
+CONFIG_PPPOE=m
+CONFIG_MAC_EMUMOUSEBTN=y
+CONFIG_NVRAM=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_KARMA_PARTITION=y
+CONFIG_USB_DYNAMIC_MINORS=y
+CONFIG_USB_OV511=m
+CONFIG_VIDEO_ADV7175=m
+CONFIG_ZLIB_DEFLATE=m
+CONFIG_NET_VENDOR_3COM=y
+CONFIG_CLS_U32_MARK=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_CODA_FS_OLD_API=y
+CONFIG_USB_SUPPORT=y
+CONFIG_SND_SB16_DSP=m
+CONFIG_SND_VERBOSE_PROCFS=y
+CONFIG_VIDEO_SAA6588=m
+CONFIG_PCMCIA_PCNET=m
+CONFIG_SMSC_PHY=m
+CONFIG_SCSI_SRP=m
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+CONFIG_ACPI_TOSHIBA=y
+CONFIG_TOI_SWAP=y
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_HUGETLB_PAGE=y
+CONFIG_USB_SERIAL_SAFE=m
+CONFIG_JOYSTICK_IFORCE=m
+CONFIG_JOYSTICK_A3D=m
+CONFIG_IEEE80211_CRYPT_CCMP=m
+CONFIG_MKISS=m
+CONFIG_CLS_U32_PERF=y
+CONFIG_IA32_AOUT=y
+CONFIG_PCMCIA_IOCTL=y
+CONFIG_IOMMU=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_INFINIBAND_CXGB3=m
+CONFIG_USB_SERIAL_SAFE_PADDED=y
+CONFIG_SND_VX222=m
+CONFIG_FB_RADEON_BACKLIGHT=y
+CONFIG_VIDEO_SAA7146_VV=m
+CONFIG_W1=m
+CONFIG_ISDN_CAPI_CAPI20=m
+CONFIG_SIS900=m
+CONFIG_FB=y
+CONFIG_SATA_SVW=y
+CONFIG_BT_HCIBCM203X=m
+CONFIG_X86_POWERNOW_K8=y
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_USB_TEST=m
+CONFIG_SOUND=y
+CONFIG_SIS190=m
+CONFIG_HWMON=y
+CONFIG_IP_NF_ARPTABLES=m
+CONFIG_ACPI_THERMAL=y
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_ATARI_PARTITION=y
+CONFIG_ROOT_NFS=y
+CONFIG_TMPFS=y
+CONFIG_QUOTA=y
+CONFIG_LEDS_TRIGGER_HEARTBEAT=m
+CONFIG_FONTS=y
+CONFIG_WANXL=m
+CONFIG_ASK_IP_FIB_HASH=y
+CONFIG_RTC_INTF_DEV_UIE_EMUL=y
+CONFIG_I2C_PIIX4=m
+CONFIG_KEYBOARD_NEWTON=y
+CONFIG_HOSTAP_FIRMWARE=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_GENERIC_TIME=y
+CONFIG_CRYPTO_TWOFISH_COMMON=m
+CONFIG_ACORN_PARTITION=y
+CONFIG_USB_EMI26=m
+CONFIG_USB_EMI62=m
+CONFIG_USB_SERIAL_HP4X=m
+CONFIG_USB_SERIAL_KEYSPAN_USA19W=y
+CONFIG_USB_SERIAL_KEYSPAN_USA18X=y
+CONFIG_SND_INDIGODJ=m
+CONFIG_VIDEO_HEXIUM_ORION=m
+CONFIG_VIDEO_TDA9875=m
+CONFIG_SENSORS_LM70=m
+CONFIG_IPMI_HANDLER=m
+CONFIG_SLIP_COMPRESSED=y
+CONFIG_PCMCIA_AXNET=m
+CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
+CONFIG_DUMMY=m
+CONFIG_PATA_NETCELL=y
+CONFIG_SCSI_DMX3191D=y
+CONFIG_BT_HCIUART_BCSP=y
+CONFIG_IP_VS_DH=m
+CONFIG_PLIST=y
+CONFIG_FUTEX=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28X=y
+CONFIG_USB_SERIAL_FUNSOFT=m
+CONFIG_SND_RME32=m
+CONFIG_VIDEO_MSP3400=m
+CONFIG_SENSORS_LM80=m
+CONFIG_SERIO_LIBPS2=y
+CONFIG_IPW3945_PROMISCUOUS=y
+CONFIG_WLAN_80211=y
+CONFIG_IP_NF_MATCH_ECN=m
+CONFIG_INET6_IPCOMP=m
+CONFIG_USB_GADGETFS=m
+CONFIG_VIDEO_IR_I2C=m
+CONFIG_SENSORS_LM90=m
+CONFIG_SENSORS_LM63=m
+CONFIG_JOYSTICK_DB9=m
+CONFIG_USB_NET_CDC_SUBSET=m
+CONFIG_PCMCIA_RAYCS=m
+CONFIG_TULIP=m
+CONFIG_MISC_DEVICES=y
+CONFIG_EXPERIMENTAL=y
+CONFIG_USB_SERIAL_KEYSPAN_USA49W=y
+CONFIG_SND_CA0106=m
+CONFIG_DVB_TUNER_QT1010=m
+CONFIG_B43LEGACY_DMA=y
+CONFIG_NETWORK_SECMARK=y
+CONFIG_IP_VS_LC=m
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_X86_64=y
+CONFIG_OCFS2_DEBUG_MASKLOG=y
+CONFIG_USB_EHCI_HCD=m
+CONFIG_SENSORS_LM92=m
+CONFIG_SENSORS_LM83=m
+CONFIG_RT2X00=m
+CONFIG_IEEE1394_VIDEO1394=m
+CONFIG_INPUT=y
+CONFIG_VIRT_TO_BUS=y
+CONFIG_DVB_TUNER_MT2060=m
+CONFIG_DVB_L64781=m
+CONFIG_VIDEO_BWQCAM=m
+CONFIG_SENSORS_LM75=m
+CONFIG_I2C_AMD756=m
+CONFIG_TABLET_USB_GTCO=m
+CONFIG_MD=y
+CONFIG_BLK_DEV_CRYPTOLOOP=y
+CONFIG_BLK_CPQ_CISS_DA=y
+CONFIG_ACPI_PROC_EVENT=y
+CONFIG_CALGARY_IOMMU_ENABLED_BY_DEFAULT=y
+CONFIG_LOCALVERSION=""
+CONFIG_SMB_NLS_DEFAULT=y
+CONFIG_USB_DEVICEFS=y
+CONFIG_SND_MAESTRO3=m
+CONFIG_SENSORS_LM85=m
+CONFIG_SPI_LM70_LLP=m
+CONFIG_SERIO_PCIPS2=y
+CONFIG_IWLWIFI_SPECTRUM_MEASUREMENT=y
+CONFIG_STRIP=m
+CONFIG_MTD_DOCPROBE=m
+CONFIG_AUDITSYSCALL=y
+CONFIG_USB_SERIAL_IPAQ=m
+CONFIG_VIDEO_CX2341X=m
+CONFIG_SENSORS_LM77=m
+CONFIG_TCG_INFINEON=m
+CONFIG_PATA_OPTIDMA=y
+CONFIG_SCSI_SCAN_ASYNC=y
+CONFIG_IP6_NF_MATCH_RT=m
+CONFIG_ZLIB_INFLATE=y
+CONFIG_X86_SPEEDSTEP_CENTRINO=m
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_DVB_B2C2_FLEXCOP=m
+CONFIG_SENSORS_LM87=m
+CONFIG_SENSORS_LM78=m
+CONFIG_FORCEDETH=m
+CONFIG_I2O_BLOCK=y
+CONFIG_IP_NF_ARPFILTER=m
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_GFS2_FS_LOCKING_NOLOCK=m
+CONFIG_SERIO_PARKBD=y
+CONFIG_SC92031=m
+CONFIG_SCSI_SAS_LIBSAS=y
+CONFIG_MICROCODE=m
+CONFIG_SND_INDIGOIO=m
+CONFIG_VIDEO_SELECT=y
+CONFIG_PATA_WINBOND=y
+CONFIG_NL80211=y
+CONFIG_BT=m
+CONFIG_SIGMATEL_FIR=m
+CONFIG_NET_CLS_TCINDEX=m
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
+CONFIG_NF_CONNTRACK=m
+CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_USB_SERIAL_MCT_U232=m
+CONFIG_USB_EHCI_SPLIT_ISO=y
+CONFIG_SND_RME96=m
+CONFIG_FRAMEBUFFER_CONSOLE=y
+CONFIG_LAPBETHER=m
+CONFIG_BROADCOM_PHY=m
+CONFIG_PATA_JMICRON=y
+CONFIG_ACER_ACPI=m
+CONFIG_MTD_DILNETPC=m
+CONFIG_NF_CONNTRACK_AMANDA=m
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_ACPI_BATTERY=m
+CONFIG_SND_OPL3_LIB=m
+CONFIG_USB_KONICAWC=m
+CONFIG_VIDEO_USBVISION=m
+CONFIG_SENSORS_IT87=m
+CONFIG_I2O_LCT_NOTIFY_ON_CHANGES=y
+CONFIG_PATA_MARVELL=y
+CONFIG_SCSI_LOGGING=y
+CONFIG_BRIDGE_EBT_REDIRECT=m
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
+CONFIG_SYSFS=y
+CONFIG_NFS_DIRECTIO=y
+CONFIG_FB_SYS_COPYAREA=m
+CONFIG_MTD_ONENAND_OTP=y
+CONFIG_USB_OHCI_HCD=m
+CONFIG_FB_SYS_FILLRECT=m
+CONFIG_TUNER_TEA5761=y
+CONFIG_HW_RANDOM_INTEL=y
+CONFIG_PATA_PDC_OLD=y
+CONFIG_TCP_CONG_BIC=y
+CONFIG_X86_CPUID=y
+CONFIG_IOSCHED_NOOP=y
+CONFIG_STOP_MACHINE=y
+CONFIG_USB_SERIAL_KLSI=m
+CONFIG_USB_SERIAL_AIRCABLE=m
+CONFIG_DVB_AV7110=m
+CONFIG_VIDEO_VPX3220=m
+CONFIG_VIDEO_TVP5150=m
+CONFIG_I2C_TAOS_EVM=m
+CONFIG_USB_ALI_M5632=y
+CONFIG_SCSI_EATA_TAGGED_QUEUE=y
+CONFIG_BT_HCIBTUART=m
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
+CONFIG_INET6_TUNNEL=m
+CONFIG_IP_VS_SH=m
+CONFIG_TOI_REPLACE_SWSUSP=y
+CONFIG_X86_64_ACPI_NUMA=y
+CONFIG_USB_SERIAL_SIERRAWIRELESS=m
+CONFIG_VIDEO_SAA711X=m
+CONFIG_NET_SB1000=m
+CONFIG_SATA_INIC162X=y
+CONFIG_AIC79XX_RESET_DELAY_MS=15000
+CONFIG_IEEE80211_CRYPT_TKIP=m
+CONFIG_NET_ACT_GACT=m
+CONFIG_NET_EMATCH_TEXT=m
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_USB_GADGET_SELECTED=y
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_TOUCHSCREEN_USB_EGALAX=y
+CONFIG_JOYSTICK_ADI=m
+CONFIG_SATA_AHCI=y
+CONFIG_SCSI_AIC7XXX=y
+CONFIG_PARPORT_PC_FIFO=y
+CONFIG_ACPI_DOCK=y
+CONFIG_PM=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_INFINIBAND_MTHCA=m
+CONFIG_FB_SAVAGE=m
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=m
+CONFIG_ADM8211=m
+CONFIG_PATA_OLDPIIX=y
+CONFIG_MTD_CFI_STAA=m
+CONFIG_NET_SCH_INGRESS=m
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_TOI_CHECKSUM=y
+CONFIG_NO_HZ=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+CONFIG_USB_QUICKCAM_MESSENGER=m
+CONFIG_LIBERTAS_USB=m
+CONFIG_IP_NF_MANGLE=m
+CONFIG_IP_VS_NQ=m
+CONFIG_ACORN_PARTITION_CUMANA=y
+CONFIG_CRYPTO_CAST5=m
+CONFIG_USB_STORAGE_DATAFAB=y
+CONFIG_USB_UHCI_HCD=m
+CONFIG_FB_RADEON=m
+CONFIG_IPV6_MIP6=m
+CONFIG_CRYPTO_CAST6=m
+CONFIG_DCDBAS=y
+CONFIG_INFINIBAND_USER_MAD=m
+CONFIG_THRUSTMASTER_FF=y
+CONFIG_SND_BT87X=m
+CONFIG_HAPPYMEAL=m
+CONFIG_IP_VS=m
+CONFIG_SND_FM801_TEA575X=m
+CONFIG_SND_MTS64=m
+CONFIG_SPECIALIX=m
+CONFIG_IPV6_PRIVACY=y
+CONFIG_X86_PM_TIMER=y
+CONFIG_HZ=1000
+CONFIG_LDM_DEBUG=y
+CONFIG_SND_AD1889=m
+CONFIG_FONT_SUN8x16=y
+CONFIG_INPUT_POWERMATE=m
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=m
+CONFIG_USB_KC2190=y
+CONFIG_USB_AN2720=y
+CONFIG_ACENIC=m
+CONFIG_PATA_TRIFLEX=y
+CONFIG_PATA_EFAR=y
+CONFIG_SMC_IRCC_FIR=m
+CONFIG_NETFILTER_XT_MATCH_HELPER=m
+CONFIG_HUGETLBFS=y
+CONFIG_INFINIBAND_IPOIB=m
+CONFIG_ISDN_DIVAS_DIVACAPI=m
+CONFIG_WAN_ROUTER_DRIVERS=m
+CONFIG_HDLC_RAW_ETH=m
+CONFIG_PATA_RADISYS=y
+CONFIG_MTD_NAND_IDS=m
+CONFIG_MTD_PHYSMAP_LEN=0x4000000
+CONFIG_IP_VS_RR=m
+CONFIG_INET_DIAG=y
+CONFIG_NLS_ISO8859_1=m
+CONFIG_I2C_SIS630=m
+CONFIG_B43LEGACY_PIO=y
+CONFIG_NET_ETHERNET=y
+CONFIG_MEGARAID_MAILBOX=y
+CONFIG_NET_SCH_GRED=m
+CONFIG_NETFILTER_XT_MATCH_LENGTH=m
+CONFIG_XFRM_MIGRATE=y
+CONFIG_ACPI_BLACKLIST_YEAR=0
+CONFIG_NLS_ISO8859_2=m
+CONFIG_FONT_6x11=y
+CONFIG_ATM_LANAI=m
+CONFIG_TR=y
+CONFIG_NS83820=m
+CONFIG_SCSI_NETLINK=y
+CONFIG_REED_SOLOMON=m
+CONFIG_IP6_NF_QUEUE=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_EDAC_E752X=m
+CONFIG_INFINIBAND_IPATH=m
+CONFIG_MMC_SDHCI=m
+CONFIG_MMC_BLOCK=m
+CONFIG_USB_MICROTEK=m
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_SND_CS5530=m
+CONFIG_VIDEO_ZORAN_DC10=m
+CONFIG_SC1200_WDT=m
+CONFIG_SATA_PROMISE=y
+CONFIG_TIFM_7XX1=m
+CONFIG_NET_SCH_HFSC=m
+CONFIG_NET_SCH_FIFO=y
+CONFIG_NLS_ISO8859_4=m
+CONFIG_SND_BT87X_OVERCLOCK=y
+CONFIG_MOUSE_SERIAL=y
+CONFIG_USB_EPSON2888=y
+CONFIG_SSB_POSSIBLE=y
+CONFIG_DE2104X=m
+CONFIG_DM_MULTIPATH=m
+CONFIG_MD_MULTIPATH=y
+CONFIG_ASYNC_MEMCPY=y
+CONFIG_PARIDE_PD=m
+CONFIG_NLS_ISO8859_5=m
+CONFIG_SND_CS4281=m
+CONFIG_VIDEO_ZORAN_DC30=m
+CONFIG_SBC_EPX_C3_WATCHDOG=m
+CONFIG_B43=m
+CONFIG_ATM_BR2684=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_USB_LIBUSUAL=y
+CONFIG_FONT_7x14=y
+CONFIG_USB_ZC0301=m
+CONFIG_I2C_TINY_USB=m
+CONFIG_B44=m
+CONFIG_BLK_DEV_UMEM=y
+CONFIG_PARIDE_PF=m
+CONFIG_ISDN_CAPI=m
+CONFIG_VT=y
+CONFIG_MIGRATION=y
+CONFIG_TICK_ONESHOT=y
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_SND_AU8810=m
+CONFIG_SENSORS_SMSC47M1=m
+CONFIG_SX=m
+CONFIG_INPUT_TABLET=y
+CONFIG_USB_ZD1201=m
+CONFIG_MD_LINEAR=y
+CONFIG_SATA_VITESSE=y
+CONFIG_PARIDE_PG=m
+CONFIG_MTD_DEBUG=y
+CONFIG_CONNECTOR=y
+CONFIG_IP_NF_MATCH_TTL=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_GFS2_FS_LOCKING_DLM=m
+CONFIG_SND_AU8820=m
+CONFIG_USB_NET_RNDIS_HOST=m
+CONFIG_ARCNET_RIM_I=m
+CONFIG_MD_RAID5_RESHAPE=y
+CONFIG_SCSI_EATA=y
+CONFIG_VLAN_8021Q=m
+CONFIG_GENERIC_PENDING_IRQ=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NCPFS_OS2_NS=y
+CONFIG_SND_AU8830=m
+CONFIG_FONT_8x16=y
+CONFIG_VIDEO_DPC=m
+CONFIG_EUROTECH_WDT=m
+CONFIG_MLX4_CORE=m
+CONFIG_NET_SCHED=y
+CONFIG_IP_NF_MATCH_TOS=m
+CONFIG_BRIDGE=m
+CONFIG_INET6_ESP=m
+CONFIG_NETFILTER=y
+CONFIG_PCMCIA=m
+CONFIG_PCCARD=y
+CONFIG_SPARSEMEM=y
+CONFIG_ACPI_NUMA=y
+CONFIG_BASE_FULL=y
+CONFIG_RTC_DRV_V3020=m
+CONFIG_INFINIBAND_USER_MEM=y
+CONFIG_SND_RTCTIMER=m
+CONFIG_SSB_DEBUG=y
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=m
+CONFIG_PCI_ATMEL=m
+CONFIG_VIA_VELOCITY=m
+CONFIG_PATA_CYPRESS=y
+CONFIG_SCSI_SYM53C8XX_MMIO=y
+CONFIG_SCSI_SYM53C8XX_2=y
+CONFIG_CRC_CCITT=m
+CONFIG_IP_MULTICAST=y
+CONFIG_USB_G_SERIAL=m
+CONFIG_FIXED_MII_10_FDX=y
+CONFIG_MD_RAID456=y
+CONFIG_MTD_BLOCK_RO=m
+CONFIG_MTD_BLOCK=m
+CONFIG_NET_IPGRE_BROADCAST=y
+CONFIG_NCPFS_EXTRAS=y
+CONFIG_USB_SL811_HCD=m
+CONFIG_VIDEO_ZORAN_BUZ=m
+CONFIG_TCG_ATMEL=m
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_MTD_NAND_DISKONCHIP=m
+CONFIG_MTD_M25P80=m
+CONFIG_IRDA_FAST_RR=y
+CONFIG_GENERIC_CMOS_UPDATE=y
+CONFIG_SND_ES1938=m
+CONFIG_I2C_BOARDINFO=y
+CONFIG_TOUCHSCREEN_USB_PANJIT=y
+CONFIG_ADAPTEC_STARFIRE=m
+CONFIG_ATA_OVER_ETH=m
+CONFIG_GACT_PROB=y
+CONFIG_IP_NF_FILTER=m
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_PM_LEGACY=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_NFS_ACL_SUPPORT=y
+CONFIG_SND_AC97_POWER_SAVE=y
+CONFIG_FB_DDC=m
+CONFIG_DISPLAY_SUPPORT=m
+CONFIG_VIDEO_CX88_VP3054=m
+CONFIG_EPIC100=m
+CONFIG_EQUALIZER=m
+CONFIG_HAS_IOMEM=y
+CONFIG_INET6_XFRM_MODE_TRANSPORT=m
+CONFIG_RTC_DRV_X1205=m
+CONFIG_FB_3DFX_ACCEL=y
+CONFIG_VIDEO_BUF=m
+CONFIG_AGP_INTEL=m
+CONFIG_MOXA_SMARTIO=m
+CONFIG_IPW2100=m
+CONFIG_IEEE1394_DV1394=m
+CONFIG_MTD_CFI_UTIL=m
+CONFIG_RFKILL_INPUT=m
+CONFIG_BT_HCIUSB=m
+CONFIG_DECNET=m
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
+CONFIG_NETFILTER_XT_MATCH_POLICY=m
+CONFIG_NETFILTER_XT_TARGET_NFLOG=m
+CONFIG_FW_LOADER=y
+CONFIG_CRYPTO_SHA512=m
+CONFIG_SND_ES1968=m
+CONFIG_IPW2200=m
+CONFIG_TIGON3=m
+CONFIG_MTD_CK804XROM=m
+CONFIG_NETFILTER_XT_MATCH_MAC=m
+CONFIG_EARLY_PRINTK=y
+CONFIG_NLS_ASCII=m
+CONFIG_USB_MDC800=m
+CONFIG_DVB_SP8870=m
+CONFIG_VIDEO_SAA7134_DVB=m
+CONFIG_VIDEO_DEV=m
+CONFIG_B43_PCMCIA=y
+CONFIG_VIA_RHINE=m
+CONFIG_PARIDE=y
+CONFIG_MTD_TS5500=m
+CONFIG_BRIDGE_EBT_ARPREPLY=m
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_NCPFS_STRONG=y
+CONFIG_FB_PM2=m
+CONFIG_DVB_USB_GL861=m
+CONFIG_SCSI_LPFC=y
+CONFIG_NET_ACT_SIMP=m
+CONFIG_IP_DCCP_CCID2=m
+CONFIG_MODULE_FORCE_UNLOAD=y
+CONFIG_RTC_INTF_DEV=y
+CONFIG_USB_SERIAL_KEYSPAN_PDA=m
+CONFIG_SND_ALS300=m
+CONFIG_LCD_CLASS_DEVICE=m
+CONFIG_VIDEO_PVRUSB2_24XXX=y
+CONFIG_IP_DCCP_CCID3=m
+CONFIG_X86_ACPI_CPUFREQ=y
+CONFIG_ISO9660_FS=y
+CONFIG_SND_VXPOCKET=m
+CONFIG_FB_TRIDENT_ACCEL=y
+CONFIG_SCSI_GDTH=y
+CONFIG_TIFM_CORE=m
+CONFIG_PARIDE_PT=m
+CONFIG_BRIDGE_EBT_AMONG=m
+CONFIG_PACKET=y
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=m
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
+CONFIG_ACPI_ASUS=y
+CONFIG_X86_PC=y
+CONFIG_CRYPTO_SHA256=m
+CONFIG_SND_SERIAL_U16550=m
+CONFIG_USB_VICAM=m
+CONFIG_TUNER_3036=m
+CONFIG_DVB_BT8XX=m
+CONFIG_USB_ARMLINUX=y
+CONFIG_YELLOWFIN=m
+CONFIG_AIC79XX_DEBUG_ENABLE=y
+CONFIG_PARIDE_EPATC8=y
+CONFIG_BT_RFCOMM=m
+CONFIG_DONGLE=y
+CONFIG_NET_SCH_TEQL=m
+CONFIG_BRIDGE_NETFILTER=y
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_NCPFS_IOCTL_LOCKING=y
+CONFIG_JFS_SECURITY=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_RTC_DRV_STK17TA8=m
+CONFIG_I2C_AMD8111=m
+CONFIG_COMPUTONE=m
+CONFIG_R8169_VLAN=y
+CONFIG_NETFILTER_XT_MATCH_STRING=m
+CONFIG_NF_CT_PROTO_GRE=m
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_SCHED_SMT=y
+CONFIG_FB_SAVAGE_I2C=y
+CONFIG_HPET_MMAP=y
+CONFIG_AIC7XXX_RESET_DELAY_MS=15000
+CONFIG_SCSI_3W_9XXX=y
+CONFIG_IP6_NF_MATCH_IPV6HEADER=m
+CONFIG_INET6_XFRM_MODE_TUNNEL=m
+CONFIG_FIB_RULES=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_QNX4FS_FS=y
+CONFIG_CRAMFS=m
+CONFIG_SND_HWDEP=m
+CONFIG_VIDEO_PVRUSB2_29XXX=y
+CONFIG_TOUCHSCREEN_USB_ETURBO=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_USB_ATMEL=m
+CONFIG_FUSION_FC=y
+CONFIG_MTD_PHRAM=m
+CONFIG_BOUNCE=y
+CONFIG_ACORN_PARTITION_RISCIX=y
+CONFIG_FB_ATY_BACKLIGHT=y
+CONFIG_FB_RADEON_I2C=y
+CONFIG_FB_ARC=m
+CONFIG_VIDEO_MXB=m
+CONFIG_VIDEO_ZORAN_LML33R10=m
+CONFIG_VIDEO_SAA5246A=m
+CONFIG_SERIO_CT82C710=y
+CONFIG_JOYSTICK_SIDEWINDER=m
+CONFIG_MOUSE_PS2=y
+CONFIG_ARCNET=m
+CONFIG_SCSI_PROC_FS=y
+CONFIG_MCP2120_DONGLE=m
+CONFIG_NET_SCH_PRIO=m
+CONFIG_IP_NF_MATCH_IPRANGE=m
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
+CONFIG_NET_IPGRE=m
+CONFIG_SUNRPC_BIND34=y
+CONFIG_RTC_CLASS=y
+CONFIG_USB_SERIAL_EDGEPORT_TI=m
+CONFIG_USB_STORAGE_FREECOM=y
+CONFIG_VIDEO_CX88_BLACKBIRD=m
+CONFIG_VIDEO_HEXIUM_GEMINI=m
+CONFIG_IBMASR=m
+CONFIG_FEALNX=m
+CONFIG_I2C=m
+CONFIG_WIRELESS_EXT=y
+CONFIG_ECONET=m
+CONFIG_USB_SERIAL_CP2101=m
+CONFIG_FB_CIRRUS=m
+CONFIG_ISDN_CAPI_CAPIFS=m
+CONFIG_HW_RANDOM=y
+CONFIG_MTD_PMC551=m
+CONFIG_X25=m
+CONFIG_BRIDGE_EBT_T_FILTER=m
+CONFIG_PCCARD_NONSTATIC=m
+CONFIG_NEED_MULTIPLE_NODES=y
+CONFIG_NCPFS_NFS_NS=y
+CONFIG_INOTIFY_USER=y
+CONFIG_HID_FF=y
+CONFIG_SND_HDSPM=m
+CONFIG_SENSORS_W83627EHF=m
+CONFIG_PCIPCWATCHDOG=m
+CONFIG_INPUT_JOYDEV=m
+CONFIG_FIXED_PHY=m
+CONFIG_CRYPTO_CRC32C=y
+CONFIG_USB_SERIAL_AIRPRIME=m
+CONFIG_PDA_POWER=m
+CONFIG_I2C_ALI1535=m
+CONFIG_MACHZ_WDT=m
+CONFIG_PATA_OPTI=y
+CONFIG_ISCSI_TCP=y
+CONFIG_X86_HT=y
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_USB_SERIAL_EDGEPORT=m
+CONFIG_I2C_ALI1563=m
+CONFIG_INPUT_PCSPKR=m
+CONFIG_HZ_1000=y
+CONFIG_TASKSTATS=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_VIDEO_TEA6415C=m
+CONFIG_WAFER_WDT=m
+CONFIG_SHAPER=m
+CONFIG_CHR_DEV_OSST=y
+CONFIG_MTD_SLRAM=m
+CONFIG_MICROCODE_OLD_INTERFACE=y
+CONFIG_DVB_USB_M920X=m
+CONFIG_VIDEO_UPD64083=m
+CONFIG_PHONE_IXJ=m
+CONFIG_IWL4965=m
+CONFIG_HOSTAP_CS=m
+CONFIG_HERMES=m
+CONFIG_RFKILL=m
+CONFIG_COMPAT=y
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+CONFIG_RTC_DRV_CMOS=m
+CONFIG_USB_HIDINPUT_POWERBOOK=y
+CONFIG_SND_GINA20=m
+CONFIG_SND_TIMER=y
+CONFIG_DVB_BUDGET_PATCH=m
+CONFIG_I2C_PROSAVAGE=m
+CONFIG_PCMCIA_NMCLAN=m
+CONFIG_IPW3945=m
+CONFIG_MD_FAULTY=y
+CONFIG_TIPC_ADVANCED=y
+CONFIG_BRIDGE_EBT_LIMIT=m
+CONFIG_NCPFS_NLS=y
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=m
+CONFIG_RADIO_GEMTEK_PCI=m
+CONFIG_VIDEO_CS53L32A=m
+CONFIG_RT2X00_LIB=m
+CONFIG_MTD_BLOCK2MTD=m
+CONFIG_X86=y
+CONFIG_JOLIET=y
+CONFIG_DAB=y
+CONFIG_W1_CON=y
+CONFIG_8139TOO=m
+CONFIG_MTD_UBI_BEB_RESERVE=1
+CONFIG_MTD_L440GX=m
+CONFIG_MTD_REDBOOT_PARTS_UNALLOCATED=y
+CONFIG_IEEE80211_RADIOTAP=y
+CONFIG_IRCOMM=m
+CONFIG_XFS_SECURITY=y
+CONFIG_USB_RIO500=m
+CONFIG_FB_SIS_300=y
+CONFIG_N_HDLC=m
+CONFIG_TABLET_USB_KBTAB=m
+CONFIG_PHYLIB=m
+CONFIG_AIC79XX_CMDS_PER_DEVICE=32
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_SYSFS_DEPRECATED=y
+CONFIG_CRYPTO_TGR192=m
+CONFIG_KVM_INTEL=m
+CONFIG_SND_PCXHR=m
+CONFIG_SND_GINA24=m
+CONFIG_JOYSTICK_GAMECON=m
+CONFIG_MTD_AMD76XROM=m
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_ACORN_PARTITION_ICS=y
+CONFIG_DVB_LNBP21=m
+CONFIG_RTL8187=m
+CONFIG_I2O=y
+CONFIG_IEEE1394_RAWIO=m
+CONFIG_NF_CONNTRACK_EVENTS=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_X86_GOOD_APIC=y
+CONFIG_SND_MPU401=m
+CONFIG_FONT_SUN12x22=y
+CONFIG_FB_ATY_CT=y
+CONFIG_HWMON_VID=m
+CONFIG_WDTPCI=m
+CONFIG_SERIO_RAW=m
+CONFIG_DM_MIRROR=y
+CONFIG_NETFILTER_XT_MATCH_ESP=m
+CONFIG_USB_SERIAL_PL2303=m
+CONFIG_SND_MTPAV=m
+CONFIG_TOUCHSCREEN_FUJITSU=m
+CONFIG_B43_RFKILL=y
+CONFIG_MTD_DATAFLASH=m
+CONFIG_CFG80211=y
+CONFIG_IP_NF_TARGET_CLUSTERIP=m
+CONFIG_EDD=m
+CONFIG_SND_INTEL8X0M=m
+CONFIG_DVB_CAPTURE_DRIVERS=y
+CONFIG_PPP_ASYNC=m
+CONFIG_MAC80211=m
+CONFIG_NET_EMATCH_STACK=32
+CONFIG_USB_SERIAL_KEYSPAN_USA28XA=y
+CONFIG_USB_DEVICE_CLASS=y
+CONFIG_FB_SIS_315=y
+CONFIG_DVB_CX24110=m
+CONFIG_USBPCWATCHDOG=m
+CONFIG_ATM_HE=m
+CONFIG_MTD_NAND_NANDSIM=m
+CONFIG_ACT200L_DONGLE=m
+CONFIG_IP_NF_TARGET_REJECT=m
+CONFIG_NFS_V3=y
+CONFIG_ECRYPT_FS=y
+CONFIG_USB_SERIAL_KEYSPAN_USA19QI=y
+CONFIG_USB_SERIAL_KEYSPAN_USA28XB=y
+CONFIG_DVB_B2C2_FLEXCOP_PCI=m
+CONFIG_HOSTAP=m
+CONFIG_SUNGEM=m
+CONFIG_QSEMI_PHY=m
+CONFIG_NET_FC=y
+CONFIG_THINKPAD_ACPI=m
+CONFIG_INET_XFRM_MODE_BEET=y
+CONFIG_NFS_V4=y
+CONFIG_JBD=y
+CONFIG_SND_DUMMY=m
+CONFIG_JOYSTICK_IFORCE_USB=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_PHONE_IXJ_PCMCIA=m
+CONFIG_PCMCIA_HERMES=m
+CONFIG_TMSPCI=m
+CONFIG_USB_APPLEDISPLAY=m
+CONFIG_USB_SERIAL_KEYSPAN_MPR=y
+CONFIG_DVB_CX22700=m
+CONFIG_USB_NET_CDCETHER=m
+CONFIG_IFB=m
+CONFIG_GIRBIL_DONGLE=m
+CONFIG_DEFAULT_TCP_CONG="bic"
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_AFS_FS=m
+CONFIG_INFINIBAND=m
+CONFIG_USB_EZUSB=y
+CONFIG_FIRMWARE_EDID=y
+CONFIG_DVB_CINERGYT2=m
+CONFIG_DVB_S5H1420=m
+CONFIG_DVB_CX24123=m
+CONFIG_IDE=y
+CONFIG_NET_CLS_RSVP=m
+CONFIG_GENERIC_IOMAP=y
+CONFIG_ZONE_DMA32=y
+CONFIG_BFS_FS=m
+CONFIG_FAT_FS=y
+CONFIG_EXT4DEV_FS_SECURITY=y
+CONFIG_RTC_DRV_TEST=m
+CONFIG_SND_PDAUDIOCF=m
+CONFIG_FB_ATY_GX=y
+CONFIG_FB_SYS_IMAGEBLIT=m
+CONFIG_DVB_CX22702=m
+CONFIG_I2C_SIS96X=m
+CONFIG_JOYSTICK_TURBOGRAFX=m
+CONFIG_MTD_NAND_CAFE=m
+CONFIG_NF_CONNTRACK_IRC=m
+CONFIG_INPUT_UINPUT=m
+CONFIG_TOUCHSCREEN_MK712=m
+CONFIG_NET_TULIP=y
+CONFIG_FUSION=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_IP_MROUTE=y
+CONFIG_HOTPLUG_PCI_FAKE=m
+CONFIG_FB_ATY=m
+CONFIG_VIDEO_TLV320AIC23B=m
+CONFIG_TOUCHSCREEN_USB_ITM=y
+CONFIG_SCSI_STEX=y
+CONFIG_BT_HCIBT3C=m
+CONFIG_HID=y
+CONFIG_NETROM=m
+CONFIG_IP_NF_RAW=m
+CONFIG_IP6_NF_MANGLE=m
+CONFIG_NF_CONNTRACK_H323=m
+CONFIG_X86_MCE_INTEL=y
+CONFIG_EFS_FS=m
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_USB_BERRY_CHARGE=m
+CONFIG_USB_SERIAL_EMPEG=m
+CONFIG_FB_SIS=m
+CONFIG_DVB_OR51211=m
+CONFIG_DVB_BCM3510=m
+CONFIG_SMSC37B787_WDT=m
+CONFIG_E100=m
+CONFIG_ASYNC_XOR=y
+CONFIG_SATA_SIL24=y
+CONFIG_ATA=y
+CONFIG_IP_DCCP_TFRC_LIB=m
+CONFIG_IP_NF_TARGET_NETMAP=m
+CONFIG_NF_NAT=m
+CONFIG_UNAME_RELEASE="2.6.23-sabayon"
+CONFIG_UDF_FS=y
+CONFIG_B43_DMA_AND_PIO_MODE=y
+CONFIG_SCTP_HMAC_MD5=y
+CONFIG_NF_NAT_AMANDA=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_FONT_10x18=y
+CONFIG_DVB_OR51132=m
+CONFIG_AIC7XXX_DEBUG_ENABLE=y
+CONFIG_AGP=y
+CONFIG_PRINTK=y
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NCP_FS=m
+CONFIG_RPCSEC_GSS_SPKM3=m
+CONFIG_HFS_FS=y
+CONFIG_USB_LD=m
+CONFIG_USB_SERIAL_FTDI_SIO=m
+CONFIG_DVB_USB_AF9005=m
+CONFIG_JOYSTICK_GF2K=m
+CONFIG_NET_EMATCH_NBYTE=m
+CONFIG_POWER_SUPPLY=m
+CONFIG_NLS_ISO8859_15=m
+CONFIG_SMB_FS=y
+CONFIG_XFS_QUOTA=y
+CONFIG_INTEL_IOATDMA=m
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_B43_DMA=y
+CONFIG_BT_SCO=m
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_VS_PROTO_TCP=y
+CONFIG_HOTPLUG_PCI_ACPI=m
+CONFIG_DMI=y
+CONFIG_SUNRPC=y
+CONFIG_SQUASHFS_VMALLOC=y
+CONFIG_JFS_FS=y
+CONFIG_FS_MBCACHE=y
+CONFIG_SND_USB_CAIAQ_INPUT=y
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_TABLET_USB_WACOM=m
+CONFIG_SCSI_AIC7XXX_OLD=y
+CONFIG_LLC=y
+CONFIG_IP6_NF_TARGET_HL=m
+CONFIG_IP_VS_PROTO_ESP=y
+CONFIG_XFRM_USER=m
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_SYSV68_PARTITION=y
+CONFIG_ADVANTECH_WDT=m
+CONFIG_ISDN_DIVAS_MAINT=m
+CONFIG_ACX=m
+CONFIG_CRC_ITU_T=m
+CONFIG_DM_MULTIPATH_EMC=m
+CONFIG_MTD_DOC2000=m
+CONFIG_TEKRAM_DONGLE=m
+CONFIG_DEV_APPLETALK=m
+CONFIG_BRIDGE_EBT_T_NAT=m
+CONFIG_IP_VS_SED=m
+CONFIG_IP_VS_PROTO_UDP=y
+CONFIG_HOTPLUG_PCI_CPCI=y
+CONFIG_HAVE_MEMORY_PRESENT=y
+CONFIG_PCI=y
+CONFIG_BLK_DEV_IO_TRACE=y
+CONFIG_DLM=m
+CONFIG_MMC=m
+CONFIG_USB_FILE_STORAGE=m
+CONFIG_USB_PHIDGETSERVO=m
+CONFIG_USB_SERIAL_KEYSPAN_USA19QW=y
+CONFIG_USB_USS720=m
+CONFIG_SND_ECHO3G=m
+CONFIG_DVB_SP887X=m
+CONFIG_DVB_B2C2_FLEXCOP_USB=m
+CONFIG_DVB_ZL10353=m
+CONFIG_VIDEO_V4L1=y
+CONFIG_MOUSE_APPLETOUCH=m
+CONFIG_ISDN_DRV_AVMB1_B1PCI=m
+CONFIG_AMD8111_ETH=m
+CONFIG_BLK_DEV_DAC960=y
+CONFIG_MTD_DOCPROBE_55AA=y
+CONFIG_MTD_DOC2001=m
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_IKCONFIG_PROC=y
+CONFIG_ZISOFS=y
+CONFIG_USB_UEAGLEATM=m
+CONFIG_SND_YMFPCI_FIRMWARE_IN_KERNEL=y
+CONFIG_VIDEO_V4L2=y
+CONFIG_PCMCIA_XIRCOM=m
+CONFIG_PATA_SC1200=y
+CONFIG_BT_HCIDTL1=m
+CONFIG_HOTPLUG_PCI_PCIE=m
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_BUG=y
+CONFIG_CRYPTO_HW=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
+CONFIG_NFS_FS=y
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_PCNET32=m
+CONFIG_ULI526X=m
+CONFIG_MII=y
+CONFIG_FIXED_MII_100_FDX=y
+CONFIG_I2O_CONFIG=y
+CONFIG_BRIDGE_EBT_IP=m
+CONFIG_NF_CONNTRACK_FTP=m
+CONFIG_SND_ICE1712=m
+CONFIG_DVB_AV7110_OSD=y
+CONFIG_BATTERY_DS2760=m
+CONFIG_ARCNET_1201=m
+CONFIG_BT_HCIUART_H4=y
+CONFIG_NF_CONNTRACK_ENABLED=m
+CONFIG_USB_STORAGE_DPCM=y
+CONFIG_USB_OHCI_HCD_SSB=y
+CONFIG_DVB_BUDGET_CI=m
+CONFIG_VIDEO_PVRUSB2_SYSFS=y
+CONFIG_VIDEO_CX88=m
+CONFIG_DVB_FE_CUSTOMISE=y
+CONFIG_SENSORS_APPLESMC=m
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_P54_COMMON=m
+CONFIG_IP_NF_ARP_MANGLE=m
+CONFIG_NF_CONNTRACK_SIP=m
+CONFIG_CRYPTO=y
+CONFIG_I2C_SIMTEC=m
+CONFIG_MTD_CFI_INTELEXT=m
+CONFIG_ATM=m
+CONFIG_TIPC_SLAVE_NODES=0
+CONFIG_SYSCTL=y
+CONFIG_CFAG12864B_RATE=20
+CONFIG_SND_ICE1724=m
+CONFIG_DRM=m
+CONFIG_SERIAL_8250_CS=m
+CONFIG_ARCNET_1051=m
+CONFIG_SND_ATIIXP_MODEM=m
+CONFIG_USB_STV680=m
+CONFIG_I2C_SIS5595=m
+CONFIG_I2C_ALI15X3=m
+CONFIG_SPECIALIX_RTSCTS=y
+CONFIG_CYCLADES_SYNC=m
+CONFIG_ARCNET_COM20020_CS=m
+CONFIG_CDROM_PKTCDVD=y
+CONFIG_ECONET_NATIVE=y
+CONFIG_TOI_DEFAULT_WAIT=25
+CONFIG_SND=y
+CONFIG_SENSORS_W83L785TS=m
+CONFIG_SENSORS_AD7418=m
+CONFIG_ISI=m
+CONFIG_IWLWIFI_SENSITIVITY=y
+CONFIG_ATP=m
+CONFIG_B44_PCI=y
+CONFIG_CICADA_PHY=m
+CONFIG_MTD_DOCECC=m
+CONFIG_MTD=y
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_UFS_FS=y
+CONFIG_DVB_USB_NOVA_T_USB2=m
+CONFIG_WAN=y
+CONFIG_NETDEV_1000=y
+CONFIG_FTL=m
+CONFIG_IP_VS_WLC=m
+CONFIG_IP_PNP=y
+CONFIG_ACPI_HOTPLUG_CPU=y
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_DMA_ENGINE=y
+CONFIG_DVB_TTUSB_BUDGET=m
+CONFIG_DVB_USB_AU6610=m
+CONFIG_DVB_TDA8083=m
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_ISDN_CAPI_MIDDLEWARE=y
+CONFIG_PATA_CS5520=y
+CONFIG_AIC7XXX_CMDS_PER_DEVICE=32
+CONFIG_MTD_PNC2000=m
+CONFIG_YAM=m
+CONFIG_IP6_NF_FILTER=m
+CONFIG_IP_NF_TARGET_ECN=m
+CONFIG_HT_IRQ=y
+CONFIG_NET=y
+CONFIG_KERNELVERSION="2.6.23-sabayon"
+CONFIG_JFFS2_SUMMARY=y
+CONFIG_SND_ALS4000=m
+CONFIG_I2C_OCORES=m
+CONFIG_PC87413_WDT=m
+CONFIG_SSB=m
+CONFIG_VORTEX=m
+CONFIG_PATA_CS5530=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_XFS_FS=y
+CONFIG_FS_XIP=y
+CONFIG_SND_ALI5451=m
+CONFIG_RADIO_MAESTRO=m
+CONFIG_RT61PCI=m
+CONFIG_RT2X00_LIB_RFKILL=y
+CONFIG_IEEE1394=y
+CONFIG_SCSI_BUSLOGIC=y
+CONFIG_IRTTY_SIR=m
+CONFIG_NET_CLS_BASIC=m
+CONFIG_TEXTSEARCH_BM=m
+CONFIG_CALGARY_IOMMU=y
+CONFIG_RTC=y
+CONFIG_MAC_PARTITION=y
+CONFIG_VIDEO_PVRUSB2=m
+CONFIG_RIO=m
+CONFIG_GAMEPORT_FM801=m
+CONFIG_CAPI_EICON=y
+CONFIG_NETDEVICES=y
+CONFIG_USB=y
+CONFIG_ECONET_AUNUDP=y
+CONFIG_IP_VS_FTP=m
+CONFIG_INET_TCP_DIAG=y
+CONFIG_YENTA_TOSHIBA=y
+CONFIG_JFFS2_ZLIB=y
+CONFIG_USB_GADGET_DUALSPEED=y
+CONFIG_SENSORS_CORETEMP=m
+CONFIG_JOYSTICK_STINGER=m
+CONFIG_CAPI_TRACE=y
+CONFIG_HDLC_CISCO=m
+CONFIG_MLX4_DEBUG=y
+CONFIG_CHELSIO_T1=m
+CONFIG_HAMACHI=m
+CONFIG_PARIDE_PCD=m
+CONFIG_HOTPLUG_PCI_SHPC=m
+CONFIG_SND_USB_CAIAQ=m
+CONFIG_SND_HDA_INTEL=m
+CONFIG_DVB_TUA6100=m
+CONFIG_DVB_BUDGET_AV=m
+CONFIG_SPI=y
+CONFIG_SOFT_WATCHDOG=m
+CONFIG_PPP_SYNC_TTY=m
+CONFIG_ARCNET_COM90xxIO=m
+CONFIG_SCSI_ACARD=y
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS=0x0
+CONFIG_TOI=y
+CONFIG_EFI_PARTITION=y
+CONFIG_NLS=y
+CONFIG_UIO=m
+CONFIG_SENSORS_DS1621=m
+CONFIG_W1_MASTER_MATROX=m
+CONFIG_CHELSIO_T3=m
+CONFIG_ATM_CLIP_NO_ICMP=y
+CONFIG_EXT4DEV_FS_XATTR=y
+CONFIG_KVM=y
+CONFIG_FB_VOODOO1=m
+CONFIG_VIDEO_BUF_DVB=m
+CONFIG_I2C_VIAPRO=m
+CONFIG_SERIAL_8250=y
+CONFIG_CDROM_PKTCDVD_WCACHE=y
+CONFIG_LEDS_TRIGGERS=y
+CONFIG_PNP=y
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_USB_FTDI_ELAN=m
+CONFIG_SND_SEQUENCER=m
+CONFIG_ISDN_DRV_AVMB1_T1PCI=m
+CONFIG_ARCNET_COM20020=m
+CONFIG_MTD_CFI_I1=y
+CONFIG_TCP_MD5SIG=y
+CONFIG_MMU=y
+CONFIG_DVB_ISL6421=m
+CONFIG_VIDEO_STRADIS=m
+CONFIG_HW_RANDOM_AMD=y
+CONFIG_INPUT_FF_MEMLESS=y
+CONFIG_USB_NET_DM9601=m
+CONFIG_B43_PIO=y
+CONFIG_ARCNET_CAP=m
+CONFIG_PATA_IT8213=y
+CONFIG_SCSI_SYM53C8XX_MAX_TAGS=64
+CONFIG_BLK_DEV_RAM_SIZE=16384
+CONFIG_MTD_CFI_I2=y
+CONFIG_PPP=m
+CONFIG_SMP=y
+CONFIG_USB_AUERSWALD=m
+CONFIG_SENSORS_W83793=m
+CONFIG_B43LEGACY_PCI_AUTOSELECT=y
+CONFIG_IPX=m
+CONFIG_IPV6_SUBTREES=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_EXT2_FS_SECURITY=y
+CONFIG_USB_IBMCAM=m
+CONFIG_VIDEO_CPIA_PP=m
+CONFIG_VIDEO_TVAUDIO=m
+CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
+CONFIG_SK98LIN=m
+CONFIG_PATA_SERVERWORKS=y
+CONFIG_PATA_RZ1000=y
+CONFIG_IOSCHED_AS=y
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_VIDEO_CPIA=m
+CONFIG_SENSORS_ASB100=m
+CONFIG_W1_SLAVE_SMEM=m
+CONFIG_NET_PCMCIA=y
+CONFIG_8139TOO_TUNE_TWISTER=y
+CONFIG_BT_HCIVHCI=m
+CONFIG_NET_ACT_PEDIT=m
+CONFIG_DECNET_ROUTER=y
+CONFIG_IP_NF_TARGET_LOG=m
+CONFIG_TCP_CONG_YEAH=m
+CONFIG_ACPI_VIDEO=m
+CONFIG_BASE_SMALL=0
+CONFIG_SND_CS46XX=m
+CONFIG_DVB_VES1820=m
+CONFIG_MOXA_INTELLIO=m
+CONFIG_P54_PCI=m
+CONFIG_PRISM54=m
+CONFIG_AUDIT_ARCH=y
+CONFIG_RTC_DRV_DS1307=m
+CONFIG_USB_GADGET=m
+CONFIG_SND_ENS1370=m
+CONFIG_SND_AC97_CODEC=m
+CONFIG_TABLET_USB_ACECAD=m
+CONFIG_JOYSTICK_WARRIOR=m
+CONFIG_MTD_GEN_PROBE=m
+CONFIG_IRDA_CACHE_LAST_LSAP=y
+CONFIG_ACPI_SLEEP=y
+CONFIG_LDM_PARTITION=y
+CONFIG_XFS_RT=y
+CONFIG_USB_SERIAL_CYBERJACK=m
+CONFIG_SND_ENS1371=m
+CONFIG_DVB_BUDGET=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
+CONFIG_BINFMT_ELF=y
+CONFIG_PCI_DIRECT=y
+CONFIG_SQUASHFS_EMBEDDED=y
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+CONFIG_SBC8360_WDT=m
+CONFIG_JOYSTICK_JOYDUMP=m
+CONFIG_JOYSTICK_TMDC=m
+CONFIG_NORTEL_HERMES=m
+CONFIG_TUN=m
+CONFIG_I2O_CONFIG_OLD_IOCTL=y
+CONFIG_MTD_DOCPROBE_ADDRESS=0x0000
+CONFIG_BT_HCIUSB_SCO=y
+CONFIG_RTC_DRV_DS1742=m
+CONFIG_RTC_DRV_DS1553=m
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_BACKLIGHT_PROGEAR=m
+CONFIG_DVB_TTUSB_DEC=m
+CONFIG_ITCO_VENDOR_SUPPORT=y
+CONFIG_INPUT_ATI_REMOTE=m
+CONFIG_SERIO_I8042=y
+CONFIG_NET_EMATCH=y
+CONFIG_DECNET_NF_GRABULATOR=m
+CONFIG_SND_CMIPCI=m
+CONFIG_SND_PCM_OSS_PLUGINS=y
+CONFIG_USB_SN9C102=m
+CONFIG_DRM_SAVAGE=m
+CONFIG_LEGACY_PTY_COUNT=256
+CONFIG_JOYSTICK_TWIDJOY=m
+CONFIG_SCSI_ISCSI_ATTRS=y
+CONFIG_MTD_REDBOOT_PARTS_READONLY=y
+CONFIG_ESI_DONGLE=m
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_PCIEAER=y
+CONFIG_RTC_DRV_DS1672=m
+CONFIG_USB_DABUSB=m
+CONFIG_DVB_USB_VP7045=m
+CONFIG_VIDEO_SAA7134_ALSA=m
+CONFIG_SENSORS_ATXP1=m
+CONFIG_INPUT_ATLAS_BTNS=m
+CONFIG_RT73USB=m
+CONFIG_8139TOO_8129=y
+CONFIG_X86_MCE=y
+CONFIG_USB_SERIAL_VISOR=m
+CONFIG_DVB_NXT6000=m
+CONFIG_SENSORS_VT1211=m
+CONFIG_DRM_RADEON=m
+CONFIG_USB_NET_GL620A=m
+CONFIG_SCSI_LOWLEVEL=y
+CONFIG_BITREVERSE=y
+CONFIG_TEXTSEARCH=y
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_IP_VS_WRR=m
+CONFIG_TCP_CONG_HTCP=m
+CONFIG_LOG_BUF_SHIFT=15
+CONFIG_SGI_PARTITION=y
+CONFIG_EXT4DEV_FS=y
+CONFIG_USB_NET2280=m
+CONFIG_FB_3DFX=m
+CONFIG_SENSORS_HDAPS=m
+CONFIG_W83877F_WDT=m
+CONFIG_MOXA_SMARTIO_NEW=m
+CONFIG_INPUT_YEALINK=m
+CONFIG_JOYSTICK_XPAD=m
+CONFIG_MTD_CONCAT=y
+CONFIG_NET_SCH_NETEM=m
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_HAVE_ARCH_EARLY_PFN_TO_NID=y
+CONFIG_SLUB_DEBUG=y
+CONFIG_IA32_EMULATION=y
+CONFIG_ARCH_POPULATES_NODE_MAP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_USB_HIDDEV=y
+CONFIG_I2C_VIA=m
+CONFIG_W83977F_WDT=m
+CONFIG_JOYSTICK_GRIP_MP=m
+CONFIG_LEDS_CLASS=m
+CONFIG_BAYCOM_PAR=m
+CONFIG_NETFILTER_XT_MATCH_DCCP=m
+CONFIG_NFS_V3_ACL=y
+CONFIG_AUTOFS4_FS=y
+CONFIG_SND_RME9652=m
+CONFIG_SND_INDIGO=m
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_VIDEO_UPD64031A=m
+CONFIG_USB_BELKIN=y
+CONFIG_8139_OLD_RX_RESET=y
+CONFIG_NF_CT_NETLINK=m
+CONFIG_NCPFS_PACKET_SIGNING=y
+CONFIG_SND_USB_AUDIO=m
+CONFIG_I2C_I810=m
+CONFIG_I2C_I801=m
+CONFIG_PCI_HERMES=m
+CONFIG_SECURITY_SELINUX=y
diff -urpN linux-2.6.23-sabayon/include/config/auto.conf.cmd testtry/include/config/auto.conf.cmd
--- linux-2.6.23-sabayon/include/config/auto.conf.cmd	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/config/auto.conf.cmd	2007-10-15 16:44:56.000000000 +0000
@@ -0,0 +1,301 @@
+deps_config := \
+	lib/Kconfig \
+	arch/s390/crypto/Kconfig \
+	drivers/crypto/Kconfig \
+	crypto/async_tx/Kconfig \
+	crypto/Kconfig \
+	security/selinux/Kconfig \
+	security/Kconfig \
+	lib/Kconfig.debug \
+	arch/x86_64/Kconfig.debug \
+	arch/x86_64/oprofile/Kconfig \
+	fs/dlm/Kconfig \
+	fs/nls/Kconfig \
+	fs/partitions/Kconfig \
+	fs/ncpfs/Kconfig \
+	fs/gfs2/Kconfig \
+	fs/xfs/Kconfig \
+	fs/Kconfig \
+	drivers/firmware/Kconfig \
+	drivers/lguest/Kconfig \
+	drivers/uio/Kconfig \
+	drivers/kvm/Kconfig \
+	drivers/auxdisplay/Kconfig \
+	drivers/dma/Kconfig \
+	drivers/rtc/Kconfig \
+	drivers/edac/Kconfig \
+	drivers/infiniband/ulp/iser/Kconfig \
+	drivers/infiniband/ulp/srp/Kconfig \
+	drivers/infiniband/ulp/ipoib/Kconfig \
+	drivers/infiniband/hw/mlx4/Kconfig \
+	drivers/infiniband/hw/cxgb3/Kconfig \
+	drivers/infiniband/hw/amso1100/Kconfig \
+	drivers/infiniband/hw/ehca/Kconfig \
+	drivers/infiniband/hw/ipath/Kconfig \
+	drivers/infiniband/hw/mthca/Kconfig \
+	drivers/infiniband/Kconfig \
+	drivers/leds/Kconfig \
+	drivers/mmc/host/Kconfig \
+	drivers/mmc/card/Kconfig \
+	drivers/mmc/core/Kconfig \
+	drivers/mmc/Kconfig \
+	drivers/usb/gadget/Kconfig \
+	drivers/usb/atm/Kconfig \
+	drivers/usb/misc/sisusbvga/Kconfig \
+	drivers/usb/misc/Kconfig \
+	drivers/usb/serial/Kconfig \
+	drivers/usb/mon/Kconfig \
+	drivers/usb/image/Kconfig \
+	drivers/usb/storage/Kconfig \
+	drivers/usb/class/Kconfig \
+	drivers/usb/host/Kconfig \
+	drivers/usb/core/Kconfig \
+	drivers/usb/Kconfig \
+	drivers/hid/usbhid/Kconfig \
+	drivers/hid/Kconfig \
+	sound/oss/Kconfig \
+	sound/soc/codecs/Kconfig \
+	sound/soc/sh/Kconfig \
+	sound/soc/s3c24xx/Kconfig \
+	sound/soc/pxa/Kconfig \
+	sound/soc/at91/Kconfig \
+	sound/soc/Kconfig \
+	sound/parisc/Kconfig \
+	sound/sparc/Kconfig \
+	sound/pcmcia/Kconfig \
+	sound/usb/Kconfig \
+	sound/sh/Kconfig \
+	sound/mips/Kconfig \
+	sound/arm/Kconfig \
+	sound/aoa/soundbus/Kconfig \
+	sound/aoa/codecs/Kconfig \
+	sound/aoa/fabrics/Kconfig \
+	sound/aoa/Kconfig \
+	sound/ppc/Kconfig \
+	sound/pci/Kconfig \
+	sound/isa/Kconfig \
+	sound/drivers/Kconfig \
+	sound/core/Kconfig \
+	sound/oss/dmasound/Kconfig \
+	sound/Kconfig \
+	drivers/video/logo/Kconfig \
+	drivers/video/console/Kconfig \
+	drivers/video/omap/Kconfig \
+	drivers/video/geode/Kconfig \
+	drivers/video/display/Kconfig \
+	drivers/video/backlight/Kconfig \
+	drivers/video/Kconfig \
+	drivers/media/common/Kconfig \
+	drivers/media/dvb/frontends/Kconfig \
+	drivers/media/dvb/pluto2/Kconfig \
+	drivers/media/dvb/bt8xx/Kconfig \
+	drivers/media/dvb/b2c2/Kconfig \
+	drivers/media/dvb/cinergyT2/Kconfig \
+	drivers/media/dvb/ttusb-dec/Kconfig \
+	drivers/media/dvb/ttusb-budget/Kconfig \
+	drivers/media/dvb/dvb-usb/Kconfig \
+	drivers/media/dvb/ttpci/Kconfig \
+	drivers/media/dvb/dvb-core/Kconfig \
+	drivers/media/dvb/Kconfig \
+	drivers/media/radio/Kconfig \
+	drivers/media/video/pwc/Kconfig \
+	drivers/media/video/zc0301/Kconfig \
+	drivers/media/video/sn9c102/Kconfig \
+	drivers/media/video/et61x251/Kconfig \
+	drivers/media/video/usbvideo/Kconfig \
+	drivers/media/video/usbvision/Kconfig \
+	drivers/media/video/em28xx/Kconfig \
+	drivers/media/video/pvrusb2/Kconfig \
+	drivers/media/video/ivtv/Kconfig \
+	drivers/media/video/cx88/Kconfig \
+	drivers/media/video/saa7134/Kconfig \
+	drivers/media/video/cpia2/Kconfig \
+	drivers/media/video/bt8xx/Kconfig \
+	drivers/media/video/cx25840/Kconfig \
+	drivers/media/video/Kconfig \
+	drivers/media/Kconfig \
+	drivers/mfd/Kconfig \
+	drivers/ssb/Kconfig \
+	drivers/hwmon/Kconfig \
+	drivers/power/Kconfig \
+	drivers/w1/slaves/Kconfig \
+	drivers/w1/masters/Kconfig \
+	drivers/w1/Kconfig \
+	drivers/spi/Kconfig \
+	drivers/i2c/chips/Kconfig \
+	drivers/i2c/busses/Kconfig \
+	drivers/i2c/algos/Kconfig \
+	drivers/i2c/Kconfig \
+	drivers/s390/char/Kconfig \
+	drivers/char/tpm/Kconfig \
+	drivers/char/pcmcia/Kconfig \
+	drivers/char/drm/Kconfig \
+	drivers/char/agp/Kconfig \
+	drivers/char/hw_random/Kconfig \
+	drivers/char/watchdog/Kconfig \
+	drivers/char/ipmi/Kconfig \
+	drivers/serial/Kconfig \
+	drivers/char/Kconfig \
+	drivers/input/gameport/Kconfig \
+	drivers/input/serio/Kconfig \
+	drivers/input/misc/Kconfig \
+	drivers/input/touchscreen/Kconfig \
+	drivers/input/tablet/Kconfig \
+	drivers/input/joystick/iforce/Kconfig \
+	drivers/input/joystick/Kconfig \
+	drivers/input/mouse/Kconfig \
+	drivers/input/keyboard/Kconfig \
+	drivers/input/Kconfig \
+	drivers/telephony/Kconfig \
+	drivers/isdn/hardware/eicon/Kconfig \
+	drivers/isdn/hardware/avm/Kconfig \
+	drivers/isdn/hardware/Kconfig \
+	drivers/isdn/capi/Kconfig \
+	drivers/isdn/gigaset/Kconfig \
+	drivers/isdn/hysdn/Kconfig \
+	drivers/isdn/act2000/Kconfig \
+	drivers/isdn/sc/Kconfig \
+	drivers/isdn/pcbit/Kconfig \
+	drivers/isdn/icn/Kconfig \
+	drivers/isdn/hisax/Kconfig \
+	drivers/isdn/i4l/Kconfig \
+	drivers/isdn/Kconfig \
+	drivers/s390/net/Kconfig \
+	drivers/atm/Kconfig \
+	drivers/net/wan/Kconfig \
+	drivers/net/pcmcia/Kconfig \
+	drivers/net/usb/Kconfig \
+	drivers/net/wireless/Kconfig.ipw3945 \
+	drivers/net/wireless/zd1211rw-mac80211/Kconfig \
+	drivers/net/wireless/iwlwifi/Kconfig \
+	drivers/net/wireless/rt2x00/Kconfig \
+	drivers/net/wireless/zd1211rw/Kconfig \
+	drivers/net/wireless/b43legacy/Kconfig \
+	drivers/net/wireless/b43/Kconfig \
+	drivers/net/wireless/bcm43xx/Kconfig \
+	drivers/net/wireless/acx/Kconfig \
+	drivers/net/wireless/hostap/Kconfig \
+	drivers/net/wireless/Kconfig \
+	drivers/net/tokenring/Kconfig \
+	drivers/net/ixp2000/Kconfig \
+	drivers/net/fs_enet/Kconfig \
+	drivers/net/fec_8xx/Kconfig \
+	drivers/net/tulip/Kconfig \
+	drivers/net/arm/Kconfig \
+	drivers/net/phy/Kconfig \
+	drivers/net/arcnet/Kconfig \
+	drivers/net/Kconfig \
+	drivers/macintosh/Kconfig \
+	drivers/message/i2o/Kconfig \
+	drivers/firewire/Kconfig \
+	drivers/ieee1394/Kconfig \
+	drivers/message/fusion/Kconfig \
+	drivers/md/Kconfig \
+	drivers/ata/Kconfig \
+	drivers/scsi/pcmcia/Kconfig \
+	drivers/scsi/arm/Kconfig \
+	drivers/scsi/qla4xxx/Kconfig \
+	drivers/scsi/qla2xxx/Kconfig \
+	drivers/scsi/megaraid/Kconfig.megaraid \
+	drivers/scsi/aic94xx/Kconfig \
+	drivers/scsi/aic7xxx/Kconfig.aic79xx \
+	drivers/scsi/aic7xxx/Kconfig.aic7xxx \
+	drivers/scsi/libsas/Kconfig \
+	drivers/scsi/Kconfig \
+	drivers/ide/Kconfig \
+	drivers/misc/Kconfig \
+	drivers/s390/block/Kconfig \
+	drivers/block/paride/Kconfig \
+	drivers/block/Kconfig \
+	drivers/pnp/pnpacpi/Kconfig \
+	drivers/pnp/pnpbios/Kconfig \
+	drivers/pnp/isapnp/Kconfig \
+	drivers/pnp/Kconfig \
+	drivers/parport/Kconfig \
+	drivers/of/Kconfig \
+	drivers/mtd/ubi/Kconfig.debug \
+	drivers/mtd/ubi/Kconfig \
+	drivers/mtd/onenand/Kconfig \
+	drivers/mtd/nand/Kconfig \
+	drivers/mtd/devices/Kconfig \
+	drivers/mtd/maps/Kconfig \
+	drivers/mtd/chips/Kconfig \
+	drivers/mtd/Kconfig \
+	drivers/connector/Kconfig \
+	drivers/base/Kconfig \
+	drivers/Kconfig \
+	net/9p/Kconfig \
+	net/rfkill/Kconfig \
+	net/ieee80211/softmac/Kconfig \
+	net/ieee80211/Kconfig \
+	net/mac80211/Kconfig \
+	net/wireless/Kconfig \
+	net/rxrpc/Kconfig \
+	drivers/bluetooth/Kconfig \
+	net/bluetooth/hidp/Kconfig \
+	net/bluetooth/cmtp/Kconfig \
+	net/bluetooth/bnep/Kconfig \
+	net/bluetooth/rfcomm/Kconfig \
+	net/bluetooth/Kconfig \
+	drivers/net/irda/Kconfig \
+	net/irda/ircomm/Kconfig \
+	net/irda/irnet/Kconfig \
+	net/irda/irlan/Kconfig \
+	net/irda/Kconfig \
+	drivers/net/hamradio/Kconfig \
+	net/ax25/Kconfig \
+	net/sched/Kconfig \
+	net/wanrouter/Kconfig \
+	net/econet/Kconfig \
+	net/lapb/Kconfig \
+	net/x25/Kconfig \
+	drivers/net/appletalk/Kconfig \
+	net/ipx/Kconfig \
+	net/llc/Kconfig \
+	net/decnet/Kconfig \
+	net/8021q/Kconfig \
+	net/bridge/Kconfig \
+	net/atm/Kconfig \
+	net/tipc/Kconfig \
+	net/sctp/Kconfig \
+	net/dccp/ccids/Kconfig \
+	net/dccp/Kconfig \
+	net/bridge/netfilter/Kconfig \
+	net/decnet/netfilter/Kconfig \
+	net/ipv6/netfilter/Kconfig \
+	net/ipv4/netfilter/Kconfig \
+	net/netfilter/Kconfig \
+	net/netlabel/Kconfig \
+	net/ipv6/Kconfig \
+	net/ipv4/ipvs/Kconfig \
+	net/ipv4/Kconfig \
+	net/iucv/Kconfig \
+	net/xfrm/Kconfig \
+	net/unix/Kconfig \
+	net/packet/Kconfig \
+	net/Kconfig \
+	fs/Kconfig.binfmt \
+	drivers/pci/hotplug/Kconfig \
+	drivers/pcmcia/Kconfig \
+	drivers/pci/Kconfig \
+	drivers/pci/pcie/aer/Kconfig \
+	drivers/pci/pcie/Kconfig \
+	drivers/cpuidle/Kconfig \
+	drivers/cpufreq/Kconfig \
+	arch/x86_64/kernel/cpufreq/Kconfig \
+	drivers/acpi/Kconfig \
+	kernel/power/Kconfig \
+	kernel/Kconfig.hz \
+	mm/Kconfig \
+	kernel/Kconfig.preempt \
+	kernel/time/Kconfig \
+	block/Kconfig.iosched \
+	block/Kconfig \
+	usr/Kconfig \
+	init/Kconfig \
+	arch/x86_64/Kconfig
+
+include/config/auto.conf: \
+	$(deps_config)
+
+$(deps_config): ;
diff -urpN linux-2.6.23-sabayon/include/config/kernel.release testtry/include/config/kernel.release
--- linux-2.6.23-sabayon/include/config/kernel.release	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/config/kernel.release	2007-10-15 16:53:42.000000000 +0000
@@ -0,0 +1 @@
+2.6.23-sabayon
diff -urpN linux-2.6.23-sabayon/include/linux/autoconf.h testtry/include/linux/autoconf.h
--- linux-2.6.23-sabayon/include/linux/autoconf.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/linux/autoconf.h	2007-10-15 16:44:56.000000000 +0000
@@ -0,0 +1,2536 @@
+/*
+ * Automatically generated C config: don't edit
+ * Linux kernel version: 2.6.23-sabayon
+ * Mon Oct 15 16:44:56 2007
+ */
+#define AUTOCONF_INCLUDED
+#define CONFIG_USB_SISUSBVGA_MODULE 1
+#define CONFIG_USB_PHIDGETMOTORCONTROL_MODULE 1
+#define CONFIG_VIDEO_V4L1_COMPAT 1
+#define CONFIG_ROADRUNNER_MODULE 1
+#define CONFIG_PCMCIA_FMVJ18X_MODULE 1
+#define CONFIG_BLK_CPQ_DA 1
+#define CONFIG_BLK_DEV_FD 1
+#define CONFIG_AX25_MODULE 1
+#define CONFIG_ACPI_AC_MODULE 1
+#define CONFIG_PM_STD_PARTITION ""
+#define CONFIG_SECURITY_NETWORK 1
+#define CONFIG_ULTRIX_PARTITION 1
+#define CONFIG_OSF_PARTITION 1
+#define CONFIG_RTC_DRV_M41T80_MODULE 1
+#define CONFIG_USB_LEGOTOWER_MODULE 1
+#define CONFIG_SND_SB_COMMON_MODULE 1
+#define CONFIG_FB_TRIDENT_MODULE 1
+#define CONFIG_DVB_PLUTO2_MODULE 1
+#define CONFIG_GAMEPORT_NS558_MODULE 1
+#define CONFIG_JOYSTICK_GRIP_MODULE 1
+#define CONFIG_RT2X00_LIB_PCI_MODULE 1
+#define CONFIG_BONDING_MODULE 1
+#define CONFIG_MTD_ABSENT_MODULE 1
+#define CONFIG_INET_XFRM_TUNNEL_MODULE 1
+#define CONFIG_CRYPTO_ANUBIS_MODULE 1
+#define CONFIG_JBD2 1
+#define CONFIG_P54_USB_MODULE 1
+#define CONFIG_TCP_CONG_ADVANCED 1
+#define CONFIG_SECURITY_SELINUX_BOOTPARAM 1
+#define CONFIG_JFFS2_CMODE_PRIORITY 1
+#define CONFIG_USB_SERIAL_IR_MODULE 1
+#define CONFIG_SND_AZT3328_MODULE 1
+#define CONFIG_TCP_CONG_SCALABLE_MODULE 1
+#define CONFIG_NONIRQ_WAKEUP 1
+#define CONFIG_JFS_POSIX_ACL 1
+#define CONFIG_AUXDISPLAY 1
+#define CONFIG_FONT_MINI_4x6 1
+#define CONFIG_DVB_USB_AF9005_REMOTE_MODULE 1
+#define CONFIG_SENSORS_VT8231_MODULE 1
+#define CONFIG_RIO_OLDPCI 1
+#define CONFIG_ISDN_DIVAS_MODULE 1
+#define CONFIG_TIPC_CLUSTERS 1
+#define CONFIG_IP6_NF_TARGET_REJECT_MODULE 1
+#define CONFIG_NF_CT_ACCT 1
+#define CONFIG_TCP_CONG_VENO_MODULE 1
+#define CONFIG_CARDBUS 1
+#define CONFIG_X86_POWERNOW_K8_ACPI 1
+#define CONFIG_ACPI_EC 1
+#define CONFIG_USB_SERIAL_TI_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_C4_MODULE 1
+#define CONFIG_INPUT_POLLDEV_MODULE 1
+#define CONFIG_SONYPI_COMPAT 1
+#define CONFIG_BT_HCIUART_MODULE 1
+#define CONFIG_IP_NF_TARGET_TTL_MODULE 1
+#define CONFIG_NETFILTER_NETLINK_QUEUE_MODULE 1
+#define CONFIG_INET6_XFRM_MODE_BEET_MODULE 1
+#define CONFIG_CRYPTO_MD4 1
+#define CONFIG_TASK_XACCT 1
+#define CONFIG_ARCH_MAY_HAVE_PC_FDC 1
+#define CONFIG_ASYNC_CORE 1
+#define CONFIG_VIDEO_MEYE_MODULE 1
+#define CONFIG_IPW2200_QOS 1
+#define CONFIG_E1000_MODULE 1
+#define CONFIG_ARCNET_RAW_MODULE 1
+#define CONFIG_I2O_EXT_ADAPTEC_DMA64 1
+#define CONFIG_MTD_NAND_DISKONCHIP_PROBE_HIGH 1
+#define CONFIG_NF_NAT_PROTO_GRE_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_PHYSDEV_MODULE 1
+#define CONFIG_CRYPTO_MD5 1
+#define CONFIG_ARCH_DISCONTIGMEM_ENABLE 1
+#define CONFIG_CRYPTO_AES_X86_64_MODULE 1
+#define CONFIG_PROC_KCORE 1
+#define CONFIG_USB_GADGET_NET2280 1
+#define CONFIG_USB_IOWARRIOR_MODULE 1
+#define CONFIG_VIDEO_BTCX_MODULE 1
+#define CONFIG_PCMCIA_SMC91C92_MODULE 1
+#define CONFIG_BLK_DEV_DM 1
+#define CONFIG_BLK_DEV_MD 1
+#define CONFIG_SCSI_FC_ATTRS 1
+#define CONFIG_IRDA_ULTRA 1
+#define CONFIG_IP_NF_TARGET_TOS_MODULE 1
+#define CONFIG_SND_EMU10K1_MODULE 1
+#define CONFIG_DVB_TDA10021_MODULE 1
+#define CONFIG_I2C_SAVAGE4_MODULE 1
+#define CONFIG_SYNCLINKMP_MODULE 1
+#define CONFIG_PPP_MULTILINK 1
+#define CONFIG_TMD_HERMES_MODULE 1
+#define CONFIG_SCSI_DC390T 1
+#define CONFIG_NET_CLS_RSVP6_MODULE 1
+#define CONFIG_TIPC_NODES 255
+#define CONFIG_CRYPTO_CBC 1
+#define CONFIG_ACORN_PARTITION_ADFS 1
+#define CONFIG_USB_SERIAL_MODULE 1
+#define CONFIG_DVB_USB_CXUSB_MODULE 1
+#define CONFIG_USB_W9968CF_MODULE 1
+#define CONFIG_SERIAL_JSM_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_IRTOUCH 1
+#define CONFIG_USB_RTL8150_MODULE 1
+#define CONFIG_MTD_MTDRAM_MODULE 1
+#define CONFIG_NF_CONNTRACK_NETBIOS_NS_MODULE 1
+#define CONFIG_ACPI_POWER 1
+#define CONFIG_GFS2_FS_MODULE 1
+#define CONFIG_SND_DARLA20_MODULE 1
+#define CONFIG_DVB_TDA10023_MODULE 1
+#define CONFIG_DVB_STV0297_MODULE 1
+#define CONFIG_VIDEO_ZORAN_LML33_MODULE 1
+#define CONFIG_HOSTAP_PCI_MODULE 1
+#define CONFIG_CASSINI_MODULE 1
+#define CONFIG_THINKPAD_ACPI_BAY 1
+#define CONFIG_CRYPTO_ECB 1
+#define CONFIG_IPV6_MULTIPLE_TABLES 1
+#define CONFIG_SECCOMP 1
+#define CONFIG_KS0108_PORT 0x378
+#define CONFIG_USB_SERIAL_WHITEHEAT_MODULE 1
+#define CONFIG_VIDEO_W9966_MODULE 1
+#define CONFIG_SERIAL_8250_SHARE_IRQ 1
+#define CONFIG_X25_ASY_MODULE 1
+#define CONFIG_NETXEN_NIC_MODULE 1
+#define CONFIG_PATA_SIL680 1
+#define CONFIG_PATA_ARTOP 1
+#define CONFIG_PNPACPI 1
+#define CONFIG_BT_HCIBLUECARD_MODULE 1
+#define CONFIG_OLD_BELKIN_DONGLE_MODULE 1
+#define CONFIG_IP_DCCP_CCID3_RTO 100
+#define CONFIG_IP6_NF_RAW_MODULE 1
+#define CONFIG_ENABLE_MUST_CHECK 1
+#define CONFIG_RTC_INTF_PROC 1
+#define CONFIG_SND_YMFPCI_MODULE 1
+#define CONFIG_DVB_STV0299_MODULE 1
+#define CONFIG_DVB_TDA826X_MODULE 1
+#define CONFIG_SPI_BUTTERFLY_MODULE 1
+#define CONFIG_I2C_NFORCE2_MODULE 1
+#define CONFIG_RT61PCI_RFKILL 1
+#define CONFIG_ZD1211RW_MODULE 1
+#define CONFIG_NET_POCKET 1
+#define CONFIG_EEPRO100_MODULE 1
+#define CONFIG_WINBOND_840_MODULE 1
+#define CONFIG_PATA_MPIIX 1
+#define CONFIG_MTD_MAP_BANK_WIDTH_1 1
+#define CONFIG_X86_LOCAL_APIC 1
+#define CONFIG_EVENTFD 1
+#define CONFIG_EXT2_FS_XATTR 1
+#define CONFIG_EDAC 1
+#define CONFIG_DVB_TDA827X_MODULE 1
+#define CONFIG_ROCKETPORT_MODULE 1
+#define CONFIG_USB_KAWETH_MODULE 1
+#define CONFIG_DL2K_MODULE 1
+#define CONFIG_BLK_DEV_SD 1
+#define CONFIG_HAS_DMA 1
+#define CONFIG_RAID_ATTRS 1
+#define CONFIG_MTD_MAP_BANK_WIDTH_2 1
+#define CONFIG_LLC2_MODULE 1
+#define CONFIG_IP6_NF_MATCH_FRAG_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_DSCP_MODULE 1
+#define CONFIG_EXT3_FS_XATTR 1
+#define CONFIG_RTC_DRV_M48T59_MODULE 1
+#define CONFIG_RTC_DRV_M48T86_MODULE 1
+#define CONFIG_SND_DARLA24_MODULE 1
+#define CONFIG_VIDEO_BT819_MODULE 1
+#define CONFIG_LP_CONSOLE 1
+#define CONFIG_FUSION_LAN 1
+#define CONFIG_NETFILTER_XT_MATCH_MARK_MODULE 1
+#define CONFIG_CRC7_MODULE 1
+#define CONFIG_SUN_PARTITION 1
+#define CONFIG_CODA_FS 1
+#define CONFIG_NFS_COMMON 1
+#define CONFIG_USB_CXACRU_MODULE 1
+#define CONFIG_SND_VIA82XX_MODEM_MODULE 1
+#define CONFIG_SND_KORG1212_FIRMWARE_IN_KERNEL 1
+#define CONFIG_VIDEO_BT856_MODULE 1
+#define CONFIG_RT2X00_LIB_USB_MODULE 1
+#define CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS 16
+#define CONFIG_MTD_MAP_BANK_WIDTH_4 1
+#define CONFIG_NET_PKTGEN_MODULE 1
+#define CONFIG_X86_TSC 1
+#define CONFIG_VIDEO_BT848_MODULE 1
+#define CONFIG_VIDEO_BT866_MODULE 1
+#define CONFIG_SERIO_SERPORT 1
+#define CONFIG_JOYSTICK_MAGELLAN_MODULE 1
+#define CONFIG_PATA_HPT366 1
+#define CONFIG_CPU_FREQ_STAT 1
+#define CONFIG_USB_SERIAL_ARK3116_MODULE 1
+#define CONFIG_HID_PID 1
+#define CONFIG_HW_CONSOLE 1
+#define CONFIG_ATM_FORE200E_MAYBE_MODULE 1
+#define CONFIG_NATSEMI_MODULE 1
+#define CONFIG_SCSI_IPR_DUMP 1
+#define CONFIG_MTD_DOCPROBE_HIGH 1
+#define CONFIG_NET_EMATCH_U32_MODULE 1
+#define CONFIG_HOTPLUG_PCI_ACPI_IBM_MODULE 1
+#define CONFIG_HPET_TIMER 1
+#define CONFIG_CIFS_EXPERIMENTAL 1
+#define CONFIG_XFS_POSIX_ACL 1
+#define CONFIG_SENSORS_SMSC47B397_MODULE 1
+#define CONFIG_HDLC_FR_MODULE 1
+#define CONFIG_ATL1_MODULE 1
+#define CONFIG_IP_DCCP_MODULE 1
+#define CONFIG_CIFS_STATS 1
+#define CONFIG_NFSD_V3 1
+#define CONFIG_SND_ATIIXP_MODULE 1
+#define CONFIG_DVB_TDA10086_MODULE 1
+#define CONFIG_TOUCHSCREEN_TOUCHWIN_MODULE 1
+#define CONFIG_ATM_IDT77252_USE_SUNI 1
+#define CONFIG_I2O_BUS 1
+#define CONFIG_PARIDE_ON20_MODULE 1
+#define CONFIG_NF_NAT_IRC_MODULE 1
+#define CONFIG_K8_NUMA 1
+#define CONFIG_NFSD_V4 1
+#define CONFIG_VIDEO_VIVI_MODULE 1
+#define CONFIG_I2C_ALGOPCA_MODULE 1
+#define CONFIG_CHR_DEV_SG 1
+#define CONFIG_IEEE80211_MODULE 1
+#define CONFIG_IP_NF_MATCH_ADDRTYPE_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_PKTTYPE_MODULE 1
+#define CONFIG_CRYPTO_ABLKCIPHER_MODULE 1
+#define CONFIG_VIDEO_ZORAN_AVS6EYES_MODULE 1
+#define CONFIG_PPP_FILTER 1
+#define CONFIG_USB_NET_PLUSB_MODULE 1
+#define CONFIG_PATA_IT821X 1
+#define CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE 1
+#define CONFIG_NF_NAT_H323_MODULE 1
+#define CONFIG_CRYPTO_CRYPTD_MODULE 1
+#define CONFIG_XOR_BLOCKS 1
+#define CONFIG_ADFS_FS_MODULE 1
+#define CONFIG_FB_VESA 1
+#define CONFIG_SENSORS_SMSC47M192_MODULE 1
+#define CONFIG_SPI_SPIDEV_MODULE 1
+#define CONFIG_KEYBOARD_ATKBD 1
+#define CONFIG_FARSYNC_MODULE 1
+#define CONFIG_IPW3945_SIM_RX 1
+#define CONFIG_NETDEV_10000 1
+#define CONFIG_FUSION_CTL 1
+#define CONFIG_MTD_CFI_MODULE 1
+#define CONFIG_ALI_FIR_MODULE 1
+#define CONFIG_NET_CLS_ROUTE 1
+#define CONFIG_NF_CT_PROTO_SCTP_MODULE 1
+#define CONFIG_CIFS_POSIX 1
+#define CONFIG_CIFS_XATTR 1
+#define CONFIG_DRM_MGA_MODULE 1
+#define CONFIG_AGP_VIA_MODULE 1
+#define CONFIG_FDDI 1
+#define CONFIG_PCMCIA_XIRC2PS_MODULE 1
+#define CONFIG_ACX_PCI 1
+#define CONFIG_PLX_HERMES_MODULE 1
+#define CONFIG_3C359_MODULE 1
+#define CONFIG_PHANTOM_MODULE 1
+#define CONFIG_BLK_DEV 1
+#define CONFIG_SPI_MASTER 1
+#define CONFIG_MTD_JEDECPROBE_MODULE 1
+#define CONFIG_BRIDGE_EBT_BROUTE_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_TCPMSS_MODULE 1
+#define CONFIG_X86_MSR 1
+#define CONFIG_HAS_IOPORT 1
+#define CONFIG_NLS_KOI8_R_MODULE 1
+#define CONFIG_BEFS_FS_MODULE 1
+#define CONFIG_AFFS_FS_MODULE 1
+#define CONFIG_NET_DMA 1
+#define CONFIG_SND_USB_USX2Y_MODULE 1
+#define CONFIG_SND_SEQ_DUMMY_MODULE 1
+#define CONFIG_TOUCHSCREEN_PENMOUNT_MODULE 1
+#define CONFIG_KEYBOARD_LKKBD 1
+#define CONFIG_MSI_LAPTOP_MODULE 1
+#define CONFIG_IBM_ASM_MODULE 1
+#define CONFIG_CRYPTO_FCRYPT_MODULE 1
+#define CONFIG_NF_CONNTRACK_IPV4_MODULE 1
+#define CONFIG_INET_AH_MODULE 1
+#define CONFIG_TOI_USERUI_DEFAULT_PATH "/usr/local/sbin/tuxonice_fbsplash"
+#define CONFIG_JFFS2_FS_DEBUG 0
+#define CONFIG_USB_EHCI_TT_NEWSCHED 1
+#define CONFIG_SND_MIXART_MODULE 1
+#define CONFIG_SND_LAYLA20_MODULE 1
+#define CONFIG_I2C_AMD756_S4882_MODULE 1
+#define CONFIG_I2C_ALGOPCF_MODULE 1
+#define CONFIG_CARDMAN_4000_MODULE 1
+#define CONFIG_QLA3XXX_MODULE 1
+#define CONFIG_PARIDE_ON26_MODULE 1
+#define CONFIG_CRYPTO_AES 1
+#define CONFIG_BT_RFCOMM_TTY 1
+#define CONFIG_MODULES 1
+#define CONFIG_CRYPTO_TEA_MODULE 1
+#define CONFIG_USB_ACM_MODULE 1
+#define CONFIG_USB_ARCH_HAS_EHCI 1
+#define CONFIG_DVB_USB_DIB0700_MODULE 1
+#define CONFIG_I2C_CHARDEV_MODULE 1
+#define CONFIG_USB_USBNET_MODULE 1
+#define CONFIG_B43LEGACY_PCICORE_AUTOSELECT 1
+#define CONFIG_PCMCIA_WAVELAN_MODULE 1
+#define CONFIG_BNX2_MODULE 1
+#define CONFIG_FUSION_SAS 1
+#define CONFIG_PARPORT_PC 1
+#define CONFIG_MTD_COMPLEX_MAPPINGS 1
+#define CONFIG_BT_HIDP_MODULE 1
+#define CONFIG_BT_BNEP_MODULE 1
+#define CONFIG_NF_CONNTRACK_IPV6_MODULE 1
+#define CONFIG_NLS_KOI8_U_MODULE 1
+#define CONFIG_EXT2_FS 1
+#define CONFIG_SND_MIA_MODULE 1
+#define CONFIG_DVB_USB_VP702X_MODULE 1
+#define CONFIG_INPUT_MISC 1
+#define CONFIG_MOUSE_VSXXXAA_MODULE 1
+#define CONFIG_MOUSE_PS2_TRACKPOINT 1
+#define CONFIG_HDLC_MODULE 1
+#define CONFIG_IWLWIFI 1
+#define CONFIG_PATA_CMD64X 1
+#define CONFIG_BLK_DEV_SR 1
+#define CONFIG_MTD_SCB2_FLASH_MODULE 1
+#define CONFIG_TOIM3232_DONGLE_MODULE 1
+#define CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION_MODULE 1
+#define CONFIG_EXT3_FS 1
+#define CONFIG_USB_LCD_MODULE 1
+#define CONFIG_VIDEO_CX88_DVB_MODULE 1
+#define CONFIG_I2C_PARPORT_LIGHT_MODULE 1
+#define CONFIG_VT_CONSOLE 1
+#define CONFIG_ISDN_DIVAS_BRIPCI 1
+#define CONFIG_DLCI_MODULE 1
+#define CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADVANCED 1
+#define CONFIG_NF_CONNTRACK_SANE_MODULE 1
+#define CONFIG_CRYPTO_DES 1
+#define CONFIG_HFSPLUS_FS 1
+#define CONFIG_DNOTIFY 1
+#define CONFIG_EXT4DEV_FS_POSIX_ACL 1
+#define CONFIG_USB_SERIAL_BELKIN_MODULE 1
+#define CONFIG_SND_LAYLA24_MODULE 1
+#define CONFIG_SND_MIXER_OSS 1
+#define CONFIG_SENSORS_F71805F_MODULE 1
+#define CONFIG_CARDMAN_4040_MODULE 1
+#define CONFIG_ATM_ENI_MODULE 1
+#define CONFIG_S2IO_MODULE 1
+#define CONFIG_INET_DCCP_DIAG_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_SCTP_MODULE 1
+#define CONFIG_IP_VS_LBLC_MODULE 1
+#define CONFIG_ACPI 1
+#define CONFIG_QFMT_V1 1
+#define CONFIG_UIO_CIF_MODULE 1
+#define CONFIG_USB_LED_MODULE 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA49WLC 1
+#define CONFIG_USB_HID 1
+#define CONFIG_FB_CYBER2000_MODULE 1
+#define CONFIG_DVB_DIB7000M_MODULE 1
+#define CONFIG_DVB_VES1X93_MODULE 1
+#define CONFIG_JOYSTICK_SPACEORB_MODULE 1
+#define CONFIG_SLIP_SMART 1
+#define CONFIG_ATM_AMBASSADOR_MODULE 1
+#define CONFIG_TIPC_ZONES 3
+#define CONFIG_IP_DCCP_ACKVEC 1
+#define CONFIG_ARCH "x86_64"
+#define CONFIG_QFMT_V2 1
+#define CONFIG_KVM_AMD_MODULE 1
+#define CONFIG_RTC_LIB 1
+#define CONFIG_FB_DEFERRED_IO 1
+#define CONFIG_VIDEO_IVTV_MODULE 1
+#define CONFIG_DVB_NXT200X_MODULE 1
+#define CONFIG_WDT_501_PCI 1
+#define CONFIG_DE600_MODULE 1
+#define CONFIG_I2C_ALGOBIT_MODULE 1
+#define CONFIG_FUSION_SPI 1
+#define CONFIG_LAPB_MODULE 1
+#define CONFIG_NF_NAT_FTP_MODULE 1
+#define CONFIG_NETFILTER_XTABLES_MODULE 1
+#define CONFIG_ACPI_CONTAINER 1
+#define CONFIG_GENERIC_IRQ_PROBE 1
+#define CONFIG_SPI_TLE62X0_MODULE 1
+#define CONFIG_STALDRV 1
+#define CONFIG_AIRO_CS_MODULE 1
+#define CONFIG_MTD_PCI_MODULE 1
+#define CONFIG_MTD_DEBUG_VERBOSE 0
+#define CONFIG_VIA_FIR_MODULE 1
+#define CONFIG_IRDA_MODULE 1
+#define CONFIG_IPX_INTERN 1
+#define CONFIG_NF_CONNTRACK_MARK 1
+#define CONFIG_DEFCONFIG_LIST "/lib/modules/$UNAME_RELEASE/.config"
+#define CONFIG_DVB_DIB7000P_MODULE 1
+#define CONFIG_TCG_NSC_MODULE 1
+#define CONFIG_PPPOATM_MODULE 1
+#define CONFIG_DE620_MODULE 1
+#define CONFIG_SSB_PCIHOST_POSSIBLE 1
+#define CONFIG_DM_MULTIPATH_RDAC_MODULE 1
+#define CONFIG_SATA_QSTOR 1
+#define CONFIG_CHR_DEV_ST 1
+#define CONFIG_MTD_DOC2001PLUS_MODULE 1
+#define CONFIG_RFD_FTL_MODULE 1
+#define CONFIG_NF_NAT_SIP_MODULE 1
+#define CONFIG_NETFILTER_NETLINK_MODULE 1
+#define CONFIG_INOTIFY 1
+#define CONFIG_USB_SERIAL_KOBIL_SCT_MODULE 1
+#define CONFIG_RADIO_ADAPTERS 1
+#define CONFIG_SENSORS_ADM1021_MODULE 1
+#define CONFIG_DRM_VIA_MODULE 1
+#define CONFIG_TABLET_USB_AIPTEK_MODULE 1
+#define CONFIG_PCMCIA_3C574_MODULE 1
+#define CONFIG_HOSTAP_PLX_MODULE 1
+#define CONFIG_NET_PCI 1
+#define CONFIG_SUSPEND 1
+#define CONFIG_INFINIBAND_AMSO1100_MODULE 1
+#define CONFIG_SND_PORTMAN2X4_MODULE 1
+#define CONFIG_DVB_PLL_MODULE 1
+#define CONFIG_SENSORS_ADM1031_MODULE 1
+#define CONFIG_MCS_FIR_MODULE 1
+#define CONFIG_HOTPLUG 1
+#define CONFIG_USB_ADUTUX_MODULE 1
+#define CONFIG_USB_ARCH_HAS_OHCI 1
+#define CONFIG_SND_PCM 1
+#define CONFIG_W1_SLAVE_DS2433_MODULE 1
+#define CONFIG_DEVPORT 1
+#define CONFIG_DRM_I810_MODULE 1
+#define CONFIG_PRINTER 1
+#define CONFIG_MACINTOSH_DRIVERS 1
+#define CONFIG_MTD_UBI_MODULE 1
+#define CONFIG_MTD_RAM_MODULE 1
+#define CONFIG_NSC_FIR_MODULE 1
+#define CONFIG_NET_CLS_FW_MODULE 1
+#define CONFIG_BRIDGE_EBT_MARK_T_MODULE 1
+#define CONFIG_PCI_MSI 1
+#define CONFIG_SWIOTLB 1
+#define CONFIG_CIFS 1
+#define CONFIG_DVB_USB_MODULE 1
+#define CONFIG_VIDEO_CPIA2_MODULE 1
+#define CONFIG_ACX_USB 1
+#define CONFIG_IPV6_MODULE 1
+#define CONFIG_SECURITY_SELINUX_AVC_STATS 1
+#define CONFIG_INFINIBAND_SRP_MODULE 1
+#define CONFIG_USB_SERIAL_GARMIN_MODULE 1
+#define CONFIG_SENSORS_ADM1025_MODULE 1
+#define CONFIG_I2C_VOODOO3_MODULE 1
+#define CONFIG_DRM_I830_MODULE 1
+#define CONFIG_AGP_SIS_MODULE 1
+#define CONFIG_PC300_MODULE 1
+#define CONFIG_PCMCIA_NETWAVE_MODULE 1
+#define CONFIG_PARPORT_PC_PCMCIA_MODULE 1
+#define CONFIG_WAN_ROUTER_MODULE 1
+#define CONFIG_COMPAT_FOR_U64_ALIGNMENT 1
+#define CONFIG_SPARSEMEM_EXTREME 1
+#define CONFIG_SUNRPC_GSS 1
+#define CONFIG_USB_SERIAL_MOS7720_MODULE 1
+#define CONFIG_SENSORS_PC87360_MODULE 1
+#define CONFIG_SENSORS_ADM1026_MODULE 1
+#define CONFIG_W1_SLAVE_DS2760_MODULE 1
+#define CONFIG_MTD_DOCPROBE_ADVANCED 1
+#define CONFIG_TIPC_PORTS 8191
+#define CONFIG_ARPD 1
+#define CONFIG_PHYSICAL_ALIGN 0x200000
+#define CONFIG_CPUSETS 1
+#define CONFIG_SND_VX_LIB_MODULE 1
+#define CONFIG_R3964_MODULE 1
+#define CONFIG_ATM_TCP_MODULE 1
+#define CONFIG_PCMCIA_3C589_MODULE 1
+#define CONFIG_PARPORT 1
+#define CONFIG_NET_CLS 1
+#define CONFIG_BRIDGE_EBT_LOG_MODULE 1
+#define CONFIG_TOI_USERUI 1
+#define CONFIG_HPFS_FS 1
+#define CONFIG_VFAT_FS 1
+#define CONFIG_USB_SERIAL_NAVMAN_MODULE 1
+#define CONFIG_USB_STORAGE_KARMA 1
+#define CONFIG_SND_SOC_MODULE 1
+#define CONFIG_JOYSTICK_INTERACT_MODULE 1
+#define CONFIG_ATM_IDT77252_MODULE 1
+#define CONFIG_SKY2_MODULE 1
+#define CONFIG_HP100 1
+#define CONFIG_PARIDE_FIT2_MODULE 1
+#define CONFIG_SERIAL_8250_PCI 1
+#define CONFIG_MTD_NAND_PLATFORM_MODULE 1
+#define CONFIG_MTD_CMDLINE_PARTS 1
+#define CONFIG_BT_CMTP_MODULE 1
+#define CONFIG_BRIDGE_EBT_ARP_MODULE 1
+#define CONFIG_IP6_NF_TARGET_LOG_MODULE 1
+#define CONFIG_LOCALVERSION_AUTO 1
+#define CONFIG_JFFS2_FS_SECURITY 1
+#define CONFIG_USB_ETH_MODULE 1
+#define CONFIG_USB_SERIAL_MOS7840_MODULE 1
+#define CONFIG_SENSORS_ADM1029_MODULE 1
+#define CONFIG_DRM_I915_MODULE 1
+#define CONFIG_IPMI_SI_MODULE 1
+#define CONFIG_INPUT_ATI_REMOTE2_MODULE 1
+#define CONFIG_ISDN_DIVAS_PRIPCI 1
+#define CONFIG_SLHC_MODULE 1
+#define CONFIG_IXGB_MODULE 1
+#define CONFIG_SKGE_MODULE 1
+#define CONFIG_R8169_MODULE 1
+#define CONFIG_ARCNET_COM20020_PCI_MODULE 1
+#define CONFIG_PATA_NS87410 1
+#define CONFIG_PARIDE_FIT3_MODULE 1
+#define CONFIG_NFSD 1
+#define CONFIG_UDF_NLS 1
+#define CONFIG_FUSE_FS 1
+#define CONFIG_USB_ATM_MODULE 1
+#define CONFIG_DVB_USB_DIBUSB_MB_MODULE 1
+#define CONFIG_SENSORS_PC87427_MODULE 1
+#define CONFIG_TOUCHSCREEN_GUNZE_MODULE 1
+#define CONFIG_AIRO_MODULE 1
+#define CONFIG_SATA_MV 1
+#define CONFIG_X86_MCE_AMD 1
+#define CONFIG_KMOD 1
+#define CONFIG_CRYPTO_LZF_MODULE 1
+#define CONFIG_GENERIC_ACL 1
+#define CONFIG_FB_KYRO_MODULE 1
+#define CONFIG_DVB_USB_OPERA1_MODULE 1
+#define CONFIG_DVB_USB_DIBUSB_MC_MODULE 1
+#define CONFIG_SBNI_MODULE 1
+#define CONFIG_SATA_NV 1
+#define CONFIG_TOI_CRYPTO 1
+#define CONFIG_PROC_FS 1
+#define CONFIG_SND_FM801_TEA575X_BOOL 1
+#define CONFIG_SENSORS_ADM9240_MODULE 1
+#define CONFIG_TCG_TIS_MODULE 1
+#define CONFIG_KEYBOARD_XTKBD 1
+#define CONFIG_INPUT_MOUSEDEV_SCREEN_X 1024
+#define CONFIG_PARIDE_KBIC_MODULE 1
+#define CONFIG_IPDDP_DECAP 1
+#define CONFIG_PANTHERLORD_FF 1
+#define CONFIG_TCG_TPM_MODULE 1
+#define CONFIG_IPMI_DEVICE_INTERFACE_MODULE 1
+#define CONFIG_INPUT_MOUSEDEV_SCREEN_Y 768
+#define CONFIG_ISDN_MODULE 1
+#define CONFIG_MYRI10GE_MODULE 1
+#define CONFIG_PATA_CMD640_PCI 1
+#define CONFIG_MTDRAM_ERASE_SIZE 128
+#define CONFIG_BT_BNEP_MC_FILTER 1
+#define CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE 1
+#define CONFIG_DRM_R128_MODULE 1
+#define CONFIG_KEYBOARD_STOWAWAY 1
+#define CONFIG_PATA_HPT3X3 1
+#define CONFIG_TCP_CONG_ILLINOIS_MODULE 1
+#define CONFIG_NET_KEY_MODULE 1
+#define CONFIG_X86_CMPXCHG 1
+#define CONFIG_B43_LEDS 1
+#define CONFIG_DGRS_MODULE 1
+#define CONFIG_DM_ZERO 1
+#define CONFIG_TIPC_MODULE 1
+#define CONFIG_INET 1
+#define CONFIG_ARCH_SPARSEMEM_ENABLE 1
+#define CONFIG_RT_MUTEXES 1
+#define CONFIG_LOGO 1
+#define CONFIG_DVB_TDA1004X_MODULE 1
+#define CONFIG_HPET 1
+#define CONFIG_DRM_SIS_MODULE 1
+#define CONFIG_TYPHOON_MODULE 1
+#define CONFIG_SCSI_DC395x 1
+#define CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK -1
+#define CONFIG_SUSPEND_SMP_POSSIBLE 1
+#define CONFIG_NUMA 1
+#define CONFIG_SYSVIPC 1
+#define CONFIG_REISERFS_FS_SECURITY 1
+#define CONFIG_SENSORS_W83781D_MODULE 1
+#define CONFIG_INPUT_TOUCHSCREEN 1
+#define CONFIG_SSB_PCMCIAHOST 1
+#define CONFIG_PATA_PCMCIA_MODULE 1
+#define CONFIG_ATA_GENERIC 1
+#define CONFIG_SCSI 1
+#define CONFIG_MTD_UBI_WL_THRESHOLD 4096
+#define CONFIG_MTD_ROM_MODULE 1
+#define CONFIG_MTD_CFI_AMDSTD_MODULE 1
+#define CONFIG_BT_BNEP_PROTO_FILTER 1
+#define CONFIG_IP_SCTP_MODULE 1
+#define CONFIG_DEFAULT_BIC 1
+#define CONFIG_TCP_CONG_CUBIC_MODULE 1
+#define CONFIG_X86_L1_CACHE_SHIFT 7
+#define CONFIG_NTFS_FS 1
+#define CONFIG_INFINIBAND_ADDR_TRANS 1
+#define CONFIG_USB_MON 1
+#define CONFIG_USB_PWC_MODULE 1
+#define CONFIG_SENSORS_W83791D_MODULE 1
+#define CONFIG_SERIAL_8250_RSA 1
+#define CONFIG_ATM_FIRESTREAM_MODULE 1
+#define CONFIG_PATA_HPT37X 1
+#define CONFIG_MEGARAID_MM 1
+#define CONFIG_PARIDE_EPIA_MODULE 1
+#define CONFIG_IP6_NF_MATCH_OPTS_MODULE 1
+#define CONFIG_NF_CONNTRACK_TFTP_MODULE 1
+#define CONFIG_HIBERNATION 1
+#define CONFIG_SENSORS_W83792D_MODULE 1
+#define CONFIG_SKFP_MODULE 1
+#define CONFIG_PARIDE_BPCK_MODULE 1
+#define CONFIG_NFTL_MODULE 1
+#define CONFIG_NF_NAT_SNMP_BASIC_MODULE 1
+#define CONFIG_CRYPTO_LRW_MODULE 1
+#define CONFIG_CIFS_WEAK_PW_HASH 1
+#define CONFIG_KS0108_DELAY 2
+#define CONFIG_USB_SERIAL_KEYSPAN_USA19 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA28 1
+#define CONFIG_INPUT_KEYSPAN_REMOTE_MODULE 1
+#define CONFIG_PLIP_MODULE 1
+#define CONFIG_TMS380TR_MODULE 1
+#define CONFIG_CRYPTO_DEFLATE_MODULE 1
+#define CONFIG_USB_PHIDGETKIT_MODULE 1
+#define CONFIG_DIGIEPCA_MODULE 1
+#define CONFIG_JOYSTICK_COBRA_MODULE 1
+#define CONFIG_PARPORT_AX88796_MODULE 1
+#define CONFIG_SLUB 1
+#define CONFIG_CC_OPTIMIZE_FOR_SIZE 1
+#define CONFIG_USB_STORAGE_JUMPSHOT 1
+#define CONFIG_VIDEO_USBVIDEO_MODULE 1
+#define CONFIG_SSB_DRIVER_PCICORE_POSSIBLE 1
+#define CONFIG_KINGSUN_DONGLE_MODULE 1
+#define CONFIG_NET_EMATCH_CMP_MODULE 1
+#define CONFIG_IPDDP_ENCAP 1
+#define CONFIG_IP_NF_TARGET_SAME_MODULE 1
+#define CONFIG_INET6_XFRM_TUNNEL_MODULE 1
+#define CONFIG_NCPFS_SMALLDOS 1
+#define CONFIG_SLIP_MODULE 1
+#define CONFIG_ZD1211RW_MAC80211_MODULE 1
+#define CONFIG_REED_SOLOMON_DEC16 1
+#define CONFIG_ACTISYS_DONGLE_MODULE 1
+#define CONFIG_HOTPLUG_PCI_CPCI_GENERIC_MODULE 1
+#define CONFIG_IOSCHED_CFQ 1
+#define CONFIG_SND_SONICVIBES_MODULE 1
+#define CONFIG_USB_ET61X251_MODULE 1
+#define CONFIG_HDLC_X25_MODULE 1
+#define CONFIG_ROSE_MODULE 1
+#define CONFIG_NET_ACT_POLICE_MODULE 1
+#define CONFIG_NF_CONNTRACK_PPTP_MODULE 1
+#define CONFIG_X86_IO_APIC 1
+#define CONFIG_JFFS2_RUBIN 1
+#define CONFIG_USB_SERIAL_XIRCOM_MODULE 1
+#define CONFIG_LOGITECH_FF 1
+#define CONFIG_SENSORS_PCA9539_MODULE 1
+#define CONFIG_I6300ESB_WDT_MODULE 1
+#define CONFIG_ALIM7101_WDT_MODULE 1
+#define CONFIG_IPW2100_MONITOR 1
+#define CONFIG_FUSION_LOGGING 1
+#define CONFIG_THINKPAD_EC_MODULE 1
+#define CONFIG_IP6_NF_MATCH_EUI64_MODULE 1
+#define CONFIG_NR_CPUS 8
+#define CONFIG_GENERIC_BUG 1
+#define CONFIG_JFFS2_RTIME 1
+#define CONFIG_VIDEO_CQCAM_MODULE 1
+#define CONFIG_SERIAL_8250_PNP 1
+#define CONFIG_LANMEDIA_MODULE 1
+#define CONFIG_IPW2200_MONITOR 1
+#define CONFIG_MTD_UBI_GLUEBI 1
+#define CONFIG_CRYPTO_MANAGER 1
+#define CONFIG_BT_HCIBFUSB_MODULE 1
+#define CONFIG_X86_L1_CACHE_BYTES 128
+#define CONFIG_SWAP 1
+#define CONFIG_EXT2_FS_POSIX_ACL 1
+#define CONFIG_USB_STORAGE_USBAT 1
+#define CONFIG_VIDEO_CPIA_USB_MODULE 1
+#define CONFIG_SENSORS_PCF8591_MODULE 1
+#define CONFIG_B43_PCI_AUTOSELECT 1
+#define CONFIG_IEEE1394_OHCI1394 1
+#define CONFIG_PARIDE_ATEN_MODULE 1
+#define CONFIG_NFTL_RW 1
+#define CONFIG_MTD_REDBOOT_PARTS_MODULE 1
+#define CONFIG_KEYS 1
+#define CONFIG_MA600_DONGLE_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_CONNMARK_MODULE 1
+#define CONFIG_TCP_CONG_HYBLA_MODULE 1
+#define CONFIG_CPU_FREQ_TABLE 1
+#define CONFIG_ACPI_PROCESSOR 1
+#define CONFIG_EXT3_FS_POSIX_ACL 1
+#define CONFIG_USB_SPEEDTOUCH_MODULE 1
+#define CONFIG_SND_KORG1212_MODULE 1
+#define CONFIG_SENSORS_PCF8574_MODULE 1
+#define CONFIG_W83627HF_WDT_MODULE 1
+#define CONFIG_AC97_BUS_MODULE 1
+#define CONFIG_CYCLOMX_X25 1
+#define CONFIG_B44_PCI_AUTOSELECT 1
+#define CONFIG_BRIDGE_EBT_STP_MODULE 1
+#define CONFIG_XFRM 1
+#define CONFIG_CRC32 1
+#define CONFIG_SND_VIA82XX_MODULE 1
+#define CONFIG_VIDEO_KS0127_MODULE 1
+#define CONFIG_GAMEPORT_L4_MODULE 1
+#define CONFIG_AIC79XX_DEBUG_MASK 0
+#define CONFIG_BLK_DEV_3W_XXXX_RAID 1
+#define CONFIG_BLK_DEV_RAM_COUNT 16
+#define CONFIG_PARIDE_EPAT_MODULE 1
+#define CONFIG_MTD_ESB2ROM_MODULE 1
+#define CONFIG_DEFAULT_CFQ 1
+#define CONFIG_VXFS_FS_MODULE 1
+#define CONFIG_ALIM1535_WDT_MODULE 1
+#define CONFIG_USB_NET_NET1080_MODULE 1
+#define CONFIG_CRC16_MODULE 1
+#define CONFIG_IP_NF_IPTABLES_MODULE 1
+#define CONFIG_FAT_DEFAULT_IOCHARSET "iso8859-1"
+#define CONFIG_INPUT_KEYBOARD 1
+#define CONFIG_MD_RAID0 1
+#define CONFIG_PARIDE_COMM_MODULE 1
+#define CONFIG_NET_ACT_MIRRED_MODULE 1
+#define CONFIG_IP_NF_MATCH_AH_MODULE 1
+#define CONFIG_TEXTSEARCH_FSM_MODULE 1
+#define CONFIG_BLK_DEV_INITRD 1
+#define CONFIG_SECURITY_CAPABILITIES 1
+#define CONFIG_NFSD_V2_ACL 1
+#define CONFIG_USB_SERIAL_OPTION_MODULE 1
+#define CONFIG_DVB_USB_GP8PSK_MODULE 1
+#define CONFIG_W1_SLAVE_THERM_MODULE 1
+#define CONFIG_TOUCHSCREEN_UCB1400_MODULE 1
+#define CONFIG_MD_RAID1 1
+#define CONFIG_NET_CLS_U32_MODULE 1
+#define CONFIG_BRIDGE_NF_EBTABLES_MODULE 1
+#define CONFIG_NFSD_V3_ACL 1
+#define CONFIG_RTC_DRV_PCF8563_MODULE 1
+#define CONFIG_USB_ZR364XX_MODULE 1
+#define CONFIG_SPI_BITBANG_MODULE 1
+#define CONFIG_MTDRAM_TOTAL_SIZE 4096
+#define CONFIG_IP_NF_MATCH_OWNER_MODULE 1
+#define CONFIG_TEXTSEARCH_KMP_MODULE 1
+#define CONFIG_TCP_CONG_VEGAS_MODULE 1
+#define CONFIG_PACKET_MMAP 1
+#define CONFIG_HIBERNATION_SMP_POSSIBLE 1
+#define CONFIG_NTFS_RW 1
+#define CONFIG_SND_SEQUENCER_OSS 1
+#define CONFIG_SENSORS_MAX6650_MODULE 1
+#define CONFIG_SENSORS_MAX1619_MODULE 1
+#define CONFIG_SCSI_INIA100 1
+#define CONFIG_NETFILTER_XT_TARGET_SECMARK_MODULE 1
+#define CONFIG_RTC_DRV_PCF8583_MODULE 1
+#define CONFIG_SENSORS_ABITUGURU_MODULE 1
+#define CONFIG_W83697HF_WDT_MODULE 1
+#define CONFIG_PPP_DEFLATE_MODULE 1
+#define CONFIG_USB_NET_MCS7830_MODULE 1
+#define CONFIG_UNIX 1
+#define CONFIG_CPU_IDLE_GOV_MENU 1
+#define CONFIG_GENERIC_CPU 1
+#define CONFIG_CIFS_UPCALL 1
+#define CONFIG_CIFS_STATS2 1
+#define CONFIG_JFFS2_FS_XATTR 1
+#define CONFIG_VIRTUALIZATION 1
+#define CONFIG_SENSORS_K8TEMP_MODULE 1
+#define CONFIG_I2C_PARPORT_MODULE 1
+#define CONFIG_BAYCOM_SER_FDX_MODULE 1
+#define CONFIG_HAMRADIO 1
+#define CONFIG_NET_SCH_DSMARK_MODULE 1
+#define CONFIG_MTRR 1
+#define CONFIG_RTC_DRV_ISL1208_MODULE 1
+#define CONFIG_PARIDE_FRIQ_MODULE 1
+#define CONFIG_CONFIGFS_FS_MODULE 1
+#define CONFIG_SENSORS_FSCHER_MODULE 1
+#define CONFIG_SPI_AT25_MODULE 1
+#define CONFIG_INPUT_MOUSEDEV_PSAUX 1
+#define CONFIG_PARPORT_SERIAL_MODULE 1
+#define CONFIG_MTD_ONENAND_MODULE 1
+#define CONFIG_BT_L2CAP_MODULE 1
+#define CONFIG_BAYCOM_SER_HDX_MODULE 1
+#define CONFIG_NETLABEL 1
+#define CONFIG_VIDEO_OUTPUT_CONTROL_MODULE 1
+#define CONFIG_ISA_DMA_API 1
+#define CONFIG_RTC_DRV_MAX6900_MODULE 1
+#define CONFIG_DVB_USB_TTUSB2_MODULE 1
+#define CONFIG_VIDEO_TVEEPROM_MODULE 1
+#define CONFIG_SERIAL_CORE 1
+#define CONFIG_CYCLADES_MODULE 1
+#define CONFIG_RT2400PCI_MODULE 1
+#define CONFIG_LXT_PHY_MODULE 1
+#define CONFIG_BLK_DEV_SR_VENDOR 1
+#define CONFIG_MTD_SC520CDP_MODULE 1
+#define CONFIG_IP_NF_TARGET_ULOG_MODULE 1
+#define CONFIG_TCP_CONG_WESTWOOD_MODULE 1
+#define CONFIG_SIGNALFD 1
+#define CONFIG_FB_GEODE_GX_MODULE 1
+#define CONFIG_RT2500PCI_MODULE 1
+#define CONFIG_PDC_ADMA 1
+#define CONFIG_SCSI_QLA_ISCSI 1
+#define CONFIG_ACPI_PROCFS 1
+#define CONFIG_UID16 1
+#define CONFIG_LOCK_KERNEL 1
+#define CONFIG_64BIT 1
+#define CONFIG_RTC_DRV_MAX6902_MODULE 1
+#define CONFIG_USB_EHCI_ROOT_HUB_TT 1
+#define CONFIG_ISDN_CAPI_CAPIFS_BOOL 1
+#define CONFIG_DE4X5_MODULE 1
+#define CONFIG_SCSI_IPR_TRACE 1
+#define CONFIG_SCSI_WAIT_SCAN_MODULE 1
+#define CONFIG_BLK_DEV_NBD_MODULE 1
+#define CONFIG_CRYPTO_ARC4 1
+#define CONFIG_NET_CLS_ROUTE4_MODULE 1
+#define CONFIG_PHYSICAL_START 0x200000
+#define CONFIG_IKCONFIG 1
+#define CONFIG_FB_GEODE 1
+#define CONFIG_DVB_USB_DIGITV_MODULE 1
+#define CONFIG_VIDEO_BT848_DVB 1
+#define CONFIG_SENSORS_TSL2550_MODULE 1
+#define CONFIG_INPUT_TSDEV_SCREEN_X 1024
+#define CONFIG_LIBERTAS_CS_MODULE 1
+#define CONFIG_NE2K_PCI_MODULE 1
+#define CONFIG_RFKILL_LEDS 1
+#define CONFIG_BINFMT_MISC 1
+#define CONFIG_RTC_DRV_RS5C372_MODULE 1
+#define CONFIG_SENSORS_MAX6875_MODULE 1
+#define CONFIG_MOUSE_PS2_ALPS 1
+#define CONFIG_INPUT_TSDEV_SCREEN_Y 768
+#define CONFIG_IPW3945_MONITOR 1
+#define CONFIG_CISS_SCSI_TAPE 1
+#define CONFIG_AX25_DAMA_SLAVE 1
+#define CONFIG_NF_CONNTRACK_PROC_COMPAT 1
+#define CONFIG_IP_FIB_HASH 1
+#define CONFIG_SYSV_FS 1
+#define CONFIG_JFS_STATISTICS 1
+#define CONFIG_REISERFS_FS_XATTR 1
+#define CONFIG_CRYPTO_SHA1_MODULE 1
+#define CONFIG_ANON_INODES 1
+#define CONFIG_USB_PHIDGET_MODULE 1
+#define CONFIG_FB_GEODE_LX_MODULE 1
+#define CONFIG_MEGARAID_LEGACY 1
+#define CONFIG_INET6_AH_MODULE 1
+#define CONFIG_TCP_CONG_HSTCP_MODULE 1
+#define CONFIG_I82092_MODULE 1
+#define CONFIG_PARTITION_ADVANCED 1
+#define CONFIG_RTC_DRV_RS5C348_MODULE 1
+#define CONFIG_RTC_DRV_M41T80_WDT 1
+#define CONFIG_LOGO_LINUX_CLUT224 1
+#define CONFIG_VIDEO_OV7670_MODULE 1
+#define CONFIG_MTD_BLKDEVS_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_NOTRACK_MODULE 1
+#define CONFIG_USB_CYPRESS_CY7C63_MODULE 1
+#define CONFIG_FONT_ACORN_8x8 1
+#define CONFIG_VGA_CONSOLE 1
+#define CONFIG_CDROM_PKTCDVD_BUFFERS 8
+#define CONFIG_PARIDE_KTTI_MODULE 1
+#define CONFIG_IEEE80211_CRYPT_WEP_MODULE 1
+#define CONFIG_PCIEPORTBUS 1
+#define CONFIG_PREEMPT_VOLUNTARY 1
+#define CONFIG_NLS_DEFAULT "iso8859-1"
+#define CONFIG_SND_RAWMIDI_MODULE 1
+#define CONFIG_FONT_PEARL_8x8 1
+#define CONFIG_SENSORS_VIA686A_MODULE 1
+#define CONFIG_TELCLOCK_MODULE 1
+#define CONFIG_WATCHDOG 1
+#define CONFIG_SERIAL_8250_DETECT_IRQ 1
+#define CONFIG_DSCC4_MODULE 1
+#define CONFIG_SUNDANCE_MODULE 1
+#define CONFIG_SGI_IOC4_MODULE 1
+#define CONFIG_PARIDE_DSTR_MODULE 1
+#define CONFIG_MTD_PARTITIONS 1
+#define CONFIG_WINBOND_FIR_MODULE 1
+#define CONFIG_CPU_FREQ_GOV_PERFORMANCE 1
+#define CONFIG_ACPI_FAN 1
+#define CONFIG_CRYPTO_TWOFISH_X86_64_MODULE 1
+#define CONFIG_SECURITY_SELINUX_DISABLE 1
+#define CONFIG_ATA_ACPI 1
+#define CONFIG_SPLIT_PTLOCK_CPUS 4
+#define CONFIG_BLK_DEV_BSG 1
+#define CONFIG_SECURITY_ROOTPLUG_MODULE 1
+#define CONFIG_JFFS2_FS_MODULE 1
+#define CONFIG_USB_STORAGE_SDDR09 1
+#define CONFIG_USB_ISP116X_HCD_MODULE 1
+#define CONFIG_SENSORS_SIS5595_MODULE 1
+#define CONFIG_TOUCHSCREEN_ADS7846_MODULE 1
+#define CONFIG_DAVICOM_PHY_MODULE 1
+#define CONFIG_PARIDE_FRPW_MODULE 1
+#define CONFIG_MTD_PHYSMAP_START 0x8000000
+#define CONFIG_YENTA_ENE_TUNE 1
+#define CONFIG_ACORN_PARTITION_POWERTEC 1
+#define CONFIG_USB_STORAGE_SDDR55 1
+#define CONFIG_DVB_LGDT330X_MODULE 1
+#define CONFIG_SENSORS_EEPROM_MODULE 1
+#define CONFIG_ARCNET_COM90xx_MODULE 1
+#define CONFIG_PATA_ATIIXP 1
+#define CONFIG_MAC80211_LEDS 1
+#define CONFIG_NETFILTER_XT_MATCH_REALM_MODULE 1
+#define CONFIG_SYSVIPC_COMPAT 1
+#define CONFIG_OCFS2_FS_MODULE 1
+#define CONFIG_SND_RIPTIDE_MODULE 1
+#define CONFIG_FB_SAVAGE_ACCEL 1
+#define CONFIG_VIDEO_WM8739_MODULE 1
+#define CONFIG_VIDEO_WM8775_MODULE 1
+#define CONFIG_APPLICOM_MODULE 1
+#define CONFIG_MTD_PLATRAM_MODULE 1
+#define CONFIG_BT_HCIBPA10X_MODULE 1
+#define CONFIG_6PACK_MODULE 1
+#define CONFIG_YENTA_RICOH 1
+#define CONFIG_ARCH_SUPPORTS_MSI 1
+#define CONFIG_PREEMPT_BKL 1
+#define CONFIG_CRYPTO_GF128MUL_MODULE 1
+#define CONFIG_LOCKD_V4 1
+#define CONFIG_MLX4_INFINIBAND_MODULE 1
+#define CONFIG_VIDEO_CAFE_CCIC_MODULE 1
+#define CONFIG_SENSORS_GL520SM_MODULE 1
+#define CONFIG_USB_APPLEIR_MODULE 1
+#define CONFIG_JOYSTICK_SPACEBALL_MODULE 1
+#define CONFIG_LIBERTAS_MODULE 1
+#define CONFIG_BLK_DEV_RAM 1
+#define CONFIG_PARPORT_1284 1
+#define CONFIG_NETFILTER_XT_TARGET_NFQUEUE_MODULE 1
+#define CONFIG_NODES_SHIFT 6
+#define CONFIG_SCHED_MC 1
+#define CONFIG_VM_EVENT_COUNTERS 1
+#define CONFIG_LIBCRC32C 1
+#define CONFIG_BACKLIGHT_LCD_SUPPORT 1
+#define CONFIG_DVB_USB_DTT200U_MODULE 1
+#define CONFIG_INPUT_MOUSEDEV 1
+#define CONFIG_PPP_BSDCOMP_MODULE 1
+#define CONFIG_RT2500USB_MODULE 1
+#define CONFIG_FUSION_MAX_SGE 128
+#define CONFIG_PATA_AMD 1
+#define CONFIG_SCSI_QLA_FC 1
+#define CONFIG_INET_IPCOMP_MODULE 1
+#define CONFIG_CFAG12864B_MODULE 1
+#define CONFIG_USB_SERIAL_IPW_MODULE 1
+#define CONFIG_SND_VIRMIDI_MODULE 1
+#define CONFIG_FB_ATY128_BACKLIGHT 1
+#define CONFIG_ACQUIRE_WDT_MODULE 1
+#define CONFIG_USB_NET_AX8817X_MODULE 1
+#define CONFIG_USB_USBNET_MII_MODULE 1
+#define CONFIG_CHR_DEV_SCH_MODULE 1
+#define CONFIG_MTD_NETSC520_MODULE 1
+#define CONFIG_CRYPTO_PCBC_MODULE 1
+#define CONFIG_ACPI_BAY 1
+#define CONFIG_ACPI_BUTTON 1
+#define CONFIG_SMB_NLS_REMOTE "cp437"
+#define CONFIG_SCSI_ARCMSR 1
+#define CONFIG_FUJITSU_LAPTOP_MODULE 1
+#define CONFIG_BLK_DEV_SX8_MODULE 1
+#define CONFIG_NET_SCH_CBQ_MODULE 1
+#define CONFIG_CRYPTO_HMAC 1
+#define CONFIG_MODVERSIONS 1
+#define CONFIG_SND_SEQ_RTCTIMER_DEFAULT 1
+#define CONFIG_SENSORS_FSCPOS_MODULE 1
+#define CONFIG_IPV6_TUNNEL_MODULE 1
+#define CONFIG_SOLARIS_X86_PARTITION 1
+#define CONFIG_REISERFS_FS 1
+#define CONFIG_W1_SLAVE_DS2433_CRC 1
+#define CONFIG_I2C_STUB_MODULE 1
+#define CONFIG_SERIAL_NONSTANDARD 1
+#define CONFIG_I2O_SCSI 1
+#define CONFIG_PATA_ALI 1
+#define CONFIG_BLK_DEV_RAM_BLOCKSIZE 1024
+#define CONFIG_BPQETHER_MODULE 1
+#define CONFIG_GENERIC_TIME_VSYSCALL 1
+#define CONFIG_UNUSED_SYMBOLS 1
+#define CONFIG_DVB_DIB3000MB_MODULE 1
+#define CONFIG_HANGCHECK_TIMER_MODULE 1
+#define CONFIG_SYSCTL_SYSCALL 1
+#define CONFIG_UNIXWARE_DISKLABEL 1
+#define CONFIG_DVB_DIB3000MC_MODULE 1
+#define CONFIG_DVB_USB_A800_MODULE 1
+#define CONFIG_SENSORS_GL518SM_MODULE 1
+#define CONFIG_DM9102_MODULE 1
+#define CONFIG_I2O_PROC 1
+#define CONFIG_SCSI_INITIO 1
+#define CONFIG_MEGARAID_NEWGEN 1
+#define CONFIG_AIC79XX_REG_PRETTY_PRINT 1
+#define CONFIG_AIC7XXX_DEBUG_MASK 0
+#define CONFIG_USB_STORAGE 1
+#define CONFIG_SND_TRIDENT_MODULE 1
+#define CONFIG_B43LEGACY_MODULE 1
+#define CONFIG_MTD_ICHXROM_MODULE 1
+#define CONFIG_NET_SCH_RED_MODULE 1
+#define CONFIG_HOTPLUG_PCI_MODULE 1
+#define CONFIG_USB_IDMOUSE_MODULE 1
+#define CONFIG_VGASTATE_MODULE 1
+#define CONFIG_DVB_USB_DIBUSB_MB_FAULTY 1
+#define CONFIG_SERIAL_8250_RUNTIME_UARTS 4
+#define CONFIG_GAMEPORT_MODULE 1
+#define CONFIG_INPUT_JOYSTICK 1
+#define CONFIG_IEEE1394_SBP2 1
+#define CONFIG_DM_DELAY_MODULE 1
+#define CONFIG_NET_CLS_ACT 1
+#define CONFIG_NET_SCH_TBF_MODULE 1
+#define CONFIG_DEBUG_FS 1
+#define CONFIG_ELF_CORE 1
+#define CONFIG_CRYPTO_XCBC_MODULE 1
+#define CONFIG_SND_EMU10K1X_MODULE 1
+#define CONFIG_VIDEO_ZORAN_MODULE 1
+#define CONFIG_SYNCLINK_CS_MODULE 1
+#define CONFIG_CAPI_AVM 1
+#define CONFIG_ATM_DRIVERS 1
+#define CONFIG_DM_SNAPSHOT 1
+#define CONFIG_PATA_HPT3X3_DMA 1
+#define CONFIG_CRYPTO_SERPENT_MODULE 1
+#define CONFIG_VIDEO_CX88_ALSA_MODULE 1
+#define CONFIG_PPPOL2TP_MODULE 1
+#define CONFIG_DLCI_MAX 8
+#define CONFIG_USB_PEGASUS_MODULE 1
+#define CONFIG_SSB_PCIHOST 1
+#define CONFIG_MTD_PHYSMAP_BANKWIDTH 2
+#define CONFIG_NET_SCH_HTB_MODULE 1
+#define CONFIG_ATM_LANE_MODULE 1
+#define CONFIG_YENTA_O2 1
+#define CONFIG_ACPI_SYSTEM 1
+#define CONFIG_MMC_TIFM_SD_MODULE 1
+#define CONFIG_USB_U132_HCD_MODULE 1
+#define CONFIG_MTD_CHAR_MODULE 1
+#define CONFIG_NET_CLS_IND 1
+#define CONFIG_NETFILTER_XT_MATCH_LIMIT_MODULE 1
+#define CONFIG_NETFILTER_NETLINK_LOG_MODULE 1
+#define CONFIG_FB_ATY_GENERIC_LCD 1
+#define CONFIG_FB_INTEL_MODULE 1
+#define CONFIG_MARVELL_PHY_MODULE 1
+#define CONFIG_SCSI_DMA 1
+#define CONFIG_IP_NF_TARGET_REDIRECT_MODULE 1
+#define CONFIG_RESOURCES_64BIT 1
+#define CONFIG_DEFAULT_IOSCHED "cfq"
+#define CONFIG_CRYPTO_TWOFISH_MODULE 1
+#define CONFIG_CRYPTO_HASH 1
+#define CONFIG_INFINIBAND_ISER_MODULE 1
+#define CONFIG_INFINIBAND_MTHCA_DEBUG 1
+#define CONFIG_SND_MAESTRO3_FIRMWARE_IN_KERNEL 1
+#define CONFIG_DVB_CORE 1
+#define CONFIG_VIDEO_TUNER_MODULE 1
+#define CONFIG_60XX_WDT_MODULE 1
+#define CONFIG_LEGACY_PTYS 1
+#define CONFIG_UNIX98_PTYS 1
+#define CONFIG_HDLC_RAW_MODULE 1
+#define CONFIG_USB_CATC_MODULE 1
+#define CONFIG_EEPROM_93CX6_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_STATE_MODULE 1
+#define CONFIG_IP_PIMSM_V1 1
+#define CONFIG_IP_PNP_DHCP 1
+#define CONFIG_ACPI_SBS_MODULE 1
+#define CONFIG_ARCH_DISCONTIGMEM_DEFAULT 1
+#define CONFIG_USB_CYTHERM_MODULE 1
+#define CONFIG_USB_SERIAL_GENERIC 1
+#define CONFIG_USB_STORAGE_ALAUDA 1
+#define CONFIG_FB_CFB_COPYAREA 1
+#define CONFIG_SYNCLINK_GT_MODULE 1
+#define CONFIG_B43_PCICORE_AUTOSELECT 1
+#define CONFIG_PATA_VIA 1
+#define CONFIG_SCSI_HPTIOP 1
+#define CONFIG_SCSI_SAS_ATTRS 1
+#define CONFIG_MTD_ONENAND_VERIFY_WRITE 1
+#define CONFIG_MTD_NAND_MODULE 1
+#define CONFIG_MTD_DILNETPC_BOOTSIZE 0x80000
+#define CONFIG_NET_SCH_ATM_MODULE 1
+#define CONFIG_IP_PIMSM_V2 1
+#define CONFIG_INET_TUNNEL_MODULE 1
+#define CONFIG_CPU_IDLE 1
+#define CONFIG_CPU_FREQ_GOV_ONDEMAND 1
+#define CONFIG_PRINTK_TIME 1
+#define CONFIG_SND_MPU401_UART_MODULE 1
+#define CONFIG_FRAMEBUFFER_CONSOLE_ROTATION 1
+#define CONFIG_FB_CFB_FILLRECT 1
+#define CONFIG_B44_PCICORE_AUTOSELECT 1
+#define CONFIG_MTD_PHYSMAP_MODULE 1
+#define CONFIG_SYN_COOKIES 1
+#define CONFIG_X86_INTERNODE_CACHE_BYTES 128
+#define CONFIG_SEMAPHORE_SLEEPERS 1
+#define CONFIG_DMIID 1
+#define CONFIG_KS0108_MODULE 1
+#define CONFIG_MOUSE_PS2_LIFEBOOK 1
+#define CONFIG_ISDN_DRV_AVMB1_AVM_CS_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_B1PCIV4 1
+#define CONFIG_IPW2200_RADIOTAP 1
+#define CONFIG_SATA_SX4 1
+#define CONFIG_ATM_BR2684_IPFILTER 1
+#define CONFIG_NETFILTER_XT_TARGET_DSCP_MODULE 1
+#define CONFIG_VIDEO_CAPTURE_DRIVERS 1
+#define CONFIG_DS1682_MODULE 1
+#define CONFIG_PCI200SYN_MODULE 1
+#define CONFIG_8139CP_MODULE 1
+#define CONFIG_SATA_VIA 1
+#define CONFIG_PROC_EVENTS 1
+#define CONFIG_NETFILTER_XT_TARGET_MARK_MODULE 1
+#define CONFIG_IP_VS_TAB_BITS 12
+#define CONFIG_TCP_CONG_LP_MODULE 1
+#define CONFIG_DELL_RBU_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_DMC_TSC10 1
+#define CONFIG_INPUT_EVDEV 1
+#define CONFIG_USB_IRDA_MODULE 1
+#define CONFIG_ATM_CLIP_MODULE 1
+#define CONFIG_INFINIBAND_IPOIB_DEBUG 1
+#define CONFIG_DVB_USB_UMT_010_MODULE 1
+#define CONFIG_VIDEO_ZORAN_ZR36060_MODULE 1
+#define CONFIG_ATM_HORIZON_MODULE 1
+#define CONFIG_HDLC_PPP_MODULE 1
+#define CONFIG_SCSI_SPI_ATTRS 1
+#define CONFIG_SCSI_MULTI_LUN 1
+#define CONFIG_PARPORT_NOT_PC 1
+#define CONFIG_NET_ACT_IPT_MODULE 1
+#define CONFIG_PCMCIA_LOAD_CIS 1
+#define CONFIG_HOTPLUG_CPU 1
+#define CONFIG_GENERIC_ISA_DMA 1
+#define CONFIG_EXT2_FS_XIP 1
+#define CONFIG_USB_SUSPEND 1
+#define CONFIG_CPU5_WDT_MODULE 1
+#define CONFIG_SYNCLINK_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_3M 1
+#define CONFIG_RT2400PCI_RFKILL 1
+#define CONFIG_I2O_EXT_ADAPTEC 1
+#define CONFIG_CRYPTO_MICHAEL_MIC_MODULE 1
+#define CONFIG_TOI_FILE 1
+#define CONFIG_BLOCK 1
+#define CONFIG_MMC_WBSD_MODULE 1
+#define CONFIG_SND_OSSEMUL 1
+#define CONFIG_RADIO_MAXIRADIO_MODULE 1
+#define CONFIG_MFD_SM501_MODULE 1
+#define CONFIG_RT2500PCI_RFKILL 1
+#define CONFIG_PD6729_MODULE 1
+#define CONFIG_GENERIC_CLOCKEVENTS_BUILD 1
+#define CONFIG_GENERIC_HWEIGHT 1
+#define CONFIG_SECURITY_SELINUX_DEVELOP 1
+#define CONFIG_LOCKD 1
+#define CONFIG_QUOTACTL 1
+#define CONFIG_USB_XUSBATM_MODULE 1
+#define CONFIG_USB_PRINTER 1
+#define CONFIG_IWLWIFI_QOS 1
+#define CONFIG_NET_SCH_SFQ_MODULE 1
+#define CONFIG_ATALK_MODULE 1
+#define CONFIG_BRIDGE_EBT_DNAT_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_QUOTA_MODULE 1
+#define CONFIG_BACKLIGHT_CLASS_DEVICE 1
+#define CONFIG_ZONE_DMA 1
+#define CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE 3
+#define CONFIG_SQUASHFS 1
+#define CONFIG_HOSTAP_FIRMWARE_NVRAM 1
+#define CONFIG_ATM_MPOA_MODULE 1
+#define CONFIG_IP_ADVANCED_ROUTER 1
+#define CONFIG_ACORN_PARTITION_EESOX 1
+#define CONFIG_USB_TRANCEVIBRATOR_MODULE 1
+#define CONFIG_ZEROPLUS_FF 1
+#define CONFIG_SND_MONA_MODULE 1
+#define CONFIG_IEEE1394_PCILYNX_MODULE 1
+#define CONFIG_ATA_PIIX 1
+#define CONFIG_CHECK_SIGNATURE 1
+#define CONFIG_IP_VS_LBLCR_MODULE 1
+#define CONFIG_RTC_INTF_SYSFS 1
+#define CONFIG_SND_FM801_MODULE 1
+#define CONFIG_FB_ATY128_MODULE 1
+#define CONFIG_VIDEO_OVCAMCHIP_MODULE 1
+#define CONFIG_IB700_WDT_MODULE 1
+#define CONFIG_FB_BACKLIGHT 1
+#define CONFIG_SATA_SIL 1
+#define CONFIG_MTD_NETtel_MODULE 1
+#define CONFIG_IP_NF_QUEUE_MODULE 1
+#define CONFIG_KALLSYMS 1
+#define CONFIG_NFSD_TCP 1
+#define CONFIG_HID_SUPPORT 1
+#define CONFIG_VIDEO_IR_MODULE 1
+#define CONFIG_PC8736x_GPIO_MODULE 1
+#define CONFIG_NEW_LEDS 1
+#define CONFIG_MD_RAID10 1
+#define CONFIG_IPDDP_MODULE 1
+#define CONFIG_TIPC_LOG 0
+#define CONFIG_BRIDGE_EBT_MARK_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_CONNSECMARK_MODULE 1
+#define CONFIG_EDAC_MM_EDAC_MODULE 1
+#define CONFIG_DVB_MT312_MODULE 1
+#define CONFIG_NSC_GPIO_MODULE 1
+#define CONFIG_TOUCHSCREEN_MTOUCH_MODULE 1
+#define CONFIG_CHELSIO_T1_NAPI 1
+#define CONFIG_SATA_ULI 1
+#define CONFIG_SCSI_PPA_MODULE 1
+#define CONFIG_MTD_NAND_DISKONCHIP_BBTWRITE 1
+#define CONFIG_MTD_SBC_GXX_MODULE 1
+#define CONFIG_BRIDGE_EBT_802_3_MODULE 1
+#define CONFIG_K8_NB 1
+#define CONFIG_SYSVIPC_SYSCTL 1
+#define CONFIG_NLS_UTF8 1
+#define CONFIG_UNION_FS_XATTR 1
+#define CONFIG_SND_HDSP_MODULE 1
+#define CONFIG_ATMEL_MODULE 1
+#define CONFIG_IBMOL_MODULE 1
+#define CONFIG_VITESSE_PHY_MODULE 1
+#define CONFIG_SCSI_EATA_LINKED_COMMANDS 1
+#define CONFIG_SSFDC_MODULE 1
+#define CONFIG_NF_NAT_TFTP_MODULE 1
+#define CONFIG_NETFILTER_DEBUG 1
+#define CONFIG_AGP_AMD64 1
+#define CONFIG_JFFS2_FS_POSIX_ACL 1
+#define CONFIG_USB_DSBR_MODULE 1
+#define CONFIG_VIDEO_CX25840_MODULE 1
+#define CONFIG_VIDEO_SAA7110_MODULE 1
+#define CONFIG_VT_HW_CONSOLE_BINDING 1
+#define CONFIG_TOUCHSCREEN_USB_GUNZE 1
+#define CONFIG_WLAN_PRE80211 1
+#define CONFIG_PATA_SIS 1
+#define CONFIG_SCSI_IMM_MODULE 1
+#define CONFIG_LITELINK_DONGLE_MODULE 1
+#define CONFIG_IPV6_SIT_MODULE 1
+#define CONFIG_TOI_CORE 1
+#define CONFIG_TASK_IO_ACCOUNTING 1
+#define CONFIG_PROC_SYSCTL 1
+#define CONFIG_RTC_HCTOSYS 1
+#define CONFIG_USB_SERIAL_CYPRESS_M8_MODULE 1
+#define CONFIG_VIDEO_SAA7111_MODULE 1
+#define CONFIG_INPUT_TSDEV 1
+#define CONFIG_AF_RXRPC_MODULE 1
+#define CONFIG_IP6_NF_IPTABLES_MODULE 1
+#define CONFIG_CPU_FREQ_STAT_DETAILS 1
+#define CONFIG_CPU_FREQ 1
+#define CONFIG_PM_SLEEP 1
+#define CONFIG_USB_SE401_MODULE 1
+#define CONFIG_DVB_MT352_MODULE 1
+#define CONFIG_SCSI_AACRAID 1
+#define CONFIG_IRLAN_MODULE 1
+#define CONFIG_IP6_NF_MATCH_AH_MODULE 1
+#define CONFIG_USB_MIDI_GADGET_MODULE 1
+#define CONFIG_USB_SL811_CS_MODULE 1
+#define CONFIG_KEYBOARD_SUNKBD 1
+#define CONFIG_SSB_DRIVER_PCICORE 1
+#define CONFIG_SATA_SIS 1
+#define CONFIG_BRIDGE_EBT_VLAN_MODULE 1
+#define CONFIG_BRIDGE_EBT_PKTTYPE_MODULE 1
+#define CONFIG_INET_ESP_MODULE 1
+#define CONFIG_AUDIT 1
+#define CONFIG_CRYPTO_CAMELLIA_MODULE 1
+#define CONFIG_AMIGA_PARTITION 1
+#define CONFIG_SND_PCM_OSS 1
+#define CONFIG_DVB_CORE_ATTACH 1
+#define CONFIG_VIDEO_SAA7114_MODULE 1
+#define CONFIG_W1_MASTER_DS2490_MODULE 1
+#define CONFIG_DRM_TDFX_MODULE 1
+#define CONFIG_INPUT_MOUSE 1
+#define CONFIG_ISDN_DIVAS_USERIDI_MODULE 1
+#define CONFIG_PCMCIA_WL3501_MODULE 1
+#define CONFIG_SONY_LAPTOP_MODULE 1
+#define CONFIG_IP6_NF_MATCH_OWNER_MODULE 1
+#define CONFIG_IP_NF_MATCH_RECENT_MODULE 1
+#define CONFIG_SECURITY 1
+#define CONFIG_NET_IPIP_MODULE 1
+#define CONFIG_RAMFS 1
+#define CONFIG_W1_MASTER_DS2482_MODULE 1
+#define CONFIG_SERIAL_8250_MANY_PORTS 1
+#define CONFIG_USB_NET_ZAURUS_MODULE 1
+#define CONFIG_NF_NAT_PPTP_MODULE 1
+#define CONFIG_FB_GEODE_GX1_MODULE 1
+#define CONFIG_VIDEO_SAA7134_MODULE 1
+#define CONFIG_PHONE_MODULE 1
+#define CONFIG_HIPPI 1
+#define CONFIG_SCSI_QLOGIC_1280 1
+#define CONFIG_RXKAD_MODULE 1
+#define CONFIG_IP_PNP_RARP 1
+#define CONFIG_SHMEM 1
+#define CONFIG_CRYPTO_NULL_MODULE 1
+#define CONFIG_EXPORTFS 1
+#define CONFIG_LEDS_TRIGGER_TIMER_MODULE 1
+#define CONFIG_SENSORS_W83627HF_MODULE 1
+#define CONFIG_SC520_WDT_MODULE 1
+#define CONFIG_SCSI_AIC94XX 1
+#define CONFIG_TASK_DELAY_ACCT 1
+#define CONFIG_REISERFS_FS_POSIX_ACL 1
+#define CONFIG_SND_NM256_MODULE 1
+#define CONFIG_VIDEO_SAA7127_MODULE 1
+#define CONFIG_VIDEO_TEA6420_MODULE 1
+#define CONFIG_IPW2200_PROMISCUOUS 1
+#define CONFIG_PATA_HPT3X2N 1
+#define CONFIG_SCSI_IPR 1
+#define CONFIG_AIC7XXX_REG_PRETTY_PRINT 1
+#define CONFIG_BRIDGE_EBT_SNAT_MODULE 1
+#define CONFIG_IP_VS_PROTO_AH 1
+#define CONFIG_INET_XFRM_MODE_TRANSPORT 1
+#define CONFIG_EPOLL 1
+#define CONFIG_MINIX_FS_MODULE 1
+#define CONFIG_FB_SYS_FOPS_MODULE 1
+#define CONFIG_VIDEO_SAA7146_MODULE 1
+#define CONFIG_VIDEO_SAA7191_MODULE 1
+#define CONFIG_ITCO_WDT_MODULE 1
+#define CONFIG_JOYSTICK_IFORCE_232 1
+#define CONFIG_ATM_ZATM_MODULE 1
+#define CONFIG_SCSI_IPS 1
+#define CONFIG_TP_SMAPI_MODULE 1
+#define CONFIG_INFTL_MODULE 1
+#define CONFIG_BRIDGE_EBT_ULOG_MODULE 1
+#define CONFIG_YENTA_TI 1
+#define CONFIG_RELAY 1
+#define CONFIG_MSDOS_FS 1
+#define CONFIG_FONT_8x8 1
+#define CONFIG_FB_MODE_HELPERS 1
+#define CONFIG_SCSI_AIC79XX 1
+#define CONFIG_VLSI_FIR_MODULE 1
+#define CONFIG_NET_EMATCH_META_MODULE 1
+#define CONFIG_IP_MULTIPLE_TABLES 1
+#define CONFIG_CRYPTO_WP512_MODULE 1
+#define CONFIG_RPCSEC_GSS_KRB5 1
+#define CONFIG_ROMFS_FS 1
+#define CONFIG_VIDEO_SAA5249_MODULE 1
+#define CONFIG_VIDEO_TDA7432_MODULE 1
+#define CONFIG_PPDEV 1
+#define CONFIG_DEFXX_MODULE 1
+#define CONFIG_PCMCIA_ATMEL_MODULE 1
+#define CONFIG_PCMCIA_SPECTRUM_MODULE 1
+#define CONFIG_PATA_PDC2027X 1
+#define CONFIG_SCSI_EATA_MAX_TAGS 16
+#define CONFIG_CRYPTO_TEST_MODULE 1
+#define CONFIG_NLS_CODEPAGE_850_MODULE 1
+#define CONFIG_SND_INTEL8X0_MODULE 1
+#define CONFIG_SND_DYNAMIC_MINORS 1
+#define CONFIG_FB_INTEL_I2C 1
+#define CONFIG_VIDEO_ADV7170_MODULE 1
+#define CONFIG_VIDEO_SAA7185_MODULE 1
+#define CONFIG_MWAVE_MODULE 1
+#define CONFIG_TIPAR_MODULE 1
+#define CONFIG_MEGARAID_SAS 1
+#define CONFIG_SCSI_TGT_MODULE 1
+#define CONFIG_IEEE80211_SOFTMAC_MODULE 1
+#define CONFIG_NLS_CODEPAGE_932_MODULE 1
+#define CONFIG_NLS_CODEPAGE_950_MODULE 1
+#define CONFIG_NLS_CODEPAGE_860_MODULE 1
+#define CONFIG_NLS_CODEPAGE_437_MODULE 1
+#define CONFIG_UNION_FS 1
+#define CONFIG_REISERFS_PROC_INFO 1
+#define CONFIG_INFINIBAND_USER_ACCESS_MODULE 1
+#define CONFIG_JOYSTICK_GUILLEMOT_MODULE 1
+#define CONFIG_JOYSTICK_ANALOG_MODULE 1
+#define CONFIG_PPP_MPPE_MODULE 1
+#define CONFIG_IP6_NF_MATCH_HL_MODULE 1
+#define CONFIG_YENTA_MODULE 1
+#define CONFIG_STACKTRACE_SUPPORT 1
+#define CONFIG_NLS_CODEPAGE_861_MODULE 1
+#define CONFIG_NLS_CODEPAGE_852_MODULE 1
+#define CONFIG_USB_SERIAL_OMNINET_MODULE 1
+#define CONFIG_VIDEO_EM28XX_MODULE 1
+#define CONFIG_GAMEPORT_EMU10K1_MODULE 1
+#define CONFIG_TOUCHSCREEN_ELO_MODULE 1
+#define CONFIG_SERIO 1
+#define CONFIG_RT2X00_LIB_FIRMWARE 1
+#define CONFIG_ABYSS_MODULE 1
+#define CONFIG_DM_CRYPT 1
+#define CONFIG_IRNET_MODULE 1
+#define CONFIG_IP6_NF_MATCH_MH_MODULE 1
+#define CONFIG_NLS_CODEPAGE_862_MODULE 1
+#define CONFIG_USB_SERIAL_KEYSPAN_MODULE 1
+#define CONFIG_SND_CS46XX_NEW_DSP 1
+#define CONFIG_JOYSTICK_XPAD_LEDS 1
+#define CONFIG_SCSI_FUTURE_DOMAIN_MODULE 1
+#define CONFIG_MTD_NAND_VERIFY_WRITE 1
+#define CONFIG_NLS_CODEPAGE_863_MODULE 1
+#define CONFIG_NLS_CODEPAGE_737_MODULE 1
+#define CONFIG_RTC_HCTOSYS_DEVICE "rtc0"
+#define CONFIG_VIDEO_TDA9840_MODULE 1
+#define CONFIG_PPPOE_MODULE 1
+#define CONFIG_MAC_EMUMOUSEBTN 1
+#define CONFIG_NVRAM_MODULE 1
+#define CONFIG_NLS_CODEPAGE_936_MODULE 1
+#define CONFIG_NLS_CODEPAGE_864_MODULE 1
+#define CONFIG_NLS_CODEPAGE_855_MODULE 1
+#define CONFIG_KARMA_PARTITION 1
+#define CONFIG_USB_DYNAMIC_MINORS 1
+#define CONFIG_USB_OV511_MODULE 1
+#define CONFIG_VIDEO_ADV7175_MODULE 1
+#define CONFIG_ZLIB_DEFLATE_MODULE 1
+#define CONFIG_NET_VENDOR_3COM 1
+#define CONFIG_CLS_U32_MARK 1
+#define CONFIG_INET_XFRM_MODE_TUNNEL 1
+#define CONFIG_NLS_CODEPAGE_874_MODULE 1
+#define CONFIG_NLS_CODEPAGE_865_MODULE 1
+#define CONFIG_NLS_CODEPAGE_775_MODULE 1
+#define CONFIG_CODA_FS_OLD_API 1
+#define CONFIG_USB_SUPPORT 1
+#define CONFIG_SND_SB16_DSP_MODULE 1
+#define CONFIG_SND_VERBOSE_PROCFS 1
+#define CONFIG_VIDEO_SAA6588_MODULE 1
+#define CONFIG_PCMCIA_PCNET_MODULE 1
+#define CONFIG_SMSC_PHY_MODULE 1
+#define CONFIG_SCSI_SRP_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_HASHLIMIT_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_CONNTRACK_MODULE 1
+#define CONFIG_ACPI_TOSHIBA 1
+#define CONFIG_TOI_SWAP 1
+#define CONFIG_NLS_CODEPAGE_866_MODULE 1
+#define CONFIG_NLS_CODEPAGE_857_MODULE 1
+#define CONFIG_HUGETLB_PAGE 1
+#define CONFIG_USB_SERIAL_SAFE_MODULE 1
+#define CONFIG_JOYSTICK_IFORCE_MODULE 1
+#define CONFIG_JOYSTICK_A3D_MODULE 1
+#define CONFIG_IEEE80211_CRYPT_CCMP_MODULE 1
+#define CONFIG_MKISS_MODULE 1
+#define CONFIG_CLS_U32_PERF 1
+#define CONFIG_IA32_AOUT 1
+#define CONFIG_PCMCIA_IOCTL 1
+#define CONFIG_IOMMU 1
+#define CONFIG_MINIX_SUBPARTITION 1
+#define CONFIG_INFINIBAND_CXGB3_MODULE 1
+#define CONFIG_USB_SERIAL_SAFE_PADDED 1
+#define CONFIG_SND_VX222_MODULE 1
+#define CONFIG_FB_RADEON_BACKLIGHT 1
+#define CONFIG_VIDEO_SAA7146_VV_MODULE 1
+#define CONFIG_W1_MODULE 1
+#define CONFIG_ISDN_CAPI_CAPI20_MODULE 1
+#define CONFIG_SIS900_MODULE 1
+#define CONFIG_FB 1
+#define CONFIG_SATA_SVW 1
+#define CONFIG_BT_HCIBCM203X_MODULE 1
+#define CONFIG_X86_POWERNOW_K8 1
+#define CONFIG_NLS_CODEPAGE_949_MODULE 1
+#define CONFIG_USB_TEST_MODULE 1
+#define CONFIG_SOUND 1
+#define CONFIG_SIS190_MODULE 1
+#define CONFIG_HWMON 1
+#define CONFIG_IP_NF_ARPTABLES_MODULE 1
+#define CONFIG_ACPI_THERMAL 1
+#define CONFIG_NLS_CODEPAGE_869_MODULE 1
+#define CONFIG_ATARI_PARTITION 1
+#define CONFIG_ROOT_NFS 1
+#define CONFIG_TMPFS 1
+#define CONFIG_QUOTA 1
+#define CONFIG_LEDS_TRIGGER_HEARTBEAT_MODULE 1
+#define CONFIG_FONTS 1
+#define CONFIG_WANXL_MODULE 1
+#define CONFIG_ASK_IP_FIB_HASH 1
+#define CONFIG_RTC_INTF_DEV_UIE_EMUL 1
+#define CONFIG_I2C_PIIX4_MODULE 1
+#define CONFIG_KEYBOARD_NEWTON 1
+#define CONFIG_HOSTAP_FIRMWARE 1
+#define CONFIG_PCI_MMCONFIG 1
+#define CONFIG_GENERIC_TIME 1
+#define CONFIG_CRYPTO_TWOFISH_COMMON_MODULE 1
+#define CONFIG_ACORN_PARTITION 1
+#define CONFIG_USB_EMI26_MODULE 1
+#define CONFIG_USB_EMI62_MODULE 1
+#define CONFIG_USB_SERIAL_HP4X_MODULE 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA19W 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA18X 1
+#define CONFIG_SND_INDIGODJ_MODULE 1
+#define CONFIG_VIDEO_HEXIUM_ORION_MODULE 1
+#define CONFIG_VIDEO_TDA9875_MODULE 1
+#define CONFIG_SENSORS_LM70_MODULE 1
+#define CONFIG_IPMI_HANDLER_MODULE 1
+#define CONFIG_SLIP_COMPRESSED 1
+#define CONFIG_PCMCIA_AXNET_MODULE 1
+#define CONFIG_B43LEGACY_DMA_AND_PIO_MODE 1
+#define CONFIG_DUMMY_MODULE 1
+#define CONFIG_PATA_NETCELL 1
+#define CONFIG_SCSI_DMX3191D 1
+#define CONFIG_BT_HCIUART_BCSP 1
+#define CONFIG_IP_VS_DH_MODULE 1
+#define CONFIG_PLIST 1
+#define CONFIG_FUTEX 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA28X 1
+#define CONFIG_USB_SERIAL_FUNSOFT_MODULE 1
+#define CONFIG_SND_RME32_MODULE 1
+#define CONFIG_VIDEO_MSP3400_MODULE 1
+#define CONFIG_SENSORS_LM80_MODULE 1
+#define CONFIG_SERIO_LIBPS2 1
+#define CONFIG_IPW3945_PROMISCUOUS 1
+#define CONFIG_WLAN_80211 1
+#define CONFIG_IP_NF_MATCH_ECN_MODULE 1
+#define CONFIG_INET6_IPCOMP_MODULE 1
+#define CONFIG_USB_GADGETFS_MODULE 1
+#define CONFIG_VIDEO_IR_I2C_MODULE 1
+#define CONFIG_SENSORS_LM90_MODULE 1
+#define CONFIG_SENSORS_LM63_MODULE 1
+#define CONFIG_JOYSTICK_DB9_MODULE 1
+#define CONFIG_USB_NET_CDC_SUBSET_MODULE 1
+#define CONFIG_PCMCIA_RAYCS_MODULE 1
+#define CONFIG_TULIP_MODULE 1
+#define CONFIG_MISC_DEVICES 1
+#define CONFIG_EXPERIMENTAL 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA49W 1
+#define CONFIG_SND_CA0106_MODULE 1
+#define CONFIG_DVB_TUNER_QT1010_MODULE 1
+#define CONFIG_B43LEGACY_DMA 1
+#define CONFIG_NETWORK_SECMARK 1
+#define CONFIG_IP_VS_LC_MODULE 1
+#define CONFIG_GENERIC_CLOCKEVENTS_BROADCAST 1
+#define CONFIG_X86_64 1
+#define CONFIG_OCFS2_DEBUG_MASKLOG 1
+#define CONFIG_USB_EHCI_HCD_MODULE 1
+#define CONFIG_SENSORS_LM92_MODULE 1
+#define CONFIG_SENSORS_LM83_MODULE 1
+#define CONFIG_RT2X00_MODULE 1
+#define CONFIG_IEEE1394_VIDEO1394_MODULE 1
+#define CONFIG_INPUT 1
+#define CONFIG_VIRT_TO_BUS 1
+#define CONFIG_DVB_TUNER_MT2060_MODULE 1
+#define CONFIG_DVB_L64781_MODULE 1
+#define CONFIG_VIDEO_BWQCAM_MODULE 1
+#define CONFIG_SENSORS_LM75_MODULE 1
+#define CONFIG_I2C_AMD756_MODULE 1
+#define CONFIG_TABLET_USB_GTCO_MODULE 1
+#define CONFIG_MD 1
+#define CONFIG_BLK_DEV_CRYPTOLOOP 1
+#define CONFIG_BLK_CPQ_CISS_DA 1
+#define CONFIG_ACPI_PROC_EVENT 1
+#define CONFIG_CALGARY_IOMMU_ENABLED_BY_DEFAULT 1
+#define CONFIG_LOCALVERSION ""
+#define CONFIG_SMB_NLS_DEFAULT 1
+#define CONFIG_USB_DEVICEFS 1
+#define CONFIG_SND_MAESTRO3_MODULE 1
+#define CONFIG_SENSORS_LM85_MODULE 1
+#define CONFIG_SPI_LM70_LLP_MODULE 1
+#define CONFIG_SERIO_PCIPS2 1
+#define CONFIG_IWLWIFI_SPECTRUM_MEASUREMENT 1
+#define CONFIG_STRIP_MODULE 1
+#define CONFIG_MTD_DOCPROBE_MODULE 1
+#define CONFIG_AUDITSYSCALL 1
+#define CONFIG_USB_SERIAL_IPAQ_MODULE 1
+#define CONFIG_VIDEO_CX2341X_MODULE 1
+#define CONFIG_SENSORS_LM77_MODULE 1
+#define CONFIG_TCG_INFINEON_MODULE 1
+#define CONFIG_PATA_OPTIDMA 1
+#define CONFIG_SCSI_SCAN_ASYNC 1
+#define CONFIG_IP6_NF_MATCH_RT_MODULE 1
+#define CONFIG_ZLIB_INFLATE 1
+#define CONFIG_X86_SPEEDSTEP_CENTRINO_MODULE 1
+#define CONFIG_INIT_ENV_ARG_LIMIT 32
+#define CONFIG_DVB_B2C2_FLEXCOP_MODULE 1
+#define CONFIG_SENSORS_LM87_MODULE 1
+#define CONFIG_SENSORS_LM78_MODULE 1
+#define CONFIG_FORCEDETH_MODULE 1
+#define CONFIG_I2O_BLOCK 1
+#define CONFIG_IP_NF_ARPFILTER_MODULE 1
+#define CONFIG_IOSCHED_DEADLINE 1
+#define CONFIG_GFS2_FS_LOCKING_NOLOCK_MODULE 1
+#define CONFIG_SERIO_PARKBD 1
+#define CONFIG_SC92031_MODULE 1
+#define CONFIG_SCSI_SAS_LIBSAS 1
+#define CONFIG_MICROCODE_MODULE 1
+#define CONFIG_SND_INDIGOIO_MODULE 1
+#define CONFIG_VIDEO_SELECT 1
+#define CONFIG_PATA_WINBOND 1
+#define CONFIG_NL80211 1
+#define CONFIG_BT_MODULE 1
+#define CONFIG_SIGMATEL_FIR_MODULE 1
+#define CONFIG_NET_CLS_TCINDEX_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_CONNMARK_MODULE 1
+#define CONFIG_NF_CONNTRACK_MODULE 1
+#define CONFIG_JFFS2_COMPRESSION_OPTIONS 1
+#define CONFIG_USB_SERIAL_MCT_U232_MODULE 1
+#define CONFIG_USB_EHCI_SPLIT_ISO 1
+#define CONFIG_SND_RME96_MODULE 1
+#define CONFIG_FRAMEBUFFER_CONSOLE 1
+#define CONFIG_LAPBETHER_MODULE 1
+#define CONFIG_BROADCOM_PHY_MODULE 1
+#define CONFIG_PATA_JMICRON 1
+#define CONFIG_ACER_ACPI_MODULE 1
+#define CONFIG_MTD_DILNETPC_MODULE 1
+#define CONFIG_NF_CONNTRACK_AMANDA_MODULE 1
+#define CONFIG_NET_KEY_MIGRATE 1
+#define CONFIG_ACPI_BATTERY_MODULE 1
+#define CONFIG_SND_OPL3_LIB_MODULE 1
+#define CONFIG_USB_KONICAWC_MODULE 1
+#define CONFIG_VIDEO_USBVISION_MODULE 1
+#define CONFIG_SENSORS_IT87_MODULE 1
+#define CONFIG_I2O_LCT_NOTIFY_ON_CHANGES 1
+#define CONFIG_PATA_MARVELL 1
+#define CONFIG_SCSI_LOGGING 1
+#define CONFIG_BRIDGE_EBT_REDIRECT_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_CONNBYTES_MODULE 1
+#define CONFIG_SYSFS 1
+#define CONFIG_NFS_DIRECTIO 1
+#define CONFIG_FB_SYS_COPYAREA_MODULE 1
+#define CONFIG_MTD_ONENAND_OTP 1
+#define CONFIG_USB_OHCI_HCD_MODULE 1
+#define CONFIG_FB_SYS_FILLRECT_MODULE 1
+#define CONFIG_TUNER_TEA5761 1
+#define CONFIG_HW_RANDOM_INTEL 1
+#define CONFIG_PATA_PDC_OLD 1
+#define CONFIG_TCP_CONG_BIC 1
+#define CONFIG_X86_CPUID 1
+#define CONFIG_IOSCHED_NOOP 1
+#define CONFIG_STOP_MACHINE 1
+#define CONFIG_USB_SERIAL_KLSI_MODULE 1
+#define CONFIG_USB_SERIAL_AIRCABLE_MODULE 1
+#define CONFIG_DVB_AV7110_MODULE 1
+#define CONFIG_VIDEO_VPX3220_MODULE 1
+#define CONFIG_VIDEO_TVP5150_MODULE 1
+#define CONFIG_I2C_TAOS_EVM_MODULE 1
+#define CONFIG_USB_ALI_M5632 1
+#define CONFIG_SCSI_EATA_TAGGED_QUEUE 1
+#define CONFIG_BT_HCIBTUART_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_STATISTIC_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_CLASSIFY_MODULE 1
+#define CONFIG_INET6_TUNNEL_MODULE 1
+#define CONFIG_IP_VS_SH_MODULE 1
+#define CONFIG_TOI_REPLACE_SWSUSP 1
+#define CONFIG_X86_64_ACPI_NUMA 1
+#define CONFIG_USB_SERIAL_SIERRAWIRELESS_MODULE 1
+#define CONFIG_VIDEO_SAA711X_MODULE 1
+#define CONFIG_NET_SB1000_MODULE 1
+#define CONFIG_SATA_INIC162X 1
+#define CONFIG_AIC79XX_RESET_DELAY_MS 15000
+#define CONFIG_IEEE80211_CRYPT_TKIP_MODULE 1
+#define CONFIG_NET_ACT_GACT_MODULE 1
+#define CONFIG_NET_EMATCH_TEXT_MODULE 1
+#define CONFIG_HIGH_RES_TIMERS 1
+#define CONFIG_USB_GADGET_SELECTED 1
+#define CONFIG_V4L_USB_DRIVERS 1
+#define CONFIG_TOUCHSCREEN_USB_EGALAX 1
+#define CONFIG_JOYSTICK_ADI_MODULE 1
+#define CONFIG_SATA_AHCI 1
+#define CONFIG_SCSI_AIC7XXX 1
+#define CONFIG_PARPORT_PC_FIFO 1
+#define CONFIG_ACPI_DOCK 1
+#define CONFIG_PM 1
+#define CONFIG_GENERIC_CLOCKEVENTS 1
+#define CONFIG_CRYPTO_BLOWFISH_MODULE 1
+#define CONFIG_INFINIBAND_MTHCA_MODULE 1
+#define CONFIG_FB_SAVAGE_MODULE 1
+#define CONFIG_SERIAL_8250_EXTENDED 1
+#define CONFIG_TOUCHSCREEN_USB_COMPOSITE_MODULE 1
+#define CONFIG_ADM8211_MODULE 1
+#define CONFIG_PATA_OLDPIIX 1
+#define CONFIG_MTD_CFI_STAA_MODULE 1
+#define CONFIG_NET_SCH_INGRESS_MODULE 1
+#define CONFIG_IPV6_ROUTE_INFO 1
+#define CONFIG_IP_ROUTE_MULTIPATH 1
+#define CONFIG_TOI_CHECKSUM 1
+#define CONFIG_NO_HZ 1
+#define CONFIG_LOCKDEP_SUPPORT 1
+#define CONFIG_MSDOS_PARTITION 1
+#define CONFIG_FB_CFB_IMAGEBLIT 1
+#define CONFIG_USB_QUICKCAM_MESSENGER_MODULE 1
+#define CONFIG_LIBERTAS_USB_MODULE 1
+#define CONFIG_IP_NF_MANGLE_MODULE 1
+#define CONFIG_IP_VS_NQ_MODULE 1
+#define CONFIG_ACORN_PARTITION_CUMANA 1
+#define CONFIG_CRYPTO_CAST5_MODULE 1
+#define CONFIG_USB_STORAGE_DATAFAB 1
+#define CONFIG_USB_UHCI_HCD_MODULE 1
+#define CONFIG_FB_RADEON_MODULE 1
+#define CONFIG_IPV6_MIP6_MODULE 1
+#define CONFIG_CRYPTO_CAST6_MODULE 1
+#define CONFIG_DCDBAS 1
+#define CONFIG_INFINIBAND_USER_MAD_MODULE 1
+#define CONFIG_THRUSTMASTER_FF 1
+#define CONFIG_SND_BT87X_MODULE 1
+#define CONFIG_HAPPYMEAL_MODULE 1
+#define CONFIG_IP_VS_MODULE 1
+#define CONFIG_SND_FM801_TEA575X_MODULE 1
+#define CONFIG_SND_MTS64_MODULE 1
+#define CONFIG_SPECIALIX_MODULE 1
+#define CONFIG_IPV6_PRIVACY 1
+#define CONFIG_X86_PM_TIMER 1
+#define CONFIG_HZ 1000
+#define CONFIG_LDM_DEBUG 1
+#define CONFIG_SND_AD1889_MODULE 1
+#define CONFIG_FONT_SUN8x16 1
+#define CONFIG_INPUT_POWERMATE_MODULE 1
+#define CONFIG_TOUCHSCREEN_TOUCHRIGHT_MODULE 1
+#define CONFIG_USB_KC2190 1
+#define CONFIG_USB_AN2720 1
+#define CONFIG_ACENIC_MODULE 1
+#define CONFIG_PATA_TRIFLEX 1
+#define CONFIG_PATA_EFAR 1
+#define CONFIG_SMC_IRCC_FIR_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_HELPER_MODULE 1
+#define CONFIG_HUGETLBFS 1
+#define CONFIG_INFINIBAND_IPOIB_MODULE 1
+#define CONFIG_ISDN_DIVAS_DIVACAPI_MODULE 1
+#define CONFIG_WAN_ROUTER_DRIVERS_MODULE 1
+#define CONFIG_HDLC_RAW_ETH_MODULE 1
+#define CONFIG_PATA_RADISYS 1
+#define CONFIG_MTD_NAND_IDS_MODULE 1
+#define CONFIG_MTD_PHYSMAP_LEN 0x4000000
+#define CONFIG_IP_VS_RR_MODULE 1
+#define CONFIG_INET_DIAG 1
+#define CONFIG_NLS_ISO8859_1_MODULE 1
+#define CONFIG_I2C_SIS630_MODULE 1
+#define CONFIG_B43LEGACY_PIO 1
+#define CONFIG_NET_ETHERNET 1
+#define CONFIG_MEGARAID_MAILBOX 1
+#define CONFIG_NET_SCH_GRED_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_LENGTH_MODULE 1
+#define CONFIG_XFRM_MIGRATE 1
+#define CONFIG_ACPI_BLACKLIST_YEAR 0
+#define CONFIG_NLS_ISO8859_2_MODULE 1
+#define CONFIG_FONT_6x11 1
+#define CONFIG_ATM_LANAI_MODULE 1
+#define CONFIG_TR 1
+#define CONFIG_NS83820_MODULE 1
+#define CONFIG_SCSI_NETLINK 1
+#define CONFIG_REED_SOLOMON_MODULE 1
+#define CONFIG_IP6_NF_QUEUE_MODULE 1
+#define CONFIG_NLS_ISO8859_3_MODULE 1
+#define CONFIG_EDAC_E752X_MODULE 1
+#define CONFIG_INFINIBAND_IPATH_MODULE 1
+#define CONFIG_MMC_SDHCI_MODULE 1
+#define CONFIG_MMC_BLOCK_MODULE 1
+#define CONFIG_USB_MICROTEK_MODULE 1
+#define CONFIG_USB_OHCI_LITTLE_ENDIAN 1
+#define CONFIG_SND_CS5530_MODULE 1
+#define CONFIG_VIDEO_ZORAN_DC10_MODULE 1
+#define CONFIG_SC1200_WDT_MODULE 1
+#define CONFIG_SATA_PROMISE 1
+#define CONFIG_TIFM_7XX1_MODULE 1
+#define CONFIG_NET_SCH_HFSC_MODULE 1
+#define CONFIG_NET_SCH_FIFO 1
+#define CONFIG_NLS_ISO8859_4_MODULE 1
+#define CONFIG_SND_BT87X_OVERCLOCK 1
+#define CONFIG_MOUSE_SERIAL 1
+#define CONFIG_USB_EPSON2888 1
+#define CONFIG_SSB_POSSIBLE 1
+#define CONFIG_DE2104X_MODULE 1
+#define CONFIG_DM_MULTIPATH_MODULE 1
+#define CONFIG_MD_MULTIPATH 1
+#define CONFIG_ASYNC_MEMCPY 1
+#define CONFIG_PARIDE_PD_MODULE 1
+#define CONFIG_NLS_ISO8859_5_MODULE 1
+#define CONFIG_SND_CS4281_MODULE 1
+#define CONFIG_VIDEO_ZORAN_DC30_MODULE 1
+#define CONFIG_SBC_EPX_C3_WATCHDOG_MODULE 1
+#define CONFIG_B43_MODULE 1
+#define CONFIG_ATM_BR2684_MODULE 1
+#define CONFIG_NLS_ISO8859_6_MODULE 1
+#define CONFIG_USB_LIBUSUAL 1
+#define CONFIG_FONT_7x14 1
+#define CONFIG_USB_ZC0301_MODULE 1
+#define CONFIG_I2C_TINY_USB_MODULE 1
+#define CONFIG_B44_MODULE 1
+#define CONFIG_BLK_DEV_UMEM 1
+#define CONFIG_PARIDE_PF_MODULE 1
+#define CONFIG_ISDN_CAPI_MODULE 1
+#define CONFIG_VT 1
+#define CONFIG_MIGRATION 1
+#define CONFIG_TICK_ONESHOT 1
+#define CONFIG_NLS_ISO8859_7_MODULE 1
+#define CONFIG_NLS_CODEPAGE_1250_MODULE 1
+#define CONFIG_TMPFS_POSIX_ACL 1
+#define CONFIG_SND_AU8810_MODULE 1
+#define CONFIG_SENSORS_SMSC47M1_MODULE 1
+#define CONFIG_SX_MODULE 1
+#define CONFIG_INPUT_TABLET 1
+#define CONFIG_USB_ZD1201_MODULE 1
+#define CONFIG_MD_LINEAR 1
+#define CONFIG_SATA_VITESSE 1
+#define CONFIG_PARIDE_PG_MODULE 1
+#define CONFIG_MTD_DEBUG 1
+#define CONFIG_CONNECTOR 1
+#define CONFIG_IP_NF_MATCH_TTL_MODULE 1
+#define CONFIG_NLS_CODEPAGE_1251_MODULE 1
+#define CONFIG_NLS_ISO8859_8_MODULE 1
+#define CONFIG_GFS2_FS_LOCKING_DLM_MODULE 1
+#define CONFIG_SND_AU8820_MODULE 1
+#define CONFIG_USB_NET_RNDIS_HOST_MODULE 1
+#define CONFIG_ARCNET_RIM_I_MODULE 1
+#define CONFIG_MD_RAID5_RESHAPE 1
+#define CONFIG_SCSI_EATA 1
+#define CONFIG_VLAN_8021Q_MODULE 1
+#define CONFIG_GENERIC_PENDING_IRQ 1
+#define CONFIG_RWSEM_GENERIC_SPINLOCK 1
+#define CONFIG_NLS_ISO8859_9_MODULE 1
+#define CONFIG_NCPFS_OS2_NS 1
+#define CONFIG_SND_AU8830_MODULE 1
+#define CONFIG_FONT_8x16 1
+#define CONFIG_VIDEO_DPC_MODULE 1
+#define CONFIG_EUROTECH_WDT_MODULE 1
+#define CONFIG_MLX4_CORE_MODULE 1
+#define CONFIG_NET_SCHED 1
+#define CONFIG_IP_NF_MATCH_TOS_MODULE 1
+#define CONFIG_BRIDGE_MODULE 1
+#define CONFIG_INET6_ESP_MODULE 1
+#define CONFIG_NETFILTER 1
+#define CONFIG_PCMCIA_MODULE 1
+#define CONFIG_PCCARD 1
+#define CONFIG_SPARSEMEM 1
+#define CONFIG_ACPI_NUMA 1
+#define CONFIG_BASE_FULL 1
+#define CONFIG_RTC_DRV_V3020_MODULE 1
+#define CONFIG_INFINIBAND_USER_MEM 1
+#define CONFIG_SND_RTCTIMER_MODULE 1
+#define CONFIG_SSB_DEBUG 1
+#define CONFIG_ISDN_DRV_AVMB1_B1PCMCIA_MODULE 1
+#define CONFIG_PCI_ATMEL_MODULE 1
+#define CONFIG_VIA_VELOCITY_MODULE 1
+#define CONFIG_PATA_CYPRESS 1
+#define CONFIG_SCSI_SYM53C8XX_MMIO 1
+#define CONFIG_SCSI_SYM53C8XX_2 1
+#define CONFIG_CRC_CCITT_MODULE 1
+#define CONFIG_IP_MULTICAST 1
+#define CONFIG_USB_G_SERIAL_MODULE 1
+#define CONFIG_FIXED_MII_10_FDX 1
+#define CONFIG_MD_RAID456 1
+#define CONFIG_MTD_BLOCK_RO_MODULE 1
+#define CONFIG_MTD_BLOCK_MODULE 1
+#define CONFIG_NET_IPGRE_BROADCAST 1
+#define CONFIG_NCPFS_EXTRAS 1
+#define CONFIG_USB_SL811_HCD_MODULE 1
+#define CONFIG_VIDEO_ZORAN_BUZ_MODULE 1
+#define CONFIG_TCG_ATMEL_MODULE 1
+#define CONFIG_BLK_DEV_LOOP 1
+#define CONFIG_MTD_NAND_DISKONCHIP_MODULE 1
+#define CONFIG_MTD_M25P80_MODULE 1
+#define CONFIG_IRDA_FAST_RR 1
+#define CONFIG_GENERIC_CMOS_UPDATE 1
+#define CONFIG_SND_ES1938_MODULE 1
+#define CONFIG_I2C_BOARDINFO 1
+#define CONFIG_TOUCHSCREEN_USB_PANJIT 1
+#define CONFIG_ADAPTEC_STARFIRE_MODULE 1
+#define CONFIG_ATA_OVER_ETH_MODULE 1
+#define CONFIG_GACT_PROB 1
+#define CONFIG_IP_NF_FILTER_MODULE 1
+#define CONFIG_IPV6_OPTIMISTIC_DAD 1
+#define CONFIG_PM_LEGACY 1
+#define CONFIG_GENERIC_CALIBRATE_DELAY 1
+#define CONFIG_NFS_ACL_SUPPORT 1
+#define CONFIG_SND_AC97_POWER_SAVE 1
+#define CONFIG_FB_DDC_MODULE 1
+#define CONFIG_DISPLAY_SUPPORT_MODULE 1
+#define CONFIG_VIDEO_CX88_VP3054_MODULE 1
+#define CONFIG_EPIC100_MODULE 1
+#define CONFIG_EQUALIZER_MODULE 1
+#define CONFIG_HAS_IOMEM 1
+#define CONFIG_INET6_XFRM_MODE_TRANSPORT_MODULE 1
+#define CONFIG_RTC_DRV_X1205_MODULE 1
+#define CONFIG_FB_3DFX_ACCEL 1
+#define CONFIG_VIDEO_BUF_MODULE 1
+#define CONFIG_AGP_INTEL_MODULE 1
+#define CONFIG_MOXA_SMARTIO_MODULE 1
+#define CONFIG_IPW2100_MODULE 1
+#define CONFIG_IEEE1394_DV1394_MODULE 1
+#define CONFIG_MTD_CFI_UTIL_MODULE 1
+#define CONFIG_RFKILL_INPUT_MODULE 1
+#define CONFIG_BT_HCIUSB_MODULE 1
+#define CONFIG_DECNET_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_MULTIPORT_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_POLICY_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_NFLOG_MODULE 1
+#define CONFIG_FW_LOADER 1
+#define CONFIG_CRYPTO_SHA512_MODULE 1
+#define CONFIG_SND_ES1968_MODULE 1
+#define CONFIG_IPW2200_MODULE 1
+#define CONFIG_TIGON3_MODULE 1
+#define CONFIG_MTD_CK804XROM_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_MAC_MODULE 1
+#define CONFIG_EARLY_PRINTK 1
+#define CONFIG_NLS_ASCII_MODULE 1
+#define CONFIG_USB_MDC800_MODULE 1
+#define CONFIG_DVB_SP8870_MODULE 1
+#define CONFIG_VIDEO_SAA7134_DVB_MODULE 1
+#define CONFIG_VIDEO_DEV_MODULE 1
+#define CONFIG_B43_PCMCIA 1
+#define CONFIG_VIA_RHINE_MODULE 1
+#define CONFIG_PARIDE 1
+#define CONFIG_MTD_TS5500_MODULE 1
+#define CONFIG_BRIDGE_EBT_ARPREPLY_MODULE 1
+#define CONFIG_XFRM_SUB_POLICY 1
+#define CONFIG_NCPFS_STRONG 1
+#define CONFIG_FB_PM2_MODULE 1
+#define CONFIG_DVB_USB_GL861_MODULE 1
+#define CONFIG_SCSI_LPFC 1
+#define CONFIG_NET_ACT_SIMP_MODULE 1
+#define CONFIG_IP_DCCP_CCID2_MODULE 1
+#define CONFIG_MODULE_FORCE_UNLOAD 1
+#define CONFIG_RTC_INTF_DEV 1
+#define CONFIG_USB_SERIAL_KEYSPAN_PDA_MODULE 1
+#define CONFIG_SND_ALS300_MODULE 1
+#define CONFIG_LCD_CLASS_DEVICE_MODULE 1
+#define CONFIG_VIDEO_PVRUSB2_24XXX 1
+#define CONFIG_IP_DCCP_CCID3_MODULE 1
+#define CONFIG_X86_ACPI_CPUFREQ 1
+#define CONFIG_ISO9660_FS 1
+#define CONFIG_SND_VXPOCKET_MODULE 1
+#define CONFIG_FB_TRIDENT_ACCEL 1
+#define CONFIG_SCSI_GDTH 1
+#define CONFIG_TIFM_CORE_MODULE 1
+#define CONFIG_PARIDE_PT_MODULE 1
+#define CONFIG_BRIDGE_EBT_AMONG_MODULE 1
+#define CONFIG_PACKET 1
+#define CONFIG_HOTPLUG_PCI_CPCI_ZT5550_MODULE 1
+#define CONFIG_CPU_FREQ_GOV_CONSERVATIVE 1
+#define CONFIG_ACPI_ASUS 1
+#define CONFIG_X86_PC 1
+#define CONFIG_CRYPTO_SHA256_MODULE 1
+#define CONFIG_SND_SERIAL_U16550_MODULE 1
+#define CONFIG_USB_VICAM_MODULE 1
+#define CONFIG_TUNER_3036_MODULE 1
+#define CONFIG_DVB_BT8XX_MODULE 1
+#define CONFIG_USB_ARMLINUX 1
+#define CONFIG_YELLOWFIN_MODULE 1
+#define CONFIG_AIC79XX_DEBUG_ENABLE 1
+#define CONFIG_PARIDE_EPATC8 1
+#define CONFIG_BT_RFCOMM_MODULE 1
+#define CONFIG_DONGLE 1
+#define CONFIG_NET_SCH_TEQL_MODULE 1
+#define CONFIG_BRIDGE_NETFILTER 1
+#define CONFIG_BSD_PROCESS_ACCT_V3 1
+#define CONFIG_DEBUG_BUGVERBOSE 1
+#define CONFIG_NCPFS_IOCTL_LOCKING 1
+#define CONFIG_JFS_SECURITY 1
+#define CONFIG_FS_POSIX_ACL 1
+#define CONFIG_RTC_DRV_STK17TA8_MODULE 1
+#define CONFIG_I2C_AMD8111_MODULE 1
+#define CONFIG_COMPUTONE_MODULE 1
+#define CONFIG_R8169_VLAN 1
+#define CONFIG_NETFILTER_XT_MATCH_STRING_MODULE 1
+#define CONFIG_NF_CT_PROTO_GRE_MODULE 1
+#define CONFIG_GENERIC_HARDIRQS 1
+#define CONFIG_SCHED_SMT 1
+#define CONFIG_FB_SAVAGE_I2C 1
+#define CONFIG_HPET_MMAP 1
+#define CONFIG_AIC7XXX_RESET_DELAY_MS 15000
+#define CONFIG_SCSI_3W_9XXX 1
+#define CONFIG_IP6_NF_MATCH_IPV6HEADER_MODULE 1
+#define CONFIG_INET6_XFRM_MODE_TUNNEL_MODULE 1
+#define CONFIG_FIB_RULES 1
+#define CONFIG_CPU_IDLE_GOV_LADDER 1
+#define CONFIG_QNX4FS_FS 1
+#define CONFIG_CRAMFS_MODULE 1
+#define CONFIG_SND_HWDEP_MODULE 1
+#define CONFIG_VIDEO_PVRUSB2_29XXX 1
+#define CONFIG_TOUCHSCREEN_USB_ETURBO 1
+#define CONFIG_MOUSE_PS2_LOGIPS2PP 1
+#define CONFIG_USB_ATMEL_MODULE 1
+#define CONFIG_FUSION_FC 1
+#define CONFIG_MTD_PHRAM_MODULE 1
+#define CONFIG_BOUNCE 1
+#define CONFIG_ACORN_PARTITION_RISCIX 1
+#define CONFIG_FB_ATY_BACKLIGHT 1
+#define CONFIG_FB_RADEON_I2C 1
+#define CONFIG_FB_ARC_MODULE 1
+#define CONFIG_VIDEO_MXB_MODULE 1
+#define CONFIG_VIDEO_ZORAN_LML33R10_MODULE 1
+#define CONFIG_VIDEO_SAA5246A_MODULE 1
+#define CONFIG_SERIO_CT82C710 1
+#define CONFIG_JOYSTICK_SIDEWINDER_MODULE 1
+#define CONFIG_MOUSE_PS2 1
+#define CONFIG_ARCNET_MODULE 1
+#define CONFIG_SCSI_PROC_FS 1
+#define CONFIG_MCP2120_DONGLE_MODULE 1
+#define CONFIG_NET_SCH_PRIO_MODULE 1
+#define CONFIG_IP_NF_MATCH_IPRANGE_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_TCPMSS_MODULE 1
+#define CONFIG_NET_IPGRE_MODULE 1
+#define CONFIG_SUNRPC_BIND34 1
+#define CONFIG_RTC_CLASS 1
+#define CONFIG_USB_SERIAL_EDGEPORT_TI_MODULE 1
+#define CONFIG_USB_STORAGE_FREECOM 1
+#define CONFIG_VIDEO_CX88_BLACKBIRD_MODULE 1
+#define CONFIG_VIDEO_HEXIUM_GEMINI_MODULE 1
+#define CONFIG_IBMASR_MODULE 1
+#define CONFIG_FEALNX_MODULE 1
+#define CONFIG_I2C_MODULE 1
+#define CONFIG_WIRELESS_EXT 1
+#define CONFIG_ECONET_MODULE 1
+#define CONFIG_USB_SERIAL_CP2101_MODULE 1
+#define CONFIG_FB_CIRRUS_MODULE 1
+#define CONFIG_ISDN_CAPI_CAPIFS_MODULE 1
+#define CONFIG_HW_RANDOM 1
+#define CONFIG_MTD_PMC551_MODULE 1
+#define CONFIG_X25_MODULE 1
+#define CONFIG_BRIDGE_EBT_T_FILTER_MODULE 1
+#define CONFIG_PCCARD_NONSTATIC_MODULE 1
+#define CONFIG_NEED_MULTIPLE_NODES 1
+#define CONFIG_NCPFS_NFS_NS 1
+#define CONFIG_INOTIFY_USER 1
+#define CONFIG_HID_FF 1
+#define CONFIG_SND_HDSPM_MODULE 1
+#define CONFIG_SENSORS_W83627EHF_MODULE 1
+#define CONFIG_PCIPCWATCHDOG_MODULE 1
+#define CONFIG_INPUT_JOYDEV_MODULE 1
+#define CONFIG_FIXED_PHY_MODULE 1
+#define CONFIG_CRYPTO_CRC32C 1
+#define CONFIG_USB_SERIAL_AIRPRIME_MODULE 1
+#define CONFIG_PDA_POWER_MODULE 1
+#define CONFIG_I2C_ALI1535_MODULE 1
+#define CONFIG_MACHZ_WDT_MODULE 1
+#define CONFIG_PATA_OPTI 1
+#define CONFIG_ISCSI_TCP 1
+#define CONFIG_X86_HT 1
+#define CONFIG_MMC_BLOCK_BOUNCE 1
+#define CONFIG_USB_SERIAL_EDGEPORT_MODULE 1
+#define CONFIG_I2C_ALI1563_MODULE 1
+#define CONFIG_INPUT_PCSPKR_MODULE 1
+#define CONFIG_HZ_1000 1
+#define CONFIG_TASKSTATS 1
+#define CONFIG_TRACE_IRQFLAGS_SUPPORT 1
+#define CONFIG_BSD_DISKLABEL 1
+#define CONFIG_VIDEO_TEA6415C_MODULE 1
+#define CONFIG_WAFER_WDT_MODULE 1
+#define CONFIG_SHAPER_MODULE 1
+#define CONFIG_CHR_DEV_OSST 1
+#define CONFIG_MTD_SLRAM_MODULE 1
+#define CONFIG_MICROCODE_OLD_INTERFACE 1
+#define CONFIG_DVB_USB_M920X_MODULE 1
+#define CONFIG_VIDEO_UPD64083_MODULE 1
+#define CONFIG_PHONE_IXJ_MODULE 1
+#define CONFIG_IWL4965_MODULE 1
+#define CONFIG_HOSTAP_CS_MODULE 1
+#define CONFIG_HERMES_MODULE 1
+#define CONFIG_RFKILL_MODULE 1
+#define CONFIG_COMPAT 1
+#define CONFIG_PM_SLEEP_SMP 1
+#define CONFIG_POSIX_MQUEUE 1
+#define CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE 1
+#define CONFIG_RTC_DRV_CMOS_MODULE 1
+#define CONFIG_USB_HIDINPUT_POWERBOOK 1
+#define CONFIG_SND_GINA20_MODULE 1
+#define CONFIG_SND_TIMER 1
+#define CONFIG_DVB_BUDGET_PATCH_MODULE 1
+#define CONFIG_I2C_PROSAVAGE_MODULE 1
+#define CONFIG_PCMCIA_NMCLAN_MODULE 1
+#define CONFIG_IPW3945_MODULE 1
+#define CONFIG_MD_FAULTY 1
+#define CONFIG_TIPC_ADVANCED 1
+#define CONFIG_BRIDGE_EBT_LIMIT_MODULE 1
+#define CONFIG_NCPFS_NLS 1
+#define CONFIG_USB_SERIAL_DIGI_ACCELEPORT_MODULE 1
+#define CONFIG_RADIO_GEMTEK_PCI_MODULE 1
+#define CONFIG_VIDEO_CS53L32A_MODULE 1
+#define CONFIG_RT2X00_LIB_MODULE 1
+#define CONFIG_MTD_BLOCK2MTD_MODULE 1
+#define CONFIG_X86 1
+#define CONFIG_JOLIET 1
+#define CONFIG_DAB 1
+#define CONFIG_W1_CON 1
+#define CONFIG_8139TOO_MODULE 1
+#define CONFIG_MTD_UBI_BEB_RESERVE 1
+#define CONFIG_MTD_L440GX_MODULE 1
+#define CONFIG_MTD_REDBOOT_PARTS_UNALLOCATED 1
+#define CONFIG_IEEE80211_RADIOTAP 1
+#define CONFIG_IRCOMM_MODULE 1
+#define CONFIG_XFS_SECURITY 1
+#define CONFIG_USB_RIO500_MODULE 1
+#define CONFIG_FB_SIS_300 1
+#define CONFIG_N_HDLC_MODULE 1
+#define CONFIG_TABLET_USB_KBTAB_MODULE 1
+#define CONFIG_PHYLIB_MODULE 1
+#define CONFIG_AIC79XX_CMDS_PER_DEVICE 32
+#define CONFIG_SELECT_MEMORY_MODEL 1
+#define CONFIG_SYSFS_DEPRECATED 1
+#define CONFIG_CRYPTO_TGR192_MODULE 1
+#define CONFIG_KVM_INTEL_MODULE 1
+#define CONFIG_SND_PCXHR_MODULE 1
+#define CONFIG_SND_GINA24_MODULE 1
+#define CONFIG_JOYSTICK_GAMECON_MODULE 1
+#define CONFIG_MTD_AMD76XROM_MODULE 1
+#define CONFIG_IP_PNP_BOOTP 1
+#define CONFIG_ACORN_PARTITION_ICS 1
+#define CONFIG_DVB_LNBP21_MODULE 1
+#define CONFIG_RTL8187_MODULE 1
+#define CONFIG_I2O 1
+#define CONFIG_IEEE1394_RAWIO_MODULE 1
+#define CONFIG_NF_CONNTRACK_EVENTS 1
+#define CONFIG_CPU_FREQ_GOV_USERSPACE 1
+#define CONFIG_SPARSEMEM_MANUAL 1
+#define CONFIG_X86_GOOD_APIC 1
+#define CONFIG_SND_MPU401_MODULE 1
+#define CONFIG_FONT_SUN12x22 1
+#define CONFIG_FB_ATY_CT 1
+#define CONFIG_HWMON_VID_MODULE 1
+#define CONFIG_WDTPCI_MODULE 1
+#define CONFIG_SERIO_RAW_MODULE 1
+#define CONFIG_DM_MIRROR 1
+#define CONFIG_NETFILTER_XT_MATCH_ESP_MODULE 1
+#define CONFIG_USB_SERIAL_PL2303_MODULE 1
+#define CONFIG_SND_MTPAV_MODULE 1
+#define CONFIG_TOUCHSCREEN_FUJITSU_MODULE 1
+#define CONFIG_B43_RFKILL 1
+#define CONFIG_MTD_DATAFLASH_MODULE 1
+#define CONFIG_CFG80211 1
+#define CONFIG_IP_NF_TARGET_CLUSTERIP_MODULE 1
+#define CONFIG_EDD_MODULE 1
+#define CONFIG_SND_INTEL8X0M_MODULE 1
+#define CONFIG_DVB_CAPTURE_DRIVERS 1
+#define CONFIG_PPP_ASYNC_MODULE 1
+#define CONFIG_MAC80211_MODULE 1
+#define CONFIG_NET_EMATCH_STACK 32
+#define CONFIG_USB_SERIAL_KEYSPAN_USA28XA 1
+#define CONFIG_USB_DEVICE_CLASS 1
+#define CONFIG_FB_SIS_315 1
+#define CONFIG_DVB_CX24110_MODULE 1
+#define CONFIG_USBPCWATCHDOG_MODULE 1
+#define CONFIG_ATM_HE_MODULE 1
+#define CONFIG_MTD_NAND_NANDSIM_MODULE 1
+#define CONFIG_ACT200L_DONGLE_MODULE 1
+#define CONFIG_IP_NF_TARGET_REJECT_MODULE 1
+#define CONFIG_NFS_V3 1
+#define CONFIG_ECRYPT_FS 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA19QI 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA28XB 1
+#define CONFIG_DVB_B2C2_FLEXCOP_PCI_MODULE 1
+#define CONFIG_HOSTAP_MODULE 1
+#define CONFIG_SUNGEM_MODULE 1
+#define CONFIG_QSEMI_PHY_MODULE 1
+#define CONFIG_NET_FC 1
+#define CONFIG_THINKPAD_ACPI_MODULE 1
+#define CONFIG_INET_XFRM_MODE_BEET 1
+#define CONFIG_NFS_V4 1
+#define CONFIG_JBD 1
+#define CONFIG_SND_DUMMY_MODULE 1
+#define CONFIG_JOYSTICK_IFORCE_USB 1
+#define CONFIG_USB_ARCH_HAS_HCD 1
+#define CONFIG_PHONE_IXJ_PCMCIA_MODULE 1
+#define CONFIG_PCMCIA_HERMES_MODULE 1
+#define CONFIG_TMSPCI_MODULE 1
+#define CONFIG_USB_APPLEDISPLAY_MODULE 1
+#define CONFIG_USB_SERIAL_KEYSPAN_MPR 1
+#define CONFIG_DVB_CX22700_MODULE 1
+#define CONFIG_USB_NET_CDCETHER_MODULE 1
+#define CONFIG_IFB_MODULE 1
+#define CONFIG_GIRBIL_DONGLE_MODULE 1
+#define CONFIG_DEFAULT_TCP_CONG "bic"
+#define CONFIG_BSD_PROCESS_ACCT 1
+#define CONFIG_AFS_FS_MODULE 1
+#define CONFIG_INFINIBAND_MODULE 1
+#define CONFIG_USB_EZUSB 1
+#define CONFIG_FIRMWARE_EDID 1
+#define CONFIG_DVB_CINERGYT2_MODULE 1
+#define CONFIG_DVB_S5H1420_MODULE 1
+#define CONFIG_DVB_CX24123_MODULE 1
+#define CONFIG_IDE 1
+#define CONFIG_NET_CLS_RSVP_MODULE 1
+#define CONFIG_GENERIC_IOMAP 1
+#define CONFIG_ZONE_DMA32 1
+#define CONFIG_BFS_FS_MODULE 1
+#define CONFIG_FAT_FS 1
+#define CONFIG_EXT4DEV_FS_SECURITY 1
+#define CONFIG_RTC_DRV_TEST_MODULE 1
+#define CONFIG_SND_PDAUDIOCF_MODULE 1
+#define CONFIG_FB_ATY_GX 1
+#define CONFIG_FB_SYS_IMAGEBLIT_MODULE 1
+#define CONFIG_DVB_CX22702_MODULE 1
+#define CONFIG_I2C_SIS96X_MODULE 1
+#define CONFIG_JOYSTICK_TURBOGRAFX_MODULE 1
+#define CONFIG_MTD_NAND_CAFE_MODULE 1
+#define CONFIG_NF_CONNTRACK_IRC_MODULE 1
+#define CONFIG_INPUT_UINPUT_MODULE 1
+#define CONFIG_TOUCHSCREEN_MK712_MODULE 1
+#define CONFIG_NET_TULIP 1
+#define CONFIG_FUSION 1
+#define CONFIG_CRYPTO_BLKCIPHER 1
+#define CONFIG_IP_MROUTE 1
+#define CONFIG_HOTPLUG_PCI_FAKE_MODULE 1
+#define CONFIG_FB_ATY_MODULE 1
+#define CONFIG_VIDEO_TLV320AIC23B_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_ITM 1
+#define CONFIG_SCSI_STEX 1
+#define CONFIG_BT_HCIBT3C_MODULE 1
+#define CONFIG_HID 1
+#define CONFIG_NETROM_MODULE 1
+#define CONFIG_IP_NF_RAW_MODULE 1
+#define CONFIG_IP6_NF_MANGLE_MODULE 1
+#define CONFIG_NF_CONNTRACK_H323_MODULE 1
+#define CONFIG_X86_MCE_INTEL 1
+#define CONFIG_EFS_FS_MODULE 1
+#define CONFIG_FAT_DEFAULT_CODEPAGE 437
+#define CONFIG_USB_BERRY_CHARGE_MODULE 1
+#define CONFIG_USB_SERIAL_EMPEG_MODULE 1
+#define CONFIG_FB_SIS_MODULE 1
+#define CONFIG_DVB_OR51211_MODULE 1
+#define CONFIG_DVB_BCM3510_MODULE 1
+#define CONFIG_SMSC37B787_WDT_MODULE 1
+#define CONFIG_E100_MODULE 1
+#define CONFIG_ASYNC_XOR 1
+#define CONFIG_SATA_SIL24 1
+#define CONFIG_ATA 1
+#define CONFIG_IP_DCCP_TFRC_LIB_MODULE 1
+#define CONFIG_IP_NF_TARGET_NETMAP_MODULE 1
+#define CONFIG_NF_NAT_MODULE 1
+#define CONFIG_UNAME_RELEASE "2.6.23-sabayon"
+#define CONFIG_UDF_FS 1
+#define CONFIG_B43_DMA_AND_PIO_MODE 1
+#define CONFIG_SCTP_HMAC_MD5 1
+#define CONFIG_NF_NAT_AMANDA_MODULE 1
+#define CONFIG_NLS_ISO8859_13_MODULE 1
+#define CONFIG_FONT_10x18 1
+#define CONFIG_DVB_OR51132_MODULE 1
+#define CONFIG_AIC7XXX_DEBUG_ENABLE 1
+#define CONFIG_AGP 1
+#define CONFIG_PRINTK 1
+#define CONFIG_NLS_ISO8859_14_MODULE 1
+#define CONFIG_NCP_FS_MODULE 1
+#define CONFIG_RPCSEC_GSS_SPKM3_MODULE 1
+#define CONFIG_HFS_FS 1
+#define CONFIG_USB_LD_MODULE 1
+#define CONFIG_USB_SERIAL_FTDI_SIO_MODULE 1
+#define CONFIG_DVB_USB_AF9005_MODULE 1
+#define CONFIG_JOYSTICK_GF2K_MODULE 1
+#define CONFIG_NET_EMATCH_NBYTE_MODULE 1
+#define CONFIG_POWER_SUPPLY_MODULE 1
+#define CONFIG_NLS_ISO8859_15_MODULE 1
+#define CONFIG_SMB_FS 1
+#define CONFIG_XFS_QUOTA 1
+#define CONFIG_INTEL_IOATDMA_MODULE 1
+#define CONFIG_MOUSE_PS2_SYNAPTICS 1
+#define CONFIG_B43_DMA 1
+#define CONFIG_BT_SCO_MODULE 1
+#define CONFIG_NF_NAT_NEEDED 1
+#define CONFIG_IP_VS_PROTO_TCP 1
+#define CONFIG_HOTPLUG_PCI_ACPI_MODULE 1
+#define CONFIG_DMI 1
+#define CONFIG_SUNRPC 1
+#define CONFIG_SQUASHFS_VMALLOC 1
+#define CONFIG_JFS_FS 1
+#define CONFIG_FS_MBCACHE 1
+#define CONFIG_SND_USB_CAIAQ_INPUT 1
+#define CONFIG_SERIAL_8250_NR_UARTS 4
+#define CONFIG_TABLET_USB_WACOM_MODULE 1
+#define CONFIG_SCSI_AIC7XXX_OLD 1
+#define CONFIG_LLC 1
+#define CONFIG_IP6_NF_TARGET_HL_MODULE 1
+#define CONFIG_IP_VS_PROTO_ESP 1
+#define CONFIG_XFRM_USER_MODULE 1
+#define CONFIG_CPU_FREQ_GOV_POWERSAVE 1
+#define CONFIG_SYSV68_PARTITION 1
+#define CONFIG_ADVANTECH_WDT_MODULE 1
+#define CONFIG_ISDN_DIVAS_MAINT_MODULE 1
+#define CONFIG_ACX_MODULE 1
+#define CONFIG_CRC_ITU_T_MODULE 1
+#define CONFIG_DM_MULTIPATH_EMC_MODULE 1
+#define CONFIG_MTD_DOC2000_MODULE 1
+#define CONFIG_TEKRAM_DONGLE_MODULE 1
+#define CONFIG_DEV_APPLETALK_MODULE 1
+#define CONFIG_BRIDGE_EBT_T_NAT_MODULE 1
+#define CONFIG_IP_VS_SED_MODULE 1
+#define CONFIG_IP_VS_PROTO_UDP 1
+#define CONFIG_HOTPLUG_PCI_CPCI 1
+#define CONFIG_HAVE_MEMORY_PRESENT 1
+#define CONFIG_PCI 1
+#define CONFIG_BLK_DEV_IO_TRACE 1
+#define CONFIG_DLM_MODULE 1
+#define CONFIG_MMC_MODULE 1
+#define CONFIG_USB_FILE_STORAGE_MODULE 1
+#define CONFIG_USB_PHIDGETSERVO_MODULE 1
+#define CONFIG_USB_SERIAL_KEYSPAN_USA19QW 1
+#define CONFIG_USB_USS720_MODULE 1
+#define CONFIG_SND_ECHO3G_MODULE 1
+#define CONFIG_DVB_SP887X_MODULE 1
+#define CONFIG_DVB_B2C2_FLEXCOP_USB_MODULE 1
+#define CONFIG_DVB_ZL10353_MODULE 1
+#define CONFIG_VIDEO_V4L1 1
+#define CONFIG_MOUSE_APPLETOUCH_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_B1PCI_MODULE 1
+#define CONFIG_AMD8111_ETH_MODULE 1
+#define CONFIG_BLK_DEV_DAC960 1
+#define CONFIG_MTD_DOCPROBE_55AA 1
+#define CONFIG_MTD_DOC2001_MODULE 1
+#define CONFIG_INITRAMFS_SOURCE ""
+#define CONFIG_IKCONFIG_PROC 1
+#define CONFIG_ZISOFS 1
+#define CONFIG_USB_UEAGLEATM_MODULE 1
+#define CONFIG_SND_YMFPCI_FIRMWARE_IN_KERNEL 1
+#define CONFIG_VIDEO_V4L2 1
+#define CONFIG_PCMCIA_XIRCOM_MODULE 1
+#define CONFIG_PATA_SC1200 1
+#define CONFIG_BT_HCIDTL1_MODULE 1
+#define CONFIG_HOTPLUG_PCI_PCIE_MODULE 1
+#define CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG 1
+#define CONFIG_BUG 1
+#define CONFIG_CRYPTO_HW 1
+#define CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE 1
+#define CONFIG_NFS_FS 1
+#define CONFIG_IPMI_WATCHDOG_MODULE 1
+#define CONFIG_PCNET32_MODULE 1
+#define CONFIG_ULI526X_MODULE 1
+#define CONFIG_MII 1
+#define CONFIG_FIXED_MII_100_FDX 1
+#define CONFIG_I2O_CONFIG 1
+#define CONFIG_BRIDGE_EBT_IP_MODULE 1
+#define CONFIG_NF_CONNTRACK_FTP_MODULE 1
+#define CONFIG_SND_ICE1712_MODULE 1
+#define CONFIG_DVB_AV7110_OSD 1
+#define CONFIG_BATTERY_DS2760_MODULE 1
+#define CONFIG_ARCNET_1201_MODULE 1
+#define CONFIG_BT_HCIUART_H4 1
+#define CONFIG_NF_CONNTRACK_ENABLED_MODULE 1
+#define CONFIG_USB_STORAGE_DPCM 1
+#define CONFIG_USB_OHCI_HCD_SSB 1
+#define CONFIG_DVB_BUDGET_CI_MODULE 1
+#define CONFIG_VIDEO_PVRUSB2_SYSFS 1
+#define CONFIG_VIDEO_CX88_MODULE 1
+#define CONFIG_DVB_FE_CUSTOMISE 1
+#define CONFIG_SENSORS_APPLESMC_MODULE 1
+#define CONFIG_FIX_EARLYCON_MEM 1
+#define CONFIG_P54_COMMON_MODULE 1
+#define CONFIG_IP_NF_ARP_MANGLE_MODULE 1
+#define CONFIG_NF_CONNTRACK_SIP_MODULE 1
+#define CONFIG_CRYPTO 1
+#define CONFIG_I2C_SIMTEC_MODULE 1
+#define CONFIG_MTD_CFI_INTELEXT_MODULE 1
+#define CONFIG_ATM_MODULE 1
+#define CONFIG_TIPC_SLAVE_NODES 0
+#define CONFIG_SYSCTL 1
+#define CONFIG_CFAG12864B_RATE 20
+#define CONFIG_SND_ICE1724_MODULE 1
+#define CONFIG_DRM_MODULE 1
+#define CONFIG_SERIAL_8250_CS_MODULE 1
+#define CONFIG_ARCNET_1051_MODULE 1
+#define CONFIG_SND_ATIIXP_MODEM_MODULE 1
+#define CONFIG_USB_STV680_MODULE 1
+#define CONFIG_I2C_SIS5595_MODULE 1
+#define CONFIG_I2C_ALI15X3_MODULE 1
+#define CONFIG_SPECIALIX_RTSCTS 1
+#define CONFIG_CYCLADES_SYNC_MODULE 1
+#define CONFIG_ARCNET_COM20020_CS_MODULE 1
+#define CONFIG_CDROM_PKTCDVD 1
+#define CONFIG_ECONET_NATIVE 1
+#define CONFIG_TOI_DEFAULT_WAIT 25
+#define CONFIG_SND 1
+#define CONFIG_SENSORS_W83L785TS_MODULE 1
+#define CONFIG_SENSORS_AD7418_MODULE 1
+#define CONFIG_ISI_MODULE 1
+#define CONFIG_IWLWIFI_SENSITIVITY 1
+#define CONFIG_ATP_MODULE 1
+#define CONFIG_B44_PCI 1
+#define CONFIG_CICADA_PHY_MODULE 1
+#define CONFIG_MTD_DOCECC_MODULE 1
+#define CONFIG_MTD 1
+#define CONFIG_HPET_EMULATE_RTC 1
+#define CONFIG_UFS_FS 1
+#define CONFIG_DVB_USB_NOVA_T_USB2_MODULE 1
+#define CONFIG_WAN 1
+#define CONFIG_NETDEV_1000 1
+#define CONFIG_FTL_MODULE 1
+#define CONFIG_IP_VS_WLC_MODULE 1
+#define CONFIG_IP_PNP 1
+#define CONFIG_ACPI_HOTPLUG_CPU 1
+#define CONFIG_ZONE_DMA_FLAG 1
+#define CONFIG_DMA_ENGINE 1
+#define CONFIG_DVB_TTUSB_BUDGET_MODULE 1
+#define CONFIG_DVB_USB_AU6610_MODULE 1
+#define CONFIG_DVB_TDA8083_MODULE 1
+#define CONFIG_JOYSTICK_XPAD_FF 1
+#define CONFIG_ISDN_CAPI_MIDDLEWARE 1
+#define CONFIG_PATA_CS5520 1
+#define CONFIG_AIC7XXX_CMDS_PER_DEVICE 32
+#define CONFIG_MTD_PNC2000_MODULE 1
+#define CONFIG_YAM_MODULE 1
+#define CONFIG_IP6_NF_FILTER_MODULE 1
+#define CONFIG_IP_NF_TARGET_ECN_MODULE 1
+#define CONFIG_HT_IRQ 1
+#define CONFIG_NET 1
+#define CONFIG_KERNELVERSION "2.6.23-sabayon"
+#define CONFIG_JFFS2_SUMMARY 1
+#define CONFIG_SND_ALS4000_MODULE 1
+#define CONFIG_I2C_OCORES_MODULE 1
+#define CONFIG_PC87413_WDT_MODULE 1
+#define CONFIG_SSB_MODULE 1
+#define CONFIG_VORTEX_MODULE 1
+#define CONFIG_PATA_CS5530 1
+#define CONFIG_MODULE_UNLOAD 1
+#define CONFIG_XFS_FS 1
+#define CONFIG_FS_XIP 1
+#define CONFIG_SND_ALI5451_MODULE 1
+#define CONFIG_RADIO_MAESTRO_MODULE 1
+#define CONFIG_RT61PCI_MODULE 1
+#define CONFIG_RT2X00_LIB_RFKILL 1
+#define CONFIG_IEEE1394 1
+#define CONFIG_SCSI_BUSLOGIC 1
+#define CONFIG_IRTTY_SIR_MODULE 1
+#define CONFIG_NET_CLS_BASIC_MODULE 1
+#define CONFIG_TEXTSEARCH_BM_MODULE 1
+#define CONFIG_CALGARY_IOMMU 1
+#define CONFIG_RTC 1
+#define CONFIG_MAC_PARTITION 1
+#define CONFIG_VIDEO_PVRUSB2_MODULE 1
+#define CONFIG_RIO_MODULE 1
+#define CONFIG_GAMEPORT_FM801_MODULE 1
+#define CONFIG_CAPI_EICON 1
+#define CONFIG_NETDEVICES 1
+#define CONFIG_USB 1
+#define CONFIG_ECONET_AUNUDP 1
+#define CONFIG_IP_VS_FTP_MODULE 1
+#define CONFIG_INET_TCP_DIAG 1
+#define CONFIG_YENTA_TOSHIBA 1
+#define CONFIG_JFFS2_ZLIB 1
+#define CONFIG_USB_GADGET_DUALSPEED 1
+#define CONFIG_SENSORS_CORETEMP_MODULE 1
+#define CONFIG_JOYSTICK_STINGER_MODULE 1
+#define CONFIG_CAPI_TRACE 1
+#define CONFIG_HDLC_CISCO_MODULE 1
+#define CONFIG_MLX4_DEBUG 1
+#define CONFIG_CHELSIO_T1_MODULE 1
+#define CONFIG_HAMACHI_MODULE 1
+#define CONFIG_PARIDE_PCD_MODULE 1
+#define CONFIG_HOTPLUG_PCI_SHPC_MODULE 1
+#define CONFIG_SND_USB_CAIAQ_MODULE 1
+#define CONFIG_SND_HDA_INTEL_MODULE 1
+#define CONFIG_DVB_TUA6100_MODULE 1
+#define CONFIG_DVB_BUDGET_AV_MODULE 1
+#define CONFIG_SPI 1
+#define CONFIG_SOFT_WATCHDOG_MODULE 1
+#define CONFIG_PPP_SYNC_TTY_MODULE 1
+#define CONFIG_ARCNET_COM90xxIO_MODULE 1
+#define CONFIG_SCSI_ACARD 1
+#define CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS 0x0
+#define CONFIG_TOI 1
+#define CONFIG_EFI_PARTITION 1
+#define CONFIG_NLS 1
+#define CONFIG_UIO_MODULE 1
+#define CONFIG_SENSORS_DS1621_MODULE 1
+#define CONFIG_W1_MASTER_MATROX_MODULE 1
+#define CONFIG_CHELSIO_T3_MODULE 1
+#define CONFIG_ATM_CLIP_NO_ICMP 1
+#define CONFIG_EXT4DEV_FS_XATTR 1
+#define CONFIG_KVM 1
+#define CONFIG_FB_VOODOO1_MODULE 1
+#define CONFIG_VIDEO_BUF_DVB_MODULE 1
+#define CONFIG_I2C_VIAPRO_MODULE 1
+#define CONFIG_SERIAL_8250 1
+#define CONFIG_CDROM_PKTCDVD_WCACHE 1
+#define CONFIG_LEDS_TRIGGERS 1
+#define CONFIG_PNP 1
+#define CONFIG_CRYPTO_ALGAPI 1
+#define CONFIG_USB_FTDI_ELAN_MODULE 1
+#define CONFIG_SND_SEQUENCER_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_T1PCI_MODULE 1
+#define CONFIG_ARCNET_COM20020_MODULE 1
+#define CONFIG_MTD_CFI_I1 1
+#define CONFIG_TCP_MD5SIG 1
+#define CONFIG_MMU 1
+#define CONFIG_DVB_ISL6421_MODULE 1
+#define CONFIG_VIDEO_STRADIS_MODULE 1
+#define CONFIG_HW_RANDOM_AMD 1
+#define CONFIG_INPUT_FF_MEMLESS 1
+#define CONFIG_USB_NET_DM9601_MODULE 1
+#define CONFIG_B43_PIO 1
+#define CONFIG_ARCNET_CAP_MODULE 1
+#define CONFIG_PATA_IT8213 1
+#define CONFIG_SCSI_SYM53C8XX_MAX_TAGS 64
+#define CONFIG_BLK_DEV_RAM_SIZE 16384
+#define CONFIG_MTD_CFI_I2 1
+#define CONFIG_PPP_MODULE 1
+#define CONFIG_SMP 1
+#define CONFIG_USB_AUERSWALD_MODULE 1
+#define CONFIG_SENSORS_W83793_MODULE 1
+#define CONFIG_B43LEGACY_PCI_AUTOSELECT 1
+#define CONFIG_IPX_MODULE 1
+#define CONFIG_IPV6_SUBTREES 1
+#define CONFIG_IPV6_ROUTER_PREF 1
+#define CONFIG_EXT2_FS_SECURITY 1
+#define CONFIG_USB_IBMCAM_MODULE 1
+#define CONFIG_VIDEO_CPIA_PP_MODULE 1
+#define CONFIG_VIDEO_TVAUDIO_MODULE 1
+#define CONFIG_SSB_PCMCIAHOST_POSSIBLE 1
+#define CONFIG_SK98LIN_MODULE 1
+#define CONFIG_PATA_SERVERWORKS 1
+#define CONFIG_PATA_RZ1000 1
+#define CONFIG_IOSCHED_AS 1
+#define CONFIG_CRYPTO_KHAZAD_MODULE 1
+#define CONFIG_EXT3_FS_SECURITY 1
+#define CONFIG_VIDEO_CPIA_MODULE 1
+#define CONFIG_SENSORS_ASB100_MODULE 1
+#define CONFIG_W1_SLAVE_SMEM_MODULE 1
+#define CONFIG_NET_PCMCIA 1
+#define CONFIG_8139TOO_TUNE_TWISTER 1
+#define CONFIG_BT_HCIVHCI_MODULE 1
+#define CONFIG_NET_ACT_PEDIT_MODULE 1
+#define CONFIG_DECNET_ROUTER 1
+#define CONFIG_IP_NF_TARGET_LOG_MODULE 1
+#define CONFIG_TCP_CONG_YEAH_MODULE 1
+#define CONFIG_ACPI_VIDEO_MODULE 1
+#define CONFIG_BASE_SMALL 0
+#define CONFIG_SND_CS46XX_MODULE 1
+#define CONFIG_DVB_VES1820_MODULE 1
+#define CONFIG_MOXA_INTELLIO_MODULE 1
+#define CONFIG_P54_PCI_MODULE 1
+#define CONFIG_PRISM54_MODULE 1
+#define CONFIG_AUDIT_ARCH 1
+#define CONFIG_RTC_DRV_DS1307_MODULE 1
+#define CONFIG_USB_GADGET_MODULE 1
+#define CONFIG_SND_ENS1370_MODULE 1
+#define CONFIG_SND_AC97_CODEC_MODULE 1
+#define CONFIG_TABLET_USB_ACECAD_MODULE 1
+#define CONFIG_JOYSTICK_WARRIOR_MODULE 1
+#define CONFIG_MTD_GEN_PROBE_MODULE 1
+#define CONFIG_IRDA_CACHE_LAST_LSAP 1
+#define CONFIG_ACPI_SLEEP 1
+#define CONFIG_LDM_PARTITION 1
+#define CONFIG_XFS_RT 1
+#define CONFIG_USB_SERIAL_CYBERJACK_MODULE 1
+#define CONFIG_SND_ENS1371_MODULE 1
+#define CONFIG_DVB_BUDGET_MODULE 1
+#define CONFIG_IPMI_POWEROFF_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_COMMENT_MODULE 1
+#define CONFIG_BINFMT_ELF 1
+#define CONFIG_PCI_DIRECT 1
+#define CONFIG_SQUASHFS_EMBEDDED 1
+#define CONFIG_JFFS2_FS_WRITEBUFFER 1
+#define CONFIG_SBC8360_WDT_MODULE 1
+#define CONFIG_JOYSTICK_JOYDUMP_MODULE 1
+#define CONFIG_JOYSTICK_TMDC_MODULE 1
+#define CONFIG_NORTEL_HERMES_MODULE 1
+#define CONFIG_TUN_MODULE 1
+#define CONFIG_I2O_CONFIG_OLD_IOCTL 1
+#define CONFIG_MTD_DOCPROBE_ADDRESS 0x0000
+#define CONFIG_BT_HCIUSB_SCO 1
+#define CONFIG_RTC_DRV_DS1742_MODULE 1
+#define CONFIG_RTC_DRV_DS1553_MODULE 1
+#define CONFIG_SND_SUPPORT_OLD_API 1
+#define CONFIG_BACKLIGHT_PROGEAR_MODULE 1
+#define CONFIG_DVB_TTUSB_DEC_MODULE 1
+#define CONFIG_ITCO_VENDOR_SUPPORT 1
+#define CONFIG_INPUT_ATI_REMOTE_MODULE 1
+#define CONFIG_SERIO_I8042 1
+#define CONFIG_NET_EMATCH 1
+#define CONFIG_DECNET_NF_GRABULATOR_MODULE 1
+#define CONFIG_SND_CMIPCI_MODULE 1
+#define CONFIG_SND_PCM_OSS_PLUGINS 1
+#define CONFIG_USB_SN9C102_MODULE 1
+#define CONFIG_DRM_SAVAGE_MODULE 1
+#define CONFIG_LEGACY_PTY_COUNT 256
+#define CONFIG_JOYSTICK_TWIDJOY_MODULE 1
+#define CONFIG_SCSI_ISCSI_ATTRS 1
+#define CONFIG_MTD_REDBOOT_PARTS_READONLY 1
+#define CONFIG_ESI_DONGLE_MODULE 1
+#define CONFIG_IP_NF_TARGET_MASQUERADE_MODULE 1
+#define CONFIG_PCIEAER 1
+#define CONFIG_RTC_DRV_DS1672_MODULE 1
+#define CONFIG_USB_DABUSB_MODULE 1
+#define CONFIG_DVB_USB_VP7045_MODULE 1
+#define CONFIG_VIDEO_SAA7134_ALSA_MODULE 1
+#define CONFIG_SENSORS_ATXP1_MODULE 1
+#define CONFIG_INPUT_ATLAS_BTNS_MODULE 1
+#define CONFIG_RT73USB_MODULE 1
+#define CONFIG_8139TOO_8129 1
+#define CONFIG_X86_MCE 1
+#define CONFIG_USB_SERIAL_VISOR_MODULE 1
+#define CONFIG_DVB_NXT6000_MODULE 1
+#define CONFIG_SENSORS_VT1211_MODULE 1
+#define CONFIG_DRM_RADEON_MODULE 1
+#define CONFIG_USB_NET_GL620A_MODULE 1
+#define CONFIG_SCSI_LOWLEVEL 1
+#define CONFIG_BITREVERSE 1
+#define CONFIG_TEXTSEARCH 1
+#define CONFIG_NF_CONNTRACK_SECMARK 1
+#define CONFIG_IP_VS_WRR_MODULE 1
+#define CONFIG_TCP_CONG_HTCP_MODULE 1
+#define CONFIG_LOG_BUF_SHIFT 15
+#define CONFIG_SGI_PARTITION 1
+#define CONFIG_EXT4DEV_FS 1
+#define CONFIG_USB_NET2280_MODULE 1
+#define CONFIG_FB_3DFX_MODULE 1
+#define CONFIG_SENSORS_HDAPS_MODULE 1
+#define CONFIG_W83877F_WDT_MODULE 1
+#define CONFIG_MOXA_SMARTIO_NEW_MODULE 1
+#define CONFIG_INPUT_YEALINK_MODULE 1
+#define CONFIG_JOYSTICK_XPAD_MODULE 1
+#define CONFIG_MTD_CONCAT 1
+#define CONFIG_NET_SCH_NETEM_MODULE 1
+#define CONFIG_IP_ROUTE_VERBOSE 1
+#define CONFIG_HAVE_ARCH_EARLY_PFN_TO_NID 1
+#define CONFIG_SLUB_DEBUG 1
+#define CONFIG_IA32_EMULATION 1
+#define CONFIG_ARCH_POPULATES_NODE_MAP 1
+#define CONFIG_GENERIC_ALLOCATOR 1
+#define CONFIG_USB_HIDDEV 1
+#define CONFIG_I2C_VIA_MODULE 1
+#define CONFIG_W83977F_WDT_MODULE 1
+#define CONFIG_JOYSTICK_GRIP_MP_MODULE 1
+#define CONFIG_LEDS_CLASS_MODULE 1
+#define CONFIG_BAYCOM_PAR_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_DCCP_MODULE 1
+#define CONFIG_NFS_V3_ACL 1
+#define CONFIG_AUTOFS4_FS 1
+#define CONFIG_SND_RME9652_MODULE 1
+#define CONFIG_SND_INDIGO_MODULE 1
+#define CONFIG_DUMMY_CONSOLE 1
+#define CONFIG_VIDEO_UPD64031A_MODULE 1
+#define CONFIG_USB_BELKIN 1
+#define CONFIG_8139_OLD_RX_RESET 1
+#define CONFIG_NF_CT_NETLINK_MODULE 1
+#define CONFIG_NCPFS_PACKET_SIGNING 1
+#define CONFIG_SND_USB_AUDIO_MODULE 1
+#define CONFIG_I2C_I810_MODULE 1
+#define CONFIG_I2C_I801_MODULE 1
+#define CONFIG_PCI_HERMES_MODULE 1
+#define CONFIG_SECURITY_SELINUX 1
diff -urpN linux-2.6.23-sabayon/include/linux/utsrelease.h testtry/include/linux/utsrelease.h
--- linux-2.6.23-sabayon/include/linux/utsrelease.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/linux/utsrelease.h	2007-10-15 16:44:57.000000000 +0000
@@ -0,0 +1 @@
+#define UTS_RELEASE "2.6.23-sabayon"
diff -urpN linux-2.6.23-sabayon/include/linux/version.h testtry/include/linux/version.h
--- linux-2.6.23-sabayon/include/linux/version.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/include/linux/version.h	2007-10-15 16:44:56.000000000 +0000
@@ -0,0 +1,2 @@
+#define LINUX_VERSION_CODE 132631
+#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))
diff -urpN linux-2.6.23-sabayon/Module.symvers testtry/Module.symvers
--- linux-2.6.23-sabayon/Module.symvers	1970-01-01 00:00:00.000000000 +0000
+++ testtry/Module.symvers	2007-10-15 17:06:31.000000000 +0000
@@ -0,0 +1,6800 @@
+0x88b73627	tipc_get_addr	net/tipc/tipc	EXPORT_SYMBOL
+0x6fb5ab71	mpt_deregister	vmlinux	EXPORT_SYMBOL
+0x4a926b42	firmware_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x3fdb6363	generic_file_splice_write	vmlinux	EXPORT_SYMBOL
+0x3101adba	set_anon_super	vmlinux	EXPORT_SYMBOL
+0x7857cdb9	kmem_cache_alloc	vmlinux	EXPORT_SYMBOL
+0x54439555	ieee80211_wake_queues	net/mac80211/mac80211	EXPORT_SYMBOL
+0x28e9c2ac	i2c_put_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x14102f23	ks0108_displaystate	drivers/auxdisplay/ks0108	EXPORT_SYMBOL_GPL
+0x936474d2	rtc_class_open	vmlinux	EXPORT_SYMBOL_GPL
+0x96cd2b04	scsi_sense_key_string	vmlinux	EXPORT_SYMBOL
+0xe1d4b70e	request_firmware	vmlinux	EXPORT_SYMBOL
+0x0a2487e0	unblock_all_signals	vmlinux	EXPORT_SYMBOL
+0x16f27683	tipc_block_bearer	net/tipc/tipc	EXPORT_SYMBOL
+0x93583573	t3_register_cpl_handler	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x10c4906d	cx8802_buf_queue	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0x5394e5f5	ib_init_ah_from_path	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x1ec6e61f	ib_destroy_cm_id	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x894ecf0c	dev_mc_sync	vmlinux	EXPORT_SYMBOL
+0xb91b2992	hwmon_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xe113bbbc	csum_partial	vmlinux	EXPORT_SYMBOL
+0x037c4ca9	mod_reg_security	vmlinux	EXPORT_SYMBOL_GPL
+0x6f5268c1	o2hb_setup_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xfeb25d08	i2o_driver_register	vmlinux	EXPORT_SYMBOL
+0xae3e5de8	__generic_unplug_device	vmlinux	EXPORT_SYMBOL
+0xa95316a4	videobuf_queue_cancel	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xc6c5a7a1	ir_codes_em_terratec	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x6aefdbea	ir_codes_npgtech	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xd66cf512	avmcard_dma_free	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x860c199a	nf_log_register	vmlinux	EXPORT_SYMBOL
+0xf494758c	scsi_execute	vmlinux	EXPORT_SYMBOL
+0x59ab4080	cap_bset	vmlinux	EXPORT_SYMBOL
+0x9df6c73c	device_add	vmlinux	EXPORT_SYMBOL_GPL
+0x36235be2	device_del	vmlinux	EXPORT_SYMBOL_GPL
+0xd9091363	acpi_install_notify_handler	vmlinux	EXPORT_SYMBOL
+0xa5bf5c3e	pm_qos_add_requirement	vmlinux	EXPORT_SYMBOL_GPL
+0x24196ba2	init_uts_ns	vmlinux	EXPORT_SYMBOL_GPL
+0xa0bde429	snd_pt2258_reset	sound/i2c/other/snd-pt2258	EXPORT_SYMBOL
+0x995d0f33	krb5_decrypt	vmlinux	EXPORT_SYMBOL
+0xc20c5ee1	__inet6_hash	vmlinux	EXPORT_SYMBOL
+0x77955b36	sock_no_mmap	vmlinux	EXPORT_SYMBOL
+0xc766b8da	led_trigger_store	vmlinux	EXPORT_SYMBOL_GPL
+0x305ca4b7	acpi_bus_start	vmlinux	EXPORT_SYMBOL
+0xfdb9b629	ioread32be	vmlinux	EXPORT_SYMBOL
+0xb4649cd6	usb_serial_generic_write_bulk_callback	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xa6192026	tcp_initialize_rcv_mss	vmlinux	EXPORT_SYMBOL
+0x54e6fcdd	net_enable_timestamp	vmlinux	EXPORT_SYMBOL
+0x8d73109e	sockfd_lookup	vmlinux	EXPORT_SYMBOL
+0x208739f6	acpi_load_table	vmlinux	EXPORT_SYMBOL
+0x9f973551	fb_validate_mode	vmlinux	EXPORT_SYMBOL
+0x5f792547	directly_mappable_cdev_bdi	vmlinux	EXPORT_SYMBOL
+0x49da9a9a	_read_unlock_bh	vmlinux	EXPORT_SYMBOL
+0x8dfba176	srcu_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0x41b538ea	tipc_register_media	net/tipc/tipc	EXPORT_SYMBOL
+0x083e800e	ax25_find_cb	net/ax25/ax25	EXPORT_SYMBOL
+0xd8fa57a6	dlm_unregister_eviction_cb	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x4a8e1dee	tpm_gen_interrupt	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xb5dea7ef	g_token_size	vmlinux	EXPORT_SYMBOL
+0x4e90ce07	hpsb_iso_stop	vmlinux	EXPORT_SYMBOL
+0x5594f6a8	scsi_get_command	vmlinux	EXPORT_SYMBOL
+0x09d8bb5b	sync_page_range_nolock	vmlinux	EXPORT_SYMBOL
+0x7ff10ccf	raw_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x9e49639f	rt2x00pci_uninitialize	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xf43570e9	hostap_handle_sta_tx_exc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x3edbac9e	sas_eh_device_reset_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x18fd4dbd	scsi_target_quiesce	vmlinux	EXPORT_SYMBOL
+0x7dc572aa	transport_class_register	vmlinux	EXPORT_SYMBOL_GPL
+0x15306523	snd_emux_terminate_all	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x178d1d78	dm_get_device	vmlinux	EXPORT_SYMBOL
+0x810c2217	dm_put_device	vmlinux	EXPORT_SYMBOL
+0xff6ccf96	hpsb_read	vmlinux	EXPORT_SYMBOL
+0xee6129d4	mpt_free_fw_memory	vmlinux	EXPORT_SYMBOL
+0x8649de76	iscsi_conn_setup	vmlinux	EXPORT_SYMBOL_GPL
+0x4cb92c34	transport_class_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xc52f5714	fb_videomode_to_var	vmlinux	EXPORT_SYMBOL
+0xb835bbce	jbd2_journal_try_to_free_buffers	vmlinux	EXPORT_SYMBOL
+0xffd5a395	default_wake_function	vmlinux	EXPORT_SYMBOL
+0x85f8a266	copy_to_user	vmlinux	EXPORT_SYMBOL
+0xb4496301	videobuf_dma_init_overlay	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xe82e6858	fc_remote_port_add	vmlinux	EXPORT_SYMBOL
+0x3ad1d767	agp_free_page_array	vmlinux	EXPORT_SYMBOL
+0x3b62c2d7	pci_bus_read_config_byte	vmlinux	EXPORT_SYMBOL
+0xe8440a0e	iget_locked	vmlinux	EXPORT_SYMBOL
+0x3756e9df	snd_akm4xxx_init	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0x0ad7d270	hostap_info_process	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x5a0db332	sock_get_timestampns	vmlinux	EXPORT_SYMBOL
+0xf49cbcce	class_interface_register	vmlinux	EXPORT_SYMBOL_GPL
+0xa4b94fea	iowrite8_rep	vmlinux	EXPORT_SYMBOL
+0x740a8448	key_type_keyring	vmlinux	EXPORT_SYMBOL
+0x863b4b31	allocate_dyn_pageflags	vmlinux	EXPORT_SYMBOL_GPL
+0x7ad027f5	drop_futex_key_refs	vmlinux	EXPORT_SYMBOL_GPL
+0xdf97b9ae	pcmcia_modify_configuration	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xb6cd4666	ir_codes_eztv	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xef226e5e	sas_release_transport	vmlinux	EXPORT_SYMBOL
+0x26ef373e	class_interface_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xa9c530b8	unregister_oom_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x7224a620	w1_unregister_family	drivers/w1/wire	EXPORT_SYMBOL
+0x9d89d97f	tpm_write	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x2eec63c9	xdr_encode_netobj	vmlinux	EXPORT_SYMBOL
+0x0636c46c	xdr_decode_word	vmlinux	EXPORT_SYMBOL
+0xa0effe0b	tcp_v4_md5_lookup	vmlinux	EXPORT_SYMBOL
+0x18dd496d	snd_power_wait	vmlinux	EXPORT_SYMBOL
+0x49ed78ad	mptscsih_scandv_complete	vmlinux	EXPORT_SYMBOL
+0xf48e37bd	tty_register_device	vmlinux	EXPORT_SYMBOL
+0xc2e587d1	reset_devices	vmlinux	EXPORT_SYMBOL
+0x28b01a45	ircomm_disconnect_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x78fb8074	cx88_get_stereo	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xf223cf7f	usb_bus_list_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xd6694c09	pci_create_bus	vmlinux	EXPORT_SYMBOL_GPL
+0xa3a5be95	memmove	vmlinux	EXPORT_SYMBOL
+0x93304684	param_get_string	vmlinux	EXPORT_SYMBOL
+0x8470e6df	dibusb_i2c_algo	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0xfbc2785c	tpm_pm_resume	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x3e8f9611	ata_check_status	vmlinux	EXPORT_SYMBOL_GPL
+0x7df5ca5c	jbd2_journal_start_commit	vmlinux	EXPORT_SYMBOL
+0xb349b931	dquot_alloc_space	vmlinux	EXPORT_SYMBOL
+0x76d3cd60	laptop_mode	vmlinux	EXPORT_SYMBOL
+0xaa34de34	end_page_writeback	vmlinux	EXPORT_SYMBOL
+0x54c425a8	generic_file_direct_write	vmlinux	EXPORT_SYMBOL
+0x242852b9	ax25_uid_policy	net/ax25/ax25	EXPORT_SYMBOL
+0x1bd998af	usbnet_cdc_unbind	drivers/net/usb/cdc_ether	EXPORT_SYMBOL_GPL
+0xac8923a3	drm_agp_enable	drivers/char/drm/drm	EXPORT_SYMBOL
+0x2399273b	skb_recv_datagram	vmlinux	EXPORT_SYMBOL
+0x87fefe63	generic_file_readonly_mmap	vmlinux	EXPORT_SYMBOL
+0x5d730e7b	raw_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xa6cc15f0	pcmcia_get_mem_page	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x5751bd83	pcmcia_map_mem_page	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x078c6eb3	hostap_set_multicast_list_queue	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x9b140fff	cx88_sram_channels	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x0d542439	__ipv6_addr_type	vmlinux	EXPORT_SYMBOL
+0x0b37f993	unregister_qdisc	vmlinux	EXPORT_SYMBOL
+0x5c57d43a	usb_autopm_get_interface	vmlinux	EXPORT_SYMBOL_GPL
+0xcd0cd62e	dma_region_mmap	vmlinux	EXPORT_SYMBOL
+0x205885cf	pci_map_rom	vmlinux	EXPORT_SYMBOL
+0x6058495c	scatterwalk_copychunks	vmlinux	EXPORT_SYMBOL_GPL
+0x41757afe	ieee80211_wx_set_encode	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x716b2413	ieee80211_wx_get_encode	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0xb2463ce0	mlx4_multicast_detach	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x0076dcf4	ib_rate_to_mult	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x25666e9d	fc_vport_terminate	vmlinux	EXPORT_SYMBOL
+0x9bc4e6f1	acpi_get_table_header	vmlinux	EXPORT_SYMBOL
+0xc769dc50	vm_insert_page	vmlinux	EXPORT_SYMBOL
+0xfe91f75f	register_console	vmlinux	EXPORT_SYMBOL
+0xf3fcaf8a	nf_conntrack_l4proto_tcp4	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xf2a3a9da	free_orinocodev	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0x7bbcd806	b1dma_reset_ctr	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xb618ac4f	sock_no_socketpair	vmlinux	EXPORT_SYMBOL
+0x2a6fdf66	input_ff_event	vmlinux	EXPORT_SYMBOL_GPL
+0x82f82f7c	ata_pci_default_filter	vmlinux	EXPORT_SYMBOL_GPL
+0x59bf16df	arpt_do_table	net/ipv4/netfilter/arp_tables	EXPORT_SYMBOL
+0x4343ee9e	gnet_stats_start_copy	vmlinux	EXPORT_SYMBOL
+0x2250c66e	mraid_mm_adapter_app_handle	vmlinux	EXPORT_SYMBOL
+0x2bfeb410	acpi_get_handle	vmlinux	EXPORT_SYMBOL
+0x83662aa9	async_tx_submit	vmlinux	EXPORT_SYMBOL_GPL
+0x230c366c	tcp_tso_segment	vmlinux	EXPORT_SYMBOL
+0x8faaea1e	platform_device_put	vmlinux	EXPORT_SYMBOL_GPL
+0xd946e64f	platform_device_del	vmlinux	EXPORT_SYMBOL_GPL
+0x50896e93	devm_free_irq	vmlinux	EXPORT_SYMBOL
+0x681f81c8	prof_on	vmlinux	EXPORT_SYMBOL_GPL
+0x24439d73	task_nice	vmlinux	EXPORT_SYMBOL_GPL
+0x272e7488	cond_resched_softirq	vmlinux	EXPORT_SYMBOL
+0xbd6d4cbb	snd_vx_resume	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x3591243d	ccid_register	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xb5179941	hostap_check_sta_fw_version	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x71e8d5ba	capilib_data_b3_req	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x2c35fbbd	kernel_accept	vmlinux	EXPORT_SYMBOL
+0xd9cc8c59	pcim_iounmap	vmlinux	EXPORT_SYMBOL
+0x365b0123	__percpu_alloc_mask	vmlinux	EXPORT_SYMBOL_GPL
+0x04d03329	set_bdi_congested	vmlinux	EXPORT_SYMBOL
+0x01a4aab6	set_irq_chip_data	vmlinux	EXPORT_SYMBOL
+0x3b6baa46	sysctl_ms_jiffies	vmlinux	EXPORT_SYMBOL
+0x44aa2672	xt_proto_fini	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x97ee779a	mlx4_mr_enable	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xe625ae9a	sata_scr_write_flush	vmlinux	EXPORT_SYMBOL_GPL
+0xd6ee35d4	driver_find	vmlinux	EXPORT_SYMBOL_GPL
+0xc6b368d3	acpi_gpe_count	vmlinux	EXPORT_SYMBOL
+0xcaa7eb52	copy_in_user	vmlinux	EXPORT_SYMBOL
+0xd1a97b79	lock_may_read	vmlinux	EXPORT_SYMBOL
+0xaafac46f	cpci_hp_register_controller	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x8880458f	iw_create_cm_id	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0xd5125bb3	snd_card_free	vmlinux	EXPORT_SYMBOL
+0xab5b36ad	pnp_stop_dev	vmlinux	EXPORT_SYMBOL
+0xb49ef306	fb_class	vmlinux	EXPORT_SYMBOL
+0x16e96cf2	load_nls	vmlinux	EXPORT_SYMBOL
+0x991fa810	bttv_sub_register	drivers/media/video/bt8xx/bttv	EXPORT_SYMBOL
+0x4385aee0	input_unregister_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0xa973b579	rdma_node_get_transport	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4859b8bb	rtc_year_days	vmlinux	EXPORT_SYMBOL
+0xe1e6930f	ata_host_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0x0c65e73c	scsi_normalize_sense	vmlinux	EXPORT_SYMBOL
+0x3405e3bb	register_pppox_proto	drivers/net/pppox	EXPORT_SYMBOL
+0x63d14d2f	eeprom_93cx6_read	drivers/misc/eeprom_93cx6	EXPORT_SYMBOL_GPL
+0x82d23e94	klist_iter_exit	vmlinux	EXPORT_SYMBOL_GPL
+0xe8add5b9	pcmcia_unregister_socket	vmlinux	EXPORT_SYMBOL
+0x72b243d4	free_dma	vmlinux	EXPORT_SYMBOL
+0xa73ad027	ieee80211_rx_any	net/ieee80211/ieee80211	EXPORT_SYMBOL_GPL
+0xe525ca6c	o2nm_get_hb_ctl_path	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xc60b5e9e	hermes_bap_pwrite	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0xf16221c9	cx24123_attach	drivers/media/dvb/frontends/cx24123	EXPORT_SYMBOL
+0x195f87fd	ib_sa_path_rec_get	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x9542dbba	xdr_init_decode	vmlinux	EXPORT_SYMBOL
+0xfed11ed1	usb_mon_deregister	vmlinux	EXPORT_SYMBOL_GPL
+0x458a4942	scsi_is_sas_rphy	vmlinux	EXPORT_SYMBOL
+0x7b469d11	device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xe2b7fae0	jbd2_journal_load	vmlinux	EXPORT_SYMBOL
+0xcb3d612e	release_open_intent	vmlinux	EXPORT_SYMBOL
+0x8b65598e	ezusb_set_reset	drivers/usb/serial/usbserial	EXPORT_SYMBOL
+0x488fc9a1	mmc_cleanup_queue	drivers/mmc/card/mmc_block	EXPORT_SYMBOL
+0x3fc2cb94	videobuf_mmap_free	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x9adf43b6	iw_handler_set_thrspy	vmlinux	EXPORT_SYMBOL
+0xaeca075f	xfrm_state_add	vmlinux	EXPORT_SYMBOL
+0xbbbd35c7	hpsb_write	vmlinux	EXPORT_SYMBOL
+0xff5a8cfe	cn_del_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x6cb5f863	nf_ct_l4proto_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x371753d3	nf_ct_l3proto_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x9d71b41d	ata_port_offline	vmlinux	EXPORT_SYMBOL_GPL
+0x2df57c2a	scsicam_bios_param	vmlinux	EXPORT_SYMBOL
+0x2009a199	dvb_register_device	vmlinux	EXPORT_SYMBOL
+0x992ac5a9	I_BDEV	vmlinux	EXPORT_SYMBOL
+0x93e53be5	rt2x00usb_vendor_request	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x66a4c4e6	cycx_down	drivers/net/wan/cycx_drv	EXPORT_SYMBOL
+0x7948c222	budget_debug	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0xe9dc28b5	phy_stop_interrupts	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x6d9e85c0	vfs_path_lookup	vmlinux	EXPORT_SYMBOL
+0x2f040e48	find_or_create_page	vmlinux	EXPORT_SYMBOL
+0x7310adb0	ieee80211_channel_to_index	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0xa6b08178	usbvideo_register	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0xce3aa14a	gs_write_room	drivers/char/generic_serial	EXPORT_SYMBOL
+0xe246954e	usb_sg_init	vmlinux	EXPORT_SYMBOL
+0x8ca932a9	usb_sg_wait	vmlinux	EXPORT_SYMBOL
+0x893f8e81	usb_buffer_unmap_sg	vmlinux	EXPORT_SYMBOL
+0xdac87274	sas_phy_add	vmlinux	EXPORT_SYMBOL
+0xd9fa85e8	scsi_reset_provider	vmlinux	EXPORT_SYMBOL
+0x3c322ec4	jbd2_journal_flush	vmlinux	EXPORT_SYMBOL
+0x452453c7	invalidate_bdev	vmlinux	EXPORT_SYMBOL
+0x1d412fa1	rt2x00usb_disable_radio	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xfab6c9b9	acpi_smbus_write	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0x33fa009f	tcp_twsk_unique	vmlinux	EXPORT_SYMBOL_GPL
+0xae4fb61e	mpt_reset_deregister	vmlinux	EXPORT_SYMBOL
+0x11267875	scsi_extd_sense_format	vmlinux	EXPORT_SYMBOL
+0x6c61ce70	num_registered_fb	vmlinux	EXPORT_SYMBOL
+0x2fa0f6ad	kobject_uevent	vmlinux	EXPORT_SYMBOL_GPL
+0xde180cdd	xdr_buf_from_iov	vmlinux	EXPORT_SYMBOL
+0xec76cbf3	xfrm_tmpl_sort	vmlinux	EXPORT_SYMBOL
+0x9235c19f	pccard_get_first_tuple	vmlinux	EXPORT_SYMBOL
+0x2261fb02	class_device_initialize	vmlinux	EXPORT_SYMBOL_GPL
+0x3c941009	pci_bus_write_config_dword	vmlinux	EXPORT_SYMBOL
+0x1db7706b	__copy_user_nocache	vmlinux	EXPORT_SYMBOL
+0x6819cc26	hpsb_get_hostinfo	vmlinux	EXPORT_SYMBOL
+0x087755d9	parport_wait_peripheral	vmlinux	EXPORT_SYMBOL
+0xc8ca3e25	acpi_get_child	vmlinux	EXPORT_SYMBOL
+0x27969c99	tty_hung_up_p	vmlinux	EXPORT_SYMBOL
+0xa6535215	blk_cleanup_queue	vmlinux	EXPORT_SYMBOL
+0x97b36d76	generic_setlease	vmlinux	EXPORT_SYMBOL
+0x27f29a05	toi_netlink_close	vmlinux	EXPORT_SYMBOL_GPL
+0xd807b716	ipv6_getsockopt	net/ipv6/ipv6	EXPORT_SYMBOL
+0xd8fd150d	usb_ftdi_elan_edset_setup	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x9994c0ca	ps2_is_keyboard_id	vmlinux	EXPORT_SYMBOL
+0xb37ab771	mpt_GetIocState	vmlinux	EXPORT_SYMBOL
+0xf3efc501	acpi_walk_resources	vmlinux	EXPORT_SYMBOL
+0xb4232265	pcim_enable_device	vmlinux	EXPORT_SYMBOL
+0x22325686	ieee80211softmac_wx_get_genie	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x915c526a	usb_driver_release_interface	vmlinux	EXPORT_SYMBOL
+0xf3d5cc13	ata_timing_merge	vmlinux	EXPORT_SYMBOL_GPL
+0xc1d8f713	swiotlb_unmap_sg	vmlinux	EXPORT_SYMBOL
+0x750477d7	mpage_writepages	vmlinux	EXPORT_SYMBOL
+0x01419063	write_one_page	vmlinux	EXPORT_SYMBOL
+0xd957629a	o2nm_node_get	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x5fa258d6	inet_add_protocol	vmlinux	EXPORT_SYMBOL
+0xd2e86e01	ata_host_activate	vmlinux	EXPORT_SYMBOL_GPL
+0xade59323	nlmsvc_ops	vmlinux	EXPORT_SYMBOL
+0x1d6d187a	sync_blockdev	vmlinux	EXPORT_SYMBOL
+0x9e278b4b	cx8802_init_common	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0x664fbfd9	dibusb_rc_query	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x6e720ff2	rtnl_unlock	vmlinux	EXPORT_SYMBOL
+0x1c2476aa	sock_rfree	vmlinux	EXPORT_SYMBOL
+0xfb5b9f16	kernel_recvmsg	vmlinux	EXPORT_SYMBOL
+0x44809893	find_next_bit	vmlinux	EXPORT_SYMBOL
+0x573d35af	register_security	vmlinux	EXPORT_SYMBOL_GPL
+0x0f6c7ef7	freeze_bdev	vmlinux	EXPORT_SYMBOL
+0x9c11addf	srcu_batches_completed	vmlinux	EXPORT_SYMBOL_GPL
+0x4a57ad64	acpi_processor_ffh_cstate_enter	vmlinux	EXPORT_SYMBOL_GPL
+0x2cc2d52d	vcc_hash	net/atm/atm	EXPORT_SYMBOL
+0x7e3102c7	ip_xfrm_me_harder	vmlinux	EXPORT_SYMBOL
+0xaa0cd7ee	skb_kill_datagram	vmlinux	EXPORT_SYMBOL
+0x598dffc9	kfree_skb	vmlinux	EXPORT_SYMBOL
+0x29b63193	bd_release	vmlinux	EXPORT_SYMBOL
+0x53a21daf	param_get_long	vmlinux	EXPORT_SYMBOL
+0x23cea294	atomic_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0x300d7e57	free_rs	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0xc0512e0f	ssb_admatch_base	drivers/ssb/ssb	EXPORT_SYMBOL
+0xd481192b	ssb_admatch_size	drivers/ssb/ssb	EXPORT_SYMBOL
+0x31fc7f59	cpia_unregister_camera	drivers/media/video/cpia	EXPORT_SYMBOL
+0xdc1efaba	saa7146_wait_for_debi_done	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x24e6f047	ib_send_cm_mra	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x3af6b363	inet_twsk_schedule	vmlinux	EXPORT_SYMBOL_GPL
+0x5640aea5	dm_create_dirty_log	vmlinux	EXPORT_SYMBOL
+0x85470686	lpfc_vport_delete	vmlinux	EXPORT_SYMBOL
+0xa44072fc	posix_acl_alloc	vmlinux	EXPORT_SYMBOL
+0x3a57f235	snd_seq_autoload_unlock	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0x2f5b4cba	dccp_tx_hist_purge	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x06c5b22e	svc_set_num_threads	vmlinux	EXPORT_SYMBOL
+0xdc3f33b0	xfrm_replay_notify	vmlinux	EXPORT_SYMBOL
+0x40a2685b	skb_copy_datagram_iovec	vmlinux	EXPORT_SYMBOL
+0xcb34d9fb	__kfree_skb	vmlinux	EXPORT_SYMBOL
+0x3dac2c32	get_mtd_device_nm	vmlinux	EXPORT_SYMBOL_GPL
+0xa17e9089	ata_pci_init_sff_host	vmlinux	EXPORT_SYMBOL_GPL
+0x9b896c03	pci_find_parent_resource	vmlinux	EXPORT_SYMBOL
+0x31b31f5c	csum_partial_copy_nocheck	vmlinux	EXPORT_SYMBOL
+0x9194eb2f	mptscsih_proc_info	vmlinux	EXPORT_SYMBOL
+0x13ef0916	toi_compress_bytes_in	vmlinux	EXPORT_SYMBOL_GPL
+0x27667ad7	snd_soc_test_bits	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xafa03cae	snd_i2c_device_free	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0xe4017507	saa7134_pgtable_build	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0xed269e25	ip_defrag	vmlinux	EXPORT_SYMBOL
+0x07f79e8b	register_qdisc	vmlinux	EXPORT_SYMBOL
+0x97a676c6	scsi_flush_work	vmlinux	EXPORT_SYMBOL_GPL
+0x2990cab3	fbcon_rotate_ccw	vmlinux	EXPORT_SYMBOL
+0xce87a643	idr_destroy	vmlinux	EXPORT_SYMBOL
+0xd2bdddf2	ida_destroy	vmlinux	EXPORT_SYMBOL
+0x2998be54	generic_file_aio_read	vmlinux	EXPORT_SYMBOL
+0x239d4b98	_spin_lock_bh	vmlinux	EXPORT_SYMBOL
+0x94af0182	onenand_scan_bbt	drivers/mtd/onenand/onenand	EXPORT_SYMBOL
+0x2ecbd45d	sm501_gpio_set	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x9e6578f0	free_netdev	vmlinux	EXPORT_SYMBOL
+0x170c25ee	acpi_get_next_object	vmlinux	EXPORT_SYMBOL
+0x3465a10a	register_binfmt	vmlinux	EXPORT_SYMBOL
+0x7277973d	ir_codes_pctv_sedna	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xeec42f54	gss_mech_get_by_pseudoflavor	vmlinux	EXPORT_SYMBOL
+0x4d4f808c	sk_setup_caps	vmlinux	EXPORT_SYMBOL_GPL
+0xdcf15b6b	scsi_host_get	vmlinux	EXPORT_SYMBOL
+0x6d9e4435	zlib_inflateIncomp	vmlinux	EXPORT_SYMBOL
+0x325fd77b	idr_pre_get	vmlinux	EXPORT_SYMBOL
+0x0ab53258	ida_pre_get	vmlinux	EXPORT_SYMBOL
+0x28d664ff	__raw_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x6a5fa363	sigprocmask	vmlinux	EXPORT_SYMBOL
+0x2ea8355f	tipc_send_buf	net/tipc/tipc	EXPORT_SYMBOL
+0xff98e5ee	ax25_listen_register	net/ax25/ax25	EXPORT_SYMBOL
+0xc691e027	gf128mul_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x94586a91	sk_stream_wait_connect	vmlinux	EXPORT_SYMBOL
+0x56a6cad8	mtd_concat_destroy	vmlinux	EXPORT_SYMBOL
+0x0e73d8de	parport_ieee1284_ecp_write_addr	vmlinux	EXPORT_SYMBOL
+0xa6e6da57	parport_ieee1284_epp_write_addr	vmlinux	EXPORT_SYMBOL
+0x9144a8e2	ec_burst_disable	vmlinux	EXPORT_SYMBOL
+0x69fc7115	do_mmap_pgoff	vmlinux	EXPORT_SYMBOL
+0x836bdb72	nand_flash_ids	drivers/mtd/nand/nand_ids	EXPORT_SYMBOL
+0xe9001652	thinkpad_ec_lock	drivers/misc/thinkpad_ec	EXPORT_SYMBOL_GPL
+0xb8a82f93	flexcop_pass_dmx_packets	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xbb9eae92	i2c_master_recv	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x8d551bef	sysctl_tcp_rmem	vmlinux	EXPORT_SYMBOL
+0xc160537e	sock_no_sendmsg	vmlinux	EXPORT_SYMBOL
+0xcbf8bf53	pcmcia_replace_cis	vmlinux	EXPORT_SYMBOL
+0xebe3a99a	vfs_unlink	vmlinux	EXPORT_SYMBOL
+0x00ffd3c7	init_waitqueue_head	vmlinux	EXPORT_SYMBOL
+0xc622fb29	snd_seq_device_unregister_driver	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0xd5168829	hermes_allocate	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0xed9003ef	pci_osc_support_set	vmlinux	EXPORT_SYMBOL
+0xf718cd90	key_revoke	vmlinux	EXPORT_SYMBOL
+0x06094f2c	rt2x00lib_remove_dev	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x15e28690	ioc4_register_submodule	drivers/misc/ioc4	EXPORT_SYMBOL
+0x16dcc3f3	bus_rescan_devices	vmlinux	EXPORT_SYMBOL_GPL
+0xb6cbe886	acpi_get_node	vmlinux	EXPORT_SYMBOL
+0x8a98bd71	put_tty_driver	vmlinux	EXPORT_SYMBOL
+0x9070b3f2	ioport_resource	vmlinux	EXPORT_SYMBOL
+0xa75a3422	p54_free_common	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0xc7a4fbed	rtnl_lock	vmlinux	EXPORT_SYMBOL
+0xb514007a	dev_unicast_add	vmlinux	EXPORT_SYMBOL
+0x94a68723	ata_scsi_slave_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x90cc2d5b	debugfs_create_bool	vmlinux	EXPORT_SYMBOL_GPL
+0x13353712	generic_file_splice_read	vmlinux	EXPORT_SYMBOL
+0x897473df	mktime	vmlinux	EXPORT_SYMBOL
+0x2288378f	system_state	vmlinux	EXPORT_SYMBOL
+0x9cd013f2	xfrm6_tunnel_alloc_spi	net/ipv6/xfrm6_tunnel	EXPORT_SYMBOL
+0x804bb2bb	llc_add_pack	vmlinux	EXPORT_SYMBOL
+0x2a180cbd	hidinput_connect	vmlinux	EXPORT_SYMBOL_GPL
+0xd7ea771e	del_timer_sync	vmlinux	EXPORT_SYMBOL
+0xb9da7026	dccp_setsockopt	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x82e9c083	csum_partial_copy_fromiovecend	vmlinux	EXPORT_SYMBOL
+0xeb82d038	hpsb_update_config_rom_image	vmlinux	EXPORT_SYMBOL
+0x63dfe1b4	hpet_unregister	vmlinux	EXPORT_SYMBOL
+0x423320e6	con_set_default_unimap	vmlinux	EXPORT_SYMBOL
+0x9aee8a49	mtd_do_chip_probe	drivers/mtd/chips/gen_probe	EXPORT_SYMBOL
+0xc368f8e6	btcx_align	drivers/media/video/btcx-risc	EXPORT_SYMBOL
+0x219696ab	drm_core_get_reg_ofs	drivers/char/drm/drm	EXPORT_SYMBOL
+0x59642a40	dev_get_by_index	vmlinux	EXPORT_SYMBOL
+0x338ee403	ioctl_by_bdev	vmlinux	EXPORT_SYMBOL
+0xe5a5d861	configfs_unregister_subsystem	fs/configfs/configfs	EXPORT_SYMBOL
+0xebed1d1c	class_device_add	vmlinux	EXPORT_SYMBOL_GPL
+0xa11cc3f9	textsearch_find_continuous	vmlinux	EXPORT_SYMBOL
+0x5e70fd12	__next_cpu	vmlinux	EXPORT_SYMBOL
+0xf902be91	__crypto_alloc_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0x15054e01	keyring_search	vmlinux	EXPORT_SYMBOL
+0xc1dacc68	key_unlink	vmlinux	EXPORT_SYMBOL
+0x359a41bc	generic_delete_inode	vmlinux	EXPORT_SYMBOL
+0x578ef38e	pageset1_copy_map	vmlinux	EXPORT_SYMBOL_GPL
+0x5a53d0f2	i2c_pca_add_bus	drivers/i2c/algos/i2c-algo-pca	EXPORT_SYMBOL
+0x136d616a	sk_stream_rfree	vmlinux	EXPORT_SYMBOL
+0xa073ba4b	cpuidle_register_governor	vmlinux	EXPORT_SYMBOL_GPL
+0x89f67f4b	ata_sg_init_one	vmlinux	EXPORT_SYMBOL_GPL
+0x7069ef2d	nf_nat_pptp_hook_expectfn	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0x8cf61660	w1_add_master_device	drivers/w1/wire	EXPORT_SYMBOL
+0x4949a74c	mmc_wait_for_req	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xd5b037e1	kref_put	vmlinux	EXPORT_SYMBOL
+0xe599ef36	blk_run_queue	vmlinux	EXPORT_SYMBOL
+0x78e51474	do_sync_mapping_range	vmlinux	EXPORT_SYMBOL_GPL
+0x91815586	irda_param_pack	net/irda/irda	EXPORT_SYMBOL
+0x48fdeba9	dccp_li_hist_purge	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x5f381369	hci_register_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xe7334e6a	deregister_atm_ioctl	net/atm/atm	EXPORT_SYMBOL
+0x46bc0adc	zlib_deflate	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0x42c8e001	v4l2_ctrl_next	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x19a26ae2	i2c_smbus_write_i2c_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x16d1d2ee	gs_flush_buffer	drivers/char/generic_serial	EXPORT_SYMBOL
+0xf8dfea26	__secpath_destroy	vmlinux	EXPORT_SYMBOL
+0x79823263	tcp_unhash	vmlinux	EXPORT_SYMBOL
+0xb694c524	suid_dumpable	vmlinux	EXPORT_SYMBOL
+0x24fdac79	wake_bit_function	vmlinux	EXPORT_SYMBOL
+0x96c00133	snd_rawmidi_drain_output	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x6cb9d5ea	init_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0xfaf87551	inet_csk_route_req	vmlinux	EXPORT_SYMBOL_GPL
+0x3adce61c	qdisc_get_rtab	vmlinux	EXPORT_SYMBOL
+0x237f8bdb	hid_set_field	vmlinux	EXPORT_SYMBOL_GPL
+0xfaa62c43	i2o_parm_issue	vmlinux	EXPORT_SYMBOL
+0xd5b680df	bus_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0xb39026e4	mempool_resize	vmlinux	EXPORT_SYMBOL
+0xf0af42ed	snd_ac97_pcm_open	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x1b6d1825	drm_agp_unbind	drivers/char/drm/drm	EXPORT_SYMBOL
+0xb13e05ef	xfrm_unregister_km	vmlinux	EXPORT_SYMBOL
+0x248764ec	in_dev_finish_destroy	vmlinux	EXPORT_SYMBOL
+0x82fb8aa4	__nf_conntrack_confirm	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8c79adf8	usbnet_suspend	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x1de88d13	videocodec_detach	drivers/media/video/videocodec	EXPORT_SYMBOL
+0xd277bab3	dmam_alloc_coherent	vmlinux	EXPORT_SYMBOL
+0x0acbc61b	__brelse	vmlinux	EXPORT_SYMBOL
+0x2a01dd63	scsi_host_get_command	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xb47bb05e	ib_register_mad_agent	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x46e1d19d	scsi_device_set_state	vmlinux	EXPORT_SYMBOL
+0x7ade7c43	mark_buffer_async_write	vmlinux	EXPORT_SYMBOL
+0xba4f2ed1	reset_files_struct	vmlinux	EXPORT_SYMBOL
+0x172954a3	wait_for_completion_interruptible_timeout	vmlinux	EXPORT_SYMBOL
+0xadd203d0	tipc_connect2port	net/tipc/tipc	EXPORT_SYMBOL
+0x58d825ef	pci_hp_register	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x50268f74	mmc_add_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x28e23139	xfrm_probe_algs	vmlinux	EXPORT_SYMBOL_GPL
+0x891d517c	ip_route_me_harder	vmlinux	EXPORT_SYMBOL
+0xbcc8b0c4	inet_sock_destruct	vmlinux	EXPORT_SYMBOL
+0x1ff0abbe	nf_reinject	vmlinux	EXPORT_SYMBOL
+0x3a9b6fb9	blk_unregister_region	vmlinux	EXPORT_SYMBOL
+0xc4f9b201	unregister_nls	vmlinux	EXPORT_SYMBOL
+0x723626ac	tipc_send_buf2name	net/tipc/tipc	EXPORT_SYMBOL
+0x4fa391de	__serio_register_port	vmlinux	EXPORT_SYMBOL
+0x135bb5d8	skb_pull_rcsum	vmlinux	EXPORT_SYMBOL_GPL
+0xc3187507	snd_ctl_unregister_ioctl	vmlinux	EXPORT_SYMBOL
+0x590b84a1	__scsi_device_lookup_by_target	vmlinux	EXPORT_SYMBOL
+0xa0c159ad	parport_claim	vmlinux	EXPORT_SYMBOL
+0xd497a790	dccp_insert_option_elapsed_time	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xfefde75f	usbnet_get_msglevel	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x739ef559	usbnet_set_msglevel	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x54e15bad	saa7146_vmalloc_build_pgtable	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x36997a2d	ib_dealloc_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x0b651ff0	agp_remove_bridge	vmlinux	EXPORT_SYMBOL_GPL
+0x3db2e258	radix_tree_gang_lookup	vmlinux	EXPORT_SYMBOL
+0x80780020	register_nls	vmlinux	EXPORT_SYMBOL
+0xb121390a	probe_irq_on	vmlinux	EXPORT_SYMBOL
+0x23daecbd	tipc_send	net/tipc/tipc	EXPORT_SYMBOL
+0x89511b36	nf_ct_unlink_expect	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x1d747ce3	o2hb_check_node_heartbeating	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x19753451	btcx_riscmem_free	drivers/media/video/btcx-risc	EXPORT_SYMBOL
+0x9b4faa6d	i2c_smbus_write_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x03f7b953	xfrm_state_lookup	vmlinux	EXPORT_SYMBOL
+0xa050cea9	tcp_parse_options	vmlinux	EXPORT_SYMBOL
+0xe8116e08	__kmalloc_node	vmlinux	EXPORT_SYMBOL
+0xdb689f2c	snd_soc_dapm_sync_endpoints	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xbe40ace9	irlmp_discovery_request	net/irda/irda	EXPORT_SYMBOL
+0x3d21574d	ssb_device_is_enabled	drivers/ssb/ssb	EXPORT_SYMBOL
+0x0a8832db	edac_mc_find_csrow_by_page	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x024a8b41	rpc_unlink	vmlinux	EXPORT_SYMBOL
+0x9d33ef5e	acpi_enable	vmlinux	EXPORT_SYMBOL
+0x5252f304	__memcpy_toio	vmlinux	EXPORT_SYMBOL
+0xca4e023f	inotify_inode_is_dead	vmlinux	EXPORT_SYMBOL_GPL
+0x899defb0	module_refcount	vmlinux	EXPORT_SYMBOL
+0x83a94e7a	dlm_unregister_domain	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xb9cb9484	dlm_register_domain	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xbedea422	display_device_register	drivers/video/display/display	EXPORT_SYMBOL
+0x3a29d8d4	edac_pci_reset_delay_period	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x86af5ec3	pccard_read_tuple	vmlinux	EXPORT_SYMBOL
+0xcfc5e473	ip_vs_conn_in_get	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x48f2fefc	ttusbdecfe_dvbt_attach	drivers/media/dvb/ttusb-dec/ttusbdecfe	EXPORT_SYMBOL
+0x6335ff36	ttusbdecfe_dvbs_attach	drivers/media/dvb/ttusb-dec/ttusbdecfe	EXPORT_SYMBOL
+0x6ba5b35c	__netif_rx_schedule	vmlinux	EXPORT_SYMBOL
+0x99ac483d	usb_lock_device_for_reset	vmlinux	EXPORT_SYMBOL
+0x91ca8959	acpi_get_register	vmlinux	EXPORT_SYMBOL
+0x059c6fae	pci_enable_device_bars	vmlinux	EXPORT_SYMBOL
+0x913da152	usb_ftdi_elan_edset_empty	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x8b861e06	xfrm_state_put_afinfo	vmlinux	EXPORT_SYMBOL
+0x1544aad4	genl_register_mc_group	vmlinux	EXPORT_SYMBOL
+0x7157d422	___pskb_trim	vmlinux	EXPORT_SYMBOL
+0xbed47f89	snd_timer_global_new	vmlinux	EXPORT_SYMBOL
+0xaa736fdb	ata_std_prereset	vmlinux	EXPORT_SYMBOL_GPL
+0x4108e69a	fb_match_mode	vmlinux	EXPORT_SYMBOL
+0xa8c6f18b	pci_setup_cardbus	vmlinux	EXPORT_SYMBOL
+0xe2d5255a	strcmp	vmlinux	EXPORT_SYMBOL
+0x85df9b6c	strsep	vmlinux	EXPORT_SYMBOL
+0xdc3eaf70	iomem_resource	vmlinux	EXPORT_SYMBOL
+0x6729d3df	__get_user_4	vmlinux	EXPORT_SYMBOL
+0xb2fd5ceb	__put_user_4	vmlinux	EXPORT_SYMBOL
+0x04653caf	usb_serial_register	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x951699fe	snd_ctl_add	vmlinux	EXPORT_SYMBOL
+0x2f47d8c7	cpufreq_frequency_get_table	vmlinux	EXPORT_SYMBOL_GPL
+0x53476b79	hpsb_resume_host	vmlinux	EXPORT_SYMBOL
+0x9f7de902	hpsb_remove_host	vmlinux	EXPORT_SYMBOL
+0xb1ebd5da	sata_scr_read	vmlinux	EXPORT_SYMBOL_GPL
+0x0c5b2d12	dvb_ca_en50221_release	vmlinux	EXPORT_SYMBOL
+0xb1812dc1	devm_kfree	vmlinux	EXPORT_SYMBOL_GPL
+0x1e551aa9	mnt_unpin	vmlinux	EXPORT_SYMBOL
+0x97f98e8e	vfs_create	vmlinux	EXPORT_SYMBOL
+0xf9892a06	dccp_done	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x90e7cff3	RingQueue_Dequeue	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0xd6049b50	mtd_erase_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x940e6d22	sb_min_blocksize	vmlinux	EXPORT_SYMBOL
+0x1e4d34aa	sas_phy_alloc	vmlinux	EXPORT_SYMBOL
+0x59d696b6	register_module_notifier	vmlinux	EXPORT_SYMBOL
+0x42f32c54	snd_cs8427_reg_write	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0xeafa88f2	irda_unregister_dongle	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x752a4c77	cpuidle_disable_device	vmlinux	EXPORT_SYMBOL_GPL
+0xa03d96fd	bitmap_start_sync	vmlinux	EXPORT_SYMBOL
+0xf8b9c512	pi_schedule_claimed	vmlinux	EXPORT_SYMBOL
+0xc7208c3a	serial8250_resume_port	vmlinux	EXPORT_SYMBOL
+0x72d428b3	pcmcia_request_irq	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x6cd086c5	i2c_control	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x40e05e78	hid_input_report	vmlinux	EXPORT_SYMBOL_GPL
+0x801d72d2	pcix_set_mmrbc	vmlinux	EXPORT_SYMBOL
+0xb0e08022	unregister_sysctl_table	vmlinux	EXPORT_SYMBOL
+0xad1d2a71	ieee80211softmac_highest_supported_rate	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x09419381	acpi_smbus_unregister_callback	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0x17371295	paride_register	vmlinux	EXPORT_SYMBOL
+0x4ef86f8d	pci_find_aer_capability	vmlinux	EXPORT_SYMBOL_GPL
+0x35c14c9f	del_gendisk	vmlinux	EXPORT_SYMBOL
+0x0b200501	block_write_full_page	vmlinux	EXPORT_SYMBOL
+0x0f5a92de	dcache_lock	vmlinux	EXPORT_SYMBOL
+0xbb4bcbf0	nf_ct_invert_tuple	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x3cb3ea4b	xfrm_register_type	vmlinux	EXPORT_SYMBOL
+0xa61aa028	snd_pcm_format_unsigned	vmlinux	EXPORT_SYMBOL
+0x9305f8e6	cpufreq_get	vmlinux	EXPORT_SYMBOL
+0x976e539e	lockd_up	vmlinux	EXPORT_SYMBOL
+0x35548972	fat_sync_inode	vmlinux	EXPORT_SYMBOL_GPL
+0x37d4196b	clear_bdi_congested	vmlinux	EXPORT_SYMBOL
+0x985b47d4	sock_no_getsockopt	vmlinux	EXPORT_SYMBOL
+0x3f197887	sock_no_setsockopt	vmlinux	EXPORT_SYMBOL
+0x4c1c8284	__blockdev_direct_IO	vmlinux	EXPORT_SYMBOL
+0xbab08b7e	migrate_page	vmlinux	EXPORT_SYMBOL
+0x8ba9bdb8	ip6_route_me_harder	net/ipv6/ipv6	EXPORT_SYMBOL
+0xa2e605d4	usb_ftdi_elan_write_pcimem	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x1514b2b2	ipath_debug	drivers/infiniband/hw/ipath/ib_ipath	EXPORT_SYMBOL_GPL
+0x16c7c1fd	xfrm_audit_log	vmlinux	EXPORT_SYMBOL
+0x2ec1f87c	sas_rphy_delete	vmlinux	EXPORT_SYMBOL
+0xa5255177	__down_read_trylock	vmlinux	EXPORT_SYMBOL
+0xb3ce0cda	km_new_mapping	vmlinux	EXPORT_SYMBOL
+0xe7a17486	snd_device_new	vmlinux	EXPORT_SYMBOL
+0x7954b1ea	fc_get_event_number	vmlinux	EXPORT_SYMBOL
+0xefdcf24e	swiotlb_sync_single_for_cpu	vmlinux	EXPORT_SYMBOL
+0x068749af	generic_block_bmap	vmlinux	EXPORT_SYMBOL
+0x868784cb	__symbol_get	vmlinux	EXPORT_SYMBOL_GPL
+0xc55f7dc7	_write_trylock	vmlinux	EXPORT_SYMBOL
+0x5c0d4b5c	tipc_ref_valid	net/tipc/tipc	EXPORT_SYMBOL
+0xb60e34a8	nla_memcpy	vmlinux	EXPORT_SYMBOL
+0x4c4c956e	nla_memcmp	vmlinux	EXPORT_SYMBOL
+0xfd9120fc	snd_pcm_hw_constraint_list	vmlinux	EXPORT_SYMBOL
+0xc9fd878f	acpi_ut_exception	vmlinux	EXPORT_SYMBOL
+0xe605c841	d_materialise_unique	vmlinux	EXPORT_SYMBOL_GPL
+0xcaa0bcdd	kmem_cache_free	vmlinux	EXPORT_SYMBOL
+0xbf1d71ff	kmem_cache_name	vmlinux	EXPORT_SYMBOL
+0x46a79572	DoCMil_init	drivers/mtd/devices/doc2001	EXPORT_SYMBOL_GPL
+0x41cb2dde	ipmi_request_supply_msgs	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x2caa52dc	prepare_to_wait	vmlinux	EXPORT_SYMBOL
+0x4c3af445	__request_region	vmlinux	EXPORT_SYMBOL
+0x4d619f26	snd_cs8427_create	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0x9e8ad082	save_msrs	vmlinux	EXPORT_SYMBOL_GPL
+0x6a40ab1b	pcmcia_find_mem_region	vmlinux	EXPORT_SYMBOL
+0x0d656496	ata_host_detach	vmlinux	EXPORT_SYMBOL_GPL
+0x637f5716	dvb_frontend_reinitialise	vmlinux	EXPORT_SYMBOL
+0x2f12790d	acpi_ec_add_query_handler	vmlinux	EXPORT_SYMBOL_GPL
+0xe089cfcc	agp_memory_reserved	vmlinux	EXPORT_SYMBOL_GPL
+0x0c826bc7	bdev_read_only	vmlinux	EXPORT_SYMBOL
+0xf0009fee	put_pages_list	vmlinux	EXPORT_SYMBOL
+0x9b88b8e3	snd_soc_info_volsw	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x993ad14b	irda_param_extract_all	net/irda/irda	EXPORT_SYMBOL
+0xcf27c31e	sock_wfree	vmlinux	EXPORT_SYMBOL
+0x7583abbc	dvb_ringbuffer_pkt_next	vmlinux	EXPORT_SYMBOL
+0x08b18831	fat_date_unix2dos	vmlinux	EXPORT_SYMBOL_GPL
+0x1a21fd92	test_set_page_writeback	vmlinux	EXPORT_SYMBOL
+0xd46a8989	__page_cache_alloc	vmlinux	EXPORT_SYMBOL
+0x091eb9b4	round_jiffies	vmlinux	EXPORT_SYMBOL_GPL
+0x9e50bb2a	snd_ac97_pcm_assign	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xac4e53b9	cx88_user_ctrls	drivers/media/video/cx88/cx8800	EXPORT_SYMBOL
+0xd9e6a358	qdisc_destroy	vmlinux	EXPORT_SYMBOL
+0x85a70bd8	dm_destroy_dirty_log	vmlinux	EXPORT_SYMBOL
+0x0a952d98	ps2_schedule_command	vmlinux	EXPORT_SYMBOL
+0x5594be03	bitmap_remap	vmlinux	EXPORT_SYMBOL
+0x1d042ce3	dquot_commit	vmlinux	EXPORT_SYMBOL
+0x54c48b1d	truncate_inode_pages	vmlinux	EXPORT_SYMBOL
+0x4ff75f8a	snd_util_mem_alloc	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x535d5ee2	cx88_video_mux	drivers/media/video/cx88/cx8800	EXPORT_SYMBOL
+0x0422fe4a	inet_csk_timer_bug_msg	vmlinux	EXPORT_SYMBOL
+0x4b2fc22b	input_flush_device	vmlinux	EXPORT_SYMBOL
+0x63e491a1	ata_bmdma_thaw	vmlinux	EXPORT_SYMBOL_GPL
+0x2efa931a	dvb_frontend_detach	vmlinux	EXPORT_SYMBOL
+0x1599cf11	sysfs_notify	vmlinux	EXPORT_SYMBOL_GPL
+0x0948cde9	num_physpages	vmlinux	EXPORT_SYMBOL
+0x3701a196	csum_partial_copy_to_user	vmlinux	EXPORT_SYMBOL
+0x0ca85c98	class_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x9a1dfd65	strpbrk	vmlinux	EXPORT_SYMBOL
+0x8b0dfe92	sysfs_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0x0cb79e73	seq_lseek	vmlinux	EXPORT_SYMBOL
+0x634cd7ee	iommu_merge	vmlinux	EXPORT_SYMBOL
+0x849ff452	phy_enable_interrupts	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xb213fe8b	snd_info_get_str	vmlinux	EXPORT_SYMBOL
+0x05489ae6	cdrom_get_last_written	vmlinux	EXPORT_SYMBOL
+0x1551dc51	bitmap_find_free_region	vmlinux	EXPORT_SYMBOL
+0xd87ce4b3	pcmcia_request_configuration	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x28a1ac45	ubi_leb_erase	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xd0bc06ce	capifs_new_ncci	drivers/isdn/capi/capifs	EXPORT_SYMBOL
+0xda8d8b7f	edac_pci_alloc_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x71fa908a	cache_flush	vmlinux	EXPORT_SYMBOL
+0xfa73c041	xfrm_parse_spi	vmlinux	EXPORT_SYMBOL
+0xc007a6af	leds_list_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xaf7d39c6	set_disk_ro	vmlinux	EXPORT_SYMBOL
+0xfebd4028	journal_invalidatepage	vmlinux	EXPORT_SYMBOL
+0x27cbbea7	do_softirq	vmlinux	EXPORT_SYMBOL
+0x4153c868	pcmcia_request_window	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x146b503a	dib3000mc_pid_parse	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0xb60e5e5f	capi_cmsg_header	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xa5a3683f	bus_find_device	vmlinux	EXPORT_SYMBOL_GPL
+0xee03b1cf	relay_switch_subbuf	vmlinux	EXPORT_SYMBOL_GPL
+0xc022f294	rxrpc_get_server_data_key	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xbd37b5d5	register_ip_vs_app_inc	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x17927d3b	video_device_release	drivers/media/video/videodev	EXPORT_SYMBOL
+0x5523e840	dst_pio_enable	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x4ef683fb	rpc_create	vmlinux	EXPORT_SYMBOL_GPL
+0x334ef9fb	xfrm_aalg_get_byid	vmlinux	EXPORT_SYMBOL_GPL
+0xd0959eec	tcp_create_openreq_child	vmlinux	EXPORT_SYMBOL
+0x272f5b3e	sk_common_release	vmlinux	EXPORT_SYMBOL
+0xe80c8354	led_trigger_register	vmlinux	EXPORT_SYMBOL_GPL
+0x6236bbe8	devm_request_irq	vmlinux	EXPORT_SYMBOL
+0xf49229b6	tipc_createport	net/tipc/tipc	EXPORT_SYMBOL
+0xa9ed9cca	capi_ctr_resume_output	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xe37293a6	skb_queue_head	vmlinux	EXPORT_SYMBOL
+0xb8203bf2	skb_prepare_seq_read	vmlinux	EXPORT_SYMBOL
+0xcc84c299	sk_reset_timer	vmlinux	EXPORT_SYMBOL
+0x441dd941	scsi_io_completion	vmlinux	EXPORT_SYMBOL
+0x7a848702	_read_lock_irqsave	vmlinux	EXPORT_SYMBOL
+0x276c7e62	crc_itu_t	lib/crc-itu-t	EXPORT_SYMBOL
+0x154a8509	drm_pci_free	drivers/char/drm/drm	EXPORT_SYMBOL
+0x04fae9ff	bio_alloc_bioset	vmlinux	EXPORT_SYMBOL
+0x402e6c00	ieee80211_get_hdrlen_from_skb	net/mac80211/mac80211	EXPORT_SYMBOL
+0xe4668f90	atmel_open	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0x35d7e397	videobuf_querybuf	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x4603d041	usb_driver_set_configuration	vmlinux	EXPORT_SYMBOL_GPL
+0xdba63f89	scsi_protect_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x5376d089	mii_ethtool_gset	vmlinux	EXPORT_SYMBOL
+0x256d3efe	mii_ethtool_sset	vmlinux	EXPORT_SYMBOL
+0xaf1acbd3	vfs_cancel_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xaa84a8ae	acpi_processor_power_init_bm_check	vmlinux	EXPORT_SYMBOL
+0xb602c57e	nf_ct_l3proto_module_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe98fd3fe	gameport_stop_polling	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x0d91659e	ib_get_cached_lmc	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x2c8f919c	release_sock	vmlinux	EXPORT_SYMBOL
+0x50e7193a	__i2c_first_dynamic_bus_num	vmlinux	EXPORT_SYMBOL_GPL
+0xf967d3e3	class_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0xc762da21	agp_backend_acquire	vmlinux	EXPORT_SYMBOL
+0xae930796	textsearch_destroy	vmlinux	EXPORT_SYMBOL
+0x290e3a77	alloc_pages_current	vmlinux	EXPORT_SYMBOL
+0x578c8d9f	cx8802_unregister_driver	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0xb1ca362e	snd_pcm_hw_constraint_msbits	vmlinux	EXPORT_SYMBOL
+0xc09ef51e	unmap_underlying_metadata	vmlinux	EXPORT_SYMBOL
+0xbd78db0d	sync_inode	vmlinux	EXPORT_SYMBOL
+0x059baffc	krealloc	vmlinux	EXPORT_SYMBOL
+0x8f6b7950	set_irq_data	vmlinux	EXPORT_SYMBOL
+0xd53ae775	ieee80211softmac_wx_set_mlme	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x798e8e32	input_register_device	vmlinux	EXPORT_SYMBOL
+0x35e33c1e	nfs4_acl_write_who	vmlinux	EXPORT_SYMBOL
+0x5364a89b	__invalidate_device	vmlinux	EXPORT_SYMBOL
+0xda509db0	snd_midi_event_reset_encode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x58f8120a	led_classdev_unregister	drivers/leds/led-class	EXPORT_SYMBOL_GPL
+0x2ba707a8	sysctl_tcp_low_latency	vmlinux	EXPORT_SYMBOL
+0x1163f0a7	blk_max_low_pfn	vmlinux	EXPORT_SYMBOL
+0x19a80eaa	blk_queue_free_tags	vmlinux	EXPORT_SYMBOL
+0xb9a3b491	simple_sync_file	vmlinux	EXPORT_SYMBOL
+0x1fc91fb2	request_irq	vmlinux	EXPORT_SYMBOL
+0x415fd42b	register_sysctl_table	vmlinux	EXPORT_SYMBOL
+0xdbd5da79	irias_add_string_attrib	net/irda/irda	EXPORT_SYMBOL
+0x279e265f	ieee80211_crypt_deinit_handler	net/ieee80211/ieee80211_crypt	EXPORT_SYMBOL
+0x096214f3	drm_idlelock_release	drivers/char/drm/drm	EXPORT_SYMBOL
+0x6161a8db	kvm_hypercall	vmlinux	EXPORT_SYMBOL_GPL
+0x684b1830	ohci1394_unregister_iso_tasklet	vmlinux	EXPORT_SYMBOL
+0xa7c05765	tty_flip_buffer_push	vmlinux	EXPORT_SYMBOL
+0x8d15525b	cap_task_reparent_to_init	vmlinux	EXPORT_SYMBOL
+0x0f93b950	ieee80211softmac_wx_set_genie	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x6379e6db	atm_dev_register	net/atm/atm	EXPORT_SYMBOL
+0x8b55ecb0	uart_get_divisor	vmlinux	EXPORT_SYMBOL
+0x0304b878	inotify_init_watch	vmlinux	EXPORT_SYMBOL_GPL
+0xf9a482f9	msleep	vmlinux	EXPORT_SYMBOL
+0x28b7a20e	unregister_netdev	vmlinux	EXPORT_SYMBOL
+0x9d8eac9c	__bforget	vmlinux	EXPORT_SYMBOL
+0x579377cc	xt_register_table	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xe8913805	set_h225_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x5fec5991	lapb_disconnect_request	net/lapb/lapb	EXPORT_SYMBOL
+0x5495a955	inet6_add_protocol	net/ipv6/ipv6	EXPORT_SYMBOL
+0xe0ff7a18	unregister_pppox_proto	drivers/net/pppox	EXPORT_SYMBOL
+0x01329f51	xdr_reserve_space	vmlinux	EXPORT_SYMBOL
+0x2dfb2d30	sock_no_listen	vmlinux	EXPORT_SYMBOL
+0xf12ab1b8	md_unregister_thread	vmlinux	EXPORT_SYMBOL
+0x293a5873	scsi_device_lookup_by_target	vmlinux	EXPORT_SYMBOL
+0x79aa04a2	get_random_bytes	vmlinux	EXPORT_SYMBOL
+0xab600421	probe_irq_off	vmlinux	EXPORT_SYMBOL
+0x25598ff7	ipmi_smi_add_proc_entry	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xeb9cee7d	rpcauth_unregister	vmlinux	EXPORT_SYMBOL
+0x389f2355	tcf_exts_destroy	vmlinux	EXPORT_SYMBOL
+0x2a384ee0	input_free_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0x02a1607b	tcf_hash_lookup	vmlinux	EXPORT_SYMBOL
+0x58aff643	sock_no_poll	vmlinux	EXPORT_SYMBOL
+0x15aaa087	ata_dev_try_classify	vmlinux	EXPORT_SYMBOL_GPL
+0x2530da5a	unregister_ip_vs_scheduler	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x1f710578	cxgb3_unregister_client	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x4aacd000	ib_alloc_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3797e731	vlan_ioctl_set	vmlinux	EXPORT_SYMBOL
+0xe51a1c64	snd_pcm_format_size	vmlinux	EXPORT_SYMBOL
+0x6a037cf1	mempool_kfree	vmlinux	EXPORT_SYMBOL
+0x8152971e	irda_device_register_dongle	net/irda/irda	EXPORT_SYMBOL
+0x39dc962d	irttp_data_request	net/irda/irda	EXPORT_SYMBOL
+0x8fbe8750	irlmp_data_request	net/irda/irda	EXPORT_SYMBOL
+0xc3828158	scsi_scan_target	vmlinux	EXPORT_SYMBOL
+0x8a5009ae	cap_inode_setxattr	vmlinux	EXPORT_SYMBOL
+0xdd3747d2	register_quota_format	vmlinux	EXPORT_SYMBOL
+0x4c12ec22	remove_arg_zero	vmlinux	EXPORT_SYMBOL
+0x0cb4522b	remap_pfn_range	vmlinux	EXPORT_SYMBOL
+0xa7c35c6b	getnstimeofday	vmlinux	EXPORT_SYMBOL
+0xc4c01aa4	snd_opl3_create	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x99d49760	dccp_v4_conn_request	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x43a87d42	write_dst	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x3e177eae	i2c_attach_client	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x7da28f12	nvram_check_checksum	drivers/char/nvram	EXPORT_SYMBOL
+0xabbd1929	device_bind_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xf8b0341a	file_update_time	vmlinux	EXPORT_SYMBOL
+0xbd63bfb2	inet6_csk_search_req	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0xf49bc67a	atm_pcr_goal	net/atm/atm	EXPORT_SYMBOL
+0x87406d9d	nand_correct_data	drivers/mtd/nand/nand_ecc	EXPORT_SYMBOL
+0x6b87c69d	ir_codes_iodata_bctv7e	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x6f74bce2	sis_info133_for_sata	vmlinux	EXPORT_SYMBOL_GPL
+0x1110d13e	kobject_uevent_env	vmlinux	EXPORT_SYMBOL_GPL
+0x4faca644	mb_cache_entry_alloc	vmlinux	EXPORT_SYMBOL
+0xda268740	relay_file_operations	vmlinux	EXPORT_SYMBOL_GPL
+0xcac81e26	snd_emu10k1_voice_alloc	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x296b99f2	snd_seq_kernel_client_dispatch	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x75e89cc3	ir_codes_flydvb	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x085466c6	rpc_wake_up_status	vmlinux	EXPORT_SYMBOL
+0x43ec913a	put_cmsg	vmlinux	EXPORT_SYMBOL
+0x67745f32	skb_free_datagram	vmlinux	EXPORT_SYMBOL
+0xa512db0b	sound_class	vmlinux	EXPORT_SYMBOL
+0xf520a6d1	pi_read_regr	vmlinux	EXPORT_SYMBOL
+0x222176c0	filp_close	vmlinux	EXPORT_SYMBOL
+0x8c4b3236	toi_send_netlink_message	vmlinux	EXPORT_SYMBOL_GPL
+0x7ac46eb9	wait_for_completion_interruptible	vmlinux	EXPORT_SYMBOL
+0x9d72386b	svcauth_gss_flavor	vmlinux	EXPORT_SYMBOL
+0x8d1a827e	svcauth_gss_register_pseudoflavor	vmlinux	EXPORT_SYMBOL
+0x67b27ec1	tty_std_termios	vmlinux	EXPORT_SYMBOL
+0x04d21780	generic_readlink	vmlinux	EXPORT_SYMBOL
+0x4cb720a6	usbnet_nway_reset	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x059302a2	saa7134_ts_unregister	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x7e6f1307	capi20_get_manufacturer	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x86977c2c	ether_setup	vmlinux	EXPORT_SYMBOL
+0x04a4a73c	usb_deregister_device_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x202e33c9	device_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0x04eae5aa	elv_dequeue_request	vmlinux	EXPORT_SYMBOL
+0x3f695cd0	__break_lease	vmlinux	EXPORT_SYMBOL
+0x7f87d306	__get_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0xdc76cbcb	param_set_bool	vmlinux	EXPORT_SYMBOL
+0x44f4f5a2	__capable	vmlinux	EXPORT_SYMBOL
+0x8d60efcf	snd_soc_dapm_get_volsw	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xba353290	snd_soc_dapm_put_volsw	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xcdc7fb52	ieee80211softmac_fragment_lost	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x21d2b336	dccp_li_update_li	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0xfa177653	ir_codes_pixelview	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xffdd817c	i2o_find_iop	vmlinux	EXPORT_SYMBOL
+0xcab03977	truncate_inode_pages_range	vmlinux	EXPORT_SYMBOL
+0x69debfcc	force_sig	vmlinux	EXPORT_SYMBOL
+0x16756dc0	snd_usbmidi_input_start	sound/usb/snd-usb-lib	EXPORT_SYMBOL
+0xfb981300	ir_codes_pinnacle_color	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xbcef8a28	parport_ieee1284_read_nibble	vmlinux	EXPORT_SYMBOL
+0x7ab09b95	__downgrade_write	vmlinux	EXPORT_SYMBOL
+0x9c7fccab	d_path	vmlinux	EXPORT_SYMBOL
+0xf2f9a9a0	alloc_ieee80211softmac	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x32a27b3d	b1dma_load_firmware	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xbe4fc7e7	scsi_is_fc_vport	vmlinux	EXPORT_SYMBOL
+0x5eb7a8ca	fs_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0x937607e2	hci_free_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x93d405bc	usbnet_resume	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xeb258ba6	igrab	vmlinux	EXPORT_SYMBOL
+0x32fe88c7	snd_soc_set_runtime_hwparams	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x092c8e7b	ssb_device_disable	drivers/ssb/ssb	EXPORT_SYMBOL
+0x4740e7a3	ir_codes_empty	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x606f60af	__rtnl_link_register	vmlinux	EXPORT_SYMBOL_GPL
+0xb3823bf3	rtnl_notify	vmlinux	EXPORT_SYMBOL
+0xc973d51c	per_cpu__softnet_data	vmlinux	EXPORT_SYMBOL
+0x6fbf4539	sock_recvmsg	vmlinux	EXPORT_SYMBOL
+0x9ee511dc	snd_pcm_open_substream	vmlinux	EXPORT_SYMBOL
+0xd16712f3	crypto_check_attr_type	vmlinux	EXPORT_SYMBOL_GPL
+0x514307bd	snd_ac97_update	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xbd8d5fbc	nf_ct_l3protos	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x254f230c	nand_calculate_ecc	drivers/mtd/nand/nand_ecc	EXPORT_SYMBOL
+0xac0ae0ea	gameport_rescan	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xb27e9321	linkwatch_fire_event	vmlinux	EXPORT_SYMBOL
+0x7b8e0b9a	snd_device_free	vmlinux	EXPORT_SYMBOL
+0x5ac376a5	acpi_install_fixed_event_handler	vmlinux	EXPORT_SYMBOL
+0xb5b9d827	kfifo_alloc	vmlinux	EXPORT_SYMBOL
+0xefe8e01c	end_pfn	vmlinux	EXPORT_SYMBOL
+0x1598dc9d	unregister_netevent_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xc16fe12d	__memcpy	vmlinux	EXPORT_SYMBOL
+0x9693459b	ct_sip_get_info	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0xad18b2df	rpc_queue_upcall	vmlinux	EXPORT_SYMBOL
+0x050467bb	hiddev_hid_event	vmlinux	EXPORT_SYMBOL_GPL
+0x034fee35	set_cr4	vmlinux	EXPORT_SYMBOL_GPL
+0x6eb573af	usbatm_usb_probe	drivers/usb/atm/usbatm	EXPORT_SYMBOL_GPL
+0xa2404c6c	ixj_pcmcia_probe	drivers/telephony/ixj	EXPORT_SYMBOL
+0x24d93219	snd_pcm_period_elapsed	vmlinux	EXPORT_SYMBOL
+0x49153213	swiotlb_sync_single_for_device	vmlinux	EXPORT_SYMBOL
+0xef360ff7	mlx4_qp_query	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xf07533a1	ir_codes_videomate_tv_pvr	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x8f699913	capilib_release	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x7a33596c	capi20_get_serial	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xed101f19	uart_write_wakeup	vmlinux	EXPORT_SYMBOL
+0x7b77255d	pci_bus_read_config_word	vmlinux	EXPORT_SYMBOL
+0x7ab12983	snd_emu10k1_synth_copy_from_user	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xa449507a	tifm_alloc_device	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x2a386384	b1dma_interrupt	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xd864cce7	skb_append	vmlinux	EXPORT_SYMBOL
+0xec427a31	ata_wait_ready	vmlinux	EXPORT_SYMBOL_GPL
+0x804acdf1	pciserial_suspend_ports	vmlinux	EXPORT_SYMBOL_GPL
+0x961a6795	schedule_delayed_work_on	vmlinux	EXPORT_SYMBOL
+0x7f1ecc70	sk_stream_error	vmlinux	EXPORT_SYMBOL
+0x17bf6412	hpsb_iso_recv_init	vmlinux	EXPORT_SYMBOL
+0x4d6baf42	audit_log_start	vmlinux	EXPORT_SYMBOL
+0x98af79c1	saa7134_boards	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x81c00130	ata_dummy_irq_on	vmlinux	EXPORT_SYMBOL_GPL
+0x876dafc3	ec_write	vmlinux	EXPORT_SYMBOL
+0xf82f48fc	acpi_os_delete_semaphore	vmlinux	EXPORT_SYMBOL
+0xf509d895	sget	vmlinux	EXPORT_SYMBOL
+0x202e4ff1	set_irq_chip	vmlinux	EXPORT_SYMBOL
+0xde0bdcff	memset	vmlinux	EXPORT_SYMBOL
+0xef509d51	nfattr_parse	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0x64c94850	ip6_dst_blackhole	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x5673a18a	tcp_vegas_pkts_acked	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0x6724d8bc	hci_send_sco	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x1b6b4dfe	cdrom_media_changed	vmlinux	EXPORT_SYMBOL
+0x223d7cd5	blk_queue_max_hw_segments	vmlinux	EXPORT_SYMBOL
+0xab986a5a	snd_ak4117_build	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0x569ba37f	snd_ak4114_build	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x1472b270	tipc_disconnect	net/tipc/tipc	EXPORT_SYMBOL
+0x1abd7a57	w1_ds2760_read	drivers/w1/slaves/w1_ds2760	EXPORT_SYMBOL
+0x17060150	videobuf_dma_free	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x3cbe6f73	cx88_set_control	drivers/media/video/cx88/cx8800	EXPORT_SYMBOL
+0x21a1b324	gs_init_port	drivers/char/generic_serial	EXPORT_SYMBOL
+0x95fde4e4	acpi_os_wait_semaphore	vmlinux	EXPORT_SYMBOL
+0x064db9a5	mark_mounts_for_expiry	vmlinux	EXPORT_SYMBOL_GPL
+0x4550ba8a	register_cpu_notifier	vmlinux	EXPORT_SYMBOL
+0x110c407e	snd_soc_dapm_free	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xf0f0b2d2	w1_ds2760_write	drivers/w1/slaves/w1_ds2760	EXPORT_SYMBOL
+0x6d340f64	tty_termios_input_baud_rate	vmlinux	EXPORT_SYMBOL
+0x891adbf4	irias_add_integer_attrib	net/irda/irda	EXPORT_SYMBOL
+0xf81b59de	tpm_show_temp_deactivated	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x7c04d7fe	xfrm_aalg_get_byidx	vmlinux	EXPORT_SYMBOL_GPL
+0x03520618	unregister_tcf_proto_ops	vmlinux	EXPORT_SYMBOL
+0xf980c71a	ps2_drain	vmlinux	EXPORT_SYMBOL
+0x747b6478	unregister_cdrom	vmlinux	EXPORT_SYMBOL
+0x672f7021	spi_attach_transport	vmlinux	EXPORT_SYMBOL
+0xb4f522b3	register_chrdev	vmlinux	EXPORT_SYMBOL
+0x79095e9a	drm_agp_bind	drivers/char/drm/drm	EXPORT_SYMBOL
+0x4787dce8	acpi_bus_get_status	vmlinux	EXPORT_SYMBOL
+0x14b4bad5	agp3_generic_tlbflush	vmlinux	EXPORT_SYMBOL
+0x927e7d14	idr_get_new_above	vmlinux	EXPORT_SYMBOL
+0xca2a54e9	ida_get_new_above	vmlinux	EXPORT_SYMBOL
+0xa1060d08	cap_capable	vmlinux	EXPORT_SYMBOL
+0x05a38a74	power_supply_am_i_supplied	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0xf1fc489b	nla_put	vmlinux	EXPORT_SYMBOL
+0xaf3dd7dc	scsi_logging_level	vmlinux	EXPORT_SYMBOL
+0xa2fad04d	transport_configure_device	vmlinux	EXPORT_SYMBOL_GPL
+0x5dcde68c	__user_walk_fd	vmlinux	EXPORT_SYMBOL
+0xfcd5b79f	set_dumpable	vmlinux	EXPORT_SYMBOL_GPL
+0xd6d68c6b	vm_stat	vmlinux	EXPORT_SYMBOL
+0xa329f07e	register_shrinker	vmlinux	EXPORT_SYMBOL
+0x66d8bea2	ipmi_register_smi	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x5f95b28c	compat_sock_get_timestampns	vmlinux	EXPORT_SYMBOL
+0x7a72aaa0	register_sound_dsp	vmlinux	EXPORT_SYMBOL
+0x707e31d1	hwrng_register	vmlinux	EXPORT_SYMBOL_GPL
+0x97308fc9	misc_register	vmlinux	EXPORT_SYMBOL
+0x0f4004c3	block_invalidatepage	vmlinux	EXPORT_SYMBOL
+0x38839177	may_umount_tree	vmlinux	EXPORT_SYMBOL
+0x62a681a3	tipc_portunreturnable	net/tipc/tipc	EXPORT_SYMBOL
+0x4248f728	rxrpc_kernel_free_skb	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x636b12c8	nf_nat_need_gre	net/ipv4/netfilter/nf_nat_proto_gre	EXPORT_SYMBOL_GPL
+0xd81718ea	dvb_usb_device_init	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x181499a2	ib_init_ah_from_mcmember	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x3b5ead01	tty_ldisc_ref	vmlinux	EXPORT_SYMBOL_GPL
+0xc14e0ada	devm_ioport_map	vmlinux	EXPORT_SYMBOL
+0x438c2350	init_timer	vmlinux	EXPORT_SYMBOL
+0x56179c5f	mtrr_add	vmlinux	EXPORT_SYMBOL
+0xaf325edc	dccp_sendmsg	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xb337de41	clip_tbl_hook	vmlinux	EXPORT_SYMBOL
+0xbfee3ad5	loop_unregister_transfer	vmlinux	EXPORT_SYMBOL
+0xb07dfb3d	acpi_remove_gpe_handler	vmlinux	EXPORT_SYMBOL
+0xae66b4a8	input_register_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0xc3880471	xdr_decode_netobj	vmlinux	EXPORT_SYMBOL
+0xdb409539	ethtool_op_set_tso	vmlinux	EXPORT_SYMBOL
+0x940b7d61	sata_set_spd	vmlinux	EXPORT_SYMBOL_GPL
+0x494a4f85	pci_restore_state	vmlinux	EXPORT_SYMBOL
+0xa0492b6f	do_generic_mapping_read	vmlinux	EXPORT_SYMBOL
+0xd427daa7	register_atm_ioctl	net/atm/atm	EXPORT_SYMBOL
+0xc38de660	flexcop_dma_config_timer	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x8c438250	flexcop_device_initialize	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xa8d6daac	iTCO_vendor_pre_start	drivers/char/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x61236cd0	acpi_bus_trim	vmlinux	EXPORT_SYMBOL_GPL
+0xabc40c3c	inode_sub_bytes	vmlinux	EXPORT_SYMBOL
+0x5c452231	inode_set_bytes	vmlinux	EXPORT_SYMBOL
+0xb594f98c	toi_action	vmlinux	EXPORT_SYMBOL_GPL
+0xeb77efbb	copy_user_generic	vmlinux	EXPORT_SYMBOL
+0x5c85deac	dlmlock	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x610400f5	gfs2_unregister_lockproto	fs/gfs2/gfs2	EXPORT_SYMBOL_GPL
+0x317a15a0	mdiobus_register	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x97c811d4	mlx4_buf_alloc	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x324cd788	videobuf_queue_init	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x08890877	ib_cm_notify	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x3efb4c56	arp_xmit	vmlinux	EXPORT_SYMBOL
+0xa98f7540	__dev_getfirstbyhwtype	vmlinux	EXPORT_SYMBOL
+0xa25fd13c	__dev_get_by_index	vmlinux	EXPORT_SYMBOL
+0xbaf9753f	agp_enable	vmlinux	EXPORT_SYMBOL
+0xe3ed83d9	pci_release_selected_regions	vmlinux	EXPORT_SYMBOL
+0x1a75caa3	_read_lock	vmlinux	EXPORT_SYMBOL
+0x301d5940	__create_workqueue	vmlinux	EXPORT_SYMBOL_GPL
+0xabe77484	securebits	vmlinux	EXPORT_SYMBOL
+0x16ae8c48	capi_ctr_suspend_output	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xedcf6be4	qword_add	vmlinux	EXPORT_SYMBOL
+0x12472bb6	__inet6_lookup_established	vmlinux	EXPORT_SYMBOL
+0xa28ed254	__nla_put_nohdr	vmlinux	EXPORT_SYMBOL
+0x25325237	snd_timer_interrupt	vmlinux	EXPORT_SYMBOL
+0x9aa717d5	flush_tlb_page	vmlinux	EXPORT_SYMBOL
+0x681c91ed	usbnet_probe	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x17df17bc	sysctl_tcp_ecn	vmlinux	EXPORT_SYMBOL
+0xce36ded6	sysctl_tcp_mem	vmlinux	EXPORT_SYMBOL
+0xc5fc994c	ethtool_op_set_tx_csum	vmlinux	EXPORT_SYMBOL
+0x271f5945	md_register_thread	vmlinux	EXPORT_SYMBOL
+0x9513d969	per_cpu____irq_regs	vmlinux	EXPORT_SYMBOL
+0x0e630783	snd_sbmixer_suspend	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x776c742b	rxrpc_unregister_security	net/rxrpc/af-rxrpc	EXPORT_SYMBOL_GPL
+0xb2101ee1	inet_csk_accept	vmlinux	EXPORT_SYMBOL
+0x8d62ef1f	inet_hash_connect	vmlinux	EXPORT_SYMBOL_GPL
+0xa6869f9f	alloc_trdev	vmlinux	EXPORT_SYMBOL
+0xd06c155f	generic_mii_ioctl	vmlinux	EXPORT_SYMBOL
+0x7f5ff462	bt_accept_dequeue	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xaac38f2a	tcf_unregister_action	vmlinux	EXPORT_SYMBOL
+0x61eaa5c0	bitmap_endwrite	vmlinux	EXPORT_SYMBOL
+0x4574a650	usb_bulk_msg	vmlinux	EXPORT_SYMBOL
+0x0baf117e	kfifo_free	vmlinux	EXPORT_SYMBOL
+0x811819bc	acpiphp_register_attention	drivers/pci/hotplug/acpiphp	EXPORT_SYMBOL_GPL
+0x712ab8eb	hdlcdrv_unregister	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0xc0cefd2b	videobuf_mmap_mapper	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x3389f926	cfag12864b_enable	drivers/auxdisplay/cfag12864b	EXPORT_SYMBOL_GPL
+0x1c481075	xfrm_state_delete_tunnel	vmlinux	EXPORT_SYMBOL
+0xef0fbc7e	platform_device_add_resources	vmlinux	EXPORT_SYMBOL_GPL
+0xfbb1c206	in6_dev_finish_destroy	net/ipv6/ipv6	EXPORT_SYMBOL
+0xcf9f3328	dlm_release_lockspace	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0x745f7e5d	ib_umem_page_count	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xd06a7bbb	hpsb_register_addrspace	vmlinux	EXPORT_SYMBOL
+0xc61a04fe	sas_expander_alloc	vmlinux	EXPORT_SYMBOL
+0x377e6782	scsi_rescan_device	vmlinux	EXPORT_SYMBOL
+0x6faa0be6	acpi_unlock_ac_dir	vmlinux	EXPORT_SYMBOL
+0x77b708b9	unregister_framebuffer	vmlinux	EXPORT_SYMBOL
+0x03a99c3b	rb_prev	vmlinux	EXPORT_SYMBOL
+0xf62752cf	user_match	vmlinux	EXPORT_SYMBOL_GPL
+0xd653c5e5	jbd2_journal_init_dev	vmlinux	EXPORT_SYMBOL
+0x57340c1c	ebt_unregister_target	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0x34b7e400	capi20_register	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x7530efd9	ib_umem_get	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x1b35c9f3	free_dyn_pageflags	vmlinux	EXPORT_SYMBOL_GPL
+0x7a84a725	rt2x00mac_get_stats	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xf2a6d2bf	xfrm_policy_count	vmlinux	EXPORT_SYMBOL
+0x8e164140	nf_unregister_queue_handler	vmlinux	EXPORT_SYMBOL
+0x24eb7e32	leds_list	vmlinux	EXPORT_SYMBOL_GPL
+0x5142e71c	acpi_evaluate_object	vmlinux	EXPORT_SYMBOL
+0xeae3dfd6	__const_udelay	vmlinux	EXPORT_SYMBOL
+0x8c53307b	snd_ac97_resume	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x6b1c42f1	capi_ctr_handle_message	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xbf68f442	ipmi_smi_msg_received	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x0ebf4d00	pcie_port_bus_type	vmlinux	EXPORT_SYMBOL_GPL
+0x7d850612	utf8_mbstowcs	vmlinux	EXPORT_SYMBOL
+0x58793d16	nosave_regions	vmlinux	EXPORT_SYMBOL_GPL
+0x1cc6719a	register_reboot_notifier	vmlinux	EXPORT_SYMBOL
+0xc045ad4e	timespec_trunc	vmlinux	EXPORT_SYMBOL
+0x0d5dbb7a	dccp_send_ack	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x4350d070	dccp_rx_hist_delete	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0xc3b72593	scsi_tgt_queue_command	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xdfd28376	b1_detect	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x3f39c408	tpm_show_active	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x2b6aac8c	tcp_sockets_allocated	vmlinux	EXPORT_SYMBOL
+0x3e2ae3a8	acpi_release_global_lock	vmlinux	EXPORT_SYMBOL
+0x664de775	cx2341x_ext_ctrls	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0xcf683cf2	saa7146_devices	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xbf97aecf	csr1212_new_directory	vmlinux	EXPORT_SYMBOL
+0xc8904439	scsi_device_quiesce	vmlinux	EXPORT_SYMBOL
+0x93edd904	snd_pcm_hw_param_first	vmlinux	EXPORT_SYMBOL
+0x719b9dd5	add_mtd_partitions	vmlinux	EXPORT_SYMBOL
+0x6250fcf2	pci_select_bars	vmlinux	EXPORT_SYMBOL
+0xf184d189	kernel_power_off	vmlinux	EXPORT_SYMBOL_GPL
+0x9a4340d7	ip6t_unregister_table	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0x08050745	mlx4_register_interface	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x3dc7576c	ib_find_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x6b8dcb59	svc_create_pooled	vmlinux	EXPORT_SYMBOL
+0x2e24d27c	genl_register_ops	vmlinux	EXPORT_SYMBOL
+0x26dbff0a	snd_pcm_new	vmlinux	EXPORT_SYMBOL
+0x64168904	__ata_ehi_push_desc	vmlinux	EXPORT_SYMBOL_GPL
+0xdcb9b25e	sas_unregister_ha	vmlinux	EXPORT_SYMBOL_GPL
+0xa800fab6	sas_read_port_mode_page	vmlinux	EXPORT_SYMBOL
+0x497b310c	con_copy_unimap	vmlinux	EXPORT_SYMBOL
+0x259966b1	tty_ldisc_ref_wait	vmlinux	EXPORT_SYMBOL_GPL
+0x424cad93	debugfs_create_u64	vmlinux	EXPORT_SYMBOL_GPL
+0x882efd50	block_commit_write	vmlinux	EXPORT_SYMBOL
+0xd7ec6e76	lapb_setparms	net/lapb/lapb	EXPORT_SYMBOL
+0x2df14120	ircomm_control_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x02b0cf39	dccp_rx_hist_find_entry	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x59a5ff6d	videobuf_dma_sync	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x84c2d9ea	xfrm_nl	vmlinux	EXPORT_SYMBOL
+0x34ceb5ac	__netdev_alloc_skb	vmlinux	EXPORT_SYMBOL
+0x7cc34152	class_device_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0xea037bd4	acpi_lock_ac_dir	vmlinux	EXPORT_SYMBOL
+0x6b4a6db2	async_tx_issue_pending_all	vmlinux	EXPORT_SYMBOL_GPL
+0xa9380e55	journal_get_undo_access	vmlinux	EXPORT_SYMBOL
+0xb048036a	nf_ct_invert_tuplepr	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xa4acbca3	fb_set_suspend	vmlinux	EXPORT_SYMBOL
+0x9da8330b	dput	vmlinux	EXPORT_SYMBOL
+0x66bafdce	tipc_createport_raw	net/tipc/tipc	EXPORT_SYMBOL
+0x9dd5dd72	rpc_delay	vmlinux	EXPORT_SYMBOL
+0x5bd26000	rpc_proc_unregister	vmlinux	EXPORT_SYMBOL
+0xc64620cb	tcp_v4_remember_stamp	vmlinux	EXPORT_SYMBOL
+0xfa57a1b1	usb_match_one_id	vmlinux	EXPORT_SYMBOL_GPL
+0xc428068d	sata_deb_timing_long	vmlinux	EXPORT_SYMBOL_GPL
+0x4b88e224	device_power_up	vmlinux	EXPORT_SYMBOL_GPL
+0x0a372247	acpi_get_pxm	vmlinux	EXPORT_SYMBOL
+0x194b2bd5	nobh_commit_write	vmlinux	EXPORT_SYMBOL
+0xf02de5ba	srcu_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x8cfc4e22	snd_soc_free_ac97_codec	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x204ab0f8	sk_free	vmlinux	EXPORT_SYMBOL
+0x242fe5e4	class_to_transport_session	vmlinux	EXPORT_SYMBOL_GPL
+0x2a46bea7	scsi_is_sdev_device	vmlinux	EXPORT_SYMBOL
+0x2a303d4d	check_signature	vmlinux	EXPORT_SYMBOL
+0xe9a60ad6	__down_failed_trylock	vmlinux	EXPORT_SYMBOL
+0xa298d4ad	ieee80211_stop_queue	net/mac80211/mac80211	EXPORT_SYMBOL
+0x09339176	ieee80211softmac_notify_gfp	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0xa48ef78c	v4l2_norm_to_name	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xa7a2e92b	parport_set_timeout	vmlinux	EXPORT_SYMBOL
+0x27db9009	pci_bus_max_busnr	vmlinux	EXPORT_SYMBOL_GPL
+0xa728a1f2	kobject_init	vmlinux	EXPORT_SYMBOL
+0xfea49a1c	jbd2_journal_update_format	vmlinux	EXPORT_SYMBOL
+0xde6f7888	flush_workqueue	vmlinux	EXPORT_SYMBOL_GPL
+0x43592419	sleep_on	vmlinux	EXPORT_SYMBOL
+0x25a7c1d7	snd_soc_info_enum_ext	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x06a3ee58	irias_new_integer_value	net/irda/irda	EXPORT_SYMBOL
+0xb8a3f3e7	dccp_ioctl	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xc6cebd0e	mpt_suspend	vmlinux	EXPORT_SYMBOL
+0xb34b01f2	parport_read	vmlinux	EXPORT_SYMBOL
+0x11f48b6a	key_type_user	vmlinux	EXPORT_SYMBOL_GPL
+0xf9ce0f5d	proc_bus	vmlinux	EXPORT_SYMBOL
+0x7cdb1d36	simple_lookup	vmlinux	EXPORT_SYMBOL
+0xb0f93779	key_type_rxrpc	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x3b4182ad	ib_query_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3cb1f421	drm_idlelock_take	drivers/char/drm/drm	EXPORT_SYMBOL
+0xf78d04ab	netlink_register_notifier	vmlinux	EXPORT_SYMBOL
+0x48c8c7e8	dma_async_client_register	vmlinux	EXPORT_SYMBOL
+0x998a7c7f	dm_io	vmlinux	EXPORT_SYMBOL
+0x7bcb8717	usb_match_id	vmlinux	EXPORT_SYMBOL_GPL_FUTURE
+0x8d12f837	ib_ud_header_pack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x196e8629	xfrm_policy_insert	vmlinux	EXPORT_SYMBOL
+0xfa219efe	skb_segment	vmlinux	EXPORT_SYMBOL_GPL
+0x1b1aae0b	usb_add_hcd	vmlinux	EXPORT_SYMBOL
+0x900c1d36	unlock_rename	vmlinux	EXPORT_SYMBOL
+0x73b1f76d	do_posix_clock_nosettime	vmlinux	EXPORT_SYMBOL_GPL
+0x470485c0	snd_opl3_timer_new	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x42eed508	ip_vs_conn_put	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0xd2e1a1c0	dib7000p_attach	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x3ad4d19a	dib7000m_attach	drivers/media/dvb/frontends/dib7000m	EXPORT_SYMBOL
+0xdff4b3a7	capi20_put_message	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x0bd66916	tcp_init_congestion_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x91947211	i2o_parm_table_get	vmlinux	EXPORT_SYMBOL
+0xed30d7d8	device_create	vmlinux	EXPORT_SYMBOL_GPL
+0x4c0d842e	simple_rmdir	vmlinux	EXPORT_SYMBOL
+0xf73d483f	free_task	vmlinux	EXPORT_SYMBOL
+0xc14ad722	tcp_vegas_get_info	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0x7a793816	i2c_del_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xe1c04d26	drm_init	drivers/char/drm/drm	EXPORT_SYMBOL
+0x5838f6c9	rtc_valid_tm	vmlinux	EXPORT_SYMBOL
+0xbcba615f	usb_register_driver	vmlinux	EXPORT_SYMBOL_GPL_FUTURE
+0xe27bb8c8	ata_port_online	vmlinux	EXPORT_SYMBOL_GPL
+0x38cf77ed	scsi_block_requests	vmlinux	EXPORT_SYMBOL
+0xda7f9d3f	tipc_attach	net/tipc/tipc	EXPORT_SYMBOL
+0xc18c56ed	irttp_disconnect_request	net/irda/irda	EXPORT_SYMBOL
+0x7459d4da	irlmp_disconnect_request	net/irda/irda	EXPORT_SYMBOL
+0xfc936a1d	mmc_release_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x99c95fa5	unregister_sound_special	vmlinux	EXPORT_SYMBOL
+0x587424dd	ata_port_disable	vmlinux	EXPORT_SYMBOL_GPL
+0xa6d37bcd	sas_end_device_alloc	vmlinux	EXPORT_SYMBOL
+0xcbcb0d14	fat_dir_empty	vmlinux	EXPORT_SYMBOL_GPL
+0x5a021aeb	__getblk	vmlinux	EXPORT_SYMBOL
+0x44b0ab32	cdev_alloc	vmlinux	EXPORT_SYMBOL
+0xc39d1fd0	x86_cpu_to_apicid	vmlinux	EXPORT_SYMBOL
+0x8b38aab5	iw_cm_connect	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0xccf17348	dvb_dmx_swfilter_packets	vmlinux	EXPORT_SYMBOL
+0x967c2a85	acpi_get_current_resources	vmlinux	EXPORT_SYMBOL
+0x45c76c45	vfs_quota_sync	vmlinux	EXPORT_SYMBOL
+0xd0efe320	iTCO_vendor_pre_stop	drivers/char/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x25225d76	ata_cable_sata	vmlinux	EXPORT_SYMBOL_GPL
+0x540b199e	thinkpad_ec_try_lock	drivers/misc/thinkpad_ec	EXPORT_SYMBOL_GPL
+0x34b3f8d5	cx88_newstation	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x5c0a6871	ipmi_smi_watchdog_pretimeout	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x6a7d606e	rpc_clnt_sigunmask	vmlinux	EXPORT_SYMBOL
+0x9eb48cfb	svc_exit_thread	vmlinux	EXPORT_SYMBOL
+0xfdab2b9c	rtc_register	vmlinux	EXPORT_SYMBOL
+0xf066f308	pagevec_lookup_tag	vmlinux	EXPORT_SYMBOL
+0x74cc238d	current_kernel_time	vmlinux	EXPORT_SYMBOL
+0xc21f3f7c	print_tuple	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe1dc741c	iriap_getvaluebyclass_request	net/irda/irda	EXPORT_SYMBOL
+0x1b27cd1a	tcp_reno_cong_avoid	vmlinux	EXPORT_SYMBOL_GPL
+0x5a744b86	netlink_set_nonroot	vmlinux	EXPORT_SYMBOL
+0x03eb5a59	skb_truesize_bug	vmlinux	EXPORT_SYMBOL
+0x5f23db1b	usb_reset_device	vmlinux	EXPORT_SYMBOL
+0xac8cd1a3	ata_sas_queuecmd	vmlinux	EXPORT_SYMBOL_GPL
+0x64852e5a	ata_dumb_qc_prep	vmlinux	EXPORT_SYMBOL_GPL
+0x8687877a	locks_copy_lock	vmlinux	EXPORT_SYMBOL
+0xd6574c8b	libertas_send_tx_feedback	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x8d1d516b	gnet_stats_start_copy_compat	vmlinux	EXPORT_SYMBOL
+0x2c4456f6	pcim_iounmap_regions	vmlinux	EXPORT_SYMBOL
+0x1cadb14b	snd_vx_irq_handler	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x5316efe2	inet6_del_protocol	net/ipv6/ipv6	EXPORT_SYMBOL
+0x69e5e4ce	udplite_prot	vmlinux	EXPORT_SYMBOL
+0x528ec67f	sock_create_kern	vmlinux	EXPORT_SYMBOL
+0xa53a0fcb	pcmcia_eject_card	vmlinux	EXPORT_SYMBOL
+0x179e96a3	transport_remove_device	vmlinux	EXPORT_SYMBOL_GPL
+0x2a678a13	__suspend_report_result	vmlinux	EXPORT_SYMBOL_GPL
+0x66ba6969	acpi_evaluate_reference	vmlinux	EXPORT_SYMBOL
+0xf2909d05	unregister_security	vmlinux	EXPORT_SYMBOL_GPL
+0xad2b2996	snd_rawmidi_transmit_empty	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x53dbeea6	zlib_deflateEnd	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0x5647897a	stop_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0xb814e300	snd_timer_open	vmlinux	EXPORT_SYMBOL
+0xe044fefe	ata_hsm_move	vmlinux	EXPORT_SYMBOL_GPL
+0x60f69170	fb_set_cmap	vmlinux	EXPORT_SYMBOL
+0xe7af342a	pci_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x17c85a66	radix_tree_tagged	vmlinux	EXPORT_SYMBOL
+0xe7f06dea	unload_nls	vmlinux	EXPORT_SYMBOL
+0xb0844461	ax25_listen_release	net/ax25/ax25	EXPORT_SYMBOL
+0xa66ec7c5	sunrpc_cache_update	vmlinux	EXPORT_SYMBOL
+0x067ed384	skb_gso_segment	vmlinux	EXPORT_SYMBOL
+0x0526d63c	kernel_listen	vmlinux	EXPORT_SYMBOL
+0x8e422b7d	serio_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x98c6490b	dvb_dmx_init	vmlinux	EXPORT_SYMBOL
+0x32c11805	pnp_register_card_driver	vmlinux	EXPORT_SYMBOL
+0x76bf656d	__bitmap_shift_left	vmlinux	EXPORT_SYMBOL
+0xddf71fe8	dquot_free_space	vmlinux	EXPORT_SYMBOL
+0x6aa7f5f2	nat_rtp_rtcp_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x664466f1	ieee80211softmac_clear_pending_work	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0xb2b0fa09	ebt_unregister_table	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0xd7666449	gss_mech_get	vmlinux	EXPORT_SYMBOL
+0xb178b8b1	ata_bmdma_stop	vmlinux	EXPORT_SYMBOL_GPL
+0x918ee697	__scsi_device_lookup	vmlinux	EXPORT_SYMBOL
+0x7850bc1e	crypto_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x6067a146	memcpy	vmlinux	EXPORT_SYMBOL
+0xcd0e4a2f	ip6t_do_table	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0xd29b009f	crc_itu_t_table	lib/crc-itu-t	EXPORT_SYMBOL
+0x11dc4b6d	bttv_gpio_enable	drivers/media/video/bt8xx/bttv	EXPORT_SYMBOL
+0xb57037c3	ib_sa_unregister_client	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x35fcc1fe	rpc_run_task	vmlinux	EXPORT_SYMBOL
+0xe79031f8	ata_std_postreset	vmlinux	EXPORT_SYMBOL_GPL
+0x8ed86879	spi_release_transport	vmlinux	EXPORT_SYMBOL
+0x5318ed49	acpi_get_table_by_index	vmlinux	EXPORT_SYMBOL
+0x478d10b2	ht_destroy_irq	vmlinux	EXPORT_SYMBOL
+0x48553049	bdevname	vmlinux	EXPORT_SYMBOL
+0x3c96c893	generic_file_splice_write_nolock	vmlinux	EXPORT_SYMBOL
+0x88748a93	cdev_init	vmlinux	EXPORT_SYMBOL
+0x43bdd372	request_resource	vmlinux	EXPORT_SYMBOL
+0x6e25402e	nf_ct_expect_init	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x0a487ea5	tfrc_calc_x	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x54869d08	nand_scan_bbt	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0xa7611c16	gameport_start_polling	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x0d732e8e	inet_getname	vmlinux	EXPORT_SYMBOL
+0x4cf4d471	snd_unregister_oss_device	vmlinux	EXPORT_SYMBOL
+0x53af14d0	class_device_create_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0xa6abdc12	agp_generic_insert_memory	vmlinux	EXPORT_SYMBOL
+0x18600869	i2c_smbus_write_quick	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xaf553d49	dm_get_mapinfo	vmlinux	EXPORT_SYMBOL
+0xd5ec290a	put_mtd_device	vmlinux	EXPORT_SYMBOL_GPL
+0x01d19038	acpi_enable_subsystem	vmlinux	EXPORT_SYMBOL
+0xb128bee9	dibx000_get_i2c_adapter	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0x78a498ac	platform_get_resource	vmlinux	EXPORT_SYMBOL_GPL
+0xa7b4da0e	pci_disable_pcie_error_reporting	vmlinux	EXPORT_SYMBOL_GPL
+0x03ecdf74	crypto_shoot_alg	vmlinux	EXPORT_SYMBOL_GPL
+0xd83ae942	iput	vmlinux	EXPORT_SYMBOL
+0x3fe56992	sleep_on_timeout	vmlinux	EXPORT_SYMBOL
+0xd2bfb159	cx88_shutdown	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x26562e3a	snmp_mib_init	vmlinux	EXPORT_SYMBOL_GPL
+0x6ec30592	input_ff_upload	vmlinux	EXPORT_SYMBOL_GPL
+0x6e6d532b	hpsb_packet_sent	vmlinux	EXPORT_SYMBOL
+0x0a498841	iscsi_alloc_session	vmlinux	EXPORT_SYMBOL_GPL
+0x5a157ae4	nfs4_acl_get_whotype	vmlinux	EXPORT_SYMBOL
+0x34ca7caa	create_proc_entry	vmlinux	EXPORT_SYMBOL
+0x2f4b3a93	proc_doulongvec_ms_jiffies_minmax	vmlinux	EXPORT_SYMBOL
+0xc4ee8d0e	suspend_console	vmlinux	EXPORT_SYMBOL
+0xda0a6b0e	acpi_map_lsapic	vmlinux	EXPORT_SYMBOL
+0x612a2582	mt352_attach	drivers/media/dvb/frontends/mt352	EXPORT_SYMBOL
+0xf470d9a6	hpsb_iso_recv_start	vmlinux	EXPORT_SYMBOL
+0xeea9dbaf	bitmap_bitremap	vmlinux	EXPORT_SYMBOL
+0x71a50dbc	register_blkdev	vmlinux	EXPORT_SYMBOL
+0x92ddf94c	simple_set_mnt	vmlinux	EXPORT_SYMBOL
+0x09c610d6	snd_soc_update_bits	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x40186f70	nf_conntrack_alter_reply	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xa6538c2a	neigh_event_ns	vmlinux	EXPORT_SYMBOL
+0xcec02e0e	fb_firmware_edid	vmlinux	EXPORT_SYMBOL
+0x014e69d7	key_negate_and_link	vmlinux	EXPORT_SYMBOL
+0x00144b10	jbd2_journal_blocks_per_page	vmlinux	EXPORT_SYMBOL
+0xdf3c14de	dlm_new_lockspace	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0x28cb869d	iw_cm_init_qp_attr	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0xf552677a	usb_kill_anchored_urbs	vmlinux	EXPORT_SYMBOL_GPL
+0x9c27a513	hpsb_unregister_highlevel	vmlinux	EXPORT_SYMBOL
+0x77efa40e	iscsi_queuecommand	vmlinux	EXPORT_SYMBOL_GPL
+0x77be7e45	request_firmware_nowait	vmlinux	EXPORT_SYMBOL
+0xd08197fa	acpi_load_tables	vmlinux	EXPORT_SYMBOL
+0x09775cdc	kref_get	vmlinux	EXPORT_SYMBOL
+0x37f4ec30	generic_commit_write	vmlinux	EXPORT_SYMBOL
+0xf35864a9	i2c_probe	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x6edae968	ks0108_isinited	drivers/auxdisplay/ks0108	EXPORT_SYMBOL_GPL
+0xb2d6a791	ata_std_ports	vmlinux	EXPORT_SYMBOL_GPL
+0x8a93df73	inotify_inode_queue_event	vmlinux	EXPORT_SYMBOL_GPL
+0x82b1f288	inode_double_unlock	vmlinux	EXPORT_SYMBOL
+0x2395f373	usbnet_get_drvinfo	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xe42bc383	dst_destroy	vmlinux	EXPORT_SYMBOL
+0xf12f7c7b	pci_disable_msi	vmlinux	EXPORT_SYMBOL
+0xfbbc0b92	journal_errno	vmlinux	EXPORT_SYMBOL
+0x511ad1e9	dlm_lock	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0x70378f78	hostap_set_roaming	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x6e1de7b6	videobuf_read_stream	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x255c9621	svc_wake_up	vmlinux	EXPORT_SYMBOL
+0x2168c858	compat_tcp_setsockopt	vmlinux	EXPORT_SYMBOL
+0xed27d22b	nf_unregister_queue_handlers	vmlinux	EXPORT_SYMBOL_GPL
+0xc79c09db	kcopyd_client_destroy	vmlinux	EXPORT_SYMBOL
+0x4933df34	scsi_mode_sense	vmlinux	EXPORT_SYMBOL
+0x2d89342a	scsi_show_sense_hdr	vmlinux	EXPORT_SYMBOL
+0xda7ca6cb	fb_mode_is_equal	vmlinux	EXPORT_SYMBOL
+0x9f82cc31	journal_check_available_features	vmlinux	EXPORT_SYMBOL
+0x27147e64	_spin_unlock_irqrestore	vmlinux	EXPORT_SYMBOL
+0x3b543ee0	nf_ct_get_tuple	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x7913049d	xfrm6_tunnel_register	net/ipv6/tunnel6	EXPORT_SYMBOL
+0xd4cadfc0	xfrm4_tunnel_register	net/ipv4/tunnel4	EXPORT_SYMBOL
+0x2c3d888d	ssb_clockspeed	drivers/ssb/ssb	EXPORT_SYMBOL
+0xf629a172	ib_init_ah_from_wc	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x96d7e19d	xfrm_dst_lookup	vmlinux	EXPORT_SYMBOL
+0x209cdcda	async_tx_run_dependencies	vmlinux	EXPORT_SYMBOL_GPL
+0x52d111ea	pm_qos_update_requirement	vmlinux	EXPORT_SYMBOL_GPL
+0xb25f3374	ircomm_open	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x795a6175	snd_pcm_lib_ioctl	vmlinux	EXPORT_SYMBOL
+0x20eadeb6	ip_compute_csum	vmlinux	EXPORT_SYMBOL
+0xc6616c1e	ircomm_close	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x0ef2e96c	dst_alloc	vmlinux	EXPORT_SYMBOL
+0x3b3016d3	cpufreq_unregister_notifier	vmlinux	EXPORT_SYMBOL
+0xe93e49c3	devres_free	vmlinux	EXPORT_SYMBOL_GPL
+0x418e7121	blk_put_queue	vmlinux	EXPORT_SYMBOL
+0x7e77aef3	single_release	vmlinux	EXPORT_SYMBOL
+0xc630db7d	get_user_pages	vmlinux	EXPORT_SYMBOL
+0xa108eb4d	sysctl_optmem_max	vmlinux	EXPORT_SYMBOL
+0x80931fe6	jbd2_journal_restart	vmlinux	EXPORT_SYMBOL
+0xf4e82711	jbd2_journal_destroy	vmlinux	EXPORT_SYMBOL
+0x2cc97f0e	tipc_reject_msg	net/tipc/tipc	EXPORT_SYMBOL
+0xaccabc6a	in4_pton	vmlinux	EXPORT_SYMBOL
+0xe57878a1	in6_pton	vmlinux	EXPORT_SYMBOL
+0xe7693c0a	scsi_mode_select	vmlinux	EXPORT_SYMBOL_GPL
+0xc0168f87	cfb_copyarea	vmlinux	EXPORT_SYMBOL
+0x94b3f6cf	__clear_user	vmlinux	EXPORT_SYMBOL
+0xd0181f4f	__bitmap_xor	vmlinux	EXPORT_SYMBOL
+0x35d97a55	config_group_init	fs/configfs/configfs	EXPORT_SYMBOL
+0xb507749f	video_exclusive_open	drivers/media/video/videodev	EXPORT_SYMBOL
+0xd4322140	__dev_remove_pack	vmlinux	EXPORT_SYMBOL
+0x6cbe7632	posix_acl_to_xattr	vmlinux	EXPORT_SYMBOL
+0x60739f4c	dccp_invalid_packet	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x8ed96868	tifm_map_sg	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xcfd89a3c	auth_unix_forget_old	vmlinux	EXPORT_SYMBOL
+0x223e3782	tcf_hash_insert	vmlinux	EXPORT_SYMBOL
+0x90a1004a	crypto_has_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x6b4fd1a6	iget5_locked	vmlinux	EXPORT_SYMBOL
+0x46a0b0fa	percpu_populate	vmlinux	EXPORT_SYMBOL_GPL
+0xf7083130	snd_sbdsp_command	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x2915ca3b	vp310_mt312_attach	drivers/media/dvb/frontends/mt312	EXPORT_SYMBOL
+0xd4811057	edac_mc_handle_fbd_ue	drivers/edac/edac_core	EXPORT_SYMBOL
+0x38c6924d	edac_mc_handle_fbd_ce	drivers/edac/edac_core	EXPORT_SYMBOL
+0xda4ef03b	hpsb_bus_reset	vmlinux	EXPORT_SYMBOL
+0xa972ac03	mii_check_media	vmlinux	EXPORT_SYMBOL
+0x50e638fb	platform_device_register_simple	vmlinux	EXPORT_SYMBOL_GPL
+0xf8d4c7c2	user_revoke	vmlinux	EXPORT_SYMBOL
+0xfe0e8437	debugfs_create_dir	vmlinux	EXPORT_SYMBOL_GPL
+0xdfa7025c	dcache_dir_lseek	vmlinux	EXPORT_SYMBOL
+0xaa024146	sonet_copy_stats	net/atm/atm	EXPORT_SYMBOL
+0xf3d4dcc7	bttv_sub_unregister	drivers/media/video/bt8xx/bttv	EXPORT_SYMBOL
+0xce045124	km_waitq	vmlinux	EXPORT_SYMBOL
+0x88d1c502	dvb_register_frontend	vmlinux	EXPORT_SYMBOL
+0xad8de1b3	acpi_remove_address_space_handler	vmlinux	EXPORT_SYMBOL
+0x92dab3fc	pci_scan_bus_parented	vmlinux	EXPORT_SYMBOL
+0xdfa69063	xt_check_match	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xde1fd700	ieee80211_is_valid_channel	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0xf94a6d93	ei_open	drivers/net/8390	EXPORT_SYMBOL
+0xf036687a	dib3000mc_attach	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0x8fd6171c	dib3000mb_attach	drivers/media/dvb/frontends/dib3000mb	EXPORT_SYMBOL
+0xce9409cb	d_splice_alias	vmlinux	EXPORT_SYMBOL
+0x50dfb457	do_sync_read	vmlinux	EXPORT_SYMBOL
+0x78f9b710	nf_ct_l3proto_try_module_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x73258342	mmc_wait_for_cmd	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xcd8cc72c	register_sound_midi	vmlinux	EXPORT_SYMBOL
+0xce769a34	inotify_find_watch	vmlinux	EXPORT_SYMBOL_GPL
+0xd7ba575e	dlm_errmsg	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x11743e75	rpc_mkpipe	vmlinux	EXPORT_SYMBOL
+0x54b07108	netlink_clear_multicast_users	vmlinux	EXPORT_SYMBOL
+0x0d20ceab	cad_pid	vmlinux	EXPORT_SYMBOL
+0xfb464286	snd_trident_stop_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x7b707a1b	ccid_hc_rx_new	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xee4294f3	ccid_hc_tx_new	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xa82a8645	o2nm_this_node	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x2985cd44	get_sb_mtd	vmlinux	EXPORT_SYMBOL_GPL
+0x959942d6	ata_host_start	vmlinux	EXPORT_SYMBOL_GPL
+0x1e2d4e46	agp_put_bridge	vmlinux	EXPORT_SYMBOL
+0xe29c3801	irda_task_execute	net/irda/irda	EXPORT_SYMBOL
+0xa6f7e852	atm_proc_root	net/atm/atm	EXPORT_SYMBOL
+0xa33b44a5	snd_component_add	vmlinux	EXPORT_SYMBOL
+0x76fb766a	xt_compat_match_to_user	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x40dfa39e	hostap_set_encryption	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x4d39b967	netif_receive_skb	vmlinux	EXPORT_SYMBOL
+0x65018499	spi_new_device	vmlinux	EXPORT_SYMBOL_GPL
+0xbcf9cd09	hpsb_alloc_host	vmlinux	EXPORT_SYMBOL
+0x0531dcb8	ata_dev_classify	vmlinux	EXPORT_SYMBOL_GPL
+0xfc25aa6a	jbd2_journal_create	vmlinux	EXPORT_SYMBOL
+0x4e4a37b1	journal_update_format	vmlinux	EXPORT_SYMBOL
+0xf60e1eb1	call_usermodehelper_setcleanup	vmlinux	EXPORT_SYMBOL
+0xfb6af58d	recalc_sigpending	vmlinux	EXPORT_SYMBOL
+0x8de311e1	nf_nat_mangle_udp_packet	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xe2304303	mac_map_monitor_sense	drivers/video/macmodes	EXPORT_SYMBOL
+0xe6210249	ip_dev_find	vmlinux	EXPORT_SYMBOL
+0xb51fbd64	edac_op_state	vmlinux	EXPORT_SYMBOL_GPL
+0x5c72fd5c	hostap_80211_rx	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x865fbabc	capi_ctr_reseted	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x4962314f	ib_rereg_phys_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x508dacac	anon_transport_class_register	vmlinux	EXPORT_SYMBOL_GPL
+0x9e6fe266	find_next_zero_string	vmlinux	EXPORT_SYMBOL
+0x09f09ea7	path_lookup	vmlinux	EXPORT_SYMBOL
+0x1675606f	bad_dma_address	vmlinux	EXPORT_SYMBOL
+0x94a2976d	nxt6000_attach	drivers/media/dvb/frontends/nxt6000	EXPORT_SYMBOL
+0x77400889	rpcauth_init_credcache	vmlinux	EXPORT_SYMBOL
+0xd9b517d0	ip_getsockopt	vmlinux	EXPORT_SYMBOL
+0xda7f3514	ip_setsockopt	vmlinux	EXPORT_SYMBOL
+0x4c19df57	qdisc_watchdog_schedule	vmlinux	EXPORT_SYMBOL
+0x33196303	snd_iprintf	vmlinux	EXPORT_SYMBOL
+0x9e47525b	input_ff_create_memless	vmlinux	EXPORT_SYMBOL_GPL
+0xcd153284	tifm_queue_work	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x80166d48	rdma_disconnect	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x85290e5c	ib_create_cq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x69113ec6	i2c_bit_add_numbered_bus	drivers/i2c/algos/i2c-algo-bit	EXPORT_SYMBOL
+0x6c74b8a7	xdr_shift_buf	vmlinux	EXPORT_SYMBOL
+0x42d11f02	csr1212_get_keyval	vmlinux	EXPORT_SYMBOL
+0x50c7c7f7	device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x4c970f6c	pnp_request_card_device	vmlinux	EXPORT_SYMBOL
+0xd31fa323	dentry_open	vmlinux	EXPORT_SYMBOL
+0x208558c6	srcu_read_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0x9632c08d	dma_free_coherent	vmlinux	EXPORT_SYMBOL
+0x1f075ef2	rpc_clnt_sigmask	vmlinux	EXPORT_SYMBOL
+0x6e3684f6	skb_checksum_help	vmlinux	EXPORT_SYMBOL
+0x0e67f3bc	ata_irq_ack	vmlinux	EXPORT_SYMBOL_GPL
+0x7d76d9f5	class_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x422c05d0	acpi_get_data	vmlinux	EXPORT_SYMBOL
+0x9545af6d	tasklet_init	vmlinux	EXPORT_SYMBOL
+0xa0fc05b9	nf_nat_setup_info	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0x93b901c0	nf_nat_port_nfattr_to_range	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x7874e709	ib_dealloc_fmr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x041af09c	led_trigger_set_default	vmlinux	EXPORT_SYMBOL_GPL
+0xf553318d	cpuidle_pause_and_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x9241c3ee	device_power_down	vmlinux	EXPORT_SYMBOL_GPL
+0x36063ac6	jbd2_journal_get_undo_access	vmlinux	EXPORT_SYMBOL
+0x53986488	register_die_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x70e68c63	ip6_find_1stfragopt	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0xf35df17a	sock_no_recvmsg	vmlinux	EXPORT_SYMBOL
+0xc3af0027	ata_do_set_mode	vmlinux	EXPORT_SYMBOL_GPL
+0x5f9a11da	srcu_readers_active	vmlinux	EXPORT_SYMBOL_GPL
+0xd1a8eb37	hrtimer_cancel	vmlinux	EXPORT_SYMBOL_GPL
+0xeeea96f9	xt_unregister_matches	net/netfilter/x_tables	EXPORT_SYMBOL
+0xa956b431	sis_free_new	drivers/video/sis/sisfb	EXPORT_SYMBOL_GPL
+0xd0d840a6	rdma_set_ib_paths	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xa395a772	kfifo_init	vmlinux	EXPORT_SYMBOL
+0xa7ff9454	mlx4_uar_free	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xb42d3700	qdisc_watchdog_cancel	vmlinux	EXPORT_SYMBOL
+0x68bd0dec	rxrpc_kernel_begin_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x07d3647c	irlmp_register_service	net/irda/irda	EXPORT_SYMBOL
+0x30adbedc	cx88_vdev_init	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x16d09ee6	tpm_bios_log_teardown	drivers/char/tpm/tpm_bios	EXPORT_SYMBOL_GPL
+0xca810b11	svc_authenticate	vmlinux	EXPORT_SYMBOL
+0xb4a6a543	rtnl_set_sk_err	vmlinux	EXPORT_SYMBOL
+0x9a6fd2a7	usb_hcd_pci_remove	vmlinux	EXPORT_SYMBOL
+0x017abcd7	iscsi_update_cmdsn	vmlinux	EXPORT_SYMBOL_GPL
+0xc9b27289	rtc_control	vmlinux	EXPORT_SYMBOL
+0x3d42ea12	downgrade_write	vmlinux	EXPORT_SYMBOL
+0xadb7a023	complete	vmlinux	EXPORT_SYMBOL
+0xe4400bbe	config_item_init_type_name	fs/configfs/configfs	EXPORT_SYMBOL
+0x97e93bcf	__gameport_register_driver	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x2587f921	nsc_gpio_write	drivers/char/nsc_gpio	EXPORT_SYMBOL
+0xb6fd20f9	ata_bmdma_start	vmlinux	EXPORT_SYMBOL_GPL
+0xbc6d7f8e	ata_port_freeze	vmlinux	EXPORT_SYMBOL_GPL
+0xbeaf5d52	iscsi_block_session	vmlinux	EXPORT_SYMBOL_GPL
+0xef62d589	snd_ac97_pcm_close	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xb8e84930	__ieee80211_get_tx_led_name	net/mac80211/mac80211	EXPORT_SYMBOL
+0xd84cd77d	snd_pcm_new_stream	vmlinux	EXPORT_SYMBOL
+0x801f7f01	sync_page_io	vmlinux	EXPORT_SYMBOL_GPL
+0xad7c4776	hpsb_read_cycle_timer	vmlinux	EXPORT_SYMBOL
+0x50d72aec	scsi_test_unit_ready	vmlinux	EXPORT_SYMBOL
+0x8a7d1c31	high_memory	vmlinux	EXPORT_SYMBOL
+0x397ecfc9	usb_serial_deregister	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x03165a85	v4l2_ctrl_get_menu	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x02736876	saa7146_pgtable_alloc	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x481cb9ab	acpi_enter_sleep_state_prep	vmlinux	EXPORT_SYMBOL
+0x24fa9311	simple_link	vmlinux	EXPORT_SYMBOL
+0xb169d7db	usb_serial_suspend	drivers/usb/serial/usbserial	EXPORT_SYMBOL
+0x82642bb3	ib_create_fmr_pool	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x57934874	hidinput_find_field	vmlinux	EXPORT_SYMBOL_GPL
+0x7ae1ae8e	cpufreq_frequency_table_put_attr	vmlinux	EXPORT_SYMBOL_GPL
+0x29dadf47	scsi_remove_target	vmlinux	EXPORT_SYMBOL
+0xb6c5a973	scsi_show_result	vmlinux	EXPORT_SYMBOL
+0xfc02e595	sysdev_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0x3c006d06	journal_blocks_per_page	vmlinux	EXPORT_SYMBOL
+0x85bd37b7	page_cache_async_readahead	vmlinux	EXPORT_SYMBOL_GPL
+0x8659f63b	mempool_create	vmlinux	EXPORT_SYMBOL
+0xa7202da8	kblockd_schedule_work	vmlinux	EXPORT_SYMBOL
+0x260f87da	mem_section	vmlinux	EXPORT_SYMBOL
+0xa7dd3d19	send_sig_info	vmlinux	EXPORT_SYMBOL
+0xedc03953	iounmap	vmlinux	EXPORT_SYMBOL
+0xb47a8039	mlx4_qp_free	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xa6084bc5	__neigh_event_send	vmlinux	EXPORT_SYMBOL
+0x2545f4f9	unregister_netdevice	vmlinux	EXPORT_SYMBOL
+0xf48fcc24	sk_stream_wait_close	vmlinux	EXPORT_SYMBOL
+0x228bc6d1	read_cache_page_async	vmlinux	EXPORT_SYMBOL
+0xd0ee38b8	schedule_timeout_uninterruptible	vmlinux	EXPORT_SYMBOL
+0xd79b5a02	allow_signal	vmlinux	EXPORT_SYMBOL
+0xbb63cf8e	snd_rawmidi_info_select	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x1b8b71f1	videobuf_pci_dma_map	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x274728bf	rpc_call_setup	vmlinux	EXPORT_SYMBOL
+0x66f9a3ce	snd_timer_global_register	vmlinux	EXPORT_SYMBOL
+0x2181fbb0	ata_host_register	vmlinux	EXPORT_SYMBOL_GPL
+0xc9ba23f4	sas_remove_host	vmlinux	EXPORT_SYMBOL
+0x6d306613	platform_get_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xb9715c87	kill_anon_super	vmlinux	EXPORT_SYMBOL
+0xdce946b9	set_dynpageflag	vmlinux	EXPORT_SYMBOL_GPL
+0xc8148e3e	flush_tlb_current_task	vmlinux	EXPORT_SYMBOL
+0xc6fe96d1	snd_ac97_update_bits	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xc002fd5f	irttp_connect_response	net/irda/irda	EXPORT_SYMBOL
+0xafd6c0a6	irlmp_connect_response	net/irda/irda	EXPORT_SYMBOL
+0x9edccd3e	xfrm6_rcv	net/ipv6/ipv6	EXPORT_SYMBOL
+0x23a201c0	ppp_output_wakeup	drivers/net/ppp_generic	EXPORT_SYMBOL
+0x698df9c5	xfrm4_rcv	vmlinux	EXPORT_SYMBOL
+0x5ccbd60f	pci_enable_pcie_error_reporting	vmlinux	EXPORT_SYMBOL_GPL
+0xe7f5b984	blk_queue_hardsect_size	vmlinux	EXPORT_SYMBOL
+0x7094f8ae	bt_err	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x60eedbfa	flexcop_dma_free	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x0faecfeb	xdr_buf_subsegment	vmlinux	EXPORT_SYMBOL
+0x8474e6cf	phy_connect	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xf375f66c	usbvideo_RegisterVideoDevice	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0x3480d9e5	inet_dgram_connect	vmlinux	EXPORT_SYMBOL
+0xd82eb895	kcopyd_client_create	vmlinux	EXPORT_SYMBOL
+0x2470beeb	driver_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xecd4cb4f	end_that_request_first	vmlinux	EXPORT_SYMBOL
+0x5ebefe4b	v4l_printk_ioctl	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xe3cd9b5c	saa7146_debug	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x428bbc31	ata_dummy_irq_ack	vmlinux	EXPORT_SYMBOL_GPL
+0x83ff272d	iscsi_unblock_session	vmlinux	EXPORT_SYMBOL_GPL
+0xe9672a56	kobject_get	vmlinux	EXPORT_SYMBOL
+0xec3a895c	kobject_put	vmlinux	EXPORT_SYMBOL
+0xcac03257	relay_open	vmlinux	EXPORT_SYMBOL_GPL
+0x683a3221	param_set_copystring	vmlinux	EXPORT_SYMBOL
+0x76be87e8	cfi_read_pri	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL
+0x9ae75bf0	video_exclusive_release	drivers/media/video/videodev	EXPORT_SYMBOL
+0xfc39e32f	ioport_unmap	vmlinux	EXPORT_SYMBOL
+0x057bcce4	relay_close	vmlinux	EXPORT_SYMBOL_GPL
+0x7e8b27d3	nf_conntrack_chain	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x87b5c90a	ircomm_data_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0xf7e5e534	detach_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0xff855922	ib_copy_path_rec_from_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0x050468f7	__rtattr_parse_nested_compat	vmlinux	EXPORT_SYMBOL
+0xaea43a9a	usb_reset_configuration	vmlinux	EXPORT_SYMBOL
+0x86034cf8	dq_data_lock	vmlinux	EXPORT_SYMBOL
+0xaa4413cf	d_validate	vmlinux	EXPORT_SYMBOL
+0xaee103fb	snd_ak4117_check_rate_and_errors	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0x8a878baa	snd_ak4114_check_rate_and_errors	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x454a3cf0	sis_free	drivers/video/sis/sisfb	EXPORT_SYMBOL
+0x087fdeea	rt2x00usb_write_tx_data	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x216cf45f	rt2x00lib_write_tx_desc	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x1b2fdce2	ib_cm_listen	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xe351633f	genl_register_family	vmlinux	EXPORT_SYMBOL
+0x9728dccb	i2o_msg_get_wait	vmlinux	EXPORT_SYMBOL
+0x57ce7846	__init_rwsem	vmlinux	EXPORT_SYMBOL
+0xc256e762	__bitmap_equal	vmlinux	EXPORT_SYMBOL
+0x2d91b770	fasync_helper	vmlinux	EXPORT_SYMBOL
+0x2d35b930	dibusb_dib3000mc_frontend_attach	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x5f48bfb0	tpm_show_owned	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xcd2ac1c1	pccard_parse_tuple	vmlinux	EXPORT_SYMBOL
+0x899ba7ef	hpsb_selfid_received	vmlinux	EXPORT_SYMBOL
+0xece88931	dvb_ringbuffer_write	vmlinux	EXPORT_SYMBOL
+0x1c497864	locks_mandatory_area	vmlinux	EXPORT_SYMBOL
+0x1ae23153	xt_table_unlock	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x14f2aa5a	capi20_get_version	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x4042ea47	amd756_smbus	drivers/i2c/busses/i2c-amd756	EXPORT_SYMBOL
+0x26dc4c05	inet_twsk_deschedule	vmlinux	EXPORT_SYMBOL
+0x1fa51a78	tcf_exts_dump_stats	vmlinux	EXPORT_SYMBOL
+0x9c6ccfd3	ethtool_op_set_ufo	vmlinux	EXPORT_SYMBOL
+0x5e602527	sas_port_add	vmlinux	EXPORT_SYMBOL
+0x0acb1a3c	__bitmap_shift_right	vmlinux	EXPORT_SYMBOL
+0xe33682f1	irda_device_dongle_cleanup	net/irda/irda	EXPORT_SYMBOL
+0x903d4b30	cx88_call_i2c_clients	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xcf437e8e	inet_register_protosw	vmlinux	EXPORT_SYMBOL
+0xec8d18cf	hpsb_disable_irm	vmlinux	EXPORT_SYMBOL_GPL
+0xb89af9bf	srandom32	vmlinux	EXPORT_SYMBOL
+0x96ce9bb4	nfs4_acl_new	vmlinux	EXPORT_SYMBOL
+0x23fd3028	vmalloc_node	vmlinux	EXPORT_SYMBOL
+0x7b04cc91	mempool_destroy	vmlinux	EXPORT_SYMBOL
+0x054e550b	kernel_halt	vmlinux	EXPORT_SYMBOL_GPL
+0xdb1b42d1	xfrm6_tunnel_spi_lookup	net/ipv6/xfrm6_tunnel	EXPORT_SYMBOL
+0x79e58421	iw_destroy_cm_id	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x90ad2135	snd_pcm_sgbuf_ops_page	vmlinux	EXPORT_SYMBOL
+0xa2f651c6	scsi_ioctl	vmlinux	EXPORT_SYMBOL
+0x98f588f4	set_binfmt	vmlinux	EXPORT_SYMBOL
+0xeac2af96	mac_find_mode	drivers/video/macmodes	EXPORT_SYMBOL
+0x848ce70f	km_policy_expired	vmlinux	EXPORT_SYMBOL
+0x38db8f0a	dm_io_client_destroy	vmlinux	EXPORT_SYMBOL
+0xa9d9f851	pi_release	vmlinux	EXPORT_SYMBOL
+0xda9be899	spi_unregister_master	vmlinux	EXPORT_SYMBOL_GPL
+0x0e750369	__first_cpu	vmlinux	EXPORT_SYMBOL
+0xbd9f363c	elv_rb_find	vmlinux	EXPORT_SYMBOL
+0xbdc8815c	reqsk_queue_destroy	vmlinux	EXPORT_SYMBOL
+0x7804ba20	cap_ptrace	vmlinux	EXPORT_SYMBOL
+0x18f71b8d	snd_seq_kernel_client_write_poll	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x3fbfa0ad	drm_vbl_send_signals	drivers/char/drm/drm	EXPORT_SYMBOL
+0x768c6bfc	alloc_hippi_dev	vmlinux	EXPORT_SYMBOL
+0xe5867808	dlci_ioctl_set	vmlinux	EXPORT_SYMBOL
+0x05b1b54f	rdma_init_qp_attr	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x368a9355	ib_redirect_mad_qp	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xd49b3420	__rpc_wait_for_completion_task	vmlinux	EXPORT_SYMBOL
+0xea752732	ethtool_op_set_tx_ipv6_csum	vmlinux	EXPORT_SYMBOL
+0x5fb947b3	scsi_report_device_reset	vmlinux	EXPORT_SYMBOL
+0xff363114	scsi_print_sense	vmlinux	EXPORT_SYMBOL
+0x0b2f22d6	kobject_unregister	vmlinux	EXPORT_SYMBOL
+0x31ce9af2	register_sound_mixer	vmlinux	EXPORT_SYMBOL
+0x010c1b5b	async_wrap_skb	net/irda/irda	EXPORT_SYMBOL
+0xd19f9d3d	cpci_hp_unregister_controller	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0xfd6828e3	usb_submit_urb	vmlinux	EXPORT_SYMBOL
+0x480d6079	mptscsih_bus_reset	vmlinux	EXPORT_SYMBOL
+0x32fd9cb1	page_symlink_inode_operations	vmlinux	EXPORT_SYMBOL
+0xc79e571d	load_gs_index	vmlinux	EXPORT_SYMBOL
+0xf56c2017	mlog_not_bits	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x4f062d84	hpsb_make_streampacket	vmlinux	EXPORT_SYMBOL
+0xe7ead430	vunmap	vmlinux	EXPORT_SYMBOL
+0x829005a5	write_cache_pages	vmlinux	EXPORT_SYMBOL
+0x35c2ba9e	refrigerator	vmlinux	EXPORT_SYMBOL
+0xdd4f3361	snd_seq_device_new	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0xc1cacd08	nf_conntrack_l4proto_tcp6	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x855c6052	ieee80211_crypt_deinit_entries	net/ieee80211/ieee80211_crypt	EXPORT_SYMBOL
+0xe7852318	iw_cm_disconnect	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0xdbf48bcd	xfrm_policy_alloc	vmlinux	EXPORT_SYMBOL
+0xe5c78a99	do_blank_screen	vmlinux	EXPORT_SYMBOL
+0xb37ce920	snd_seq_create_kernel_client	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xe94be4be	__nf_ct_ext_add	net/netfilter/nf_conntrack	EXPORT_SYMBOL
+0x79f9e850	irda_device_dongle_init	net/irda/irda	EXPORT_SYMBOL
+0x7346349a	hci_conn_change_link_key	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x14d97760	dlm_unlock	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0xc2f8a8c1	emulate_instruction	vmlinux	EXPORT_SYMBOL_GPL
+0xcabc61fb	dvb_dmx_swfilter	vmlinux	EXPORT_SYMBOL
+0xb556bf9e	set_page_dirty_lock	vmlinux	EXPORT_SYMBOL
+0xda21e3ce	tcp_v4_conn_request	vmlinux	EXPORT_SYMBOL
+0xac3da96b	cpufreq_frequency_table_cpuinfo	vmlinux	EXPORT_SYMBOL_GPL
+0x5dca5b23	usb_get_descriptor	vmlinux	EXPORT_SYMBOL
+0x59746df3	get_mtd_device	vmlinux	EXPORT_SYMBOL_GPL
+0x42bbc5d7	ata_sas_port_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x8b15f8bd	ata_port_abort	vmlinux	EXPORT_SYMBOL_GPL
+0x7945e34e	tcp_v4_syn_recv_sock	vmlinux	EXPORT_SYMBOL
+0xff0a2a70	usb_put_dev	vmlinux	EXPORT_SYMBOL
+0x1bc7c54d	hpsb_iso_recv_release_packets	vmlinux	EXPORT_SYMBOL
+0xbb6d4ca7	agp_find_bridge	vmlinux	EXPORT_SYMBOL
+0xb942d40b	kmem_cache_shrink	vmlinux	EXPORT_SYMBOL
+0xc086bfba	crc7	lib/crc7	EXPORT_SYMBOL
+0x56caaf52	scsi_tgt_alloc_queue	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x41ae2b6f	gs_block_til_ready	drivers/char/generic_serial	EXPORT_SYMBOL
+0x1072a394	csum_partial_copy_from_user	vmlinux	EXPORT_SYMBOL
+0xc998d641	icmp_err_convert	vmlinux	EXPORT_SYMBOL
+0xc8ef8e0c	dm_io_client_create	vmlinux	EXPORT_SYMBOL
+0x60095478	mii_check_link	vmlinux	EXPORT_SYMBOL
+0x7389c9a8	acpi_bus_get_power	vmlinux	EXPORT_SYMBOL
+0xcb733bf2	acpi_bus_set_power	vmlinux	EXPORT_SYMBOL
+0x7c588aea	__down_write	vmlinux	EXPORT_SYMBOL
+0x96cbcf31	pm_qos_add_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x6fa75243	snd_i2c_readbytes	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0xcb43f94d	ib_alloc_mw	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x711a8946	tcp_hashinfo	vmlinux	EXPORT_SYMBOL
+0x7068652d	scsi_unregister	vmlinux	EXPORT_SYMBOL
+0xc24a91e1	fd_install	vmlinux	EXPORT_SYMBOL
+0x406671c9	compat_ipv6_setsockopt	net/ipv6/ipv6	EXPORT_SYMBOL
+0xd4eaa462	compat_ipv6_getsockopt	net/ipv6/ipv6	EXPORT_SYMBOL
+0xf252dc87	nf_nat_used_tuple	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xddff9006	nf_nat_packet	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0xf515bb1d	scsi_internal_device_unblock	vmlinux	EXPORT_SYMBOL_GPL
+0x1d733abf	parport_release	vmlinux	EXPORT_SYMBOL
+0x3feda003	blk_init_tags	vmlinux	EXPORT_SYMBOL
+0x3ce4ca6f	disable_irq	vmlinux	EXPORT_SYMBOL
+0x87754115	raw_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0xa70fabbe	release_evntsel_nmi	vmlinux	EXPORT_SYMBOL
+0x3ee65c52	snd_midi_event_decode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0xfb4439bb	usb_ftdi_elan_edset_input	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xd2944071	pcmcia_get_configuration_info	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xd32b531f	mlx4_free_cmd_mailbox	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x02157fc7	cdrom_get_media_event	vmlinux	EXPORT_SYMBOL
+0x4fdf6c76	iscsi_eh_host_reset	vmlinux	EXPORT_SYMBOL_GPL
+0x16c75569	scsi_host_alloc	vmlinux	EXPORT_SYMBOL
+0xf0ea9bc2	sysfs_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0xf362f2b6	apply_to_page_range	vmlinux	EXPORT_SYMBOL_GPL
+0xa0ceef51	out_of_line_wait_on_bit	vmlinux	EXPORT_SYMBOL
+0x40ef3593	register_wan_device	net/wanrouter/wanrouter	EXPORT_SYMBOL
+0x41727caa	tcp_vegas_state	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0x3761a280	video_register_device	drivers/media/video/videodev	EXPORT_SYMBOL
+0xf07e8211	edac_mc_find	drivers/edac/edac_core	EXPORT_SYMBOL
+0xec890925	drm_irq_uninstall	drivers/char/drm/drm	EXPORT_SYMBOL
+0x987409d4	fc_remote_port_delete	vmlinux	EXPORT_SYMBOL
+0x04ea8706	__iowrite64_copy	vmlinux	EXPORT_SYMBOL_GPL
+0x243ceaf1	invalidate_partition	vmlinux	EXPORT_SYMBOL
+0x1b9f279c	vfs_get_dqblk	vmlinux	EXPORT_SYMBOL
+0x48f45349	vfs_set_dqblk	vmlinux	EXPORT_SYMBOL
+0x3686ea09	spi_print_msg	vmlinux	EXPORT_SYMBOL
+0x0c512e1c	pciserial_remove_ports	vmlinux	EXPORT_SYMBOL_GPL
+0xd1fd344f	pciserial_resume_ports	vmlinux	EXPORT_SYMBOL_GPL
+0x2b3dbc9b	xt_proto_init	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xd3b18b6b	com20020_found	drivers/net/arcnet/com20020	EXPORT_SYMBOL
+0x0b1beb31	vmalloc_32_user	vmlinux	EXPORT_SYMBOL
+0xb29cf52a	ssb_bus_pcmciabus_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0xcf8592e8	ipmi_set_my_LUN	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xc673e23e	ata_scsi_change_queue_depth	vmlinux	EXPORT_SYMBOL_GPL
+0xa63c8908	pci_get_subsys	vmlinux	EXPORT_SYMBOL
+0x9eecde16	do_brk	vmlinux	EXPORT_SYMBOL
+0xd29a8ccb	xt_compat_match_from_user	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x25e649f2	nf_ct_log_invalid	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xf0fc9374	ir_codes_avermedia	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xf4f7a4d6	ir_rc5_timer_end	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xdc0b5f62	generic_permission	vmlinux	EXPORT_SYMBOL
+0x3d9ee9f0	clear_page	vmlinux	EXPORT_SYMBOL
+0x7d845306	hostap_set_hostapd	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xf39b02d3	cx8802_get_device	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0x28f468cd	pci_test_config_bits	vmlinux	EXPORT_SYMBOL_GPL
+0x956c2a26	call_usermodehelper_stdinpipe	vmlinux	EXPORT_SYMBOL
+0xe746a0fa	xt_compat_target_from_user	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x8722bf03	irlap_open	net/irda/irda	EXPORT_SYMBOL
+0x8596e5f3	iriap_open	net/irda/irda	EXPORT_SYMBOL
+0x1e44621e	snd_ctl_notify	vmlinux	EXPORT_SYMBOL
+0x194ea410	uart_get_baud_rate	vmlinux	EXPORT_SYMBOL
+0x7896a19a	pci_proc_detach_bus	vmlinux	EXPORT_SYMBOL
+0x7db7ce1c	pci_find_next_bus	vmlinux	EXPORT_SYMBOL
+0xf1490879	_spin_unlock	vmlinux	EXPORT_SYMBOL
+0xff83b2bf	atomic_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x573d324f	i8253_lock	vmlinux	EXPORT_SYMBOL
+0xbc417bce	irlap_close	net/irda/irda	EXPORT_SYMBOL
+0xfd680d2b	iriap_close	net/irda/irda	EXPORT_SYMBOL
+0x460c4b56	ieee80211_wx_set_auth	net/ieee80211/ieee80211	EXPORT_SYMBOL_GPL
+0xe50c10a9	ieee80211_wx_get_auth	net/ieee80211/ieee80211	EXPORT_SYMBOL_GPL
+0x204d376b	hostap_init_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xe37706d9	usbnet_disconnect	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xfcc295aa	tifm_alloc_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x9d16d9a8	secpath_dup	vmlinux	EXPORT_SYMBOL
+0x8e3f9b76	snd_pcm_hw_constraint_step	vmlinux	EXPORT_SYMBOL
+0x532f8005	set_user_nice	vmlinux	EXPORT_SYMBOL
+0x86c91496	w1_register_family	drivers/w1/wire	EXPORT_SYMBOL
+0xfca7477f	ib_modify_port	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xceb848b9	gss_pseudoflavor_to_service	vmlinux	EXPORT_SYMBOL
+0x084fba1e	splice_direct_to_actor	vmlinux	EXPORT_SYMBOL
+0x92445aee	hrtimer_get_res	vmlinux	EXPORT_SYMBOL_GPL
+0x7c95a4e6	nf_nat_pptp_hook_inbound	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0x246ee6f0	nf_conntrack_l3proto_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x235db71c	nf_conntrack_l4proto_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x46e479be	compat_sock_get_timestamp	vmlinux	EXPORT_SYMBOL
+0x792ddc2c	sock_setsockopt	vmlinux	EXPORT_SYMBOL
+0x6b5eefe9	fb_find_mode	vmlinux	EXPORT_SYMBOL
+0x02e1a8c0	unlock_buffer	vmlinux	EXPORT_SYMBOL
+0xb3619417	simple_transaction_release	vmlinux	EXPORT_SYMBOL
+0x2edc4728	af9005_rc_keys	drivers/media/dvb/dvb-usb/dvb-usb-af9005-remote	EXPORT_SYMBOL
+0x821a0545	qdisc_put_rtab	vmlinux	EXPORT_SYMBOL
+0x42d5345f	sas_queuecommand	vmlinux	EXPORT_SYMBOL_GPL
+0x63fc3111	set_sig_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x11d96e32	tpm_show_enabled	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x01c97213	drm_exit	drivers/char/drm/drm	EXPORT_SYMBOL
+0x4ea27d57	proto_register	vmlinux	EXPORT_SYMBOL
+0xaeb293ad	rtc_irq_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xe18572c6	tty_wakeup	vmlinux	EXPORT_SYMBOL_GPL
+0x546dc56a	snd_sbmixer_read	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x627ae2ea	flexcop_wan_set_speed	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x080286f5	down_read	vmlinux	EXPORT_SYMBOL
+0x5a8b9bab	v4l_compat_translate_ioctl	drivers/media/video/v4l1-compat	EXPORT_SYMBOL
+0x326ba0c4	km_report	vmlinux	EXPORT_SYMBOL
+0x08d607fe	skb_copy_expand	vmlinux	EXPORT_SYMBOL
+0xabd0c91c	rtc_time_to_tm	vmlinux	EXPORT_SYMBOL
+0x2ab795e0	sas_phy_reset	vmlinux	EXPORT_SYMBOL_GPL
+0x2a7ce716	dmam_free_coherent	vmlinux	EXPORT_SYMBOL
+0x2686e8cd	transport_setup_device	vmlinux	EXPORT_SYMBOL_GPL
+0x950ee7d1	fb_find_logo	vmlinux	EXPORT_SYMBOL_GPL
+0x2d022ad6	blk_queue_softirq_done	vmlinux	EXPORT_SYMBOL
+0x13d365a6	posix_acl_permission	vmlinux	EXPORT_SYMBOL
+0xa63a44f8	d_lookup	vmlinux	EXPORT_SYMBOL
+0xe547c4e8	kernel_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0x95e0a76b	init_level4_pgt	vmlinux	EXPORT_SYMBOL
+0x43ecafe2	ubi_leb_change	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xcacf2fbe	b1dma_reset	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xc40511d3	ib_reg_phys_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xbdcee6e9	pcmcia_get_socket	vmlinux	EXPORT_SYMBOL
+0x48e59769	pcmcia_put_socket	vmlinux	EXPORT_SYMBOL
+0xf811e69d	scsi_eh_flush_done_q	vmlinux	EXPORT_SYMBOL
+0x26e1653c	pci_iomap	vmlinux	EXPORT_SYMBOL
+0x13ea5cf8	cap_task_post_setuid	vmlinux	EXPORT_SYMBOL
+0x12703a3e	sys_read	vmlinux	EXPORT_SYMBOL_GPL
+0x7c46233a	cpufreq_quick_get	vmlinux	EXPORT_SYMBOL
+0x6cd8a797	serio_unregister_port	vmlinux	EXPORT_SYMBOL
+0x5fcd2105	percpu_counter_sum	vmlinux	EXPORT_SYMBOL
+0x3762cb6e	ioremap_nocache	vmlinux	EXPORT_SYMBOL
+0x31131f79	video_output_register	drivers/video/output	EXPORT_SYMBOL
+0x5aecab52	t3_l2t_send_event	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0xc1fea0c1	ir_codes_pv951	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x8a6243e6	klist_add_head	vmlinux	EXPORT_SYMBOL_GPL
+0x68a24153	snd_pcm_format_physical_width	vmlinux	EXPORT_SYMBOL
+0x4ab929f9	scsi_remove_host	vmlinux	EXPORT_SYMBOL
+0xa88e5e0f	dvb_ringbuffer_read	vmlinux	EXPORT_SYMBOL
+0xb18e02c3	radix_tree_gang_lookup_tag	vmlinux	EXPORT_SYMBOL
+0x03e2f1b6	dvb_pll_attach	drivers/media/dvb/frontends/dvb-pll	EXPORT_SYMBOL
+0x8da96801	scsi_is_host_device	vmlinux	EXPORT_SYMBOL
+0x9814fc79	devm_ioremap_nocache	vmlinux	EXPORT_SYMBOL
+0x3be29ef3	sync_dirty_buffer	vmlinux	EXPORT_SYMBOL
+0x90c0599f	memnode	vmlinux	EXPORT_SYMBOL
+0x8c1ff2bf	ebt_register_table	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0xbab9634f	ib_fmr_pool_map_phys	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x89db1771	edac_mc_add_mc	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x888237a5	tcp_reno_ssthresh	vmlinux	EXPORT_SYMBOL_GPL
+0x2ab5f53f	netlink_has_listeners	vmlinux	EXPORT_SYMBOL_GPL
+0xd5648c90	pci_remove_bus_device	vmlinux	EXPORT_SYMBOL
+0x0a477f9f	dma_supported	vmlinux	EXPORT_SYMBOL
+0x82da2ae9	__snd_util_memblk_new	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x92e4c498	atm_init_aal5	net/atm/atm	EXPORT_SYMBOL
+0x6f9799cf	rdma_resolve_route	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xe1df1e5f	sysctl_tcp_tso_win_divisor	vmlinux	EXPORT_SYMBOL
+0x68038c6b	usb_alloc_urb	vmlinux	EXPORT_SYMBOL
+0x06cdd13c	add_disk_randomness	vmlinux	EXPORT_SYMBOL
+0xdfab35ed	inode_init_once	vmlinux	EXPORT_SYMBOL
+0xd9f9e160	__srcu_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x80f75adb	nf_ip6_checksum	net/ipv6/ipv6	EXPORT_SYMBOL
+0x50ac3d96	alloc_arcdev	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x13ac2ee4	pcmcia_suspend_card	vmlinux	EXPORT_SYMBOL
+0xb298c305	device_move	vmlinux	EXPORT_SYMBOL_GPL
+0xda6050ad	scsi_cmd_ioctl	vmlinux	EXPORT_SYMBOL
+0x8bafe4ac	async_unwrap_char	net/irda/irda	EXPORT_SYMBOL
+0x48cfc502	rt2x00usb_initialize	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x410a92a9	drm_core_ioremapfree	drivers/char/drm/drm	EXPORT_SYMBOL
+0xc8c16ce3	neigh_seq_stop	vmlinux	EXPORT_SYMBOL
+0x27a9a7eb	ns_to_timespec	vmlinux	EXPORT_SYMBOL
+0xaeb7451e	ax25_defaddr	net/ax25/ax25	EXPORT_SYMBOL_GPL
+0x3764a57b	pnp_device_attach	vmlinux	EXPORT_SYMBOL
+0x62049256	acpi_disable	vmlinux	EXPORT_SYMBOL
+0xb4317453	fb_prepare_logo	vmlinux	EXPORT_SYMBOL
+0x2447ed01	blocking_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x6409e0ae	mmc_register_driver	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x85956d53	cx88_core_irq	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x91b98778	neigh_table_init	vmlinux	EXPORT_SYMBOL
+0x8c37f80d	cpuidle_register_device	vmlinux	EXPORT_SYMBOL_GPL
+0x00612dd4	ata_noop_dev_select	vmlinux	EXPORT_SYMBOL_GPL
+0xa974c083	attribute_container_register	vmlinux	EXPORT_SYMBOL_GPL
+0xf7d7cbf6	blk_queue_segment_boundary	vmlinux	EXPORT_SYMBOL
+0x80bd3ebb	blk_stop_queue	vmlinux	EXPORT_SYMBOL
+0xd86d451b	blk_insert_request	vmlinux	EXPORT_SYMBOL
+0xedc93675	sysfs_create_link	vmlinux	EXPORT_SYMBOL_GPL
+0x6ebe8dde	ipmi_free_recv_msg	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xd2e54a2d	svc_set_client	vmlinux	EXPORT_SYMBOL
+0xcbc104a0	add_mtd_device	vmlinux	EXPORT_SYMBOL_GPL
+0xb34d4c2e	acpi_terminate	vmlinux	EXPORT_SYMBOL
+0x6d294e43	clock_t_to_jiffies	vmlinux	EXPORT_SYMBOL
+0xe97f4ce5	qword_get	vmlinux	EXPORT_SYMBOL
+0x40a1ac10	ethtool_op_set_sg	vmlinux	EXPORT_SYMBOL
+0x98f27643	snd_pcm_lib_preallocate_pages_for_all	vmlinux	EXPORT_SYMBOL
+0xeec21887	pcim_iomap_table	vmlinux	EXPORT_SYMBOL
+0x0525d3ab	journal_revoke	vmlinux	EXPORT_SYMBOL
+0x7f451b0e	seq_release	vmlinux	EXPORT_SYMBOL
+0x24e6b40e	ieee80211softmac_wx_get_wap	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x47dbfa0a	capi_message2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x6ae7bbef	hidinput_disconnect	vmlinux	EXPORT_SYMBOL_GPL
+0x998b25c1	parport_register_driver	vmlinux	EXPORT_SYMBOL
+0x5e93d92c	snd_soc_dapm_stream_event	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xcc1fb551	baswap	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xef9a63f1	onenand_release	drivers/mtd/onenand/onenand	EXPORT_SYMBOL_GPL
+0xd6feefa5	agp_num_entries	vmlinux	EXPORT_SYMBOL_GPL
+0xa44abf70	__blk_put_request	vmlinux	EXPORT_SYMBOL_GPL
+0x898fb22a	elv_rb_latter_request	vmlinux	EXPORT_SYMBOL
+0x7b99984e	sysfs_create_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x66b2a859	nr_free_buffer_pages	vmlinux	EXPORT_SYMBOL_GPL
+0xe4870354	_read_trylock	vmlinux	EXPORT_SYMBOL
+0xd6b33026	cpu_khz	vmlinux	EXPORT_SYMBOL
+0x27c447ad	dccp_destroy_sock	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x361f1ac9	klist_init	vmlinux	EXPORT_SYMBOL_GPL
+0xaa19891d	xfrm_state_unregister_afinfo	vmlinux	EXPORT_SYMBOL
+0xa33f7c7c	nla_strlcpy	vmlinux	EXPORT_SYMBOL
+0xbc324203	dm_noflush_suspending	vmlinux	EXPORT_SYMBOL_GPL
+0x3e1b503a	acpi_get_physical_device	vmlinux	EXPORT_SYMBOL
+0xb96d1f3d	blk_init_queue_node	vmlinux	EXPORT_SYMBOL
+0x509579f5	up_write	vmlinux	EXPORT_SYMBOL
+0xf0131bce	snd_rawmidi_kernel_open	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xa63d85ab	slhc_remember	drivers/net/slhc	EXPORT_SYMBOL
+0xddbbbb3f	auth_domain_put	vmlinux	EXPORT_SYMBOL
+0x7bc3d86a	tcf_hash_release	vmlinux	EXPORT_SYMBOL
+0x5a46d963	cpufreq_cpu_get	vmlinux	EXPORT_SYMBOL_GPL
+0xefa63b45	cpufreq_cpu_put	vmlinux	EXPORT_SYMBOL_GPL
+0xab58828b	scsi_target_block	vmlinux	EXPORT_SYMBOL_GPL
+0xdf97f277	free_buffer_head	vmlinux	EXPORT_SYMBOL
+0x0d6fb6bf	fget	vmlinux	EXPORT_SYMBOL
+0xedf44f95	phone_register_device	drivers/telephony/phonedev	EXPORT_SYMBOL
+0xc343e6b7	phy_sanitize_settings	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x07cda048	iscsi_complete_pdu	vmlinux	EXPORT_SYMBOL_GPL
+0x871a3c09	rdc_8820_reset	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0xe07cd1a4	b1_free_card	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x706b3a33	cpufreq_frequency_table_get_attr	vmlinux	EXPORT_SYMBOL_GPL
+0x79aa05a8	match_token	vmlinux	EXPORT_SYMBOL
+0xf560993b	jbd2_journal_abort	vmlinux	EXPORT_SYMBOL
+0x7a6d6cac	vmtruncate	vmlinux	EXPORT_SYMBOL
+0x6f8fa3cd	down_write	vmlinux	EXPORT_SYMBOL
+0xa0c111f7	videocodec_unregister	drivers/media/video/videocodec	EXPORT_SYMBOL
+0xc43a26d6	dibusb_power_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0xef7fd60f	compat_ip_getsockopt	vmlinux	EXPORT_SYMBOL
+0x40166c84	ip_route_output_flow	vmlinux	EXPORT_SYMBOL_GPL
+0xf5921515	compat_nf_getsockopt	vmlinux	EXPORT_SYMBOL
+0x1b9e0ff1	scsilun_to_int	vmlinux	EXPORT_SYMBOL
+0x17ff6896	pnp_resource_change	vmlinux	EXPORT_SYMBOL
+0x46f2fdbe	posix_test_lock	vmlinux	EXPORT_SYMBOL
+0x8b0faa1a	kill_block_super	vmlinux	EXPORT_SYMBOL
+0x10edddcd	flush_signals	vmlinux	EXPORT_SYMBOL
+0xc41b73be	nf_ct_expect_chain	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd2741c03	nf_ct_remove_expectations	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x397a7a72	ccid_hc_rx_delete	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x56a2e732	ccid_hc_tx_delete	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x9aabc564	crc16	lib/crc16	EXPORT_SYMBOL
+0x5ca965f1	neigh_lookup_nodev	vmlinux	EXPORT_SYMBOL
+0x49fe4afc	kernel_getsockopt	vmlinux	EXPORT_SYMBOL
+0x78c22b0c	kernel_setsockopt	vmlinux	EXPORT_SYMBOL
+0x189b20ee	kernel_sock_ioctl	vmlinux	EXPORT_SYMBOL
+0x52e82298	pccard_register_pcmcia	vmlinux	EXPORT_SYMBOL
+0xeaff6cf2	mb_cache_entry_insert	vmlinux	EXPORT_SYMBOL
+0x74fe9031	nfnetlink_unicast	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0x8b5f5adf	snd_mixer_oss_ioctl_card	vmlinux	EXPORT_SYMBOL
+0x5401aa1d	pnp_init_resource_table	vmlinux	EXPORT_SYMBOL
+0xb84fc887	blk_put_request	vmlinux	EXPORT_SYMBOL
+0xe3a34845	dibusb2_0_streaming_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x72051baa	cdrom_mode_select	vmlinux	EXPORT_SYMBOL
+0x974bfe46	toi_power_down	vmlinux	EXPORT_SYMBOL_GPL
+0xf07299f8	nf_conntrack_in	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x740bd117	mmc_claim_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x87ef9557	ib_sa_join_multicast	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x7ec3b9d6	edac_pci_free_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x7b12b6d9	sock_queue_rcv_skb	vmlinux	EXPORT_SYMBOL
+0x989080e3	snd_pcm_lib_preallocate_free_for_all	vmlinux	EXPORT_SYMBOL
+0x2edddd40	ata_port_schedule_eh	vmlinux	EXPORT_SYMBOL_GPL
+0x59e544a3	mapping_tagged	vmlinux	EXPORT_SYMBOL
+0xffd5a33f	hibernation_platform_enter	vmlinux	EXPORT_SYMBOL_GPL
+0x91c915bd	aarp_send_ddp	net/appletalk/appletalk	EXPORT_SYMBOL
+0xf8fdeeb4	p54_rx	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0xd9eb5dd3	cx88_risc_stopper	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x9396408c	rpc_setbufsize	vmlinux	EXPORT_SYMBOL
+0x40107440	dma_async_client_chan_request	vmlinux	EXPORT_SYMBOL
+0x2212df8e	serio_interrupt	vmlinux	EXPORT_SYMBOL
+0xf6bb4729	color_table	vmlinux	EXPORT_SYMBOL
+0x3a517086	put_disk	vmlinux	EXPORT_SYMBOL
+0x4f51ed66	module_add_driver	vmlinux	EXPORT_SYMBOL
+0x38bfb0e3	rxrpc_register_security	net/rxrpc/af-rxrpc	EXPORT_SYMBOL_GPL
+0xb1fb096b	auth_unix_add_addr	vmlinux	EXPORT_SYMBOL
+0xfdc6024a	dma_sync_wait	vmlinux	EXPORT_SYMBOL
+0x8952fc76	spi_sync	vmlinux	EXPORT_SYMBOL_GPL
+0x9ba7089d	argv_split	vmlinux	EXPORT_SYMBOL
+0x2aace2ab	ieee80211_wx_get_scan	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x95b84fc6	sppp_detach	drivers/net/wan/syncppp	EXPORT_SYMBOL
+0xde8e08f9	flexcop_dump_reg	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xb37ab086	ohci1394_init_iso_tasklet	vmlinux	EXPORT_SYMBOL
+0x2274556d	find_first_bit	vmlinux	EXPORT_SYMBOL
+0x64bd04fd	proc_root_fs	vmlinux	EXPORT_SYMBOL
+0xa69fc184	ieee80211softmac_wx_get_rate	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x27a069d6	hostap_dump_rx_header	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x3abcbf80	hostap_dump_tx_header	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x7a1d5568	dst_pio_disable	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x31a89d59	rpc_debug	vmlinux	EXPORT_SYMBOL
+0x877e4388	bus_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xbef43296	console_conditional_schedule	vmlinux	EXPORT_SYMBOL
+0xe6a56447	svc_destroy	vmlinux	EXPORT_SYMBOL
+0x5583f7e5	snd_unregister_device	vmlinux	EXPORT_SYMBOL
+0x78af0c46	debugfs_create_symlink	vmlinux	EXPORT_SYMBOL_GPL
+0xefa9a677	fat_detach	vmlinux	EXPORT_SYMBOL_GPL
+0x9d6a3846	dccp_orphan_count	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x2baa6586	capilib_new_ncci	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xe75fb0d4	ib_copy_path_rec_to_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0x5c33c4c6	ib_modify_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x8a336b00	drm_ioctl	drivers/char/drm/drm	EXPORT_SYMBOL
+0x739ee22d	gen_pool_add	vmlinux	EXPORT_SYMBOL
+0xaf7e6801	smp_call_function_single	vmlinux	EXPORT_SYMBOL
+0x8410aa9c	hci_register_proto	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x96b24a0e	dibusb2_0_power_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0xe928f25f	b1_reset_ctr	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x50211ee3	tcp_free_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0xeddfe49d	rtc_unregister	vmlinux	EXPORT_SYMBOL
+0xc0580937	rb_erase	vmlinux	EXPORT_SYMBOL
+0xbfc3ad88	disk_round_stats	vmlinux	EXPORT_SYMBOL_GPL
+0x7c2f2afb	w1_calc_crc8	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x2adec1e0	__nvram_check_checksum	drivers/char/nvram	EXPORT_SYMBOL
+0xaafdc258	strcasecmp	vmlinux	EXPORT_SYMBOL
+0xbaeb1d0f	video_usercopy	drivers/media/video/videodev	EXPORT_SYMBOL
+0x887af021	cache_check	vmlinux	EXPORT_SYMBOL
+0x508001d4	xfrm_state_clone	vmlinux	EXPORT_SYMBOL
+0xba2fae34	iscsi_destroy_session	vmlinux	EXPORT_SYMBOL_GPL
+0x7423f1a8	set_blocksize	vmlinux	EXPORT_SYMBOL
+0x944ba5b9	block_page_mkwrite	vmlinux	EXPORT_SYMBOL
+0x9c2de449	memory_add_physaddr_to_nid	vmlinux	EXPORT_SYMBOL_GPL
+0x1a86689f	snd_sbmixer_resume	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0xed9407b2	ieee80211softmac_scan_finished	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x8c945d59	cpci_hp_unregister_bus	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x6200c4c9	btcx_calc_skips	drivers/media/video/btcx-risc	EXPORT_SYMBOL
+0xe26a66c1	flexcop_i2c_request	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x48e14100	saa7146_pgtable_build_single	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x3297f0dc	md_done_sync	vmlinux	EXPORT_SYMBOL
+0xdad8bd06	uart_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x88462c4d	crypto_spawn_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0x3302b500	copy_from_user	vmlinux	EXPORT_SYMBOL
+0xf5f7ccc5	hashbin_insert	net/irda/irda	EXPORT_SYMBOL
+0x1a4a0f9a	usb_ftdi_elan_edset_output	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x2eed93ff	mdio_bus_type	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xd4f44b55	inet_csk_search_req	vmlinux	EXPORT_SYMBOL_GPL
+0xf5633477	dmi_check_system	vmlinux	EXPORT_SYMBOL
+0x433fb857	blk_execute_rq	vmlinux	EXPORT_SYMBOL
+0x5283a513	ip6_xmit	net/ipv6/ipv6	EXPORT_SYMBOL
+0xd4d3a27a	dccp_hash	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x2f3da644	rpc_call_sync	vmlinux	EXPORT_SYMBOL
+0x5d761967	compat_ip_setsockopt	vmlinux	EXPORT_SYMBOL
+0x1002a2eb	compat_nf_setsockopt	vmlinux	EXPORT_SYMBOL
+0x0bc83a0a	tcf_exts_dump	vmlinux	EXPORT_SYMBOL
+0xb4d555c5	ata_noop_qc_prep	vmlinux	EXPORT_SYMBOL_GPL
+0x797435d0	acpi_get_object_info	vmlinux	EXPORT_SYMBOL
+0x9fc921bb	vsscanf	vmlinux	EXPORT_SYMBOL
+0x38c80980	jbd2_journal_unlock_updates	vmlinux	EXPORT_SYMBOL
+0x82d79b51	sysctl_vfs_cache_pressure	vmlinux	EXPORT_SYMBOL_GPL
+0x04486e88	rcu_batches_completed	vmlinux	EXPORT_SYMBOL_GPL
+0x01075bf0	panic	vmlinux	EXPORT_SYMBOL
+0xd7dd777b	reserve_perfctr_nmi	vmlinux	EXPORT_SYMBOL
+0x6657080d	o2nm_get_node_by_ip	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xcda061c0	w1_remove_master_device	drivers/w1/wire	EXPORT_SYMBOL
+0x5a34a45c	__kmalloc	vmlinux	EXPORT_SYMBOL
+0x8e879bb7	__vmalloc	vmlinux	EXPORT_SYMBOL
+0xa8b8b0b4	put_files_struct	vmlinux	EXPORT_SYMBOL
+0x0f288cb3	hid_free_device	vmlinux	EXPORT_SYMBOL_GPL
+0x5e10007c	ata_sas_port_start	vmlinux	EXPORT_SYMBOL_GPL
+0x84250e9b	acpi_get_irq_routing_table	vmlinux	EXPORT_SYMBOL
+0x34ae697d	xip_file_mmap	vmlinux	EXPORT_SYMBOL_GPL
+0x066df505	gf128mul_init_64k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x1e108535	gf128mul_init_64k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0xc83f3930	rpc_wake_up_next	vmlinux	EXPORT_SYMBOL
+0xf1ad8119	__ip_select_ident	vmlinux	EXPORT_SYMBOL
+0x1107ad24	ata_sg_init	vmlinux	EXPORT_SYMBOL_GPL
+0xa3838a39	pci_find_next_ht_capability	vmlinux	EXPORT_SYMBOL_GPL
+0x2aa5e688	pci_find_ht_capability	vmlinux	EXPORT_SYMBOL_GPL
+0x9f98322f	journal_load	vmlinux	EXPORT_SYMBOL
+0x4b55652f	flock_lock_file_wait	vmlinux	EXPORT_SYMBOL
+0xc6e32e5a	xt_find_match	net/netfilter/x_tables	EXPORT_SYMBOL
+0xf5708881	dvb_usb_device_exit	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0xab0ffd85	iw_handler_get_spy	vmlinux	EXPORT_SYMBOL
+0xbb167766	fb_var_to_videomode	vmlinux	EXPORT_SYMBOL
+0x2fa5a500	memcmp	vmlinux	EXPORT_SYMBOL
+0xba3cf429	idr_for_each	vmlinux	EXPORT_SYMBOL
+0xc74cbd63	bio_add_pc_page	vmlinux	EXPORT_SYMBOL
+0x2cdd8031	locks_init_lock	vmlinux	EXPORT_SYMBOL
+0xf4906634	snd_vx_create	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0xb1862c0c	serio_reconnect	vmlinux	EXPORT_SYMBOL
+0xec4d2dd4	d_alloc_name	vmlinux	EXPORT_SYMBOL
+0x8ecf4acc	bttv_write_gpio	drivers/media/video/bt8xx/bttv	EXPORT_SYMBOL
+0x902ac953	dma_async_memcpy_buf_to_buf	vmlinux	EXPORT_SYMBOL
+0x9d676148	devm_ioport_unmap	vmlinux	EXPORT_SYMBOL
+0x5c80ee06	vfs_readdir	vmlinux	EXPORT_SYMBOL
+0x651c2313	crc_ccitt	lib/crc-ccitt	EXPORT_SYMBOL
+0x6b60eef6	zlib_inflate	vmlinux	EXPORT_SYMBOL
+0xf3522c9c	vscnprintf	vmlinux	EXPORT_SYMBOL
+0x313a1825	blk_recount_segments	vmlinux	EXPORT_SYMBOL
+0xa48105eb	vfs_quota_on	vmlinux	EXPORT_SYMBOL
+0x52a70232	simple_statfs	vmlinux	EXPORT_SYMBOL
+0x7af063a7	kmem_cache_alloc_node	vmlinux	EXPORT_SYMBOL
+0x1992a2ba	param_set_long	vmlinux	EXPORT_SYMBOL
+0x0f3c181b	xfrm6_tunnel_deregister	net/ipv6/tunnel6	EXPORT_SYMBOL
+0x0a73d66d	xfrm4_tunnel_deregister	net/ipv4/tunnel4	EXPORT_SYMBOL
+0x8174dece	configfs_undepend_item	fs/configfs/configfs	EXPORT_SYMBOL
+0x98481208	km_policy_notify	vmlinux	EXPORT_SYMBOL
+0x58054bf6	ip_mc_join_group	vmlinux	EXPORT_SYMBOL
+0x45641878	usb_string	vmlinux	EXPORT_SYMBOL
+0xbf07ea94	nf_ct_unexpect_related	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x32580890	usb_gadget_register_driver	drivers/usb/gadget/net2280	EXPORT_SYMBOL
+0x4976a2a0	ib_alloc_pd	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xafd701f2	inet_csk_reqsk_queue_hash_add	vmlinux	EXPORT_SYMBOL_GPL
+0xac1c3384	agp_generic_free_gatt_table	vmlinux	EXPORT_SYMBOL
+0xf441ac43	ioread8_rep	vmlinux	EXPORT_SYMBOL
+0xb734318d	debugfs_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xc21e2eb9	journal_update_superblock	vmlinux	EXPORT_SYMBOL
+0x75650e82	lease_modify	vmlinux	EXPORT_SYMBOL
+0xae0103c3	tipc_shutdown	net/tipc/tipc	EXPORT_SYMBOL
+0x61aa57c0	dibx000_init_i2c_master	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0x4fcc3fa3	dibx000_exit_i2c_master	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0xa449208b	xfrm_dst_ifdown	vmlinux	EXPORT_SYMBOL
+0xa775ec47	neigh_seq_start	vmlinux	EXPORT_SYMBOL
+0xe8e03370	cpu_sysdev_class	vmlinux	EXPORT_SYMBOL
+0x3f0546a8	ioread32_rep	vmlinux	EXPORT_SYMBOL
+0x502c6089	srcu_read_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xf9cb6e53	get_key_pinnacle_grey	drivers/media/video/ir-kbd-i2c	EXPORT_SYMBOL_GPL
+0xf36e137d	rpc_put_task	vmlinux	EXPORT_SYMBOL
+0x7174dcf5	snd_pcm_hw_constraint_ratdens	vmlinux	EXPORT_SYMBOL
+0x376e04bf	release_and_free_resource	vmlinux	EXPORT_SYMBOL
+0x7ec9bfbc	strncpy	vmlinux	EXPORT_SYMBOL
+0x672144bd	strlcpy	vmlinux	EXPORT_SYMBOL
+0x3be7af02	get_max_files	vmlinux	EXPORT_SYMBOL_GPL
+0x1a45cb6c	acpi_disabled	vmlinux	EXPORT_SYMBOL
+0x6f077fcf	ib_get_mad_data_offset	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xc532cb0c	tcf_em_tree_destroy	vmlinux	EXPORT_SYMBOL
+0x3b904688	fddi_type_trans	vmlinux	EXPORT_SYMBOL
+0xcebf8a91	pcmcia_get_socket_by_nr	vmlinux	EXPORT_SYMBOL
+0xf195c682	fb_invert_cmaps	vmlinux	EXPORT_SYMBOL
+0xf98b0275	tty_ldisc_put	vmlinux	EXPORT_SYMBOL_GPL
+0xcec8514a	tipc_set_portunreturnable	net/tipc/tipc	EXPORT_SYMBOL
+0x37c40dfe	libertas_interrupt	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xe9dbe9f9	ib_create_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3e4863bc	xfrm_state_check	vmlinux	EXPORT_SYMBOL
+0x1258cfc0	nf_net_netfilter_sysctl_path	vmlinux	EXPORT_SYMBOL_GPL
+0xa76a4708	driver_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xa4e3a59a	rfkill_unregister	net/rfkill/rfkill	EXPORT_SYMBOL
+0x098b71c6	fb_dealloc_cmap	vmlinux	EXPORT_SYMBOL
+0x5dbd45c9	blk_requeue_request	vmlinux	EXPORT_SYMBOL
+0x41482d8b	strndup_user	vmlinux	EXPORT_SYMBOL
+0x2135b127	stop_machine_run	vmlinux	EXPORT_SYMBOL_GPL
+0x8572488d	snd_cs8427_iec958_pcm	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0xd9f14e11	pccard_nonstatic_ops	drivers/pcmcia/rsrc_nonstatic	EXPORT_SYMBOL
+0x1f7d1164	rt2x00usb_enable_radio	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x8508097f	__xfrm_lookup	vmlinux	EXPORT_SYMBOL
+0x8664f62e	cpufreq_update_policy	vmlinux	EXPORT_SYMBOL
+0xa1313846	mptscsih_remove	vmlinux	EXPORT_SYMBOL
+0x8c171cdb	agp_bind_memory	vmlinux	EXPORT_SYMBOL
+0xa4c6c6b4	crypto_init_spawn	vmlinux	EXPORT_SYMBOL_GPL
+0xe7b14faf	pagevec_lookup	vmlinux	EXPORT_SYMBOL
+0x3fcd426f	xfrm_find_acq	vmlinux	EXPORT_SYMBOL
+0x89d4dbaf	usb_usual_check_type	vmlinux	EXPORT_SYMBOL_GPL
+0x3388957a	scsi_scan_host	vmlinux	EXPORT_SYMBOL
+0xe269ea1c	sys_open	vmlinux	EXPORT_SYMBOL_GPL
+0x7037d79d	k8_flush_garts	vmlinux	EXPORT_SYMBOL_GPL
+0x9a4d1034	idle_notifier_register	vmlinux	EXPORT_SYMBOL_GPL
+0x10d40fcd	tipc_isconnected	net/tipc/tipc	EXPORT_SYMBOL
+0x4355e2d5	ib_destroy_cq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb2207907	gs_stop	drivers/char/generic_serial	EXPORT_SYMBOL
+0xd3028e75	drm_sman_set_manager	drivers/char/drm/drm	EXPORT_SYMBOL
+0x901f6611	tcp_sendpage	vmlinux	EXPORT_SYMBOL
+0xb98a0185	rtc_tm_to_time	vmlinux	EXPORT_SYMBOL
+0x6b4e5a52	radix_tree_lookup_slot	vmlinux	EXPORT_SYMBOL
+0x8a90d932	allocate_resource	vmlinux	EXPORT_SYMBOL
+0x6b1c36c0	uio_event_notify	drivers/uio/uio	EXPORT_SYMBOL_GPL
+0x805bb3ec	block_prepare_write	vmlinux	EXPORT_SYMBOL
+0x478db443	remove_suid	vmlinux	EXPORT_SYMBOL
+0x02d81845	audit_log_task_context	vmlinux	EXPORT_SYMBOL
+0xb32c01a9	ip_vs_make_skb_writable	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0xda7025cb	dccp_init_sock	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xcfa08587	w1_reset_select_slave	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x53544b97	hostap_free_data	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xa81454eb	ubi_get_volume_info	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x27161fcb	mt2060_attach	drivers/media/dvb/frontends/mt2060	EXPORT_SYMBOL
+0xe7c69412	dm_register_hw_handler	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0x708e6b38	alloc_netdev_mq	vmlinux	EXPORT_SYMBOL
+0xcf9ecbb9	spi_write_then_read	vmlinux	EXPORT_SYMBOL_GPL
+0xf9a054b5	__round_jiffies	vmlinux	EXPORT_SYMBOL_GPL
+0x139be5f1	dvb_usb_get_hexline	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x305dc3c6	cfag12864b_isenabled	drivers/auxdisplay/cfag12864b	EXPORT_SYMBOL_GPL
+0xd9100fdd	__hpsb_register_protocol	vmlinux	EXPORT_SYMBOL
+0x407fcdd4	fat_notify_change	vmlinux	EXPORT_SYMBOL_GPL
+0xf929c62d	vfs_rmdir	vmlinux	EXPORT_SYMBOL
+0x468f561e	generic_shutdown_super	vmlinux	EXPORT_SYMBOL
+0xbc157cb2	xt_compat_target_to_user	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x02a6ce5a	crc16_table	lib/crc16	EXPORT_SYMBOL
+0x4832d1d8	svc_create_thread	vmlinux	EXPORT_SYMBOL
+0xf62349da	del_mtd_partitions	vmlinux	EXPORT_SYMBOL
+0xe97b5767	sas_port_delete_phy	vmlinux	EXPORT_SYMBOL
+0x42edca07	scsi_track_queue_full	vmlinux	EXPORT_SYMBOL
+0xccc5ff7a	acpi_evaluate_integer	vmlinux	EXPORT_SYMBOL
+0x129b249c	cap_bprm_set_security	vmlinux	EXPORT_SYMBOL
+0xe9105626	init_buffer	vmlinux	EXPORT_SYMBOL
+0xa307fde7	resume_console	vmlinux	EXPORT_SYMBOL
+0x0cb0058b	ieee80211_register_hwmode	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2977e05f	o2hb_unregister_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xdff33245	ubi_close_volume	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xd9c0d363	videobuf_read_one	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x5377fe9a	snd_card_new	vmlinux	EXPORT_SYMBOL
+0x6d3a0d9b	dev2t3cdev	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0xfdfbad19	drm_sman_alloc	drivers/char/drm/drm	EXPORT_SYMBOL
+0x9a391a1a	rpcauth_create	vmlinux	EXPORT_SYMBOL
+0x3ce9f66f	sock_no_getname	vmlinux	EXPORT_SYMBOL
+0xdaeae709	snd_pcm_lib_readv	vmlinux	EXPORT_SYMBOL
+0x19db3e37	cpufreq_gov_userspace	vmlinux	EXPORT_SYMBOL
+0x686f1325	hpet_alloc	vmlinux	EXPORT_SYMBOL
+0x02791d51	vfs_link	vmlinux	EXPORT_SYMBOL
+0x57bb71a7	get_futex_key	vmlinux	EXPORT_SYMBOL_GPL
+0x15470f5f	call_usermodehelper_setup	vmlinux	EXPORT_SYMBOL
+0xea29ac98	phy_driver_unregister	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x48a70518	ks0108_writedata	drivers/auxdisplay/ks0108	EXPORT_SYMBOL_GPL
+0x2f40b33a	usb_buffer_alloc	vmlinux	EXPORT_SYMBOL
+0xf82abc1d	isa_dma_bridge_buggy	vmlinux	EXPORT_SYMBOL
+0xbfb3f715	journal_flush	vmlinux	EXPORT_SYMBOL
+0x2447533c	ktime_get_real	vmlinux	EXPORT_SYMBOL_GPL
+0x09a0b562	panic_notifier_list	vmlinux	EXPORT_SYMBOL
+0x2974ead1	DIVA_DIDD_Read	drivers/isdn/hardware/eicon/divadidd	EXPORT_SYMBOL
+0x015caabd	__xfrm_state_delete	vmlinux	EXPORT_SYMBOL
+0x491c8464	unregister_mtd_chip_driver	vmlinux	EXPORT_SYMBOL
+0xcac5d19f	d_delete	vmlinux	EXPORT_SYMBOL
+0xf7159f34	find_get_pages_tag	vmlinux	EXPORT_SYMBOL
+0x14777d07	mod_timer	vmlinux	EXPORT_SYMBOL
+0x7d94f746	acpi_os_write_port	vmlinux	EXPORT_SYMBOL
+0x630f43ff	idr_remove	vmlinux	EXPORT_SYMBOL
+0xfb4ab2ad	ida_remove	vmlinux	EXPORT_SYMBOL
+0x5b384ebc	param_get_invbool	vmlinux	EXPORT_SYMBOL
+0x714607d5	snd_ac97_set_rate	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xf5ba5db1	cx88_core_put	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xd3383957	af9005_rc_keys_size	drivers/media/dvb/dvb-usb/dvb-usb-af9005-remote	EXPORT_SYMBOL
+0x21451ac4	drm_sman_owner_cleanup	drivers/char/drm/drm	EXPORT_SYMBOL
+0x436eb9bd	drm_get_resource_start	drivers/char/drm/drm	EXPORT_SYMBOL
+0xbf9d1b96	nfsd_debug	vmlinux	EXPORT_SYMBOL
+0xfb9c9487	devres_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xac709f5a	tty_hangup	vmlinux	EXPORT_SYMBOL
+0x9b783708	pci_disable_device	vmlinux	EXPORT_SYMBOL
+0x8f42886e	flush_tlb_mm	vmlinux	EXPORT_SYMBOL
+0x2d00d23b	init_mm	vmlinux	EXPORT_SYMBOL
+0x6d164e8c	rt2x00mac_add_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x12bd7077	inet_csk_ctl_sock_create	vmlinux	EXPORT_SYMBOL_GPL
+0x7aabbb1d	alloc_hdlcdev	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0xdcdbc6a0	b1dma_release_appl	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x9d5c672d	ib_query_port	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x5c372971	llc_station_mac_sa	vmlinux	EXPORT_SYMBOL
+0x8ec2b312	dma_region_alloc	vmlinux	EXPORT_SYMBOL
+0x17c3bdf6	mpt_device_driver_deregister	vmlinux	EXPORT_SYMBOL
+0x46532a82	com20020_check	drivers/net/arcnet/com20020	EXPORT_SYMBOL
+0xfee8ef7b	ks0108_address	drivers/auxdisplay/ks0108	EXPORT_SYMBOL_GPL
+0x4febd52e	con_is_bound	vmlinux	EXPORT_SYMBOL
+0x865a29a5	key_link	vmlinux	EXPORT_SYMBOL
+0x0932f73a	read_cache_page	vmlinux	EXPORT_SYMBOL
+0xd5d9f954	ieee80211softmac_stop	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x52ca5591	onenand_default_bbt	drivers/mtd/onenand/onenand	EXPORT_SYMBOL
+0x8e153637	dev_change_flags	vmlinux	EXPORT_SYMBOL
+0x19406580	__strncpy_from_user	vmlinux	EXPORT_SYMBOL
+0xe1ef7f47	dquot_drop	vmlinux	EXPORT_SYMBOL
+0x16b79c81	cpu_present_map	vmlinux	EXPORT_SYMBOL
+0x5a490eb2	snd_opl3_new	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0xf7862488	lapb_unregister	net/lapb/lapb	EXPORT_SYMBOL
+0x76467398	nand_scan	drivers/mtd/nand/nand	EXPORT_SYMBOL_GPL
+0xfb4b75f2	xfrm_state_walk	vmlinux	EXPORT_SYMBOL
+0xef402dd4	nla_put_nohdr	vmlinux	EXPORT_SYMBOL
+0x2c9d9566	dmi_name_in_vendors	vmlinux	EXPORT_SYMBOL
+0x5e4413bd	blkdev_driver_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0xf19294db	bt_sock_unregister	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x07d3d3a2	pcmcia_socket_list_rwsem	vmlinux	EXPORT_SYMBOL
+0xd4637839	scsi_set_medium_removal	vmlinux	EXPORT_SYMBOL
+0x6e76767d	keyring_clear	vmlinux	EXPORT_SYMBOL
+0xa81b01ed	__kill_fasync	vmlinux	EXPORT_SYMBOL
+0x875e1a1b	profile_pc	vmlinux	EXPORT_SYMBOL
+0xe7bd16fc	ebt_unregister_match	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0xa4142002	gss_service_to_auth_domain_name	vmlinux	EXPORT_SYMBOL
+0xaf005877	snd_timer_resolution	vmlinux	EXPORT_SYMBOL
+0x8af30461	jbd2_journal_wipe	vmlinux	EXPORT_SYMBOL
+0xbc32b71b	__nla_put	vmlinux	EXPORT_SYMBOL
+0xb1e37a3c	csr1212_detach_keyval_from_directory	vmlinux	EXPORT_SYMBOL
+0x921afe0d	fb_set_var	vmlinux	EXPORT_SYMBOL
+0x44c231d2	generic_unplug_device	vmlinux	EXPORT_SYMBOL
+0x0237b57a	arch_unregister_cpu	vmlinux	EXPORT_SYMBOL
+0x9cd3ed26	svc_sock_names	vmlinux	EXPORT_SYMBOL
+0x31369c2a	inet_diag_register	vmlinux	EXPORT_SYMBOL_GPL
+0x05061235	pcmcia_adjust_io_region	vmlinux	EXPORT_SYMBOL
+0x0e3a203b	sas_port_mark_backlink	vmlinux	EXPORT_SYMBOL
+0x1f8ec1b3	acpi_get_pci_rootbridge_handle	vmlinux	EXPORT_SYMBOL_GPL
+0xf4147569	tcp_done	vmlinux	EXPORT_SYMBOL_GPL
+0xc8dfd541	snd_pcm_hw_rule_add	vmlinux	EXPORT_SYMBOL
+0xda8af7ad	fb_find_nearest_mode	vmlinux	EXPORT_SYMBOL
+0x223d26bb	o2nm_get_node_by_num	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x19cc2ce3	snd_free_pages	vmlinux	EXPORT_SYMBOL
+0xe1acb780	snd_card_file_remove	vmlinux	EXPORT_SYMBOL
+0xcac50eb4	usb_init_urb	vmlinux	EXPORT_SYMBOL
+0xb1f0db67	__iscsi_complete_pdu	vmlinux	EXPORT_SYMBOL_GPL
+0xddccdfc1	blk_free_tags	vmlinux	EXPORT_SYMBOL
+0x85e5a3db	ktime_get_ts	vmlinux	EXPORT_SYMBOL_GPL
+0x8f9c199c	__get_user_2	vmlinux	EXPORT_SYMBOL
+0x5a4896a8	__put_user_2	vmlinux	EXPORT_SYMBOL
+0x0eeae3eb	snd_ac97_read	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xea422796	tpm_bios_log_setup	drivers/char/tpm/tpm_bios	EXPORT_SYMBOL_GPL
+0xd97d627d	inet_listen_wlock	vmlinux	EXPORT_SYMBOL
+0xf3797152	snd_interval_ratnum	vmlinux	EXPORT_SYMBOL
+0xcccfb2fa	sata_deb_timing_hotplug	vmlinux	EXPORT_SYMBOL_GPL
+0x1dbd20f9	ata_data_xfer_noirq	vmlinux	EXPORT_SYMBOL_GPL
+0x2ce37157	ata_port_queue_task	vmlinux	EXPORT_SYMBOL_GPL
+0x77d18bd0	scsi_device_get	vmlinux	EXPORT_SYMBOL
+0xfc2987eb	scsi_device_put	vmlinux	EXPORT_SYMBOL
+0x5d33ca8b	map_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0x44161c19	unregister_shrinker	vmlinux	EXPORT_SYMBOL
+0xd10e3418	dm_register_path_selector	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0x8968f94f	tpm_show_pcrs	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x97d4cd4d	xfrm_policy_flush	vmlinux	EXPORT_SYMBOL
+0xe78cc745	call_usermodehelper_setkeys	vmlinux	EXPORT_SYMBOL
+0xda73a1d0	__check_region	vmlinux	EXPORT_SYMBOL
+0x4dfe1f2f	nf_nat_protocol_register	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xd7ca8780	ieee80211_unregister_crypto_ops	net/ieee80211/ieee80211_crypt	EXPORT_SYMBOL
+0x2e15087f	key_task_permission	vmlinux	EXPORT_SYMBOL
+0xd0847132	snd_i2c_bus_create	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0xcc0368d4	ieee80211_rate_control_register	net/mac80211/mac80211	EXPORT_SYMBOL
+0xebe2dca6	irda_task_delete	net/irda/irda	EXPORT_SYMBOL
+0xbb06c557	nf_nat_protocol_unregister	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0x98bd3f6c	ieee80211softmac_wx_set_wap	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0xe996dafb	detach_capi_ctr	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x8037844e	inet_diag_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x226310ec	sock_sendmsg	vmlinux	EXPORT_SYMBOL
+0xc6829020	snd_malloc_pages	vmlinux	EXPORT_SYMBOL
+0x68114fc5	sas_domain_attach_transport	vmlinux	EXPORT_SYMBOL_GPL
+0x9271d301	snd_soc_dapm_set_endpoint	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x55d4899c	snd_hwdep_new	sound/core/snd-hwdep	EXPORT_SYMBOL
+0xd5cf1a72	rt2x00usb_vendor_request_buff	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x3053f65e	destroy_EII_client	vmlinux	EXPORT_SYMBOL
+0x46ee7ae9	rtc_set_mmss	vmlinux	EXPORT_SYMBOL_GPL
+0xbd677c5c	usb_hcd_pci_suspend	vmlinux	EXPORT_SYMBOL
+0x62be23ea	cycx_setup	drivers/net/wan/cycx_drv	EXPORT_SYMBOL
+0x1f43ca20	mmc_request_done	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x1629c207	ipmi_set_gets_events	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x1d3848fa	netif_carrier_off	vmlinux	EXPORT_SYMBOL
+0xedd32485	class_register	vmlinux	EXPORT_SYMBOL_GPL
+0xbd8fbdab	vfs_quota_off	vmlinux	EXPORT_SYMBOL
+0x866b3464	sb_set_blocksize	vmlinux	EXPORT_SYMBOL
+0x6e89c162	lease_get_mtime	vmlinux	EXPORT_SYMBOL
+0x7fa82ccb	ip6_sk_dst_lookup	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x20b14ad7	arc_raw_proto	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0xc4a42aaa	edac_pci_add_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x128f20e4	qdisc_unlock_tree	vmlinux	EXPORT_SYMBOL
+0x7a003fe8	parport_ieee1284_epp_read_addr	vmlinux	EXPORT_SYMBOL
+0xcb51d0fd	vmalloc_to_pfn	vmlinux	EXPORT_SYMBOL
+0xb1d0bdf6	access_process_vm	vmlinux	EXPORT_SYMBOL_GPL
+0x09a5fac1	get_task_mm	vmlinux	EXPORT_SYMBOL_GPL
+0xa652cbcd	__ieee80211_get_assoc_led_name	net/mac80211/mac80211	EXPORT_SYMBOL
+0xd94908b5	ieee80211_ctstoself_duration	net/mac80211/mac80211	EXPORT_SYMBOL
+0xfb87b9ea	nf_ct_expect_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x5869055d	register_tcf_proto_ops	vmlinux	EXPORT_SYMBOL
+0x318920b1	register_dock_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x6bd33bd7	crypto_unregister_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x063ba4d7	lock_super	vmlinux	EXPORT_SYMBOL
+0x521e0726	o2net_send_message_vec	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x946b6315	unregister_md_personality	vmlinux	EXPORT_SYMBOL
+0xc9ab2eef	acpi_os_wait_events_complete	vmlinux	EXPORT_SYMBOL
+0x487e9d33	get_empty_filp	vmlinux	EXPORT_SYMBOL
+0x18e3e51f	filp_open	vmlinux	EXPORT_SYMBOL
+0x8f9aa608	generic_file_aio_write	vmlinux	EXPORT_SYMBOL
+0x1e2f38d8	snd_rawmidi_set_ops	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x9a303bec	ip_vs_tcp_conn_listen	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x7dfdd9ce	dccp_timestamp	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x1cb148f5	ir_extract_bits	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x955de0cc	xfrm_calg_get_byname	vmlinux	EXPORT_SYMBOL_GPL
+0x88cc66cc	snd_pcm_link_rwlock	vmlinux	EXPORT_SYMBOL
+0x44a58e62	agp_allocate_memory	vmlinux	EXPORT_SYMBOL
+0x61ef8dbb	copy_io_context	vmlinux	EXPORT_SYMBOL
+0x99f219e7	get_disk	vmlinux	EXPORT_SYMBOL
+0xdc6a6ca9	__free_pages	vmlinux	EXPORT_SYMBOL
+0xe8eb1046	nf_nat_amanda_hook	net/netfilter/nf_conntrack_amanda	EXPORT_SYMBOL_GPL
+0x03ff48d3	power_supply_class	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x05d0f6ba	inet_bind	vmlinux	EXPORT_SYMBOL
+0xbc2d665f	qdisc_watchdog_init	vmlinux	EXPORT_SYMBOL
+0xe425ed23	parport_get_port	vmlinux	EXPORT_SYMBOL
+0x4d2ca849	parport_put_port	vmlinux	EXPORT_SYMBOL
+0xec67b92a	pci_scan_child_bus	vmlinux	EXPORT_SYMBOL_GPL
+0xa380a4bd	xfrm_init_state	vmlinux	EXPORT_SYMBOL
+0xe4c13e29	pci_assign_resource	vmlinux	EXPORT_SYMBOL
+0x4be20941	xfrm_user_policy	vmlinux	EXPORT_SYMBOL
+0xec50c969	skb_split	vmlinux	EXPORT_SYMBOL
+0x1b16ba8d	input_grab_device	vmlinux	EXPORT_SYMBOL
+0x0c689c43	default_mtd_writev	vmlinux	EXPORT_SYMBOL_GPL
+0xc1d46d1f	dvb_generic_open	vmlinux	EXPORT_SYMBOL
+0xf10de535	ioread8	vmlinux	EXPORT_SYMBOL
+0xe8de27ad	journal_try_to_free_buffers	vmlinux	EXPORT_SYMBOL
+0xbc60bcec	ib_destroy_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x686c703f	xfrm_count_auth_supported	vmlinux	EXPORT_SYMBOL_GPL
+0x28dcf25c	udplite_hash	vmlinux	EXPORT_SYMBOL
+0x4ca4dafe	netlink_broadcast	vmlinux	EXPORT_SYMBOL
+0x0343bdf1	__i2c_board_list	vmlinux	EXPORT_SYMBOL_GPL
+0x31ebadcd	in_group_p	vmlinux	EXPORT_SYMBOL
+0x82eb28d9	ax25_send_frame	net/ax25/ax25	EXPORT_SYMBOL
+0x8e64d935	udp_sendmsg	vmlinux	EXPORT_SYMBOL
+0xb32d84eb	elv_rb_former_request	vmlinux	EXPORT_SYMBOL
+0x059f9a7b	ieee80211softmac_wx_set_rate	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x405b7b78	snd_timer_stop	vmlinux	EXPORT_SYMBOL
+0x4c3b4f62	usb_kill_urb	vmlinux	EXPORT_SYMBOL
+0xee8aeee5	usb_get_intf	vmlinux	EXPORT_SYMBOL_GPL
+0x90cccca9	tifm_add_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x997d621b	dst_error_recovery	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x8ca99a04	audit_log	vmlinux	EXPORT_SYMBOL
+0x14effdb6	snd_sbdsp_get_byte	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x0f28cb91	nvram_read_byte	drivers/char/nvram	EXPORT_SYMBOL
+0x5ac1c8a5	xdr_process_buf	vmlinux	EXPORT_SYMBOL
+0xe5e37c2d	sk_wait_data	vmlinux	EXPORT_SYMBOL
+0x93989908	pci_enable_wake	vmlinux	EXPORT_SYMBOL
+0x6e92c440	snd_ac97_update_power	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x0aad7c21	snd_ak4117_reinit	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0xdfc4e48d	snd_ak4114_reinit	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0xed180079	xt_replace_table	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x7efec5f4	libertas_remove_mesh	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x73da882b	hostap_get_stats	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x2d59c954	edac_handlers	vmlinux	EXPORT_SYMBOL_GPL
+0x21ac1aa9	acpi_lock_battery_dir	vmlinux	EXPORT_SYMBOL
+0x04a20170	unshare_files	vmlinux	EXPORT_SYMBOL
+0x56398615	mark_tsc_unstable	vmlinux	EXPORT_SYMBOL_GPL
+0x358bfa43	e820_any_mapped	vmlinux	EXPORT_SYMBOL_GPL
+0xd4883565	snd_midi_event_encode_byte	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x7fe9be7c	rdma_resolve_ip	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0xf0c1af3f	tpm_remove_hardware	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x9dcf4848	iscsi_host_set_param	vmlinux	EXPORT_SYMBOL_GPL
+0xcf5cd0c3	sas_task_abort	vmlinux	EXPORT_SYMBOL_GPL
+0xa8578111	end_buffer_read_sync	vmlinux	EXPORT_SYMBOL
+0x97f992fc	snd_vx_setup_firmware	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x8dbbd831	thinkpad_ec_invalidate	drivers/misc/thinkpad_ec	EXPORT_SYMBOL_GPL
+0xe7e3fd70	tcf_em_tree_dump	vmlinux	EXPORT_SYMBOL
+0xe7bfe0f9	neigh_for_each	vmlinux	EXPORT_SYMBOL
+0x6971447a	rtc_month_days	vmlinux	EXPORT_SYMBOL
+0x7e64181d	usb_calc_bus_time	vmlinux	EXPORT_SYMBOL
+0x92587c41	ata_eng_timeout	vmlinux	EXPORT_SYMBOL_GPL
+0xbcf9361f	sas_register_ha	vmlinux	EXPORT_SYMBOL_GPL
+0x5418d52a	param_get_ushort	vmlinux	EXPORT_SYMBOL
+0x218608ad	snd_emu10k1_ptr_read	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xa3ddb647	vcc_insert_socket	net/atm/atm	EXPORT_SYMBOL
+0x6f7dbffd	usb_find_interface	vmlinux	EXPORT_SYMBOL
+0x94dc62d2	ata_scsi_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0x8a4d0fbe	pci_add_new_bus	vmlinux	EXPORT_SYMBOL
+0xbbc5a4b8	phy_start_interrupts	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x93d2422d	snmp_mib_free	vmlinux	EXPORT_SYMBOL_GPL
+0x259bbb61	neigh_app_ns	vmlinux	EXPORT_SYMBOL
+0x200f1fdb	register_acpi_bus_type	vmlinux	EXPORT_SYMBOL
+0xf82e3d47	acpi_initialize_objects	vmlinux	EXPORT_SYMBOL
+0x79c6e8dd	scatterwalk_start	vmlinux	EXPORT_SYMBOL_GPL
+0x9a85818b	ieee80211_get_channel_flags	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x843a632d	libertas_process_rxed_packet	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x917c0ca6	xfrm_state_check_expire	vmlinux	EXPORT_SYMBOL
+0x79fdc8cb	netdev_boot_setup_check	vmlinux	EXPORT_SYMBOL
+0x383bf254	sock_i_uid	vmlinux	EXPORT_SYMBOL
+0xd0691d8b	sock_i_ino	vmlinux	EXPORT_SYMBOL
+0xd5b015de	parport_register_port	vmlinux	EXPORT_SYMBOL
+0xa5c36cec	inotify_unmount_inodes	vmlinux	EXPORT_SYMBOL_GPL
+0xd1267b62	snd_emux_lock_voice	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x25a37b58	edac_pci_handle_npe	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xbba613c5	ip_build_and_send_pkt	vmlinux	EXPORT_SYMBOL_GPL
+0xd7ee181a	register_gifconf	vmlinux	EXPORT_SYMBOL
+0x034d7665	cpufreq_unregister_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x457594fa	crypto_alg_list	vmlinux	EXPORT_SYMBOL_GPL
+0xb2780f36	mempool_alloc	vmlinux	EXPORT_SYMBOL
+0x328a8f7c	inet_dccp_listen	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x850622b4	irda_register_dongle	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x263b54cc	acpi_resource_to_address64	vmlinux	EXPORT_SYMBOL
+0xf6e6db53	iscsi_conn_stop	vmlinux	EXPORT_SYMBOL_GPL
+0x82745810	proc_dointvec_minmax	vmlinux	EXPORT_SYMBOL
+0xbf6a4cc0	atm_charge	net/atm/atm	EXPORT_SYMBOL
+0x3811daea	ir_codes_manli	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xd347cc6a	i2c_bus_type	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0xcaa49c80	pccard_static_ops	vmlinux	EXPORT_SYMBOL
+0x8329f624	kmalloc_caches	vmlinux	EXPORT_SYMBOL
+0xdc43a9c8	daemonize	vmlinux	EXPORT_SYMBOL
+0x891e1e5a	icmpv6_send	net/ipv6/ipv6	EXPORT_SYMBOL
+0x158ac548	dma_region_offset_to_bus	vmlinux	EXPORT_SYMBOL
+0xc0beff21	put_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xfc9c92b1	blk_queue_make_request	vmlinux	EXPORT_SYMBOL
+0xaa1fd04f	put_page	vmlinux	EXPORT_SYMBOL
+0x681ed1ed	_spin_unlock_bh	vmlinux	EXPORT_SYMBOL
+0x5701686e	nf_conntrack_lock	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe4d4f06d	irda_task_next_state	net/irda/irda	EXPORT_SYMBOL
+0x80074f58	bt878	drivers/media/dvb/bt8xx/bt878	EXPORT_SYMBOL
+0x32967695	saa7146_vv_release	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x2ccf86d1	led_classdev_resume	drivers/leds/led-class	EXPORT_SYMBOL_GPL
+0xc491bedb	rtc_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x5de13578	tty_ldisc_deref	vmlinux	EXPORT_SYMBOL_GPL
+0x88417da4	vfs_getattr	vmlinux	EXPORT_SYMBOL
+0x07fd0995	spi_bitbang_start	drivers/spi/spi_bitbang	EXPORT_SYMBOL_GPL
+0xcf1d1478	phy_stop	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xb3631d00	inet_del_protocol	vmlinux	EXPORT_SYMBOL
+0xad1a85d0	neigh_update	vmlinux	EXPORT_SYMBOL
+0x4f97dc90	ata_dummy_port_info	vmlinux	EXPORT_SYMBOL_GPL
+0x6956b98a	put_io_context	vmlinux	EXPORT_SYMBOL
+0x0e5434b8	bd_claim_by_disk	vmlinux	EXPORT_SYMBOL_GPL
+0x999eca6a	nobh_truncate_page	vmlinux	EXPORT_SYMBOL
+0xb45b24f6	k8_nb_ids	vmlinux	EXPORT_SYMBOL
+0x8c16ff2a	snd_vx_check_reg_bit	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0xb7c8a16c	snd_seq_instr_free_use	sound/core/seq/snd-seq-instr	EXPORT_SYMBOL
+0xb49d227b	ieee80211_generic_frame_duration	net/mac80211/mac80211	EXPORT_SYMBOL
+0xbaeb4700	o2hb_check_node_heartbeating_from_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x989cceef	ethtool_op_set_tx_hw_csum	vmlinux	EXPORT_SYMBOL
+0xa68661f0	iscsi_conn_start	vmlinux	EXPORT_SYMBOL_GPL
+0xb6e591de	swiotlb_unmap_single	vmlinux	EXPORT_SYMBOL
+0x22c87284	end_that_request_chunk	vmlinux	EXPORT_SYMBOL
+0xbcda484e	ubi_leb_unmap	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xb8566c59	nand_scan_tail	drivers/mtd/nand/nand	EXPORT_SYMBOL_GPL
+0x4935e012	icmp_send	vmlinux	EXPORT_SYMBOL
+0xe49414e9	rtattr_parse	vmlinux	EXPORT_SYMBOL
+0x73f92dc2	dvb_ringbuffer_pkt_write	vmlinux	EXPORT_SYMBOL
+0x7a93e7f9	mlx4_uar_alloc	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xf1c26fef	xfrm_state_update	vmlinux	EXPORT_SYMBOL
+0xc53731cb	usb_deregister_dev	vmlinux	EXPORT_SYMBOL
+0x3f69b189	security_ops	vmlinux	EXPORT_SYMBOL
+0x23864ce7	cpuset_mem_spread_node	vmlinux	EXPORT_SYMBOL_GPL
+0x6b414403	hrtimer_start	vmlinux	EXPORT_SYMBOL_GPL
+0x0bc39aae	hashbin_delete	net/irda/irda	EXPORT_SYMBOL
+0x5db13554	ir_codes_encore_enltv	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xa43ead02	dev_open	vmlinux	EXPORT_SYMBOL
+0xff887ca2	snd_cards	vmlinux	EXPORT_SYMBOL
+0xdf3c19ec	cn_add_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x8cc79cab	iowrite16_rep	vmlinux	EXPORT_SYMBOL
+0xbfc177bc	iowrite32_rep	vmlinux	EXPORT_SYMBOL
+0xfb45d592	ilookup	vmlinux	EXPORT_SYMBOL
+0x4302d0eb	free_pages	vmlinux	EXPORT_SYMBOL
+0x73c4c993	snd_mpu401_uart_interrupt_tx	sound/drivers/mpu401/snd-mpu401-uart	EXPORT_SYMBOL
+0xc68b470e	nat_q931_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x7b14354c	__ieee80211_rx	net/mac80211/mac80211	EXPORT_SYMBOL
+0xcda0ded2	btcx_screen_clips	drivers/media/video/btcx-risc	EXPORT_SYMBOL
+0x6a5b6ea4	dmi_get_system_info	vmlinux	EXPORT_SYMBOL
+0x7e8817c2	class_device_remove_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x2036d4fa	unlock_new_inode	vmlinux	EXPORT_SYMBOL
+0x1b506592	__f_setown	vmlinux	EXPORT_SYMBOL
+0x1c3af716	execute_in_process_context	vmlinux	EXPORT_SYMBOL_GPL
+0x3d169e17	xt_find_table_lock	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x0d8282a3	nf_nat_mangle_tcp_packet	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0x518fcbfb	tms380tr_interrupt	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x62737e1d	sock_unregister	vmlinux	EXPORT_SYMBOL
+0xa82f221d	kset_register	vmlinux	EXPORT_SYMBOL
+0xa2979b2b	fput	vmlinux	EXPORT_SYMBOL
+0xccd52b12	__down_failed_interruptible	vmlinux	EXPORT_SYMBOL
+0xb9394173	irias_delete_value	net/irda/irda	EXPORT_SYMBOL
+0x30f55b7e	pcmcia_get_window	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xd1078b45	sas_phy_delete	vmlinux	EXPORT_SYMBOL
+0x42d5c2ae	platform_device_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x66be286a	acpi_os_map_memory	vmlinux	EXPORT_SYMBOL_GPL
+0x71d8e84b	posix_timer_event	vmlinux	EXPORT_SYMBOL_GPL
+0xe6f6dfb9	arc_bcast_proto	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0xc91ae245	netlink_change_ngroups	vmlinux	EXPORT_SYMBOL
+0x3ad7fa91	journal_set_features	vmlinux	EXPORT_SYMBOL
+0x7c5758b4	cx88_risc_databuffer	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xc84303e0	sas_phy_free	vmlinux	EXPORT_SYMBOL
+0x141dbf9b	acpi_bus_receive_event	vmlinux	EXPORT_SYMBOL
+0xb82e3c5d	add_disk	vmlinux	EXPORT_SYMBOL
+0x2eb9a0e8	_read_lock_irq	vmlinux	EXPORT_SYMBOL
+0xbf8ae85e	inet_shutdown	vmlinux	EXPORT_SYMBOL
+0xb9e3c783	mptscsih_info	vmlinux	EXPORT_SYMBOL
+0x46696106	posix_lock_file_wait	vmlinux	EXPORT_SYMBOL
+0x1479cb03	tipc_deleteport	net/tipc/tipc	EXPORT_SYMBOL
+0x9c2c0b93	xt_unregister_table	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x60f873dc	video_output_unregister	drivers/video/output	EXPORT_SYMBOL
+0x9ee189d1	mlx4_qp_modify	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xa5038d31	inet_csk_clone	vmlinux	EXPORT_SYMBOL_GPL
+0x255859e1	hpsb_iso_shutdown	vmlinux	EXPORT_SYMBOL
+0x1d4d993b	uart_remove_one_port	vmlinux	EXPORT_SYMBOL
+0x95daa4fc	pnp_manual_config_dev	vmlinux	EXPORT_SYMBOL
+0x756e6992	strnicmp	vmlinux	EXPORT_SYMBOL
+0x76b01bd7	vmalloc_to_page	vmlinux	EXPORT_SYMBOL
+0xceecfc05	hostap_info_init	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x1d027e4b	snd_pcm_format_signed	vmlinux	EXPORT_SYMBOL
+0x1af28ff3	usb_get_hcd	vmlinux	EXPORT_SYMBOL
+0xe2807d16	fbcon_set_bitops	vmlinux	EXPORT_SYMBOL
+0x90f9b4fe	journal_start_commit	vmlinux	EXPORT_SYMBOL
+0x12afc8e4	__wake_up_bit	vmlinux	EXPORT_SYMBOL
+0x655cb202	snd_sf_linear_to_log	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x08ed0b62	mac_vmode_to_var	drivers/video/macmodes	EXPORT_SYMBOL
+0xc7539a40	dst_command	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0xa6129b63	flexcop_sram_ctrl	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x4b0cfb28	xdr_encode_array2	vmlinux	EXPORT_SYMBOL
+0x62b4f655	sock_release	vmlinux	EXPORT_SYMBOL
+0x3defc6cc	usb_hcd_giveback_urb	vmlinux	EXPORT_SYMBOL
+0xb02357bd	pci_find_device	vmlinux	EXPORT_SYMBOL
+0x39901f2d	user_instantiate	vmlinux	EXPORT_SYMBOL_GPL
+0x58bc7eb5	add_wait_queue_exclusive	vmlinux	EXPORT_SYMBOL
+0xa800d716	snd_emu10k1_synth_bzero	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xaf97314c	nf_nat_icmp_reply_translation	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x75811312	crc_ccitt_table	lib/crc-ccitt	EXPORT_SYMBOL
+0xed44ce5a	mlx4_mtt_addr	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xdf7ff8c7	b1dmactl_read_proc	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x45704798	print_hex_dump_bytes	vmlinux	EXPORT_SYMBOL
+0x863cb91a	utf8_wcstombs	vmlinux	EXPORT_SYMBOL
+0xc9aa0d74	nlmclnt_proc	vmlinux	EXPORT_SYMBOL
+0xc8596179	register_posix_clock	vmlinux	EXPORT_SYMBOL_GPL
+0x34913709	spi_bitbang_transfer	drivers/spi/spi_bitbang	EXPORT_SYMBOL_GPL
+0xdd8c58f6	__orinoco_down	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xdfcf23df	ir_codes_norwood	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xfe882997	gf128mul_init_4k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0xe6f559a7	gf128mul_init_4k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x8a88d7ef	netdev_set_master	vmlinux	EXPORT_SYMBOL
+0x0edd98b2	__skb_checksum_complete_head	vmlinux	EXPORT_SYMBOL
+0x1e44640e	swiotlb_map_sg	vmlinux	EXPORT_SYMBOL
+0xda60bf26	idr_init	vmlinux	EXPORT_SYMBOL
+0x24999d3d	ida_init	vmlinux	EXPORT_SYMBOL
+0x1c6ca541	mpage_readpage	vmlinux	EXPORT_SYMBOL
+0xd6ee688f	vmalloc	vmlinux	EXPORT_SYMBOL
+0x38c1ee22	snd_trident_synth_alloc	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0xed47b224	hermes_struct_init	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0xd9ec0c9f	set_cr0	vmlinux	EXPORT_SYMBOL_GPL
+0xd4e89ce0	ata_bmdma_error_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x429cce86	pci_request_region	vmlinux	EXPORT_SYMBOL
+0x45f42e49	resume_attempted	vmlinux	EXPORT_SYMBOL_GPL
+0x01af3966	snd_emu10k1_voice_free	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xa7735314	flexcop_sram_set_dest	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xb3d2bf12	find_first_zero_bit	vmlinux	EXPORT_SYMBOL
+0xacf21338	ib_attach_mcast	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x96f0d545	ib_detach_mcast	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x972b3d03	scsi_adjust_queue_depth	vmlinux	EXPORT_SYMBOL
+0x1260fb84	mb_cache_entry_find_first	vmlinux	EXPORT_SYMBOL
+0x48c60ae5	ppp_unregister_compressor	drivers/net/ppp_generic	EXPORT_SYMBOL
+0x31c24aa4	capi20_isinstalled	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xbd727fea	gss_mech_get_by_name	vmlinux	EXPORT_SYMBOL
+0xd455422f	tcp_unregister_congestion_control	vmlinux	EXPORT_SYMBOL_GPL
+0x6462f719	__sas_task_abort	vmlinux	EXPORT_SYMBOL_GPL
+0x72afe3a2	acpi_bus_add	vmlinux	EXPORT_SYMBOL
+0xffe92652	agp_generic_alloc_page	vmlinux	EXPORT_SYMBOL
+0xd601fd94	cap_capset_check	vmlinux	EXPORT_SYMBOL
+0x87532abb	bio_split	vmlinux	EXPORT_SYMBOL
+0x1096bd9b	lock_rename	vmlinux	EXPORT_SYMBOL
+0xb75536d2	dccp_set_state	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x7882a5c0	v4l2_chip_match_i2c_client	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x7ba0fd70	i2c_bit_add_bus	drivers/i2c/algos/i2c-algo-bit	EXPORT_SYMBOL
+0x82a733fe	class_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xed23741c	per_cpu__nf_conntrack_stat	net/netfilter/nf_conntrack	EXPORT_SYMBOL
+0x6cdf7598	usb_ftdi_elan_edset_single	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x6d7fe5f7	sppp_close	drivers/net/wan/syncppp	EXPORT_SYMBOL
+0x45b08f68	ir_codes_pinnacle_grey	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x5b622e54	xdr_inline_decode	vmlinux	EXPORT_SYMBOL
+0x920178f4	tcp_check_req	vmlinux	EXPORT_SYMBOL
+0xb227b57c	netlink_unicast	vmlinux	EXPORT_SYMBOL
+0xa585093c	neigh_sysctl_register	vmlinux	EXPORT_SYMBOL
+0xa658632e	i2o_device_claim_release	vmlinux	EXPORT_SYMBOL
+0xf07871d2	ata_bmdma_status	vmlinux	EXPORT_SYMBOL_GPL
+0xe5365525	atrtr_get_dev	net/appletalk/appletalk	EXPORT_SYMBOL
+0x1390e7c9	usb_serial_generic_read_bulk_callback	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xfd451a62	snd_timer_start	vmlinux	EXPORT_SYMBOL
+0xdcb0349b	sys_close	vmlinux	EXPORT_SYMBOL
+0x73803bc2	kill_pgrp	vmlinux	EXPORT_SYMBOL
+0x2b94be17	mlx4_qp_remove	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xe9f62f29	cdebbuf_free	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xd1472061	acpi_pci_register_driver	vmlinux	EXPORT_SYMBOL
+0xa4d4f0e6	global_cache_flush	vmlinux	EXPORT_SYMBOL
+0x74d29e91	fat_build_inode	vmlinux	EXPORT_SYMBOL_GPL
+0x6f8fab4a	seq_read	vmlinux	EXPORT_SYMBOL
+0xa5a99030	is_bad_inode	vmlinux	EXPORT_SYMBOL
+0x89b301d4	param_get_int	vmlinux	EXPORT_SYMBOL
+0xc8c71231	hdlcdrv_receiver	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0xdb120149	dm_unregister_hw_handler	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0xfcbddae5	tcf_hash_new_index	vmlinux	EXPORT_SYMBOL
+0x5600904f	fb_get_color_depth	vmlinux	EXPORT_SYMBOL
+0x3f52bf98	start_tty	vmlinux	EXPORT_SYMBOL
+0x2246e14f	user_update	vmlinux	EXPORT_SYMBOL_GPL
+0xc7c72860	nf_ct_get_tuplepr	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8cdbe249	rt2x00mac_remove_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x87cead23	snd_pcm_notify	vmlinux	EXPORT_SYMBOL
+0x663576a3	dm_table_get_mode	vmlinux	EXPORT_SYMBOL
+0x7b865bea	kvm_read_guest	vmlinux	EXPORT_SYMBOL_GPL
+0x43de5356	pnp_unregister_card_driver	vmlinux	EXPORT_SYMBOL
+0xaf3b8e21	notify_change	vmlinux	EXPORT_SYMBOL
+0x5a91abe0	follow_up	vmlinux	EXPORT_SYMBOL
+0x6483655c	param_get_short	vmlinux	EXPORT_SYMBOL
+0xde4c6b3c	irlmp_service_to_hint	net/irda/irda	EXPORT_SYMBOL
+0xd9e34a25	sm501_set_clock	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x2916bf63	drm_sman_cleanup	drivers/char/drm/drm	EXPORT_SYMBOL
+0x38fbf773	skb_copy_and_csum_datagram_iovec	vmlinux	EXPORT_SYMBOL
+0x8ac5be4f	sock_no_ioctl	vmlinux	EXPORT_SYMBOL
+0xfbf732bd	close_bdev_excl	vmlinux	EXPORT_SYMBOL
+0xe7f55cce	dma_alloc_coherent	vmlinux	EXPORT_SYMBOL
+0xbbb98859	edid_info	vmlinux	EXPORT_SYMBOL_GPL
+0x36470f61	snd_rawmidi_transmit_ack	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xef375da7	nf_conntrack_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xa87bc9e7	o2nm_configured_node_map	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x0ccda8e2	pci_hp_change_slot_info	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x1284039d	md_write_start	vmlinux	EXPORT_SYMBOL
+0x5dd13607	serio_unregister_child_port	vmlinux	EXPORT_SYMBOL
+0x861b251b	mpt_verify_adapter	vmlinux	EXPORT_SYMBOL
+0xdee9da6c	scsi_remove_device	vmlinux	EXPORT_SYMBOL
+0x1cfa4acf	simple_empty	vmlinux	EXPORT_SYMBOL
+0x55969f88	__read_lock_failed	vmlinux	EXPORT_SYMBOL
+0xa3e40107	dccp_make_response	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x165423a2	ir_input_init	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x3121e0c8	xfrm_cfg_mutex	vmlinux	EXPORT_SYMBOL
+0xe1127005	usb_hub_tt_clear_buffer	vmlinux	EXPORT_SYMBOL
+0x460542dc	__pci_register_driver	vmlinux	EXPORT_SYMBOL
+0xd0b2c9e4	blk_queue_merge_bvec	vmlinux	EXPORT_SYMBOL
+0x70926f0a	blk_start_queueing	vmlinux	EXPORT_SYMBOL
+0x565b3fcf	journal_lock_updates	vmlinux	EXPORT_SYMBOL
+0x81f42bc4	hci_register_cb	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x904ae7c2	ip_ct_attach	vmlinux	EXPORT_SYMBOL
+0x5c76c340	dev_set_mtu	vmlinux	EXPORT_SYMBOL
+0xd499728d	crypto_unregister_template	vmlinux	EXPORT_SYMBOL_GPL
+0x7561ce0d	xdr_decode_string_inplace	vmlinux	EXPORT_SYMBOL
+0xf1bec9df	rt2x00pci_suspend	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x1ef172c3	ttpci_budget_init	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x4f0a598e	svc_seq_show	vmlinux	EXPORT_SYMBOL
+0x8641875b	scsi_free_host_dev	vmlinux	EXPORT_SYMBOL
+0x63735e46	driver_register	vmlinux	EXPORT_SYMBOL_GPL
+0x303b51e1	pnp_device_detach	vmlinux	EXPORT_SYMBOL
+0xd0fef3b2	agp_free_key	vmlinux	EXPORT_SYMBOL
+0x23a7a3bd	maps_protect	vmlinux	EXPORT_SYMBOL
+0x78890707	should_remove_suid	vmlinux	EXPORT_SYMBOL
+0x6057c6f3	capi_message2cmsg	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x31bcb863	input_ff_create	vmlinux	EXPORT_SYMBOL_GPL
+0x00ebcb5d	ata_id_string	vmlinux	EXPORT_SYMBOL_GPL
+0x75f83a41	device_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x154ac061	acpi_unlock_battery_dir	vmlinux	EXPORT_SYMBOL
+0x3a5d77f5	find_lock_page	vmlinux	EXPORT_SYMBOL
+0x75598bf3	srcu_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x189c5fd1	out_of_line_bug	vmlinux	EXPORT_SYMBOL
+0xff21d4cf	wiphy_register	vmlinux	EXPORT_SYMBOL
+0x83fb51d1	input_ff_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x595e6f83	platform_get_irq_byname	vmlinux	EXPORT_SYMBOL_GPL
+0xf6518c4a	file_permission	vmlinux	EXPORT_SYMBOL
+0x84e663f9	remove_wait_queue	vmlinux	EXPORT_SYMBOL
+0x89cef6fb	param_array_set	vmlinux	EXPORT_SYMBOL
+0x806d5133	param_array_get	vmlinux	EXPORT_SYMBOL
+0x8ae85eb7	ib_send_cm_sidr_req	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x48485a3f	ib_send_cm_sidr_rep	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x84d73bdc	sk_stream_write_space	vmlinux	EXPORT_SYMBOL
+0xd92dd80f	ipv6_dup_options	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x1000322e	sys_copyarea	drivers/video/syscopyarea	EXPORT_SYMBOL
+0x763bc445	add_mtd_blktrans_dev	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0xa0d61d2e	dvb_generic_ioctl	vmlinux	EXPORT_SYMBOL
+0x35958094	snd_soc_info_bool_ext	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xbaebd795	rxrpc_kernel_get_error_number	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x38da4725	cycx_intr	drivers/net/wan/cycx_drv	EXPORT_SYMBOL
+0xb136d7ef	drm_fasync	drivers/char/drm/drm	EXPORT_SYMBOL
+0xe9705e18	usb_buffer_free	vmlinux	EXPORT_SYMBOL
+0xd2cb48d7	pcmcia_resume_card	vmlinux	EXPORT_SYMBOL
+0x8e002cda	acpi_remove_gpe_block	vmlinux	EXPORT_SYMBOL
+0xa59c0666	acpi_strict	vmlinux	EXPORT_SYMBOL
+0xe7d554c5	snd_soc_new_ac97_codec	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xf0709c1f	irda_device_unregister_dongle	net/irda/irda	EXPORT_SYMBOL
+0x0d10c377	dccp_feat_change_recv	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xbda0282e	i2c_smbus_write_word_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x44c667c2	xfrm_policy_bysel_ctx	vmlinux	EXPORT_SYMBOL
+0x994f7175	tcp_sendmsg	vmlinux	EXPORT_SYMBOL
+0x0b234c4e	dma_prog_region_alloc	vmlinux	EXPORT_SYMBOL
+0x7e275ea8	scsi_complete_async_scans	vmlinux	EXPORT_SYMBOL_GPL
+0x803ab21e	elv_rb_add	vmlinux	EXPORT_SYMBOL
+0x36e7f9fe	elv_rb_del	vmlinux	EXPORT_SYMBOL
+0x7c18142e	init_user_ns	vmlinux	EXPORT_SYMBOL_GPL
+0x963adcaf	dst_attach	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x99e939e2	sock_map_fd	vmlinux	EXPORT_SYMBOL
+0xbb8bfbb1	mptscsih_is_phys_disk	vmlinux	EXPORT_SYMBOL
+0xcdf74170	mptscsih_qcmd	vmlinux	EXPORT_SYMBOL
+0x4dc27464	ata_tf_load	vmlinux	EXPORT_SYMBOL_GPL
+0x30139368	ata_tf_read	vmlinux	EXPORT_SYMBOL_GPL
+0x19c2aa80	snd_util_mem_avail	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0xc8a2ec9a	dccp_disconnect	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x10cb611d	lcd_device_unregister	drivers/video/backlight/lcd	EXPORT_SYMBOL
+0x78fee4e1	ib_sa_get_mcmember_rec	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xebe864af	xfrm_replay_advance	vmlinux	EXPORT_SYMBOL
+0x56168315	snd_ctl_elem_write	vmlinux	EXPORT_SYMBOL
+0x1e92d751	release_cis_mem	vmlinux	EXPORT_SYMBOL
+0x0ddb760d	pcim_pin_device	vmlinux	EXPORT_SYMBOL
+0x226af922	d_prune_aliases	vmlinux	EXPORT_SYMBOL
+0x591415bb	gameport_open	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x2c98258a	tcf_hash_check	vmlinux	EXPORT_SYMBOL
+0x9bc565c5	memcpy_fromiovecend	vmlinux	EXPORT_SYMBOL
+0x7a2c17bd	__pagevec_release	vmlinux	EXPORT_SYMBOL
+0x5b38acf5	init_timer_deferrable	vmlinux	EXPORT_SYMBOL
+0x5148ee2a	rtc_lock	vmlinux	EXPORT_SYMBOL
+0x60df86a5	ct_sip_lnlen	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0xf1a5611d	o2net_unregister_handler_list	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xef0b532c	videobuf_read_start	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x269df35e	nla_reserve_nohdr	vmlinux	EXPORT_SYMBOL
+0x952a0d25	usb_autopm_put_interface	vmlinux	EXPORT_SYMBOL_GPL
+0x76bc1a5c	dma_region_free	vmlinux	EXPORT_SYMBOL
+0xc53ec4b7	ata_sff_port_start	vmlinux	EXPORT_SYMBOL_GPL
+0x49571c65	pcie_set_readrq	vmlinux	EXPORT_SYMBOL
+0x4e1a28dc	securityfs_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xdb2be71f	exportfs_encode_fh	vmlinux	EXPORT_SYMBOL_GPL
+0x6656399f	ilookup5	vmlinux	EXPORT_SYMBOL
+0x73bcd634	mutex_unlock	vmlinux	EXPORT_SYMBOL
+0x665e7894	snd_dma_reserve_buf	vmlinux	EXPORT_SYMBOL
+0x824f532c	pci_block_user_cfg_access	vmlinux	EXPORT_SYMBOL_GPL
+0x83a476ce	bitmap_scnlistprintf	vmlinux	EXPORT_SYMBOL
+0xdedf080a	journal_release_buffer	vmlinux	EXPORT_SYMBOL
+0x91c239c2	per_cpu__kstat	vmlinux	EXPORT_SYMBOL
+0x49ef338b	ieee80211_get_hdrlen	net/mac80211/mac80211	EXPORT_SYMBOL
+0x6534792a	arcnet_debug	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0xd55e6891	ir_codes_gotview7135	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xfe047ce6	acpi_enter_sleep_state	vmlinux	EXPORT_SYMBOL
+0xd89da37f	movable_zone	vmlinux	EXPORT_SYMBOL
+0x4204bf24	nf_register_sysctl_table	vmlinux	EXPORT_SYMBOL_GPL
+0xce2b656e	simple_fill_super	vmlinux	EXPORT_SYMBOL
+0x5dc2388a	have_submounts	vmlinux	EXPORT_SYMBOL
+0x0e244a63	__user_walk	vmlinux	EXPORT_SYMBOL
+0x07cc4a5d	printk_timed_ratelimit	vmlinux	EXPORT_SYMBOL
+0xe48a1d08	sta_info_put	net/mac80211/mac80211	EXPORT_SYMBOL
+0x6b043eba	irda_init_max_qos_capabilies	net/irda/irda	EXPORT_SYMBOL
+0x62e36567	cx88_sram_channel_dump	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x2a0c1c3f	rpcb_getport_sync	vmlinux	EXPORT_SYMBOL_GPL
+0x3d280248	snd_add_device_sysfs_file	vmlinux	EXPORT_SYMBOL
+0xe884ac21	hpsb_make_phypacket	vmlinux	EXPORT_SYMBOL
+0x68714986	key_create_or_update	vmlinux	EXPORT_SYMBOL
+0x0faef0ed	__tasklet_schedule	vmlinux	EXPORT_SYMBOL
+0xa54f1a1c	irias_find_object	net/irda/irda	EXPORT_SYMBOL
+0x024178ae	saa7146_unregister_extension	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x2aaf3300	ib_process_mad_wc	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xf4f14de6	rtnl_trylock	vmlinux	EXPORT_SYMBOL
+0xa90fd3b7	dev_load	vmlinux	EXPORT_SYMBOL
+0x2762780a	debugfs_create_u16	vmlinux	EXPORT_SYMBOL_GPL
+0x3e74b45e	bio_add_page	vmlinux	EXPORT_SYMBOL
+0x7ca341af	kernel_thread	vmlinux	EXPORT_SYMBOL
+0x23654fa9	ipt_unregister_table	net/ipv4/netfilter/ip_tables	EXPORT_SYMBOL
+0xe477a5da	rt2x00mac_conf_tx	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x40f2b10c	ipmi_alloc_smi_msg	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x5f647a2a	gs_close	drivers/char/generic_serial	EXPORT_SYMBOL
+0x4a938f5a	mptscsih_slave_destroy	vmlinux	EXPORT_SYMBOL
+0xf5f7a25a	fb_bl_default_curve	vmlinux	EXPORT_SYMBOL_GPL
+0xe6d5c272	agp_device_command	vmlinux	EXPORT_SYMBOL
+0xba7921dc	zlib_inflateEnd	vmlinux	EXPORT_SYMBOL
+0xeeea1156	open_by_devnum	vmlinux	EXPORT_SYMBOL
+0x6ea09972	snd_midi_channel_alloc_set	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0x76661575	xt_unregister_target	net/netfilter/x_tables	EXPORT_SYMBOL
+0x5ca810b6	hostap_add_interface	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xd53147e6	cxgb3_register_client	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0xea690bb2	flexcop_device_kfree	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x6b96d008	led_trigger_show	vmlinux	EXPORT_SYMBOL_GPL
+0xb423dba1	console_blanked	vmlinux	EXPORT_SYMBOL
+0x55317cf7	pci_bus_add_device	vmlinux	EXPORT_SYMBOL_GPL
+0x0479d44f	ax25_findbyuid	net/ax25/ax25	EXPORT_SYMBOL
+0xfdb98402	config_group_init_type_name	fs/configfs/configfs	EXPORT_SYMBOL
+0x00b8ecf8	__iowrite32_copy	vmlinux	EXPORT_SYMBOL_GPL
+0x15c10b0b	nf_conntrack_unregister_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x82848ee5	ssb_pcicore_dev_irqvecs_enable	drivers/ssb/ssb	EXPORT_SYMBOL
+0x6b791ca7	xdr_enter_page	vmlinux	EXPORT_SYMBOL
+0xa8900da3	fib_rules_register	vmlinux	EXPORT_SYMBOL_GPL
+0x14abf63f	ata_do_eh	vmlinux	EXPORT_SYMBOL_GPL
+0x1055b805	iscsi_create_conn	vmlinux	EXPORT_SYMBOL_GPL
+0xfaf98462	bitrev32	vmlinux	EXPORT_SYMBOL
+0xeae694c0	simple_transaction_read	vmlinux	EXPORT_SYMBOL
+0x8a99a016	mempool_free_slab	vmlinux	EXPORT_SYMBOL
+0x7a6d92da	tick_nohz_get_sleep_length	vmlinux	EXPORT_SYMBOL_GPL
+0xbe3f2939	nf_conntrack_checksum	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xbc40b545	mlx4_write_mtt	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x2718962d	krb5_encrypt	vmlinux	EXPORT_SYMBOL
+0xeedf3b36	xfrm_decode_session	vmlinux	EXPORT_SYMBOL
+0xbc6ce207	snd_ctl_register_ioctl_compat	vmlinux	EXPORT_SYMBOL
+0xb5d52c27	ec_transaction	vmlinux	EXPORT_SYMBOL
+0xc18b60d1	pci_scan_slot	vmlinux	EXPORT_SYMBOL
+0xf0e63084	generic_getxattr	vmlinux	EXPORT_SYMBOL
+0x39602ff6	generic_setxattr	vmlinux	EXPORT_SYMBOL
+0xf68259c8	gss_mech_register	vmlinux	EXPORT_SYMBOL
+0xacb1c586	nf_unregister_sysctl_table	vmlinux	EXPORT_SYMBOL_GPL
+0xe61db068	jbd2_journal_set_features	vmlinux	EXPORT_SYMBOL
+0x2af9475b	mpage_readpages	vmlinux	EXPORT_SYMBOL
+0xbaa63cd6	saa7146_pgtable_free	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xd0f25986	ipmi_set_maintenance_mode	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x8e7f9b47	segment_base	vmlinux	EXPORT_SYMBOL_GPL
+0x6a4f95db	iscsi_conn_get_param	vmlinux	EXPORT_SYMBOL_GPL
+0xb758b225	acpi_disable_event	vmlinux	EXPORT_SYMBOL
+0x06c8ab4b	pci_request_regions	vmlinux	EXPORT_SYMBOL
+0x4df119fa	__bitmap_parse	vmlinux	EXPORT_SYMBOL
+0x4e51f0ad	__wait_on_buffer	vmlinux	EXPORT_SYMBOL
+0x74f04eff	cancel_delayed_work_sync	vmlinux	EXPORT_SYMBOL
+0xce0311cc	rt2x00pci_remove	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x24c2d556	rt2x00pci_resume	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xa950b265	sock_create	vmlinux	EXPORT_SYMBOL
+0xceb2eda9	dm_table_event	vmlinux	EXPORT_SYMBOL
+0xa34cf2fb	kill_litter_super	vmlinux	EXPORT_SYMBOL
+0x69ee7fd1	snd_seq_expand_var_event	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x69b60df4	ip_vs_conn_new	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x2dc035c4	usb_free_urb	vmlinux	EXPORT_SYMBOL
+0x15474729	agp_generic_enable	vmlinux	EXPORT_SYMBOL
+0xfe038b89	tty_prepare_flip_string	vmlinux	EXPORT_SYMBOL_GPL
+0x18db2bf6	tty_prepare_flip_string_flags	vmlinux	EXPORT_SYMBOL_GPL
+0x5bb1e117	sony_pic_camera_command	drivers/misc/sony-laptop	EXPORT_SYMBOL
+0x21b47437	cx88_boards	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xc3f38469	fib_rules_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x0e8a33fe	skb_copy_bits	vmlinux	EXPORT_SYMBOL
+0xd3dadd1a	cdrom_number_of_slots	vmlinux	EXPORT_SYMBOL
+0x645e70cc	pcim_iomap	vmlinux	EXPORT_SYMBOL
+0xc20564f1	sysfs_remove_link	vmlinux	EXPORT_SYMBOL_GPL
+0x084bfcee	snd_akm4xxx_build_controls	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0xed105e12	libertas_add_mesh	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x761afd0b	ib_free_send_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xd7190bc7	tcp_make_synack	vmlinux	EXPORT_SYMBOL
+0x1fb465c9	dma_async_device_register	vmlinux	EXPORT_SYMBOL
+0x85df0f3c	ata_ehi_clear_desc	vmlinux	EXPORT_SYMBOL_GPL
+0xc31afc1d	mii_check_gmii_support	vmlinux	EXPORT_SYMBOL
+0x968dc7c2	sysdev_class_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xd94c1770	acpi_os_read_pci_configuration	vmlinux	EXPORT_SYMBOL
+0x43800f68	acpi_os_signal_semaphore	vmlinux	EXPORT_SYMBOL
+0xa46a6a74	proc_root	vmlinux	EXPORT_SYMBOL
+0xe7ddf686	find_get_page	vmlinux	EXPORT_SYMBOL
+0xb02980e5	hrtimer_forward	vmlinux	EXPORT_SYMBOL_GPL
+0x2d02a46e	bit_waitqueue	vmlinux	EXPORT_SYMBOL
+0x41b0802f	snd_sbmixer_write	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x13d6ce08	sl811h_driver	drivers/usb/host/sl811-hcd	EXPORT_SYMBOL
+0xd17b5710	p54_parse_eeprom	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0x0c27fde8	sock_common_recvmsg	vmlinux	EXPORT_SYMBOL
+0xe49ff3b0	ata_wait_register	vmlinux	EXPORT_SYMBOL_GPL
+0xf0d1e3bd	invalidate_inodes	vmlinux	EXPORT_SYMBOL
+0x4ab833bf	cyber2000fb_disable_extregs	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0x9ecafe0f	cyber2000fb_get_fb_var	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0x6951b2f9	inet_csk_addr2sockaddr	vmlinux	EXPORT_SYMBOL_GPL
+0x4dd40f52	dev_mc_delete	vmlinux	EXPORT_SYMBOL
+0xe0e8cd30	get_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x8251bcc3	bitmap_release_region	vmlinux	EXPORT_SYMBOL
+0x7054a3e4	request_dma	vmlinux	EXPORT_SYMBOL
+0x17c2d676	snd_mpu401_uart_new	sound/drivers/mpu401/snd-mpu401-uart	EXPORT_SYMBOL
+0x76f5669a	irias_add_octseq_attrib	net/irda/irda	EXPORT_SYMBOL
+0xfc263007	ircomm_flow_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x8fd6d3b7	ssb_bus_may_powerdown	drivers/ssb/ssb	EXPORT_SYMBOL
+0x0ccce3e5	ip_mc_inc_group	vmlinux	EXPORT_SYMBOL
+0xa963f49c	tcp_orphan_count	vmlinux	EXPORT_SYMBOL_GPL
+0xe5dfd740	iscsi_pool_free	vmlinux	EXPORT_SYMBOL_GPL
+0x5303d334	request_key_with_auxdata	vmlinux	EXPORT_SYMBOL
+0x734d66d4	fat_attach	vmlinux	EXPORT_SYMBOL_GPL
+0xc54296bd	sysfs_remove_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x98e2c615	kick_iocb	vmlinux	EXPORT_SYMBOL
+0xf268e7a8	xip_file_write	vmlinux	EXPORT_SYMBOL_GPL
+0x7bc78c0f	tcf_exts_validate	vmlinux	EXPORT_SYMBOL
+0x6a806f00	md_new_event	vmlinux	EXPORT_SYMBOL_GPL
+0xaf25400d	snprintf	vmlinux	EXPORT_SYMBOL
+0x1619845e	get_io_context	vmlinux	EXPORT_SYMBOL
+0xf4d1c5a5	scsi_tgt_tsk_mgmt_request	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xe981dc74	rpcauth_destroy_credcache	vmlinux	EXPORT_SYMBOL
+0x18e1683f	snd_dma_program	vmlinux	EXPORT_SYMBOL
+0x136677bd	ata_scsi_simulate	vmlinux	EXPORT_SYMBOL_GPL
+0xb7ab792f	devm_kzalloc	vmlinux	EXPORT_SYMBOL_GPL
+0x748df518	swiotlb_dma_supported	vmlinux	EXPORT_SYMBOL
+0x0a7893f0	__bread	vmlinux	EXPORT_SYMBOL
+0x04508c95	hrtimer_init	vmlinux	EXPORT_SYMBOL_GPL
+0xfc6a2c79	ieee80211_beacon_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2876a6d3	memcpy_toiovec	vmlinux	EXPORT_SYMBOL
+0xa7351077	iscsi_session_teardown	vmlinux	EXPORT_SYMBOL_GPL
+0x81744508	agp_alloc_page_array	vmlinux	EXPORT_SYMBOL
+0x4b085dbf	agp3_generic_configure	vmlinux	EXPORT_SYMBOL
+0x5dc705d0	irttp_udata_request	net/irda/irda	EXPORT_SYMBOL
+0x6c54d677	b1pciv4_detect	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x1b6314fd	in_aton	vmlinux	EXPORT_SYMBOL
+0x42adbfe3	neigh_resolve_output	vmlinux	EXPORT_SYMBOL
+0xfbaf4871	snd_card_register	vmlinux	EXPORT_SYMBOL
+0xba2d8594	ec_read	vmlinux	EXPORT_SYMBOL
+0x68af8414	cfb_imageblit	vmlinux	EXPORT_SYMBOL
+0x7f8723bd	pcie_mch_quirk	vmlinux	EXPORT_SYMBOL
+0x7b52a859	wrmsr_safe_on_cpu	vmlinux	EXPORT_SYMBOL
+0x13c0c38e	crc32c_le	vmlinux	EXPORT_SYMBOL
+0x41bcd8b3	crc32c_be	vmlinux	EXPORT_SYMBOL
+0x91814b3f	journal_init_dev	vmlinux	EXPORT_SYMBOL
+0x3509b3a3	posix_unblock_lock	vmlinux	EXPORT_SYMBOL
+0x3c4d44c9	nf_nat_sip_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x677276a3	nf_nat_sdp_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x97695e8b	nf_nat_irc_hook	net/netfilter/nf_conntrack_irc	EXPORT_SYMBOL_GPL
+0x42668318	nf_nat_ftp_hook	net/netfilter/nf_conntrack_ftp	EXPORT_SYMBOL_GPL
+0x2d1c82c4	rt2x00usb_probe	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x5bc35292	tcp_close	vmlinux	EXPORT_SYMBOL
+0xc93c1d44	__scm_send	vmlinux	EXPORT_SYMBOL
+0x0d5d48cf	usb_register_dev	vmlinux	EXPORT_SYMBOL
+0xef5385cc	scsi_dma_map	vmlinux	EXPORT_SYMBOL
+0x60721206	pnp_register_driver	vmlinux	EXPORT_SYMBOL
+0xb27e521f	try_to_free_buffers	vmlinux	EXPORT_SYMBOL
+0xdeb2e4bb	get_futex_key_refs	vmlinux	EXPORT_SYMBOL_GPL
+0xb2354302	nand_default_bbt	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0xec9074d7	xfrm_migrate	vmlinux	EXPORT_SYMBOL
+0x681e46e3	del_mtd_device	vmlinux	EXPORT_SYMBOL_GPL
+0xafdf73f3	register_framebuffer	vmlinux	EXPORT_SYMBOL
+0x144212ab	dquot_free_inode	vmlinux	EXPORT_SYMBOL
+0x3bc45218	rfkill_switch_all	net/rfkill/rfkill	EXPORT_SYMBOL
+0xcf1b08b3	make_8023_client	net/802/p8023	EXPORT_SYMBOL
+0x01dbb07e	libertas_start_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x0836695c	drm_sman_takedown	drivers/char/drm/drm	EXPORT_SYMBOL
+0x7b1d544d	edac_handler_set	vmlinux	EXPORT_SYMBOL_GPL
+0x3cd06035	add_input_randomness	vmlinux	EXPORT_SYMBOL_GPL
+0x0473df36	arc_proto_map	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x25fb5f3e	xfrm_init_pmtu	vmlinux	EXPORT_SYMBOL
+0x16d5beb3	register_cdrom	vmlinux	EXPORT_SYMBOL
+0xcf4407a2	scsi_unblock_requests	vmlinux	EXPORT_SYMBOL
+0xb27fe91c	device_remove_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x43385ad9	acpi_pci_unregister_driver	vmlinux	EXPORT_SYMBOL
+0xe44271af	bd_claim	vmlinux	EXPORT_SYMBOL
+0xf51ae235	touch_nmi_watchdog	vmlinux	EXPORT_SYMBOL
+0xa20c602a	nf_ct_deliver_cached_events	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xaf5bf6ef	nfs_debug	vmlinux	EXPORT_SYMBOL
+0xb3284531	acpi_dbg_layer	vmlinux	EXPORT_SYMBOL
+0x1251d30f	call_rcu	vmlinux	EXPORT_SYMBOL_GPL
+0xbba5e02f	mlx4_mtt_init	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xdba98423	saa7146_vfree_destroy_pgtable	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x88144b0f	dvb_ringbuffer_empty	vmlinux	EXPORT_SYMBOL
+0xd205af0a	hwrng_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x83da4c13	xfrm6_rcv_spi	net/ipv6/ipv6	EXPORT_SYMBOL
+0xbd352c17	dccp_reqsk_init	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x9781932f	tcf_exts_change	vmlinux	EXPORT_SYMBOL
+0x28986b23	snd_pcm_release_substream	vmlinux	EXPORT_SYMBOL
+0xa2446022	parport_remove_port	vmlinux	EXPORT_SYMBOL
+0x97de0ddd	acpi_install_gpe_block	vmlinux	EXPORT_SYMBOL
+0x75e8f3c3	crypto_register_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x826360fd	do_posix_clock_nonanosleep	vmlinux	EXPORT_SYMBOL_GPL
+0x4b2f14b4	jiffies_to_timespec	vmlinux	EXPORT_SYMBOL
+0x45d6d380	snd_trident_alloc_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x05060a19	snd_opl3_regmap	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x478a4a60	scsi_tgt_free_queue	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x6be442c8	i2c_master_send	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xf7ad6c29	pskb_put	vmlinux	EXPORT_SYMBOL_GPL
+0x3b13b856	ata_sas_slave_configure	vmlinux	EXPORT_SYMBOL_GPL
+0x8d56ef7e	ata_qc_complete	vmlinux	EXPORT_SYMBOL_GPL
+0x5872ef8c	device_reprobe	vmlinux	EXPORT_SYMBOL_GPL
+0x699ce795	find_next_zero_bit	vmlinux	EXPORT_SYMBOL
+0xb7555f12	timeval_to_jiffies	vmlinux	EXPORT_SYMBOL
+0x1e491a04	ib_unmap_fmr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb9425354	wiphy_free	vmlinux	EXPORT_SYMBOL
+0x7d726c28	dev_kfree_skb_any	vmlinux	EXPORT_SYMBOL
+0x992b285f	snd_ctl_new1	vmlinux	EXPORT_SYMBOL
+0xeeecea89	dvb_ca_en50221_init	vmlinux	EXPORT_SYMBOL
+0x3e7051f0	journal_abort	vmlinux	EXPORT_SYMBOL
+0x38ca8064	seq_open	vmlinux	EXPORT_SYMBOL
+0xe53911a2	xt_compat_unlock	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x72f69fbe	hci_conn_encrypt	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x2a057e9d	hpsb_iso_packet_received	vmlinux	EXPORT_SYMBOL
+0x0704f511	pci_bus_type	vmlinux	EXPORT_SYMBOL
+0x2e678367	pci_enable_bridges	vmlinux	EXPORT_SYMBOL
+0xd83f2876	simple_readpage	vmlinux	EXPORT_SYMBOL
+0xf9acc78d	__lock_page	vmlinux	EXPORT_SYMBOL
+0x060f4a05	pcmcia_access_configuration_register	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x501e01a1	ib_sa_cancel_query	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xcabe04de	cpuidle_resume_and_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0x33647d38	usb_altnum_to_altsetting	vmlinux	EXPORT_SYMBOL
+0xbb90cac9	follow_down	vmlinux	EXPORT_SYMBOL
+0x177b0602	snd_sbmixer_add_ctl	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0xfe7cd576	cycx_exec	drivers/net/wan/cycx_drv	EXPORT_SYMBOL
+0x3e2fe0d2	tifm_unregister_driver	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xc8ea531d	rpcauth_lookupcred	vmlinux	EXPORT_SYMBOL
+0x1e33122d	find_exported_dentry	vmlinux	EXPORT_SYMBOL
+0x360b1afe	probe_irq_mask	vmlinux	EXPORT_SYMBOL
+0x8b7d8caf	dccp_statistics	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xd9d6389a	genphy_read_status	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x7fb04370	ubi_leb_read	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xe53c6a67	dib3000mc_pid_control	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0x3cb95b64	redraw_screen	vmlinux	EXPORT_SYMBOL
+0x4a3c178d	tty_unregister_driver	vmlinux	EXPORT_SYMBOL
+0xac7fbe1b	pci_reenable_device	vmlinux	EXPORT_SYMBOL
+0x8c67220a	get_write_access	vmlinux	EXPORT_SYMBOL
+0xb11cb946	invalidate_mapping_pages	vmlinux	EXPORT_SYMBOL
+0xb2d1e17e	v4l2_prio_change	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xd27284dc	drm_poll	drivers/char/drm/drm	EXPORT_SYMBOL
+0x85832e5c	pci_find_present	vmlinux	EXPORT_SYMBOL
+0xf3bf0bce	__bitmap_complement	vmlinux	EXPORT_SYMBOL
+0x48b584f9	bttv_get_pcidev	drivers/media/video/bt8xx/bttv	EXPORT_SYMBOL
+0xfa58c086	dma_get_required_mask	vmlinux	EXPORT_SYMBOL_GPL
+0xcf0a8a61	class_device_get	vmlinux	EXPORT_SYMBOL_GPL
+0xcbcccecb	class_device_put	vmlinux	EXPORT_SYMBOL_GPL
+0x5e48a6d1	del_timer	vmlinux	EXPORT_SYMBOL
+0xfa505087	gameport_set_name	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x18903e9d	ipmi_set_my_address	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x28fc1443	usb_get_current_frame_number	vmlinux	EXPORT_SYMBOL
+0x6fad8640	set_cr3	vmlinux	EXPORT_SYMBOL_GPL
+0xd5e26684	map_destroy	vmlinux	EXPORT_SYMBOL
+0x9b05ea5c	scsi_command_size	vmlinux	EXPORT_SYMBOL
+0x149db923	selinux_string_to_sid	vmlinux	EXPORT_SYMBOL_GPL
+0x9e711ad2	pm_qos_requirement	vmlinux	EXPORT_SYMBOL_GPL
+0x607a11d3	tipc_forward_buf2name	net/tipc/tipc	EXPORT_SYMBOL
+0xfffdce27	nf_ct_expect_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe474e99a	hci_suspend_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xd6316828	vcc_release_async	net/atm/atm	EXPORT_SYMBOL
+0xfebb455c	tcp_v4_send_check	vmlinux	EXPORT_SYMBOL
+0x3f911fee	dev_close	vmlinux	EXPORT_SYMBOL
+0x3385d702	snd_pcm_lib_free_pages	vmlinux	EXPORT_SYMBOL
+0x7f1134ce	iscsi_conn_error	vmlinux	EXPORT_SYMBOL_GPL
+0xc10ca1a5	__mark_inode_dirty	vmlinux	EXPORT_SYMBOL
+0xa021ef50	v4l2_field_names	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x0ae3ca77	usbvideo_Deregister	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0x440155e3	zl10353_attach	drivers/media/dvb/frontends/zl10353	EXPORT_SYMBOL
+0x60c240d5	noop_qdisc	vmlinux	EXPORT_SYMBOL
+0xd779f451	sock_alloc_send_skb	vmlinux	EXPORT_SYMBOL
+0xc5d94043	snd_card_disconnect	vmlinux	EXPORT_SYMBOL
+0x2308d487	dm_put	vmlinux	EXPORT_SYMBOL_GPL
+0x50439beb	acpi_bus_get_device	vmlinux	EXPORT_SYMBOL
+0xcc07af75	strnlen	vmlinux	EXPORT_SYMBOL
+0x8e51ee40	unregister_filesystem	vmlinux	EXPORT_SYMBOL
+0xe0b5502d	adjust_resource	vmlinux	EXPORT_SYMBOL
+0xd1a5ffa9	avail_to_resrv_perfctr_nmi	vmlinux	EXPORT_SYMBOL
+0xd54e219d	hermes_docmd_wait	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x40a907b6	xfrm_state_insert	vmlinux	EXPORT_SYMBOL
+0x32287def	hpsb_add_host	vmlinux	EXPORT_SYMBOL
+0x0543ec1c	snd_ak4531_resume	sound/pci/ac97/snd-ak4531-codec	EXPORT_SYMBOL
+0x63f05053	xt_find_revision	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x2b9580cb	nf_conntrack_flush	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xbf2cd567	rpc_peeraddr2str	vmlinux	EXPORT_SYMBOL_GPL
+0xa93ef2d0	nobh_prepare_write	vmlinux	EXPORT_SYMBOL
+0x6c6f1a61	snd_midi_process_event	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0x2878a987	nf_conntrack_l3proto_generic	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x1fb2f466	mlx4_srq_arm	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x6326cfe3	rdma_join_multicast	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x8f61a209	iw_cm_listen	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x9f0c452d	i2c_check_addr	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xc9f0dcee	usb_mon_register	vmlinux	EXPORT_SYMBOL_GPL
+0x5d097fef	mpt_event_register	vmlinux	EXPORT_SYMBOL
+0x8da13155	pci_bus_add_devices	vmlinux	EXPORT_SYMBOL
+0x2b848b26	blk_plug_device	vmlinux	EXPORT_SYMBOL
+0x9080ad16	blk_rq_unmap_user	vmlinux	EXPORT_SYMBOL
+0x129a1da4	crypto_mod_get	vmlinux	EXPORT_SYMBOL_GPL
+0xeaa456ed	_spin_lock_irqsave	vmlinux	EXPORT_SYMBOL
+0xd276e09e	snd_rawmidi_drop_output	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xab49e6b5	ata_sas_port_init	vmlinux	EXPORT_SYMBOL_GPL
+0xd2085887	fc_remove_host	vmlinux	EXPORT_SYMBOL
+0xf174ed48	acquire_console_sem	vmlinux	EXPORT_SYMBOL
+0xb47f6cda	cx88_print_irqbits	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x82384d0b	__printk_ratelimit	vmlinux	EXPORT_SYMBOL
+0x6fbb3bd9	init_rs_non_canonical	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0x922424b1	xdr_encode_pages	vmlinux	EXPORT_SYMBOL
+0xe2999e53	xdr_read_pages	vmlinux	EXPORT_SYMBOL
+0xcc1f1c3d	inet_twdr_hangman	vmlinux	EXPORT_SYMBOL_GPL
+0x945f151e	hpsb_iso_recv_listen_channel	vmlinux	EXPORT_SYMBOL
+0x2611fbee	register_hotplug_dock_device	vmlinux	EXPORT_SYMBOL_GPL
+0xdf5008fc	tipc_peer	net/tipc/tipc	EXPORT_SYMBOL
+0x4f506333	ks0108_startline	drivers/auxdisplay/ks0108	EXPORT_SYMBOL_GPL
+0x67315d76	ata_irq_on	vmlinux	EXPORT_SYMBOL_GPL
+0x0324d369	iscsi_create_session	vmlinux	EXPORT_SYMBOL_GPL
+0xe5b5b3de	ib_flush_fmr_pool	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x15b435b1	input_register_handle	vmlinux	EXPORT_SYMBOL
+0xfba57f51	hpsb_speedto_str	vmlinux	EXPORT_SYMBOL
+0x90035333	secure_tcpv6_sequence_number	vmlinux	EXPORT_SYMBOL
+0xfabdca9c	journal_get_create_access	vmlinux	EXPORT_SYMBOL
+0xe9a1c90f	toi_core_fns	vmlinux	EXPORT_SYMBOL_GPL
+0xfb86b96f	dlm_errname	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xebe30bca	cx8802_fini_common	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0x07e7ac5a	ieee80211_radiotap_iterator_init	vmlinux	EXPORT_SYMBOL
+0x808f1789	iscsi_eh_abort	vmlinux	EXPORT_SYMBOL_GPL
+0x9898351e	scatterwalk_done	vmlinux	EXPORT_SYMBOL_GPL
+0xad3b93b1	request_key	vmlinux	EXPORT_SYMBOL
+0x1c427ecb	v4l2_ctrl_query_fill	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x7510ec21	drm_i_have_hw_lock	drivers/char/drm/drm	EXPORT_SYMBOL
+0x31dfe2a4	usb_control_msg	vmlinux	EXPORT_SYMBOL
+0x38713b52	mtd_table_mutex	vmlinux	EXPORT_SYMBOL_GPL
+0xf24c4f77	pcim_iomap_regions	vmlinux	EXPORT_SYMBOL
+0xb86e4ab9	random32	vmlinux	EXPORT_SYMBOL
+0xc2b71315	jbd2_journal_lock_updates	vmlinux	EXPORT_SYMBOL
+0x9ef7ccff	vfs_llseek	vmlinux	EXPORT_SYMBOL
+0xe752427c	ieee80211_tx_status_irqsafe	net/mac80211/mac80211	EXPORT_SYMBOL
+0x4d69cf4e	snd_dma_free_pages	vmlinux	EXPORT_SYMBOL
+0x835962d4	hpsb_get_tlabel	vmlinux	EXPORT_SYMBOL
+0x86bd91ba	pci_do_scan_bus	vmlinux	EXPORT_SYMBOL
+0xcf5ac117	bt_sock_unlink	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xac31ffe1	ves1x93_attach	drivers/media/dvb/frontends/ves1x93	EXPORT_SYMBOL
+0x1932554f	iscsi_add_session	vmlinux	EXPORT_SYMBOL_GPL
+0x0dfb5e57	v4l2_prio_max	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xb95e8821	__xfrm_state_destroy	vmlinux	EXPORT_SYMBOL
+0x511b2cf0	bfifo_qdisc_ops	vmlinux	EXPORT_SYMBOL
+0x272d394e	mtrr_del	vmlinux	EXPORT_SYMBOL
+0x17a4bdc8	rt2x00usb_uninitialize	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xde58c104	hostap_80211_header_parse	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xa20ce1b8	net_msg_warn	vmlinux	EXPORT_SYMBOL
+0xe096e02d	__sock_recv_timestamp	vmlinux	EXPORT_SYMBOL_GPL
+0x04564a44	usb_hcd_resume_root_hub	vmlinux	EXPORT_SYMBOL_GPL
+0xa8b23a8e	hpsb_iso_recv_unlisten_channel	vmlinux	EXPORT_SYMBOL
+0xd29ce838	securityfs_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x2f19a9ef	hostap_set_string	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x2d621176	videobuf_mmap_setup	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x0db56623	tpm_calc_ordinal_duration	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x3c1bc0b7	xfrm_migrate_state_find	vmlinux	EXPORT_SYMBOL
+0x96087d55	kvm_get_msr_common	vmlinux	EXPORT_SYMBOL_GPL
+0x38ebf401	kvm_set_msr_common	vmlinux	EXPORT_SYMBOL_GPL
+0xb476b6f1	devres_remove_group	vmlinux	EXPORT_SYMBOL_GPL
+0x118f01ea	putname	vmlinux	EXPORT_SYMBOL
+0x6aa61bca	bt878_stop	drivers/media/dvb/bt8xx/bt878	EXPORT_SYMBOL
+0x1185a133	i2c_add_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xa251c336	drm_mmap	drivers/char/drm/drm	EXPORT_SYMBOL
+0xf313da4e	sha_transform	vmlinux	EXPORT_SYMBOL
+0x76a20aa8	dev_set_allmulti	vmlinux	EXPORT_SYMBOL
+0x3d6085f7	snd_ctl_remove_id	vmlinux	EXPORT_SYMBOL
+0xea10655a	__bitmap_intersects	vmlinux	EXPORT_SYMBOL
+0xa0d3d560	ksize	vmlinux	EXPORT_SYMBOL
+0x9a0e6223	hpsb_make_writepacket	vmlinux	EXPORT_SYMBOL
+0xcb0dc7fb	pci_stop_bus_device	vmlinux	EXPORT_SYMBOL_GPL
+0xdca523d7	kobject_set_name	vmlinux	EXPORT_SYMBOL
+0x8c7c421b	gfs2_register_lockproto	fs/gfs2/gfs2	EXPORT_SYMBOL_GPL
+0x33a68500	ipmi_smi_watcher_register	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xb7d6d00b	gs_put_char	drivers/char/generic_serial	EXPORT_SYMBOL
+0x5dab0ad2	icmp_statistics	vmlinux	EXPORT_SYMBOL
+0xfdb53c04	mptscsih_bios_param	vmlinux	EXPORT_SYMBOL
+0x0bf3cb0c	ata_bmdma_irq_clear	vmlinux	EXPORT_SYMBOL_GPL
+0x2bb55d6e	acpi_remove_notify_handler	vmlinux	EXPORT_SYMBOL
+0x0944e69d	set_device_ro	vmlinux	EXPORT_SYMBOL
+0x7b7bfa5d	usb_anchor_urb	vmlinux	EXPORT_SYMBOL_GPL
+0xcf97f3bd	dead_socket	vmlinux	EXPORT_SYMBOL
+0x2a843bef	i2o_dump_message	vmlinux	EXPORT_SYMBOL
+0x80f20895	pci_clear_mwi	vmlinux	EXPORT_SYMBOL
+0x99ea12ce	panic_blink	vmlinux	EXPORT_SYMBOL
+0x9c30cf47	ppp_register_channel	drivers/net/ppp_generic	EXPORT_SYMBOL
+0x1d91b0c9	ata_sas_port_stop	vmlinux	EXPORT_SYMBOL_GPL
+0x0e38c5be	cancel_dirty_page	vmlinux	EXPORT_SYMBOL
+0x82072614	tasklet_kill	vmlinux	EXPORT_SYMBOL
+0x89c9e84d	__gameport_register_port	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x764403a9	i2c_use_client	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x94090cb6	drm_agp_alloc	drivers/char/drm/drm	EXPORT_SYMBOL
+0x933f0fe6	iscsi_if_destroy_session_done	vmlinux	EXPORT_SYMBOL_GPL
+0xa3f4014d	scsi_print_command	vmlinux	EXPORT_SYMBOL
+0xd00b469f	dvb_unregister_frontend	vmlinux	EXPORT_SYMBOL
+0xbbc03fbe	pci_try_set_mwi	vmlinux	EXPORT_SYMBOL
+0x1ea40a91	bio_endio	vmlinux	EXPORT_SYMBOL
+0x1283d711	nf_ct_expect_unregister_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x72407c5f	ieee80211_stop_queues	net/mac80211/mac80211	EXPORT_SYMBOL
+0xad6f3c8d	pcmcia_register_driver	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x39f57779	videobuf_pci_dma_unmap	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xe373b6fb	btcx_riscmem_alloc	drivers/media/video/btcx-risc	EXPORT_SYMBOL
+0x02ff9464	cfag12864b_isinited	drivers/auxdisplay/cfag12864b	EXPORT_SYMBOL_GPL
+0x944c5915	gf128mul_free_64k	crypto/gf128mul	EXPORT_SYMBOL
+0x6f9c25e0	sk_stop_timer	vmlinux	EXPORT_SYMBOL
+0x8593339c	sas_rphy_remove	vmlinux	EXPORT_SYMBOL
+0x30607106	locks_remove_posix	vmlinux	EXPORT_SYMBOL
+0x75c3b3b3	iscsi_unregister_transport	vmlinux	EXPORT_SYMBOL_GPL
+0x06a9dba7	pcie_port_service_unregister	vmlinux	EXPORT_SYMBOL
+0x605c8bde	radix_tree_delete	vmlinux	EXPORT_SYMBOL
+0xd2f21eff	toi_io_time	vmlinux	EXPORT_SYMBOL_GPL
+0x0004a99e	tcp_slow_start	vmlinux	EXPORT_SYMBOL_GPL
+0xc47cc041	proc_net_netfilter	vmlinux	EXPORT_SYMBOL
+0x71d5f175	dm_table_flush_all	vmlinux	EXPORT_SYMBOL
+0xdc80bddc	devm_ioremap	vmlinux	EXPORT_SYMBOL
+0xe90e7e89	devm_iounmap	vmlinux	EXPORT_SYMBOL
+0xdb9e775c	__blk_add_trace	vmlinux	EXPORT_SYMBOL_GPL
+0x0bba1c14	on_each_cpu	vmlinux	EXPORT_SYMBOL
+0xb1aeffdf	dma_set_mask	vmlinux	EXPORT_SYMBOL
+0xc0703cf9	nla_reserve	vmlinux	EXPORT_SYMBOL
+0xac00184c	snd_pcm_set_sync	vmlinux	EXPORT_SYMBOL
+0x737ea015	ata_bmdma_drive_eh	vmlinux	EXPORT_SYMBOL_GPL
+0x2969016d	parport_find_number	vmlinux	EXPORT_SYMBOL
+0xc65abeb7	agp3_generic_sizes	vmlinux	EXPORT_SYMBOL
+0xea6d3d04	inotify_remove_watch_locked	vmlinux	EXPORT_SYMBOL_GPL
+0xd3f60824	bioset_create	vmlinux	EXPORT_SYMBOL
+0x06659adc	rtnl_put_cacheinfo	vmlinux	EXPORT_SYMBOL_GPL
+0xdcedc4fa	__cpufreq_driver_target	vmlinux	EXPORT_SYMBOL_GPL
+0x512f8683	names_cachep	vmlinux	EXPORT_SYMBOL
+0x37efca6a	invalidate_inode_pages2_range	vmlinux	EXPORT_SYMBOL_GPL
+0xe5c8c3ae	ivtv_reset_ir_gpio	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0xc8e96dea	qword_addhex	vmlinux	EXPORT_SYMBOL
+0x2a47e413	xfrm_policy_register_afinfo	vmlinux	EXPORT_SYMBOL
+0x597c5dbd	xrlim_allow	vmlinux	EXPORT_SYMBOL
+0x54915068	snd_info_create_card_entry	vmlinux	EXPORT_SYMBOL
+0x8f894754	ata_qc_complete_multiple	vmlinux	EXPORT_SYMBOL_GPL
+0xd59a01e5	pci_unmap_rom	vmlinux	EXPORT_SYMBOL
+0x6d55245a	key_instantiate_and_link	vmlinux	EXPORT_SYMBOL
+0x417748c4	mlx4_mr_alloc	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x22b6533b	xfrm_sad_getinfo	vmlinux	EXPORT_SYMBOL
+0xbba2f896	mpt_get_msg_frame	vmlinux	EXPORT_SYMBOL
+0xa1b759ce	fb_add_videomode	vmlinux	EXPORT_SYMBOL
+0x143279fd	crypto_register_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x2c6cb095	debugfs_rename	vmlinux	EXPORT_SYMBOL_GPL
+0x6a0fcfbe	single_open	vmlinux	EXPORT_SYMBOL
+0x743a82d6	page_follow_link_light	vmlinux	EXPORT_SYMBOL
+0x4a2740e8	snd_ac97_suspend	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xab14e193	xfrm6_tunnel_free_spi	net/ipv6/xfrm6_tunnel	EXPORT_SYMBOL
+0x69abb8e2	xfrm6_find_1stfragopt	net/ipv6/ipv6	EXPORT_SYMBOL
+0x3ab65671	genphy_config_advert	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x198788b4	snd_lookup_oss_minor_data	vmlinux	EXPORT_SYMBOL
+0x4a3ea5c0	snd_request_card	vmlinux	EXPORT_SYMBOL
+0xfef96e23	__scsi_print_command	vmlinux	EXPORT_SYMBOL
+0x845d0bd2	kthread_stop	vmlinux	EXPORT_SYMBOL
+0x1a724fcc	snd_seq_kernel_client_ctl	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xde213926	rxrpc_kernel_intercept_rx_messages	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x62b8d435	mlx4_pd_alloc	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x99c1dd52	gameport_unregister_driver	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x74d9a819	dm_register_target	vmlinux	EXPORT_SYMBOL
+0xa7b91a7b	lockd_down	vmlinux	EXPORT_SYMBOL
+0x999a7312	sysfs_update_file	vmlinux	EXPORT_SYMBOL_GPL
+0x8793a1aa	ax25_display_timer	net/ax25/ax25	EXPORT_SYMBOL
+0x2e9a955d	v4l2_prio_close	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x7eed28d2	rtc_set_alarm	vmlinux	EXPORT_SYMBOL_GPL
+0xe8edaf70	__scsi_get_command	vmlinux	EXPORT_SYMBOL_GPL
+0xb234fd7c	__scsi_put_command	vmlinux	EXPORT_SYMBOL
+0x545c1381	__snd_util_mem_free	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0xe3f331e3	ezusb_writememory	drivers/usb/serial/usbserial	EXPORT_SYMBOL
+0x05b24047	ib_sa_register_client	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xf397c5b9	inet_csk_listen_start	vmlinux	EXPORT_SYMBOL_GPL
+0xc6ac8880	cleanup_srcu_struct	vmlinux	EXPORT_SYMBOL_GPL
+0x3980aac1	unregister_reboot_notifier	vmlinux	EXPORT_SYMBOL
+0x6d47d90d	groups_free	vmlinux	EXPORT_SYMBOL
+0xaa165d27	capilib_release_appl	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x79a53629	gf128mul_64k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x38b9ff2a	gf128mul_64k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x7c57377c	tcf_destroy_chain	vmlinux	EXPORT_SYMBOL
+0x1049fdba	sk_clone	vmlinux	EXPORT_SYMBOL_GPL
+0x8a73b09a	mptscsih_taskmgmt_complete	vmlinux	EXPORT_SYMBOL
+0x8094204a	wrmsr_on_cpu	vmlinux	EXPORT_SYMBOL
+0xe3a43753	copy_fs_struct	vmlinux	EXPORT_SYMBOL_GPL
+0xb7521f64	ipmi_unregister_smi	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x41517369	i2o_iop_find_device	vmlinux	EXPORT_SYMBOL
+0xee7eb9e1	pnp_platform_devices	vmlinux	EXPORT_SYMBOL
+0x5118c382	secure_dccp_sequence_number	vmlinux	EXPORT_SYMBOL
+0xf1f22e9b	rfkill_register	net/rfkill/rfkill	EXPORT_SYMBOL
+0xf162fe2d	sysctl_xfrm_aevent_etime	vmlinux	EXPORT_SYMBOL
+0xfe1be0d3	km_migrate	vmlinux	EXPORT_SYMBOL
+0xbfa96fde	neigh_parms_alloc	vmlinux	EXPORT_SYMBOL
+0x64d7a825	dma_async_client_unregister	vmlinux	EXPORT_SYMBOL
+0x56b1ab17	cpuidle_unregister_device	vmlinux	EXPORT_SYMBOL_GPL
+0x19a304ba	usb_disabled	vmlinux	EXPORT_SYMBOL
+0x395a7b19	subsystem_register	vmlinux	EXPORT_SYMBOL
+0xc87e487a	sched_clock_idle_sleep_event	vmlinux	EXPORT_SYMBOL_GPL
+0x949335b7	interruptible_sleep_on	vmlinux	EXPORT_SYMBOL
+0xda4008e6	cond_resched	vmlinux	EXPORT_SYMBOL
+0xfe1171b9	snd_i2c_device_create	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0x875a29fa	ir_rc5_decode	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xe2497f13	__ip_route_output_key	vmlinux	EXPORT_SYMBOL_GPL
+0x5e7f4920	snd_pcm_format_set_silence	vmlinux	EXPORT_SYMBOL
+0xe6488b47	cpufreq_notify_transition	vmlinux	EXPORT_SYMBOL_GPL
+0xcd9991a9	usb_usual_set_present	vmlinux	EXPORT_SYMBOL_GPL
+0x628885fa	usb_buffer_map_sg	vmlinux	EXPORT_SYMBOL
+0x06e50f10	blk_queue_invalidate_tags	vmlinux	EXPORT_SYMBOL
+0x93a6e0b2	io_schedule	vmlinux	EXPORT_SYMBOL
+0x68e22c6f	ib_create_send_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x868d1714	usb_hcd_pci_resume	vmlinux	EXPORT_SYMBOL
+0xe03724d4	cfb_fillrect	vmlinux	EXPORT_SYMBOL
+0xa6a13b37	nf_net_ipv4_netfilter_sysctl_path	vmlinux	EXPORT_SYMBOL_GPL
+0xf51814ea	__pagevec_lru_add	vmlinux	EXPORT_SYMBOL
+0x5bfdc993	tr_type_trans	vmlinux	EXPORT_SYMBOL
+0x930b35c6	i2o_cntxt_list_get	vmlinux	EXPORT_SYMBOL
+0x9491dd05	fc_attach_transport	vmlinux	EXPORT_SYMBOL
+0x55044c53	bus_register_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xad942e2c	agp_bridge	vmlinux	EXPORT_SYMBOL
+0xd44731e5	tipc_ownidentity	net/tipc/tipc	EXPORT_SYMBOL
+0xea2299d4	mlx4_srq_free	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x3a2bcef4	wireless_spy_update	vmlinux	EXPORT_SYMBOL
+0x78cb99c2	inet_listen	vmlinux	EXPORT_SYMBOL
+0xa011e1b0	register_snap_client	vmlinux	EXPORT_SYMBOL
+0x4a50ddff	skb_queue_purge	vmlinux	EXPORT_SYMBOL
+0x73692138	hpsb_make_readpacket	vmlinux	EXPORT_SYMBOL
+0x1138778b	get_unmapped_area	vmlinux	EXPORT_SYMBOL
+0x310d1bc9	tipc_detach	net/tipc/tipc	EXPORT_SYMBOL
+0x07b52e38	rtnl_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x83cae349	sata_print_link_status	vmlinux	EXPORT_SYMBOL_GPL
+0x6d43079c	platform_bus_type	vmlinux	EXPORT_SYMBOL_GPL
+0xfa3f3d4a	subsystem_unregister	vmlinux	EXPORT_SYMBOL
+0x997a10e5	blk_rq_map_user	vmlinux	EXPORT_SYMBOL
+0x0947b252	nf_ct_gre_keymap_add	net/netfilter/nf_conntrack_proto_gre	EXPORT_SYMBOL_GPL
+0x6cbdc5b5	bt_accept_unlink	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x279a49fc	d_find_alias	vmlinux	EXPORT_SYMBOL
+0x760a0f4f	yield	vmlinux	EXPORT_SYMBOL
+0x6b89c0a3	xt_check_target	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xc42bd037	ir_codes_budget_ci_old	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xa6f48281	rdma_listen	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xdeba4260	i2o_device_claim	vmlinux	EXPORT_SYMBOL
+0x1dc36131	fb_destroy_modedb	vmlinux	EXPORT_SYMBOL
+0xd8126038	fsstack_copy_attr_all	vmlinux	EXPORT_SYMBOL_GPL
+0x235f4515	acpi_processor_ffh_cstate_probe	vmlinux	EXPORT_SYMBOL_GPL
+0xc0f8ac07	genl_unregister_ops	vmlinux	EXPORT_SYMBOL
+0xf45931fa	scsi_command_normalize_sense	vmlinux	EXPORT_SYMBOL
+0xda1ec430	d_invalidate	vmlinux	EXPORT_SYMBOL
+0xa0b04675	vmalloc_32	vmlinux	EXPORT_SYMBOL
+0x33b84f74	copy_page	vmlinux	EXPORT_SYMBOL
+0xf4e6d88c	set_h245_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xace98352	nf_conntrack_hash	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4d9436d3	compat_dccp_setsockopt	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x4ade73a5	compat_dccp_getsockopt	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x17d99543	tpm_register_hardware	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x2eb2f903	drm_sman_free_key	drivers/char/drm/drm	EXPORT_SYMBOL
+0x76f70d84	input_register_handler	vmlinux	EXPORT_SYMBOL
+0xb389481f	dma_pool_free	vmlinux	EXPORT_SYMBOL
+0x010427d7	textsearch_unregister	vmlinux	EXPORT_SYMBOL
+0x28c818b5	nf_ct_helper_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xabad10c6	inet6_csk_bind_conflict	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0xa35de80f	ipv4_config	vmlinux	EXPORT_SYMBOL
+0x38d69fad	netif_carrier_on	vmlinux	EXPORT_SYMBOL
+0x97ac2c80	fib_rules_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0xead58fb9	print_hex_dump	vmlinux	EXPORT_SYMBOL
+0xb0b847ac	__bitmap_full	vmlinux	EXPORT_SYMBOL
+0x9ddf3aee	blk_queue_issue_flush_fn	vmlinux	EXPORT_SYMBOL
+0xb463a3ef	__nfa_fill	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xd08f188b	ieee80211_rts_duration	net/mac80211/mac80211	EXPORT_SYMBOL
+0xefa4699b	ip6_route_output	net/ipv6/ipv6	EXPORT_SYMBOL
+0x97fcd7ec	dccp_unhash	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xae808bac	o2net_register_handler	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x4e69fec1	__rta_fill	vmlinux	EXPORT_SYMBOL
+0x2f7c66ed	__dst_free	vmlinux	EXPORT_SYMBOL
+0x0c8a5505	dvb_ringbuffer_init	vmlinux	EXPORT_SYMBOL
+0x0900e0d6	_spin_lock	vmlinux	EXPORT_SYMBOL
+0xb050f329	init_rs	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0x6e1a4bbb	udp_hash_lock	vmlinux	EXPORT_SYMBOL
+0x22aa2603	inet_csk_destroy_sock	vmlinux	EXPORT_SYMBOL
+0x78df6bd7	no_pci_devices	vmlinux	EXPORT_SYMBOL
+0x85abc85f	strncmp	vmlinux	EXPORT_SYMBOL
+0xdc9e8130	irttp_flow_request	net/irda/irda	EXPORT_SYMBOL
+0x1e5bf8d3	dccp_reqsk_send_ack	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x20c25336	sock_kfree_s	vmlinux	EXPORT_SYMBOL
+0x3796bdcc	snd_pcm_format_little_endian	vmlinux	EXPORT_SYMBOL
+0x92ea4ae4	crc32_le	vmlinux	EXPORT_SYMBOL
+0xae577b56	dccp_rx_hist_new	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x33e0d46d	ethtool_op_get_link	vmlinux	EXPORT_SYMBOL
+0xfe4195dd	input_unregister_device	vmlinux	EXPORT_SYMBOL
+0xa2ffcbe8	sas_port_free	vmlinux	EXPORT_SYMBOL
+0x6799c7dd	cap_bprm_secureexec	vmlinux	EXPORT_SYMBOL
+0x4798337d	jbd2_journal_update_superblock	vmlinux	EXPORT_SYMBOL
+0x6859ed5d	read_cache_pages	vmlinux	EXPORT_SYMBOL
+0xef9aedfc	boot_option_idle_override	vmlinux	EXPORT_SYMBOL
+0x63343b1d	snd_usbmidi_input_stop	sound/usb/snd-usb-lib	EXPORT_SYMBOL
+0x5f735f69	ip2_loadmain	drivers/char/ip2/ip2main	EXPORT_SYMBOL
+0x53445f68	nlm_debug	vmlinux	EXPORT_SYMBOL
+0xe3063f17	ip_generic_getfrag	vmlinux	EXPORT_SYMBOL
+0x02ab9f7e	bitmap_end_sync	vmlinux	EXPORT_SYMBOL
+0xb2f9d083	i2o_status_get	vmlinux	EXPORT_SYMBOL
+0xb0a98a1e	sas_port_alloc_num	vmlinux	EXPORT_SYMBOL
+0x6f67971b	dvb_net_release	vmlinux	EXPORT_SYMBOL
+0xad425ba8	mii_nway_restart	vmlinux	EXPORT_SYMBOL
+0xe144739c	crypto_enqueue_request	vmlinux	EXPORT_SYMBOL_GPL
+0x14c2519f	crypto_dequeue_request	vmlinux	EXPORT_SYMBOL_GPL
+0x9b94fde9	fat_add_entries	vmlinux	EXPORT_SYMBOL_GPL
+0x16af5523	thaw_bdev	vmlinux	EXPORT_SYMBOL
+0x4b492e3b	videobuf_poll_stream	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xaa025a02	sk_run_filter	vmlinux	EXPORT_SYMBOL
+0x234d4755	netdev_rx_csum_fault	vmlinux	EXPORT_SYMBOL
+0xac6ea482	hpsb_iso_packet_sent	vmlinux	EXPORT_SYMBOL
+0x3b4f162e	mpt_lan_index	vmlinux	EXPORT_SYMBOL
+0xf8a621d4	devres_release_group	vmlinux	EXPORT_SYMBOL_GPL
+0x165e568f	ipv6_push_nfrag_opts	net/ipv6/ipv6	EXPORT_SYMBOL
+0xaedf16e2	ipt_register_table	net/ipv4/netfilter/ip_tables	EXPORT_SYMBOL
+0xed763a04	tda10023_attach	drivers/media/dvb/frontends/tda10023	EXPORT_SYMBOL
+0xbada7bab	tda10021_attach	drivers/media/dvb/frontends/tda10021	EXPORT_SYMBOL
+0x8b7cf41f	xdr_decode_array2	vmlinux	EXPORT_SYMBOL
+0x39738f6d	neigh_sysctl_unregister	vmlinux	EXPORT_SYMBOL
+0xe56a9336	snd_pcm_format_width	vmlinux	EXPORT_SYMBOL
+0xc8fb52ee	ata_pio_need_iordy	vmlinux	EXPORT_SYMBOL_GPL
+0x53b440bf	acpi_get_table	vmlinux	EXPORT_SYMBOL
+0xe0bf7a7e	nr_hibernates	vmlinux	EXPORT_SYMBOL_GPL
+0x3aae4d31	__scm_destroy	vmlinux	EXPORT_SYMBOL
+0x7d49988b	snd_mixer_oss_notify_callback	vmlinux	EXPORT_SYMBOL
+0xf663fc39	d_move	vmlinux	EXPORT_SYMBOL
+0xe0984e1a	ieee80211_crypt_delayed_deinit	net/ieee80211/ieee80211_crypt	EXPORT_SYMBOL
+0xb4706a75	b1_loaded	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x14d01973	rdma_reject	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x1faa8634	ipmi_get_version	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xf95aefe1	hpsb_iso_recv_flush	vmlinux	EXPORT_SYMBOL
+0x0d79dfc2	ata_bmdma_freeze	vmlinux	EXPORT_SYMBOL_GPL
+0xb6f170b6	touch_atime	vmlinux	EXPORT_SYMBOL
+0xdea022c5	ieee80211_unregister_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0x4abfe2e1	gf128mul_4k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x7184a94f	gf128mul_4k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x87bb3471	acpi_pci_irq_enable	vmlinux	EXPORT_SYMBOL
+0x7b012f7b	dibusb_read_eeprom_byte	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x3050c6a4	ib_unregister_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x01fba91f	sock_wmalloc	vmlinux	EXPORT_SYMBOL
+0x374eaa55	acpi_processor_notify_smm	vmlinux	EXPORT_SYMBOL
+0x349cba85	strchr	vmlinux	EXPORT_SYMBOL
+0x1e6d26a8	strstr	vmlinux	EXPORT_SYMBOL
+0xf890fe7f	pm_idle	vmlinux	EXPORT_SYMBOL
+0xb50a976b	mpt_proc_root_dir	vmlinux	EXPORT_SYMBOL
+0x2dd16564	arch_register_cpu	vmlinux	EXPORT_SYMBOL
+0xdbe2afee	k8_northbridges	vmlinux	EXPORT_SYMBOL
+0x1b0b9a2d	ieee80211_get_buffered_bc	net/mac80211/mac80211	EXPORT_SYMBOL
+0xff0d43b5	ppp_channel_index	drivers/net/ppp_generic	EXPORT_SYMBOL
+0xf8d64930	inet_csk_listen_stop	vmlinux	EXPORT_SYMBOL_GPL
+0x4726131a	usb_wait_anchor_empty_timeout	vmlinux	EXPORT_SYMBOL_GPL
+0xa2edaa06	pnp_release_card_device	vmlinux	EXPORT_SYMBOL
+0xb6586d66	hashbin_get_next	net/irda/irda	EXPORT_SYMBOL
+0xb1799a06	sirdev_set_dongle	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x9b2d2017	xfrm_state_lookup_byaddr	vmlinux	EXPORT_SYMBOL
+0xbc79d7c7	pskb_expand_head	vmlinux	EXPORT_SYMBOL
+0xff382f55	md_check_recovery	vmlinux	EXPORT_SYMBOL
+0x96778728	ata_bus_reset	vmlinux	EXPORT_SYMBOL_GPL
+0x3c1fdd8e	pci_match_device	vmlinux	EXPORT_SYMBOL
+0x97203300	dccp_rx_hist_add_packet	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x1f9c6c7b	i2c_release_client	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x294f6663	udplite_get_port	vmlinux	EXPORT_SYMBOL
+0xf80fe3ea	spi_display_xfer_agreement	vmlinux	EXPORT_SYMBOL
+0x5752ba84	take_over_console	vmlinux	EXPORT_SYMBOL
+0x7f5ccd46	i2c_pcf_add_bus	drivers/i2c/algos/i2c-algo-pcf	EXPORT_SYMBOL
+0x4f27a278	rtnl_link_register	vmlinux	EXPORT_SYMBOL_GPL
+0xac4ca1b0	intlog2	vmlinux	EXPORT_SYMBOL
+0x5215450f	lock_may_write	vmlinux	EXPORT_SYMBOL
+0xda928914	nmi_watchdog	vmlinux	EXPORT_SYMBOL
+0x32ebe82f	xdr_buf_read_netobj	vmlinux	EXPORT_SYMBOL
+0xd28be613	nf_nat_pptp_hook_exp_gre	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0x33d22891	nf_conntrack_hash_insert	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x3cb49af5	rt2x00mac_config	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x9a8d2b5c	cx8802_cancel_buffers	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0xd4d3dddc	dibusb_rc_keys	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x78778550	sock_wake_async	vmlinux	EXPORT_SYMBOL
+0x69005013	acpi_os_stall	vmlinux	EXPORT_SYMBOL
+0x4630234c	fat_free_clusters	vmlinux	EXPORT_SYMBOL_GPL
+0x783360d4	__set_page_dirty_buffers	vmlinux	EXPORT_SYMBOL
+0xaa8433a7	bt_sock_poll	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x42e2415f	usb_hcd_platform_shutdown	vmlinux	EXPORT_SYMBOL
+0x7bb4de17	scnprintf	vmlinux	EXPORT_SYMBOL
+0x0c5ef91b	per_cpu__vm_event_states	vmlinux	EXPORT_SYMBOL
+0x20c4f2d3	mod_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x9f1595b6	tcf_register_action	vmlinux	EXPORT_SYMBOL
+0x5d1a0fa5	blk_queue_ordered	vmlinux	EXPORT_SYMBOL
+0x87f1fa72	snd_seq_kernel_client_enqueue_blocking	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x46d814fa	lapb_connect_request	net/lapb/lapb	EXPORT_SYMBOL
+0x97a01170	orinoco_reinit_firmware	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0x8b1cba3e	rtnl_link_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x456f231d	d_alloc_anon	vmlinux	EXPORT_SYMBOL
+0xf3f6e4a0	copy_strings_kernel	vmlinux	EXPORT_SYMBOL
+0xf35cd8ea	__wait_on_bit	vmlinux	EXPORT_SYMBOL
+0xf96c2529	ieee80211_channel_to_freq	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x2fb4a605	tmsdev_init	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x04403fcf	unregister_capi_driver	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x20645642	drm_debug	drivers/char/drm/drm	EXPORT_SYMBOL
+0x5736de0e	led_trigger_register_simple	vmlinux	EXPORT_SYMBOL_GPL
+0x8923c385	iscsi_recv_pdu	vmlinux	EXPORT_SYMBOL_GPL
+0x2c5749e6	acpi_clear_gpe	vmlinux	EXPORT_SYMBOL
+0x37116608	hrtimer_get_remaining	vmlinux	EXPORT_SYMBOL_GPL
+0x0ed3479a	xt_compat_match_offset	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x985f3943	ib_get_cached_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xf3ff7ff4	tcp_enter_memory_pressure	vmlinux	EXPORT_SYMBOL
+0xe9587909	usb_unregister_notify	vmlinux	EXPORT_SYMBOL_GPL
+0xa8b1a2d0	sas_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0x76d106fa	acpi_root_dir	vmlinux	EXPORT_SYMBOL
+0x515e1ba4	dst_gpio_outb	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x86c9cd7f	arp_create	vmlinux	EXPORT_SYMBOL
+0x86ccc035	ata_bmdma_post_internal_cmd	vmlinux	EXPORT_SYMBOL_GPL
+0x7465fb77	spi_schedule_dv_device	vmlinux	EXPORT_SYMBOL
+0x32d01fec	acpi_attach_data	vmlinux	EXPORT_SYMBOL
+0xf96e9920	kblockd_flush_work	vmlinux	EXPORT_SYMBOL
+0x7e5d137f	jbd2_journal_get_create_access	vmlinux	EXPORT_SYMBOL
+0x77b01759	no_llseek	vmlinux	EXPORT_SYMBOL
+0x69ebc5e5	__percpu_populate_mask	vmlinux	EXPORT_SYMBOL_GPL
+0x378e3181	rt_mutex_timed_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x7ac420c0	cxgb3_free_stid	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x0ce1de36	flexcop_eeprom_check_mac_addr	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xebf1760f	tcp_statistics	vmlinux	EXPORT_SYMBOL
+0x59e1f7a1	rtc_irq_set_freq	vmlinux	EXPORT_SYMBOL_GPL
+0xa9323992	gfn_to_page	vmlinux	EXPORT_SYMBOL_GPL
+0xb94bbe16	eject_removable_drive	vmlinux	EXPORT_SYMBOL_GPL
+0xfcfa03ff	fb_videomode_to_modelist	vmlinux	EXPORT_SYMBOL
+0x4fd659f0	phidget_class	drivers/usb/misc/phidget	EXPORT_SYMBOL_GPL
+0xf0163763	saa7134_common_ioctl	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x61b25b07	ata_port_start	vmlinux	EXPORT_SYMBOL_GPL
+0xe3016e92	pm_send_all	vmlinux	EXPORT_SYMBOL
+0xffafdc5c	_read_unlock_irq	vmlinux	EXPORT_SYMBOL
+0x7230704b	snd_util_memhdr_new	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x36651583	blk_queue_issue_protect_fn	vmlinux	EXPORT_SYMBOL
+0x66faf98d	proc_root_driver	vmlinux	EXPORT_SYMBOL
+0x7dceceac	capable	vmlinux	EXPORT_SYMBOL
+0xc2ad2394	gameport_close	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xb544aec5	gs_got_break	drivers/char/generic_serial	EXPORT_SYMBOL
+0x16df324c	nf_afinfo	vmlinux	EXPORT_SYMBOL
+0x8898c2e7	input_set_capability	vmlinux	EXPORT_SYMBOL
+0xe8a62ddf	ps2_cmd_aborted	vmlinux	EXPORT_SYMBOL
+0xc8b57c27	autoremove_wake_function	vmlinux	EXPORT_SYMBOL
+0x1234e87e	__wake_up_sync	vmlinux	EXPORT_SYMBOL_GPL
+0x52377bf0	nf_ct_port_tuple_to_nfattr	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x539c2daf	dvb_ringbuffer_flush	vmlinux	EXPORT_SYMBOL
+0x2624f3fa	give_up_console	vmlinux	EXPORT_SYMBOL
+0x7c60d66e	getname	vmlinux	EXPORT_SYMBOL
+0xdfcb913c	snd_tea575x_init	sound/i2c/other/snd-tea575x-tuner	EXPORT_SYMBOL
+0xea4175e5	snd_tea575x_exit	sound/i2c/other/snd-tea575x-tuner	EXPORT_SYMBOL
+0xf0b421a8	nf_conntrack_helper_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xa96a9786	ivtv_vapi_result	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0xf85a14b8	rdma_resolve_addr	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x4cfe6950	snd_seq_root	vmlinux	EXPORT_SYMBOL
+0xef988e02	pcmcia_find_io_region	vmlinux	EXPORT_SYMBOL
+0xc0b713d7	mpt_reset_register	vmlinux	EXPORT_SYMBOL
+0x2214645d	snd_akm4xxx_reset	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0x0ff2b602	slhc_compress	drivers/net/slhc	EXPORT_SYMBOL
+0x1d1e307b	xfrm_calg_get_byid	vmlinux	EXPORT_SYMBOL_GPL
+0xc9e51c17	uhci_check_and_reset_hc	vmlinux	EXPORT_SYMBOL_GPL
+0xcd6687bc	usb_hc_died	vmlinux	EXPORT_SYMBOL_GPL
+0xf20dabd8	free_irq	vmlinux	EXPORT_SYMBOL
+0x9eac042a	__ioremap	vmlinux	EXPORT_SYMBOL
+0x30502172	tipc_forward_buf2port	net/tipc/tipc	EXPORT_SYMBOL
+0xc2066af0	batostr	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x1bd0aae9	usb_serial_probe	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x9633989f	ssb_bus_unregister	drivers/ssb/ssb	EXPORT_SYMBOL
+0x15c3bcd4	jbd2_journal_init_inode	vmlinux	EXPORT_SYMBOL
+0x62ef7bc1	filemap_fdatawait	vmlinux	EXPORT_SYMBOL
+0xaa748adb	p54_fill_eeprom_readback	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0xf23555a4	rpcauth_register	vmlinux	EXPORT_SYMBOL
+0x4f816e9b	snd_pcm_format_big_endian	vmlinux	EXPORT_SYMBOL
+0x7d756ebe	pci_restore_bars	vmlinux	EXPORT_SYMBOL_GPL
+0x09d44df9	in_lock_functions	vmlinux	EXPORT_SYMBOL
+0x94005c75	cxgb3_insert_tid	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0xf50352ab	DoCMilPlus_init	drivers/mtd/devices/doc2001plus	EXPORT_SYMBOL_GPL
+0x85ad40e5	rpc_wake_up	vmlinux	EXPORT_SYMBOL
+0x8fb4490f	kernel_getpeername	vmlinux	EXPORT_SYMBOL
+0x764ddf1a	mptscsih_timer_expired	vmlinux	EXPORT_SYMBOL
+0x74a1a863	sas_port_add_phy	vmlinux	EXPORT_SYMBOL
+0x8b49a23f	timeval_usec_diff	vmlinux	EXPORT_SYMBOL
+0xf55c1f79	platform_driver_probe	vmlinux	EXPORT_SYMBOL_GPL
+0xcc6ab305	is_dock_device	vmlinux	EXPORT_SYMBOL_GPL
+0x879516fe	sysfs_chmod_file	vmlinux	EXPORT_SYMBOL_GPL
+0x1c7ac8d1	rt_mutex_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x04e65de2	dib7000p_i2c_enumeration	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x7eb1090d	dib7000m_i2c_enumeration	drivers/media/dvb/frontends/dib7000m	EXPORT_SYMBOL
+0x74aa63fd	ib_sa_service_rec_query	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x48cb1801	alloc_fcdev	vmlinux	EXPORT_SYMBOL
+0xa82d2e42	input_event	vmlinux	EXPORT_SYMBOL
+0xd1de6136	i2o_driver_unregister	vmlinux	EXPORT_SYMBOL
+0xeaf9920b	simple_pin_fs	vmlinux	EXPORT_SYMBOL
+0x5635a60a	vmalloc_user	vmlinux	EXPORT_SYMBOL
+0x74cc1cbe	unregister_cpu_notifier	vmlinux	EXPORT_SYMBOL
+0xaae5b8e9	schedule_delayed_work	vmlinux	EXPORT_SYMBOL
+0x5b16dda4	rxrpc_kernel_end_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xff64de38	tc_classify	vmlinux	EXPORT_SYMBOL
+0xa9ebbcf0	sock_no_sendpage	vmlinux	EXPORT_SYMBOL
+0x741f1f6e	hpet_register	vmlinux	EXPORT_SYMBOL
+0xfc7f8c8e	ivtv_udma_prepare	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x447677b8	get_current_tty	vmlinux	EXPORT_SYMBOL_GPL
+0x4c1182cb	bitmap_scnprintf	vmlinux	EXPORT_SYMBOL
+0xec35149e	snd_ac97_write_cache	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x0f6a5d32	snd_midi_event_no_status	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0xbe307c6e	cyber2000fb_attach	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0x0cc3ede5	cyber2000fb_detach	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0xe531d05b	nand_wait_ready	drivers/mtd/nand/nand	EXPORT_SYMBOL_GPL
+0xbc1e3a5b	edac_device_alloc_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x67324bdd	kernel_sendmsg	vmlinux	EXPORT_SYMBOL
+0xf8c29e04	kernel_getsockname	vmlinux	EXPORT_SYMBOL
+0x3971b4df	snd_ecards_limit	vmlinux	EXPORT_SYMBOL
+0x7381e287	uart_register_driver	vmlinux	EXPORT_SYMBOL
+0xac3b3cee	__bitmap_and	vmlinux	EXPORT_SYMBOL
+0x25a9a932	tipc_send_buf2port	net/tipc/tipc	EXPORT_SYMBOL
+0x72d6a1ce	phy_disable_interrupts	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x85f09690	b1_irq_table	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x6bfc09b7	ib_destroy_fmr_pool	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x96e0dde7	xfrm_alloc_spi	vmlinux	EXPORT_SYMBOL
+0x1472f342	crypto_blkcipher_type	vmlinux	EXPORT_SYMBOL_GPL
+0x4502c65a	asc2ax	net/ax25/ax25	EXPORT_SYMBOL
+0x4dfd0df3	ib_query_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc1f9bf4a	nf_log_packet	vmlinux	EXPORT_SYMBOL
+0xaf3c3cc4	qdisc_tree_decrease_qlen	vmlinux	EXPORT_SYMBOL
+0xd384b48d	dev_remove_pack	vmlinux	EXPORT_SYMBOL
+0x40aaf339	usb_autopm_set_interface	vmlinux	EXPORT_SYMBOL_GPL
+0xea4152ff	dma_region_init	vmlinux	EXPORT_SYMBOL
+0x0ad43343	ata_eh_freeze_port	vmlinux	EXPORT_SYMBOL_GPL
+0xddab153c	dmam_pool_destroy	vmlinux	EXPORT_SYMBOL
+0xd2c87401	blkcipher_walk_virt	vmlinux	EXPORT_SYMBOL_GPL
+0x5da5ac87	posix_lock_file	vmlinux	EXPORT_SYMBOL
+0xf4cadf59	set_page_dirty	vmlinux	EXPORT_SYMBOL
+0xc52de306	video_device_alloc	drivers/media/video/videodev	EXPORT_SYMBOL
+0xde9360ba	totalram_pages	vmlinux	EXPORT_SYMBOL
+0x81e275ec	nf_conntrack_l4proto_udp4	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x489a249b	mlx4_INIT_PORT	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xf69519c5	sm501_modify_reg	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x7e7a1248	udp_disconnect	vmlinux	EXPORT_SYMBOL
+0xf72d319c	dev_mc_unsync	vmlinux	EXPORT_SYMBOL
+0x9aba509c	pcmcia_socket_dev_suspend	vmlinux	EXPORT_SYMBOL
+0x23f0a2c8	nfs4_acl_nfsv4_to_posix	vmlinux	EXPORT_SYMBOL
+0x2f32d4da	xt_compat_lock	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xaeea0069	acpi_run_oshp	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x57abfbd8	v4l2_chip_match_host	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xc39c5244	drm_ati_pcigart_init	drivers/char/drm/drm	EXPORT_SYMBOL
+0xfb0443fb	acpi_get_parent	vmlinux	EXPORT_SYMBOL
+0x0fa94b89	fb_show_logo	vmlinux	EXPORT_SYMBOL
+0xf270c775	fb_pan_display	vmlinux	EXPORT_SYMBOL
+0x29148da9	journal_get_write_access	vmlinux	EXPORT_SYMBOL
+0x9de2425f	ib_sa_free_multicast	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x7b5d4b7a	ib_is_mad_class_rmpp	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xe5919cb1	xdr_encode_opaque	vmlinux	EXPORT_SYMBOL
+0x304ae249	rtc_class_close	vmlinux	EXPORT_SYMBOL_GPL
+0xd532d97f	iscsi_session_recovery_timedout	vmlinux	EXPORT_SYMBOL_GPL
+0x2fe104ed	snd_rawmidi_new	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x3820da52	cx88_set_stereo	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x6d4a48ad	b1_parse_version	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xa33d4dbf	ib_dereg_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x0b9dc25a	svc_max_payload	vmlinux	EXPORT_SYMBOL_GPL
+0x2bdcb4ca	__sk_stream_mem_reclaim	vmlinux	EXPORT_SYMBOL
+0x4e354f34	parse_mtd_partitions	vmlinux	EXPORT_SYMBOL_GPL
+0x8a4085b3	devres_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0xcc4de60c	sysdev_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xdc14eda7	pci_pci_problems	vmlinux	EXPORT_SYMBOL
+0xe0ea4469	blk_queue_stack_limits	vmlinux	EXPORT_SYMBOL
+0x91e1aa52	ll_back_merge_fn	vmlinux	EXPORT_SYMBOL
+0xb9b16c0e	free_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0x2e75b744	cpu_to_node	vmlinux	EXPORT_SYMBOL
+0x47f4d08e	nf_conntrack_free	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x9feaf287	sonet_subtract_stats	net/atm/atm	EXPORT_SYMBOL
+0x7936f5b1	usbvideo_DeinterlaceFrame	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0xe03df2ce	udp_lib_getsockopt	vmlinux	EXPORT_SYMBOL
+0x072e40ff	udp_lib_setsockopt	vmlinux	EXPORT_SYMBOL
+0xa2332cf3	sk_send_sigurg	vmlinux	EXPORT_SYMBOL
+0x121b1cd5	csr1212_read	vmlinux	EXPORT_SYMBOL
+0x35b76613	ata_exec_command	vmlinux	EXPORT_SYMBOL_GPL
+0x6d6a55e8	ata_eh_thaw_port	vmlinux	EXPORT_SYMBOL_GPL
+0x158cf4db	pnp_is_active	vmlinux	EXPORT_SYMBOL
+0xc890ea26	snd_vx_dsp_load	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x9e9d70f5	hashbin_remove	net/irda/irda	EXPORT_SYMBOL
+0x76006fd4	atalk_find_dev_addr	net/appletalk/appletalk	EXPORT_SYMBOL
+0x31c650c6	drop_super	vmlinux	EXPORT_SYMBOL
+0xdd132261	printk	vmlinux	EXPORT_SYMBOL
+0x8a0d62e8	rfkill_free	net/rfkill/rfkill	EXPORT_SYMBOL
+0x650128e7	br_fdb_get_hook	vmlinux	EXPORT_SYMBOL
+0xa74dee90	br_fdb_put_hook	vmlinux	EXPORT_SYMBOL
+0x8b72c157	sk_alloc	vmlinux	EXPORT_SYMBOL
+0xffa60160	sata_std_hardreset	vmlinux	EXPORT_SYMBOL_GPL
+0xee7956e1	bus_unregister_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xc2ea15bd	remove_inode_hash	vmlinux	EXPORT_SYMBOL
+0x12000c74	try_to_release_page	vmlinux	EXPORT_SYMBOL
+0x76ecda72	synchronize_srcu	vmlinux	EXPORT_SYMBOL_GPL
+0x7b3cee43	hci_conn_switch_role	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xa883fcc2	klist_iter_init	vmlinux	EXPORT_SYMBOL_GPL
+0xacfec210	rpcauth_lookup_credcache	vmlinux	EXPORT_SYMBOL
+0x52b69439	i2o_driver_notify_controller_remove_all	vmlinux	EXPORT_SYMBOL
+0xb0518ebe	spi_dv_device	vmlinux	EXPORT_SYMBOL
+0x4ccbb8e2	platform_driver_register	vmlinux	EXPORT_SYMBOL_GPL
+0xe3873a20	pci_disable_msix	vmlinux	EXPORT_SYMBOL
+0x74419ce9	kobject_add	vmlinux	EXPORT_SYMBOL
+0xa9e1c51b	vp3054_i2c_remove	drivers/media/video/cx88/cx88-vp3054-i2c	EXPORT_SYMBOL
+0xa5858c2f	hid_ff_init	vmlinux	EXPORT_SYMBOL_GPL
+0x562ab30d	platform_driver_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x679d34c1	parport_register_device	vmlinux	EXPORT_SYMBOL
+0x9009602a	acpi_bus_get_ejd	vmlinux	EXPORT_SYMBOL_GPL
+0x15249dc1	agp_generic_alloc_user	vmlinux	EXPORT_SYMBOL
+0xdf20c72b	br_should_route_hook	net/bridge/bridge	EXPORT_SYMBOL
+0x95709b83	iw_handler_get_thrspy	vmlinux	EXPORT_SYMBOL
+0x803b74ba	tcp_v4_calc_md5_hash	vmlinux	EXPORT_SYMBOL
+0x432cc573	gnet_stats_copy_queue	vmlinux	EXPORT_SYMBOL
+0xfafd830e	usb_get_urb	vmlinux	EXPORT_SYMBOL
+0x6e8712db	hpsb_packet_received	vmlinux	EXPORT_SYMBOL
+0x74a5a698	dvb_filter_pes2ts_init	vmlinux	EXPORT_SYMBOL
+0x53103a06	pci_scan_single_device	vmlinux	EXPORT_SYMBOL
+0xfa26d92f	simple_dir_operations	vmlinux	EXPORT_SYMBOL
+0xcee290be	tipc_forward2name	net/tipc/tipc	EXPORT_SYMBOL
+0xec8beba6	nf_ct_expect_hash	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xc3eb5494	rt2x00mac_config_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x6403e338	tcp_memory_pressure	vmlinux	EXPORT_SYMBOL
+0x25e810be	scsi_alloc_sgtable	vmlinux	EXPORT_SYMBOL
+0xd995fee4	agp_generic_remove_memory	vmlinux	EXPORT_SYMBOL
+0x4e733d36	rt2x00pci_rxdone	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x4c925f00	nand_release	drivers/mtd/nand/nand	EXPORT_SYMBOL_GPL
+0xcb19f6d6	ip_statistics	vmlinux	EXPORT_SYMBOL
+0x96b3829b	snd_register_oss_device	vmlinux	EXPORT_SYMBOL
+0x191e88cf	snd_dma_pointer	vmlinux	EXPORT_SYMBOL
+0x24a94b26	snd_info_get_line	vmlinux	EXPORT_SYMBOL
+0xadaa2657	cpufreq_register_notifier	vmlinux	EXPORT_SYMBOL
+0xcf7bcb01	scsi_queue_work	vmlinux	EXPORT_SYMBOL_GPL
+0xb3b2f280	elv_dispatch_sort	vmlinux	EXPORT_SYMBOL
+0x114741c5	elv_add_request	vmlinux	EXPORT_SYMBOL
+0xf50cf204	crypto_get_attr_alg	vmlinux	EXPORT_SYMBOL_GPL
+0xf346231f	seq_list_start_head	vmlinux	EXPORT_SYMBOL
+0xe52947e7	__phys_addr	vmlinux	EXPORT_SYMBOL
+0x7c28b9d8	unregister_hdlc_device	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x5ba67d1f	netif_device_detach	vmlinux	EXPORT_SYMBOL
+0x22db8daf	netif_device_attach	vmlinux	EXPORT_SYMBOL
+0xafbc6af9	dm_table_unplug_all	vmlinux	EXPORT_SYMBOL
+0x1be69678	mptscsih_TMHandler	vmlinux	EXPORT_SYMBOL
+0x25243beb	device_rename	vmlinux	EXPORT_SYMBOL_GPL
+0xda75829c	fbcon_rotate_ud	vmlinux	EXPORT_SYMBOL
+0xa763b78b	fbcon_rotate_cw	vmlinux	EXPORT_SYMBOL
+0xb143b41c	simple_attr_read	vmlinux	EXPORT_SYMBOL_GPL
+0x58dfd5be	relay_flush	vmlinux	EXPORT_SYMBOL_GPL
+0xde387b59	snd_sb16dsp_pcm	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0x71ecc67f	dccp_rx_hist_find_data_packet	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0xe2bcd460	rt2x00mac_get_tx_stats	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xac66518b	saa7134_dmasound_init	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x905db932	saa7134_dmasound_exit	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x101192d3	saa7146_vv_init	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x444779c4	nla_find	vmlinux	EXPORT_SYMBOL
+0x8d3189d0	kernel_bind	vmlinux	EXPORT_SYMBOL
+0xcc248d26	serial8250_suspend_port	vmlinux	EXPORT_SYMBOL
+0x4e6e8ea7	fg_console	vmlinux	EXPORT_SYMBOL
+0xd913e508	kernel_read	vmlinux	EXPORT_SYMBOL
+0x83d5bfa2	vfs_read	vmlinux	EXPORT_SYMBOL
+0x65541302	__devm_release_region	vmlinux	EXPORT_SYMBOL
+0xa8813189	__nvram_write_byte	drivers/char/nvram	EXPORT_SYMBOL
+0x36139a51	memcpy_fromiovec	vmlinux	EXPORT_SYMBOL
+0x479cc58c	parport_write	vmlinux	EXPORT_SYMBOL
+0xfb9b2de3	tty_ldisc_get	vmlinux	EXPORT_SYMBOL_GPL
+0xf8b1a631	pci_bus_find_capability	vmlinux	EXPORT_SYMBOL
+0xd97c9c4d	blk_queue_prep_rq	vmlinux	EXPORT_SYMBOL
+0x5bf109d3	rxrpc_kernel_send_data	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x165b9298	videobuf_dma_map	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x21f7b034	pcmcia_socket_dev_resume	vmlinux	EXPORT_SYMBOL
+0x0fd88df8	sysdev_class_register	vmlinux	EXPORT_SYMBOL_GPL
+0xab004581	journal_unlock_updates	vmlinux	EXPORT_SYMBOL
+0x0eb75e79	clear_dyn_pageflags	vmlinux	EXPORT_SYMBOL_GPL
+0x87f0af22	videobuf_streamon	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xd9069f73	drm_ati_pcigart_cleanup	drivers/char/drm/drm	EXPORT_SYMBOL
+0xf0f87885	hpsb_iso_xmit_queue_packet	vmlinux	EXPORT_SYMBOL
+0x39050855	agp_collect_device_status	vmlinux	EXPORT_SYMBOL
+0x5c857e34	idr_remove_all	vmlinux	EXPORT_SYMBOL
+0xf3a8366a	bio_alloc	vmlinux	EXPORT_SYMBOL
+0x6c098573	mntput_no_expire	vmlinux	EXPORT_SYMBOL
+0x93fca811	__get_free_pages	vmlinux	EXPORT_SYMBOL
+0x3e2d5c53	find_task_by_pid_type	vmlinux	EXPORT_SYMBOL
+0xbb189cad	disallow_signal	vmlinux	EXPORT_SYMBOL
+0xb531ed4b	nf_ct_expect_related	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x1b6f8e09	rawv6_mh_filter_register	net/ipv6/ipv6	EXPORT_SYMBOL
+0xdbcd416e	sysctl_ip_nonlocal_bind	vmlinux	EXPORT_SYMBOL
+0x36f2874d	__tcp_get_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0xc1bcd376	iscsi_pool_init	vmlinux	EXPORT_SYMBOL_GPL
+0x083a017f	pciserial_init_ports	vmlinux	EXPORT_SYMBOL_GPL
+0xef7c9464	ieee80211_start_queues	net/mac80211/mac80211	EXPORT_SYMBOL
+0xe74aaba5	rawv6_mh_filter_unregister	net/ipv6/ipv6	EXPORT_SYMBOL
+0xc0ad2722	stv0297_attach	drivers/media/dvb/frontends/stv0297	EXPORT_SYMBOL
+0xa2fd4515	fb_deferred_io_init	vmlinux	EXPORT_SYMBOL_GPL
+0xa553504c	blk_queue_resize_tags	vmlinux	EXPORT_SYMBOL
+0xfe26fc7c	nr_node_ids	vmlinux	EXPORT_SYMBOL
+0x989f7b3d	nf_ct_l4proto_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4251b29c	nf_ct_l3proto_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xb6f383de	cycx_poke	drivers/net/wan/cycx_drv	EXPORT_SYMBOL
+0xa216d096	ipv4_specific	vmlinux	EXPORT_SYMBOL
+0x779e0386	hippi_type_trans	vmlinux	EXPORT_SYMBOL
+0xe0e67c09	proto_unregister	vmlinux	EXPORT_SYMBOL
+0xde134c69	storage_usb_ids	vmlinux	EXPORT_SYMBOL_GPL
+0x1d2e54af	register_mtd_chip_driver	vmlinux	EXPORT_SYMBOL
+0xed0bd955	parport_ieee1284_write_compat	vmlinux	EXPORT_SYMBOL
+0x75467c16	ipv6_get_saddr	net/ipv6/ipv6	EXPORT_SYMBOL
+0x5c36f0d5	dib3000mc_i2c_enumeration	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0xb19fda8d	capi_cmd2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xcce03139	deregister_mtd_parser	vmlinux	EXPORT_SYMBOL_GPL
+0x0bc0e50c	__any_online_cpu	vmlinux	EXPORT_SYMBOL
+0x35a952ef	jbd2_journal_release_buffer	vmlinux	EXPORT_SYMBOL
+0xc690c649	lookup_instantiate_filp	vmlinux	EXPORT_SYMBOL_GPL
+0x9c45558e	tipc_enable_bearer	net/tipc/tipc	EXPORT_SYMBOL
+0x1cae2e66	register_ip_vs_app	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0xcfcf0b96	fb_sys_write	drivers/video/fb_sys_fops	EXPORT_SYMBOL_GPL
+0x4756783d	dm_table_put	vmlinux	EXPORT_SYMBOL
+0xf749534a	gen_pool_free	vmlinux	EXPORT_SYMBOL
+0x93619db5	register_page_fault_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x51939f54	snd_util_memhdr_free	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x1e55b900	lapb_data_request	net/lapb/lapb	EXPORT_SYMBOL
+0x9a522412	ieee80211_wx_set_encodeext	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0xe55f2a68	ieee80211_wx_get_encodeext	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x5072d015	ib_send_cm_apr	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x0dab478c	sata_scr_write	vmlinux	EXPORT_SYMBOL_GPL
+0xca0e2d40	acpi_get_vendor_resource	vmlinux	EXPORT_SYMBOL
+0xacf4d843	match_strdup	vmlinux	EXPORT_SYMBOL
+0x6de6bf83	radix_tree_lookup	vmlinux	EXPORT_SYMBOL
+0x35efdfd5	rt_mutex_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0x44a174a5	neigh_seq_next	vmlinux	EXPORT_SYMBOL
+0x022e6ae9	acpi_os_sleep	vmlinux	EXPORT_SYMBOL
+0xd472c29b	bsg_register_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x93b5f75e	vfs_rename	vmlinux	EXPORT_SYMBOL
+0x0c37e550	generic_ro_fops	vmlinux	EXPORT_SYMBOL
+0xd09b5d6b	hpsb_set_hostinfo	vmlinux	EXPORT_SYMBOL
+0x981e9809	iscsi_free_session	vmlinux	EXPORT_SYMBOL_GPL
+0xc5d13b1e	kthread_bind	vmlinux	EXPORT_SYMBOL
+0x833a3e07	snd_midi_channel_set_clear	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0x9684a776	ipv6_setsockopt	net/ipv6/ipv6	EXPORT_SYMBOL
+0x695e2b34	usb_serial_port_softint	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x841252a1	del_mtd_blktrans_dev	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0xa9f01119	videobuf_alloc	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x4327f0d5	memset_io	vmlinux	EXPORT_SYMBOL
+0xbcaa76b6	dccp_getsockopt	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xda903983	sm501_gpio_get	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0xd0d6f4a5	cache_register	vmlinux	EXPORT_SYMBOL
+0x776ad2b6	inetdev_by_index	vmlinux	EXPORT_SYMBOL
+0xe1637543	bt_sock_wait_state	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x90d25159	filemap_fdatawrite	vmlinux	EXPORT_SYMBOL
+0x7166baed	cx22700_attach	drivers/media/dvb/frontends/cx22700	EXPORT_SYMBOL
+0x72ffb39b	ipmi_request_settime	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xd1f91bcd	dev_base_lock	vmlinux	EXPORT_SYMBOL
+0xaa1a406e	mptscsih_event_process	vmlinux	EXPORT_SYMBOL
+0xd25d4f74	console_blank_hook	vmlinux	EXPORT_SYMBOL
+0x568c7310	bio_hw_segments	vmlinux	EXPORT_SYMBOL
+0xb58d88c0	audit_get_loginuid	vmlinux	EXPORT_SYMBOL
+0x0ebcf563	xt_request_find_target	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xa31ec7ea	hdlcdrv_register	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0x6b6dc1ac	cx88_core_get	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x1ac69421	mptscsih_resume	vmlinux	EXPORT_SYMBOL
+0xab295ac9	sg_scsi_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0x86909c9a	file_fsync	vmlinux	EXPORT_SYMBOL
+0x5b69f774	get_sb_bdev	vmlinux	EXPORT_SYMBOL
+0x3037658e	sis_malloc	drivers/video/sis/sisfb	EXPORT_SYMBOL
+0xc808a96a	tifm_free_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xf16d985c	dib3000mc_get_tuner_i2c_master	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0x93e7d16b	gnet_stats_finish_copy	vmlinux	EXPORT_SYMBOL
+0xfe7bde5e	dmi_find_device	vmlinux	EXPORT_SYMBOL
+0xcc76b675	register_md_personality	vmlinux	EXPORT_SYMBOL
+0x5b4b6b4e	dma_pool_create	vmlinux	EXPORT_SYMBOL
+0x4edd72f7	block_all_signals	vmlinux	EXPORT_SYMBOL
+0x43c89ef4	ir_decode_biphase	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x664a0dbc	ib_destroy_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x8f3aeada	ib_destroy_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x1e107e07	usb_hcd_pci_probe	vmlinux	EXPORT_SYMBOL
+0xc4f5a37d	dma_pool_destroy	vmlinux	EXPORT_SYMBOL
+0x11394ff7	tty_name	vmlinux	EXPORT_SYMBOL
+0xb20026a8	ebt_register_match	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0x13370c9f	power_supply_register	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x7eecfbed	kvm_emulator_want_group7_invlpg	vmlinux	EXPORT_SYMBOL_GPL
+0x9ede7a43	destroy_workqueue	vmlinux	EXPORT_SYMBOL_GPL
+0x3830690e	call_usermodehelper_pipe	vmlinux	EXPORT_SYMBOL
+0xc4ce6189	idle_notifier_unregister	vmlinux	EXPORT_SYMBOL
+0xbf6d8f34	inet6_csk_reqsk_queue_hash_add	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0xcd3fcb1f	mptscsih_host_reset	vmlinux	EXPORT_SYMBOL
+0xbbe2a73e	ata_ehi_push_desc	vmlinux	EXPORT_SYMBOL_GPL
+0xbdb2efcd	do_SAK	vmlinux	EXPORT_SYMBOL
+0x1888c4aa	pci_save_state	vmlinux	EXPORT_SYMBOL
+0x167a97bb	fat_get_dotdot_entry	vmlinux	EXPORT_SYMBOL_GPL
+0xb194aaf1	check_disk_change	vmlinux	EXPORT_SYMBOL
+0x72216fa9	param_get_uint	vmlinux	EXPORT_SYMBOL
+0xfd801488	cx88_free_buffer	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xf36d68e7	i2o_cntxt_list_get_ptr	vmlinux	EXPORT_SYMBOL
+0xbef37114	sas_rphy_add	vmlinux	EXPORT_SYMBOL
+0x49b4a1f9	elv_register	vmlinux	EXPORT_SYMBOL_GPL
+0xd193106a	page_put_link	vmlinux	EXPORT_SYMBOL
+0x70196ffb	ivtv_cards_active	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x946559ca	sp8870_attach	drivers/media/dvb/frontends/sp8870	EXPORT_SYMBOL
+0x466dac52	rpc_sleep_on	vmlinux	EXPORT_SYMBOL
+0xb6aeb661	ata_id_c_string	vmlinux	EXPORT_SYMBOL_GPL
+0xe3b5dd6f	pci_enable_msi	vmlinux	EXPORT_SYMBOL
+0x8a6e43f5	toi_lowlevel_builtin	vmlinux	EXPORT_SYMBOL_GPL
+0x6c252d29	tfrc_calc_x_reverse_lookup	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0xb3c67171	km_state_expired	vmlinux	EXPORT_SYMBOL
+0x883f143e	hid_input_field	vmlinux	EXPORT_SYMBOL_GPL
+0xb0e10781	get_option	vmlinux	EXPORT_SYMBOL
+0x89d70437	nf_ct_gre_keymap_destroy	net/netfilter/nf_conntrack_proto_gre	EXPORT_SYMBOL_GPL
+0xce19bac5	register_inet6addr_notifier	net/ipv6/ipv6	EXPORT_SYMBOL
+0x454d8032	flexcop_dma_xfer_control	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x736e2576	inet_accept	vmlinux	EXPORT_SYMBOL
+0x2dedc4c2	acpi_format_exception	vmlinux	EXPORT_SYMBOL
+0xd070f00b	unbind_con_driver	vmlinux	EXPORT_SYMBOL
+0x479bf5ce	pci_set_consistent_dma_mask	vmlinux	EXPORT_SYMBOL
+0xa7de6353	up_read	vmlinux	EXPORT_SYMBOL
+0x815f2897	empty_zero_page	vmlinux	EXPORT_SYMBOL
+0x455aba39	nfnetlink_subsys_register	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xaee42a78	__pskb_pull_tail	vmlinux	EXPORT_SYMBOL
+0x54cd2d54	cpufreq_frequency_table_verify	vmlinux	EXPORT_SYMBOL_GPL
+0x4300ab0b	tty_wait_until_sent	vmlinux	EXPORT_SYMBOL
+0xa57f0a13	bioset_free	vmlinux	EXPORT_SYMBOL
+0xb116807f	vfs_lstat	vmlinux	EXPORT_SYMBOL
+0x306bd3c3	vfs_fstat	vmlinux	EXPORT_SYMBOL
+0xb32242d3	dma_spin_lock	vmlinux	EXPORT_SYMBOL
+0x20bc3470	orderly_poweroff	vmlinux	EXPORT_SYMBOL_GPL
+0xa5cc52e0	pcmcia_unregister_driver	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x772a30a2	ir_codes_nebula	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xa598e29c	vesa_modes	vmlinux	EXPORT_SYMBOL
+0x759ee236	dccp_shutdown	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x5bee6d8d	attach_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x11fa194b	ttpci_budget_irq10_handler	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x1d9443c6	rdma_accept	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x63cdcea7	__netif_schedule	vmlinux	EXPORT_SYMBOL
+0xc5d9c46c	agp_try_unsupported_boot	vmlinux	EXPORT_SYMBOL
+0xc5534d64	ioread16	vmlinux	EXPORT_SYMBOL
+0xf64dbe43	generic_fillattr	vmlinux	EXPORT_SYMBOL
+0x183fa88b	mempool_alloc_slab	vmlinux	EXPORT_SYMBOL
+0x40f794f1	param_set_invbool	vmlinux	EXPORT_SYMBOL
+0x5397b1e7	saa7146_setgpio	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x02844e48	rdma_bind_addr	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xe57c0308	i2c_register_driver	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xb29c8dec	edac_pci_find	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x3097ca07	cpuidle_unregister_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x8d0d3978	usb_reset_composite_device	vmlinux	EXPORT_SYMBOL
+0x2f2f2213	pci_bus_alloc_resource	vmlinux	EXPORT_SYMBOL
+0x3fddf3af	d_instantiate_unique	vmlinux	EXPORT_SYMBOL
+0x2b795e73	isl6421_attach	drivers/media/dvb/frontends/isl6421	EXPORT_SYMBOL
+0xa24cf033	ib_free_recv_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x3af2b962	svc_drop	vmlinux	EXPORT_SYMBOL
+0x96a74f34	sata_scr_valid	vmlinux	EXPORT_SYMBOL_GPL
+0x03b4f038	jbd2_journal_forget	vmlinux	EXPORT_SYMBOL
+0x7b9eb732	mutex_lock_interruptible	vmlinux	EXPORT_SYMBOL
+0x69927dff	try_acquire_console_sem	vmlinux	EXPORT_SYMBOL
+0xedb0544a	ccid_unregister	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xef1b86d7	cx88_enum_input	drivers/media/video/cx88/cx8800	EXPORT_SYMBOL
+0x275996da	edac_mc_alloc	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x1f61e90a	skb_clone	vmlinux	EXPORT_SYMBOL
+0x44a65d5c	lock_policy_rwsem_read	vmlinux	EXPORT_SYMBOL_GPL
+0x0487f831	fb_find_best_display	vmlinux	EXPORT_SYMBOL
+0xe861d77f	setup_arg_pages	vmlinux	EXPORT_SYMBOL
+0x8135c5fb	dccp_tx_hist_delete	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0xf5165184	sysctl_jiffies	vmlinux	EXPORT_SYMBOL
+0x65d85bbb	snd_soc_register_card	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x7b8699eb	snd_seq_event_port_detach	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x7cf953dd	tipc_send_buf_fast	net/tipc/tipc	EXPORT_SYMBOL
+0x61aaed74	ssb_device_enable	drivers/ssb/ssb	EXPORT_SYMBOL
+0x8a46d1c3	phy_ethtool_sset	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xee6171e8	phy_ethtool_gset	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xa2c12561	ib_query_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc34efe27	snmp_fold_field	vmlinux	EXPORT_SYMBOL_GPL
+0x0ded1ee1	net_statistics	vmlinux	EXPORT_SYMBOL
+0xde6b7ab0	tcp_init_xmit_timers	vmlinux	EXPORT_SYMBOL
+0x0ea019ec	jbd2_journal_start	vmlinux	EXPORT_SYMBOL
+0x16cd7176	dm_pg_init_complete	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0x97d59ecb	ata_host_alloc_pinfo	vmlinux	EXPORT_SYMBOL_GPL
+0x6f4ca149	ata_pci_prepare_sff_host	vmlinux	EXPORT_SYMBOL_GPL
+0x52f0ba1d	bio_uncopy_user	vmlinux	EXPORT_SYMBOL
+0xb2302063	make_bad_inode	vmlinux	EXPORT_SYMBOL
+0x4c17be4d	vfs_lock_file	vmlinux	EXPORT_SYMBOL_GPL
+0x4196c38b	hermes_write_ltv	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0xd4b2339f	videobuf_dma_init_kernel	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x96f9d2f4	b1_interrupt	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x32765069	gss_mech_unregister	vmlinux	EXPORT_SYMBOL
+0xf5ce9811	tcp_memory_allocated	vmlinux	EXPORT_SYMBOL
+0xd3794eec	ata_data_xfer	vmlinux	EXPORT_SYMBOL_GPL
+0x9253009c	jbd2_journal_force_commit_nested	vmlinux	EXPORT_SYMBOL
+0x3a2068b7	seq_release_private	vmlinux	EXPORT_SYMBOL
+0x67136e3c	dccp_tx_hist_find_entry	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x672c9d44	iTCO_vendor_pre_keepalive	drivers/char/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x42dc4fbc	snd_ctl_remove	vmlinux	EXPORT_SYMBOL
+0x130ecd23	hpsb_iso_wake	vmlinux	EXPORT_SYMBOL
+0xb08ba4bd	ata_pci_remove_one	vmlinux	EXPORT_SYMBOL_GPL
+0x82e59756	blk_max_pfn	vmlinux	EXPORT_SYMBOL
+0x19ac10cd	vfs_removexattr	vmlinux	EXPORT_SYMBOL_GPL
+0x91d6536d	__mutex_init	vmlinux	EXPORT_SYMBOL
+0x6bbda771	rtc_set_time	vmlinux	EXPORT_SYMBOL_GPL
+0x324705fc	pcix_get_mmrbc	vmlinux	EXPORT_SYMBOL
+0xc04376f5	jbd2_journal_check_used_features	vmlinux	EXPORT_SYMBOL
+0xeefd49b3	tipc_get_handle	net/tipc/tipc	EXPORT_SYMBOL
+0xb905ad82	icmpv6_err_convert	net/ipv6/ipv6	EXPORT_SYMBOL
+0xff729bea	cx2341x_update	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x8e329b71	auth_domain_lookup	vmlinux	EXPORT_SYMBOL
+0xc4f5aa7d	serial8250_register_port	vmlinux	EXPORT_SYMBOL
+0x4d93f326	fb_get_mode	vmlinux	EXPORT_SYMBOL
+0xaca2bda6	do_sync_write	vmlinux	EXPORT_SYMBOL
+0x657b6b5a	vfs_readv	vmlinux	EXPORT_SYMBOL
+0x70b485a4	snd_emu10k1_synth_alloc	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x5575b124	ssb_bus_pcibus_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0x2d8126d1	srp_transfer_data	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0x9e54a5b6	mmc_detect_change	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xc466ddff	search_binary_handler	vmlinux	EXPORT_SYMBOL
+0xf4ab91a8	rt_mutex_trylock	vmlinux	EXPORT_SYMBOL_GPL
+0x1f0cb5bf	pm_power_off_prepare	vmlinux	EXPORT_SYMBOL
+0x7a6ba5f7	cpufreq_freq_attr_scaling_available_freqs	vmlinux	EXPORT_SYMBOL_GPL
+0xecf8d552	usb_remove_hcd	vmlinux	EXPORT_SYMBOL
+0x2d9f2ce3	sched_clock_idle_wakeup_event	vmlinux	EXPORT_SYMBOL_GPL
+0x44aaf30f	tsc_khz	vmlinux	EXPORT_SYMBOL
+0x6d334118	__get_user_8	vmlinux	EXPORT_SYMBOL
+0xb8e7ce2c	__put_user_8	vmlinux	EXPORT_SYMBOL
+0x58a70f46	hostap_init_data	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x2e10fe12	mlx4_CLOSE_PORT	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x2f47bd9b	videobuf_streamoff	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x8fdbede1	cx2341x_fill_defaults	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0xc9afd48c	tcp_disconnect	vmlinux	EXPORT_SYMBOL
+0xf5996d29	put_device	vmlinux	EXPORT_SYMBOL_GPL
+0x34883024	mark_info_dirty	vmlinux	EXPORT_SYMBOL
+0x852c7d4b	bio_pair_release	vmlinux	EXPORT_SYMBOL
+0x973045c8	libertas_add_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x179e23b7	ppp_input	drivers/net/ppp_generic	EXPORT_SYMBOL
+0xa4208bae	journal_start	vmlinux	EXPORT_SYMBOL
+0xeb2fdc87	register_filesystem	vmlinux	EXPORT_SYMBOL
+0xba497f13	loops_per_jiffy	vmlinux	EXPORT_SYMBOL
+0x32b6e617	drm_getsarea	drivers/char/drm/drm	EXPORT_SYMBOL
+0x78bc822b	sas_remove_children	vmlinux	EXPORT_SYMBOL
+0x08c4f629	acpi_get_name	vmlinux	EXPORT_SYMBOL
+0x673f815e	agp_bridges	vmlinux	EXPORT_SYMBOL
+0xb8e2a646	get_next_bit_on	vmlinux	EXPORT_SYMBOL_GPL
+0x9f100139	jiffies_to_clock_t	vmlinux	EXPORT_SYMBOL
+0x215073d1	cpu_callout_map	vmlinux	EXPORT_SYMBOL
+0xd74446d6	tmsdev_term	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x2df115d4	eeprom_93cx6_multiread	drivers/misc/eeprom_93cx6	EXPORT_SYMBOL_GPL
+0x031b6979	drm_addbufs_agp	drivers/char/drm/drm	EXPORT_SYMBOL
+0xd8606f0f	drm_addbufs_pci	drivers/char/drm/drm	EXPORT_SYMBOL
+0xcd1f2b2e	generic_make_request	vmlinux	EXPORT_SYMBOL
+0x32621994	queue_delayed_work	vmlinux	EXPORT_SYMBOL_GPL
+0x7957f728	irlmp_update_client	net/irda/irda	EXPORT_SYMBOL
+0x4e46f1b1	mii_phy_probe	drivers/net/sungem_phy	EXPORT_SYMBOL
+0x02124474	ip_send_check	vmlinux	EXPORT_SYMBOL
+0x3e0839e0	__rtnl_register	vmlinux	EXPORT_SYMBOL_GPL
+0xe2bbc127	pcmcia_insert_card	vmlinux	EXPORT_SYMBOL
+0x0ff45263	RingQueue_WakeUpInterruptible	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0x28fbf5ec	anon_inode_getfd	vmlinux	EXPORT_SYMBOL_GPL
+0x64f2a316	filemap_flush	vmlinux	EXPORT_SYMBOL
+0xe8794ce1	slhc_toss	drivers/net/slhc	EXPORT_SYMBOL
+0x991ff83f	drm_core_get_map_ofs	drivers/char/drm/drm	EXPORT_SYMBOL
+0x6578d8d7	mpt_alloc_fw_memory	vmlinux	EXPORT_SYMBOL
+0x455fd57d	acpi_set_register	vmlinux	EXPORT_SYMBOL
+0xdcc854ec	ieee80211_scan_completed	net/mac80211/mac80211	EXPORT_SYMBOL
+0x7a1211f8	dlm_setup_eviction_cb	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x1ad3b491	acpi_root_bridge	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0xf3781023	i2c_smbus_read_i2c_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x3853cf92	unix_domain_find	vmlinux	EXPORT_SYMBOL
+0xa3424439	tty_mutex	vmlinux	EXPORT_SYMBOL
+0xa77d88f6	strnlen_user	vmlinux	EXPORT_SYMBOL
+0x6dc1e698	xt_free_table_info	net/netfilter/x_tables	EXPORT_SYMBOL
+0x56fff9a1	prism2_update_comms_qual	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x15ff2baf	mpt_print_ioc_summary	vmlinux	EXPORT_SYMBOL
+0x7cbcf17e	ata_bmdma_setup	vmlinux	EXPORT_SYMBOL_GPL
+0xb10d55bc	cn_netlink_send	vmlinux	EXPORT_SYMBOL_GPL
+0xbcf64e20	mnt_pin	vmlinux	EXPORT_SYMBOL
+0x1080aa9f	nf_ct_helper_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x9f9fa953	dccp_poll	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xd43ecbf1	null_ax25_address	net/ax25/ax25	EXPORT_SYMBOL
+0x1e2139a7	cpia_register_camera	drivers/media/video/cpia	EXPORT_SYMBOL
+0x804f922a	ipmi_addr_length	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xe3a75504	dev_get_by_name	vmlinux	EXPORT_SYMBOL
+0xdcee71b6	snd_dma_alloc_pages_fallback	vmlinux	EXPORT_SYMBOL
+0x584738f9	rdmsr_safe_on_cpu	vmlinux	EXPORT_SYMBOL
+0x66bde18e	__page_symlink	vmlinux	EXPORT_SYMBOL
+0xb2f7316a	sched_setscheduler	vmlinux	EXPORT_SYMBOL_GPL
+0x91fa79b3	node_to_cpumask	vmlinux	EXPORT_SYMBOL
+0x31077a85	ivtv_set_irq_mask	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x88c37ca5	ib_unregister_event_handler	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xfdab6de3	unregister_sound_midi	vmlinux	EXPORT_SYMBOL
+0xb24166b9	generic_cont_expand	vmlinux	EXPORT_SYMBOL
+0x5a19288d	inode_double_lock	vmlinux	EXPORT_SYMBOL
+0xd494afe6	nat_h245_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x9eb54397	ax25_hard_header	net/ax25/ax25	EXPORT_SYMBOL
+0x826dd8e4	ip_mc_rejoin_group	vmlinux	EXPORT_SYMBOL
+0x27b912d3	udp_prot	vmlinux	EXPORT_SYMBOL
+0xe873cc3e	snd_ctl_register_ioctl	vmlinux	EXPORT_SYMBOL
+0xcd639c19	inet6_sk_rebuild_header	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x241b12c4	register_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x70259e6f	arc_proto_default	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x1280ea59	dib3000mc_set_config	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0x6362010a	unregister_quota_format	vmlinux	EXPORT_SYMBOL
+0xb16eeb9c	mb_cache_shrink	vmlinux	EXPORT_SYMBOL
+0xf1e98c74	avenrun	vmlinux	EXPORT_SYMBOL
+0xaef28903	nf_ct_extend_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x3e64d9e5	tms380tr_open	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x57b02a20	v4l2_type_names	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x57858e9a	ir_input_nokey	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x342dfefe	register_mtd_parser	vmlinux	EXPORT_SYMBOL_GPL
+0xb594381d	dvb_ringbuffer_pkt_read	vmlinux	EXPORT_SYMBOL
+0x2e52dab2	mark_page_accessed	vmlinux	EXPORT_SYMBOL
+0x9cb8037b	xfrm_count_enc_supported	vmlinux	EXPORT_SYMBOL_GPL
+0xc42b19ec	nf_proto_csum_replace4	vmlinux	EXPORT_SYMBOL
+0x02a18c74	nf_conntrack_destroy	vmlinux	EXPORT_SYMBOL
+0xc8c87464	scsi_report_bus_reset	vmlinux	EXPORT_SYMBOL
+0x020dc812	__ht_create_irq	vmlinux	EXPORT_SYMBOL
+0x378a6ece	saa7134_i2c_call_clients	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x084a8f84	saa7146_i2c_adapter_prepare	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x3e4ef069	snd_dma_get_reserved_buf	vmlinux	EXPORT_SYMBOL
+0x6c667253	hid_output_report	vmlinux	EXPORT_SYMBOL_GPL
+0x2cc6b554	block_sync_page	vmlinux	EXPORT_SYMBOL
+0x5ed228f0	cdev_add	vmlinux	EXPORT_SYMBOL
+0x9f35ba10	node_possible_map	vmlinux	EXPORT_SYMBOL
+0xa9f504bb	ieee80211_get_channel	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0xabb1cab7	ib_modify_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xbd251b8e	dev_mc_add	vmlinux	EXPORT_SYMBOL
+0x75ba540d	snd_timer_new	vmlinux	EXPORT_SYMBOL
+0x098d57a7	rtc_update_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xcd9e772b	dma_prog_region_free	vmlinux	EXPORT_SYMBOL
+0x90dc1e04	mptscsih_change_queue_depth	vmlinux	EXPORT_SYMBOL
+0x3666c557	fb_blank	vmlinux	EXPORT_SYMBOL
+0x4ddc4b9f	utf8_mbtowc	vmlinux	EXPORT_SYMBOL
+0x38fc3b08	open_exec	vmlinux	EXPORT_SYMBOL
+0x2e5f214e	test_dynpageflag	vmlinux	EXPORT_SYMBOL_GPL
+0x838b9e17	iscsi_remove_session	vmlinux	EXPORT_SYMBOL_GPL
+0x1cfced5c	mb_cache_entry_find_next	vmlinux	EXPORT_SYMBOL
+0xcf30362a	toi_state	vmlinux	EXPORT_SYMBOL_GPL
+0x34b2cf7c	ip_vs_skb_replace	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0xdaa32366	dev_unicast_delete	vmlinux	EXPORT_SYMBOL
+0xcdbcd00a	pnp_activate_dev	vmlinux	EXPORT_SYMBOL
+0x8693d48d	pci_find_next_capability	vmlinux	EXPORT_SYMBOL_GPL
+0xb1f975aa	unlock_kernel	vmlinux	EXPORT_SYMBOL
+0x98fdb4bb	journal_forget	vmlinux	EXPORT_SYMBOL
+0xbc5c646c	rt_mutex_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x97938ceb	queue_delayed_work_on	vmlinux	EXPORT_SYMBOL_GPL
+0x0325c84d	proc_irda	net/irda/irda	EXPORT_SYMBOL
+0x01ed6738	ib_unregister_client	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x02ce50ce	netlink_run_queue	vmlinux	EXPORT_SYMBOL
+0xdc7be53d	bitmap_startwrite	vmlinux	EXPORT_SYMBOL
+0x0184695a	devres_open_group	vmlinux	EXPORT_SYMBOL_GPL
+0xbcba4245	pci_enable_msix	vmlinux	EXPORT_SYMBOL
+0x8dbff555	__set_page_dirty_nobuffers	vmlinux	EXPORT_SYMBOL
+0x78ae194d	rxrpc_kernel_reject_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xa8dc937b	usbnet_unlink_rx_urbs	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xdfc5169b	slhc_init	drivers/net/slhc	EXPORT_SYMBOL
+0x3dbfef12	thinkpad_ec_read_row	drivers/misc/thinkpad_ec	EXPORT_SYMBOL_GPL
+0x79909e07	saa7146_register_extension	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xb9b3948d	qdisc_lock_tree	vmlinux	EXPORT_SYMBOL
+0x740c37b7	mempool_create_node	vmlinux	EXPORT_SYMBOL
+0xa945d988	find_get_pid	vmlinux	EXPORT_SYMBOL_GPL
+0x3074f033	drm_order	drivers/char/drm/drm	EXPORT_SYMBOL
+0x9a0dc305	dev_set_promiscuity	vmlinux	EXPORT_SYMBOL
+0xf5d45899	iscsi_verify_itt	vmlinux	EXPORT_SYMBOL_GPL
+0x9f265ef8	scsi_bios_ptable	vmlinux	EXPORT_SYMBOL
+0xfe618b58	snd_mpu401_uart_interrupt	sound/drivers/mpu401/snd-mpu401-uart	EXPORT_SYMBOL
+0xf0caf44b	zlib_deflate_workspacesize	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0xc207db31	phy_read	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xac8d2e4e	neigh_connected_output	vmlinux	EXPORT_SYMBOL
+0xc4c5509d	param_set_ushort	vmlinux	EXPORT_SYMBOL
+0x6a3e46a5	edd	vmlinux	EXPORT_SYMBOL
+0x01e61721	tipc_continue	net/tipc/tipc	EXPORT_SYMBOL
+0xda108290	bt_sock_recvmsg	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xcca26837	l64781_attach	drivers/media/dvb/frontends/l64781	EXPORT_SYMBOL
+0xbe4cb88e	svc_recv	vmlinux	EXPORT_SYMBOL
+0x390c2fdd	netlink_kernel_create	vmlinux	EXPORT_SYMBOL
+0x0e7b8653	snd_timer_notify	vmlinux	EXPORT_SYMBOL
+0x14ed12b7	bitmap_unplug	vmlinux	EXPORT_SYMBOL
+0x35553b3d	pci_find_slot	vmlinux	EXPORT_SYMBOL
+0x86fb9b05	bitmap_parse_user	vmlinux	EXPORT_SYMBOL
+0x01000e51	schedule	vmlinux	EXPORT_SYMBOL
+0x60816cc7	snd_emux_free	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0xb614d705	sppp_open	drivers/net/wan/syncppp	EXPORT_SYMBOL
+0x02663cc5	dvb_usb_nec_rc_key_to_event	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0xdaa041ad	ir_codes_cinergy_1400	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x6d6511e7	ir_dump_samples	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x11d42382	ib_ud_header_unpack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xf30ea94a	nlmsg_notify	vmlinux	EXPORT_SYMBOL
+0xa6ebe652	mmput	vmlinux	EXPORT_SYMBOL_GPL
+0x191515e3	init_task	vmlinux	EXPORT_SYMBOL
+0x5e3c5820	snd_emu10k1_memblk_map	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xfee26012	snd_rawmidi_transmit_peek	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x54e6b8d3	video_devdata	drivers/media/video/videodev	EXPORT_SYMBOL
+0x98eec280	rpc_execute	vmlinux	EXPORT_SYMBOL
+0xebaf8204	udp_get_port	vmlinux	EXPORT_SYMBOL
+0xd2edc573	sysdev_class_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0x1d31d452	usbatm_usb_disconnect	drivers/usb/atm/usbatm	EXPORT_SYMBOL_GPL
+0x083661f9	ir_codes_avertv_303	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x89d66811	build_ehash_secret	vmlinux	EXPORT_SYMBOL
+0xd99ccb3c	__inet_twsk_hashdance	vmlinux	EXPORT_SYMBOL_GPL
+0x78901bcd	neigh_table_init_no_netlink	vmlinux	EXPORT_SYMBOL
+0xb04a54ff	gnet_stats_copy_app	vmlinux	EXPORT_SYMBOL
+0xa5f44e34	input_allocate_device	vmlinux	EXPORT_SYMBOL
+0x69b1546d	pci_set_pcie_reset_state	vmlinux	EXPORT_SYMBOL_GPL
+0x1b015d25	bitmap_parselist	vmlinux	EXPORT_SYMBOL
+0xaed54a66	__insert_inode_hash	vmlinux	EXPORT_SYMBOL
+0xdf929370	fs_overflowgid	vmlinux	EXPORT_SYMBOL
+0xa215263f	snd_midi_event_reset_decode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x5637ed44	tipc_get_mode	net/tipc/tipc	EXPORT_SYMBOL
+0xdd1a30d6	fb_ddc_read	drivers/video/fb_ddc	EXPORT_SYMBOL_GPL
+0x9fd91344	edac_mc_del_mc	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x87e8d572	md_do_sync	vmlinux	EXPORT_SYMBOL_GPL
+0x65ca8b5a	i2o_driver_notify_device_remove_all	vmlinux	EXPORT_SYMBOL
+0x0a1bd72e	agp_generic_type_to_mask_type	vmlinux	EXPORT_SYMBOL
+0xb20e743e	blk_rq_bio_prep	vmlinux	EXPORT_SYMBOL
+0x268d4f93	bio_clone	vmlinux	EXPORT_SYMBOL
+0x3da171f9	pci_mem_start	vmlinux	EXPORT_SYMBOL
+0xb1f8eacc	tipc_send2name	net/tipc/tipc	EXPORT_SYMBOL
+0xbeaa2e84	spi_bitbang_setup_transfer	drivers/spi/spi_bitbang	EXPORT_SYMBOL_GPL
+0x9b2c674b	hdlc_close	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x5511039d	xfrm_policy_walk	vmlinux	EXPORT_SYMBOL
+0x9bee7ca7	snd_card_proc_new	vmlinux	EXPORT_SYMBOL
+0x655c120a	fbcon_set_rotate	vmlinux	EXPORT_SYMBOL
+0xd28036ad	proc_clear_tty	vmlinux	EXPORT_SYMBOL
+0x50a65ffe	end_request	vmlinux	EXPORT_SYMBOL
+0x06cb04c8	blocking_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x594bf15b	ioport_map	vmlinux	EXPORT_SYMBOL
+0xd04f4d39	free_ieee80211	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x5871f0c9	ppp_unregister_channel	drivers/net/ppp_generic	EXPORT_SYMBOL
+0x7b874a81	saa7134_ts_register	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0xb46ceb50	sp887x_attach	drivers/media/dvb/frontends/sp887x	EXPORT_SYMBOL
+0x83efd939	__skb_checksum_complete	vmlinux	EXPORT_SYMBOL
+0xba4415ee	mptscsih_shutdown	vmlinux	EXPORT_SYMBOL
+0x5970cd3d	ata_pci_device_do_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0x5d596593	dvb_ringbuffer_flush_spinlock_wakeup	vmlinux	EXPORT_SYMBOL
+0xb5a459dc	unregister_blkdev	vmlinux	EXPORT_SYMBOL
+0x48201ab3	key_alloc	vmlinux	EXPORT_SYMBOL
+0xca6e9ec4	write_inode_now	vmlinux	EXPORT_SYMBOL
+0x96d58e56	per_cpu__nf_conntrack_ecache	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x861c0feb	reset_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0xd2bb1090	destroy_cis_cache	vmlinux	EXPORT_SYMBOL
+0x16eff0bc	ata_busy_sleep	vmlinux	EXPORT_SYMBOL_GPL
+0xe9002ff0	fat_search_long	vmlinux	EXPORT_SYMBOL_GPL
+0x1e863ab0	seq_path	vmlinux	EXPORT_SYMBOL
+0xcc5005fe	msleep_interruptible	vmlinux	EXPORT_SYMBOL
+0xd1f6c5f3	smp_num_siblings	vmlinux	EXPORT_SYMBOL
+0xf8b2ff6e	g_verify_token_header	vmlinux	EXPORT_SYMBOL
+0x65414e67	dev_valid_name	vmlinux	EXPORT_SYMBOL
+0xaf99b8e2	per_cpu__cpuidle_devices	vmlinux	EXPORT_SYMBOL_GPL
+0x3be89d3c	usb_register_notify	vmlinux	EXPORT_SYMBOL_GPL
+0x40ef1186	hpsb_update_config_rom	vmlinux	EXPORT_SYMBOL
+0xd36ee50d	iscsi_session_setup	vmlinux	EXPORT_SYMBOL_GPL
+0xcb0cba01	agp_create_memory	vmlinux	EXPORT_SYMBOL
+0xa68124fa	hweight8	vmlinux	EXPORT_SYMBOL
+0xac383451	radix_tree_tag_clear	vmlinux	EXPORT_SYMBOL
+0x56f8b91c	generic_file_open	vmlinux	EXPORT_SYMBOL
+0xa0455a8d	default_unplug_io_fn	vmlinux	EXPORT_SYMBOL
+0xc87c1f84	ktime_get	vmlinux	EXPORT_SYMBOL_GPL
+0x0199c4d7	genphy_update_link	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xd77f8a08	subsys_create_file	vmlinux	EXPORT_SYMBOL
+0x180141e1	generic_cont_expand_simple	vmlinux	EXPORT_SYMBOL
+0x27fd2357	d_instantiate	vmlinux	EXPORT_SYMBOL
+0x8d43669e	register_sound_special_device	vmlinux	EXPORT_SYMBOL
+0xc3c5efd3	agp_generic_create_gatt_table	vmlinux	EXPORT_SYMBOL
+0x3b46a5c3	xt_alloc_table_info	net/netfilter/x_tables	EXPORT_SYMBOL
+0xee6a3a4a	s5h1420_attach	drivers/media/dvb/frontends/s5h1420	EXPORT_SYMBOL
+0xa14a69bc	flexcop_reset_block_300	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x4966b1ff	sysdev_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xc09651d9	crc32_be	vmlinux	EXPORT_SYMBOL
+0xeb7f3b52	open_bdev_excl	vmlinux	EXPORT_SYMBOL
+0x636a5691	acpi_register_ioapic	vmlinux	EXPORT_SYMBOL
+0x21b41909	ieee80211_register_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0xf65a107a	i2c_unregister_device	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x39921315	rpc_restart_call	vmlinux	EXPORT_SYMBOL
+0x50201b06	skb_find_text	vmlinux	EXPORT_SYMBOL
+0xce40dda9	toi_in_hibernate	vmlinux	EXPORT_SYMBOL_GPL
+0xe88ad327	_spin_trylock	vmlinux	EXPORT_SYMBOL
+0xc28e6079	current_fs_time	vmlinux	EXPORT_SYMBOL
+0x15b5ecde	tipc_set_portunreliable	net/tipc/tipc	EXPORT_SYMBOL
+0xfd37b671	nf_conntrack_tcp_update	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xf34c0d32	ebt_unregister_watcher	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0x6ba5c05b	acpi_get_hp_params_from_firmware	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0xe1c06772	tcf_hash_create	vmlinux	EXPORT_SYMBOL
+0x152ad9fd	skb_queue_tail	vmlinux	EXPORT_SYMBOL
+0x52dfccb1	dvb_ca_en50221_frda_irq	vmlinux	EXPORT_SYMBOL
+0x26339366	crypto_lookup_template	vmlinux	EXPORT_SYMBOL_GPL
+0x9e41e52f	vfs_test_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x5080386b	do_exit	vmlinux	EXPORT_SYMBOL_GPL
+0xe9bcb310	tcf_hash_destroy	vmlinux	EXPORT_SYMBOL
+0x50942b78	mark_buffer_dirty_inode	vmlinux	EXPORT_SYMBOL
+0xfb6daeeb	snd_cs8427_iec958_active	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0x734a5f09	tda10086_attach	drivers/media/dvb/frontends/tda10086	EXPORT_SYMBOL
+0x6639d53c	dvb_usb_generic_write	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0xa90f49e0	scsi_execute_req	vmlinux	EXPORT_SYMBOL
+0x9d65cdcd	scsi_req_abort_cmd	vmlinux	EXPORT_SYMBOL
+0xdbe0ea08	backlight_device_register	vmlinux	EXPORT_SYMBOL
+0x4461aac2	dma_wait_for_async_tx	vmlinux	EXPORT_SYMBOL_GPL
+0x67f8ca0a	queue_work	vmlinux	EXPORT_SYMBOL_GPL
+0xb1c3a01a	oops_in_progress	vmlinux	EXPORT_SYMBOL
+0x434fa55c	release_console_sem	vmlinux	EXPORT_SYMBOL
+0x19d609a9	snd_emux_unlock_voice	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0xbe07bb9b	rxrpc_kernel_get_abort_code	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x8c3c0767	gss_encrypt_xdr_buf	vmlinux	EXPORT_SYMBOL
+0x82f51496	tty_register_ldisc	vmlinux	EXPORT_SYMBOL
+0xa191ba91	tty_check_change	vmlinux	EXPORT_SYMBOL
+0xe77222c1	blk_get_backing_dev_info	vmlinux	EXPORT_SYMBOL
+0x446b9ebc	elevator_init	vmlinux	EXPORT_SYMBOL
+0xc6a37242	kill_fasync	vmlinux	EXPORT_SYMBOL
+0xf465b72a	param_get_byte	vmlinux	EXPORT_SYMBOL
+0xabda1e2e	decode_rs16	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0x595ac54e	get_key_pinnacle_color	drivers/media/video/ir-kbd-i2c	EXPORT_SYMBOL_GPL
+0xc8d09b8e	b1_send_message	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xdef70acd	pcmcia_validate_mem	vmlinux	EXPORT_SYMBOL
+0x68fd3efd	attribute_container_classdev_to_container	vmlinux	EXPORT_SYMBOL_GPL
+0x9343ac7d	debugfs_create_u8	vmlinux	EXPORT_SYMBOL_GPL
+0x343e9ab9	arcnet_unregister_proto	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x0f72839f	ib_unregister_mad_agent	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xbe2c0d61	drm_core_ioremap	drivers/char/drm/drm	EXPORT_SYMBOL
+0x53c5b4ff	hpsb_iso_n_ready	vmlinux	EXPORT_SYMBOL
+0xd34f0c62	gen_pool_create	vmlinux	EXPORT_SYMBOL
+0x6565d644	ttpci_budget_debiread	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0xddf1c1f1	scsi_is_fc_rport	vmlinux	EXPORT_SYMBOL
+0x37872a5d	swiotlb_map_single	vmlinux	EXPORT_SYMBOL
+0x14af0cf7	gen_pool_destroy	vmlinux	EXPORT_SYMBOL
+0xd62c833f	schedule_timeout	vmlinux	EXPORT_SYMBOL
+0xb35b672c	tipc_publish	net/tipc/tipc	EXPORT_SYMBOL
+0x384e3b2c	ieee80211_freq_to_channel	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x7f244ad6	tifm_eject	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x9cfd0260	cx88_set_freq	drivers/media/video/cx88/cx8800	EXPORT_SYMBOL
+0x43e06fde	netlink_dump_start	vmlinux	EXPORT_SYMBOL
+0x65ccb6f0	call_netevent_notifiers	vmlinux	EXPORT_SYMBOL_GPL
+0xb2be638a	dma_chan_cleanup	vmlinux	EXPORT_SYMBOL
+0x79052cca	scsi_add_host	vmlinux	EXPORT_SYMBOL
+0xf0fe1238	crypto_alloc_base	vmlinux	EXPORT_SYMBOL_GPL
+0xa93a518a	aio_put_req	vmlinux	EXPORT_SYMBOL
+0x837e4852	rxrpc_kernel_is_data_last	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xb8bddf33	ip6t_ext_hdr	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0xcd7d31c5	mmc_wait_for_app_cmd	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xdb084b9e	rdma_notify	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x8e0b7743	ipv6_ext_hdr	vmlinux	EXPORT_SYMBOL
+0x63e48ecf	neigh_destroy	vmlinux	EXPORT_SYMBOL
+0xab07dac4	ata_pci_device_do_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x2509ac92	dvb_ringbuffer_pkt_dispose	vmlinux	EXPORT_SYMBOL
+0xcefcd99a	serial8250_unregister_port	vmlinux	EXPORT_SYMBOL
+0x0ba4ef1d	snd_sb16dsp_interrupt	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0x32767a9b	ax25_rebuild_header	net/ax25/ax25	EXPORT_SYMBOL
+0x1ce6a90f	rt2x00lib_txdone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x984f6bc8	usbnet_get_link	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xc7285674	__xfrm_policy_check	vmlinux	EXPORT_SYMBOL
+0xae682200	snd_ctl_rename_id	vmlinux	EXPORT_SYMBOL
+0xe17186f2	vc_lock_resize	vmlinux	EXPORT_SYMBOL
+0x23f8c9e9	blk_sync_queue	vmlinux	EXPORT_SYMBOL
+0x521ff2b0	cx88_get_control	drivers/media/video/cx88/cx8800	EXPORT_SYMBOL
+0x6606596a	ir_rc5_timer_keyup	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x7f0c2b47	b1ctl_read_proc	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x04b1b027	dev_base_head	vmlinux	EXPORT_SYMBOL
+0x30acf8b5	pskb_copy	vmlinux	EXPORT_SYMBOL
+0xb0eef0f3	scsi_schedule_eh	vmlinux	EXPORT_SYMBOL_GPL
+0xb99529c8	class_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x0f2a73f0	fat_alloc_new_dir	vmlinux	EXPORT_SYMBOL_GPL
+0x972d83f3	node_data	vmlinux	EXPORT_SYMBOL
+0x31994d36	snd_sbmixer_new	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x1fb0f154	sys_imageblit	drivers/video/sysimgblt	EXPORT_SYMBOL
+0xd372363c	__down_write_nested	vmlinux	EXPORT_SYMBOL
+0x0014bfd1	smp_call_function	vmlinux	EXPORT_SYMBOL
+0x3ab1bc1e	cx2341x_ctrl_query	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0xed3388e1	dibusb_dib3000mc_tuner_attach	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0xe94b8c9c	dst_check_sum	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x578891e9	i2c_smbus_read_byte_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x8e80917b	ps2_command	vmlinux	EXPORT_SYMBOL
+0x4cc1b52e	ps2_handle_response	vmlinux	EXPORT_SYMBOL
+0xca5dbc50	scsi_print_sense_hdr	vmlinux	EXPORT_SYMBOL
+0x71871ba8	scsi_host_lookup	vmlinux	EXPORT_SYMBOL
+0x100c48a2	unregister_dock_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xfe847517	pci_find_capability	vmlinux	EXPORT_SYMBOL
+0xb678366f	int_sqrt	vmlinux	EXPORT_SYMBOL
+0x1bbb35d0	dec_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x0799aca4	local_bh_enable	vmlinux	EXPORT_SYMBOL
+0xf9ae81a1	nf_conntrack_max	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xb24c0404	config_item_get	fs/configfs/configfs	EXPORT_SYMBOL
+0x3b7110d5	config_item_put	fs/configfs/configfs	EXPORT_SYMBOL
+0xa9f68ec9	llc_mac_hdr_init	vmlinux	EXPORT_SYMBOL
+0x01717504	snd_pcm_suspend	vmlinux	EXPORT_SYMBOL
+0xabb4f95d	journal_dirty_metadata	vmlinux	EXPORT_SYMBOL
+0x1eb9516e	round_jiffies_relative	vmlinux	EXPORT_SYMBOL_GPL
+0xf1ac772a	video_unregister_device	drivers/media/video/videodev	EXPORT_SYMBOL
+0xcd1ce001	v4l2_ctrl_check	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xf275cf38	dib7000p_get_i2c_master	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x56e143cd	dib7000m_get_i2c_master	drivers/media/dvb/frontends/dib7000m	EXPORT_SYMBOL
+0x3c4b4036	rdc_reset_state	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x479397e4	klist_iter_init_node	vmlinux	EXPORT_SYMBOL_GPL
+0x8736a886	inet_csk_compat_getsockopt	vmlinux	EXPORT_SYMBOL_GPL
+0x25221e75	inet_csk_compat_setsockopt	vmlinux	EXPORT_SYMBOL_GPL
+0x1f47f0f1	cap_netlink_send	vmlinux	EXPORT_SYMBOL
+0x216a28f4	hrtimer_try_to_cancel	vmlinux	EXPORT_SYMBOL_GPL
+0xeadf87df	saa7134_pgtable_alloc	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x6969c983	nf_register_hook	vmlinux	EXPORT_SYMBOL
+0x2f7829da	__dev_get_by_name	vmlinux	EXPORT_SYMBOL
+0x9ba49c19	skb_copy_and_csum_dev	vmlinux	EXPORT_SYMBOL
+0x15e7b610	input_unregister_handle	vmlinux	EXPORT_SYMBOL
+0x815f461f	idr_replace	vmlinux	EXPORT_SYMBOL
+0x530b1e98	pm_suspend	vmlinux	EXPORT_SYMBOL
+0xd9d2bb03	snd_usbmidi_disconnect	sound/usb/snd-usb-lib	EXPORT_SYMBOL
+0x6a5981b6	ieee80211_tx_frame	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x572227b7	ebt_register_watcher	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0xa26b9ec9	ib_resize_cq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xf80dde52	register_netdev	vmlinux	EXPORT_SYMBOL
+0xb52fdd5a	snd_timer_continue	vmlinux	EXPORT_SYMBOL
+0x9344e79d	snd_sb16dsp_configure	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0x18c73882	dccp_rx_hist_purge	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x4c26a5ac	t3_l2t_get	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0xaddf1981	b1dma_send_message	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xe793f9b5	dvb_dmx_swfilter_204	vmlinux	EXPORT_SYMBOL
+0xd02cc869	__bitmap_andnot	vmlinux	EXPORT_SYMBOL
+0xe8583614	posix_acl_from_xattr	vmlinux	EXPORT_SYMBOL
+0xd5ed9318	config_item_init	fs/configfs/configfs	EXPORT_SYMBOL
+0x87fa2992	mlx4_srq_alloc	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xb3826454	i2c_transfer	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x655614a0	skb_seq_read	vmlinux	EXPORT_SYMBOL
+0x78c192d8	i2o_parm_field_get	vmlinux	EXPORT_SYMBOL
+0xade5afc4	scsi_device_lookup	vmlinux	EXPORT_SYMBOL
+0x667cecc9	acpi_os_printf	vmlinux	EXPORT_SYMBOL
+0x98bd6f46	param_set_int	vmlinux	EXPORT_SYMBOL
+0xaeab9aa1	cx2341x_ctrl_get_menu	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x01840ad6	ttpci_eeprom_parse_mac	drivers/media/dvb/ttpci/ttpci-eeprom	EXPORT_SYMBOL
+0x9ce3f83f	nvram_write_byte	drivers/char/nvram	EXPORT_SYMBOL
+0xbc84c1b6	xdr_inline_pages	vmlinux	EXPORT_SYMBOL
+0xee08006f	sysctl_local_port_range	vmlinux	EXPORT_SYMBOL
+0x57ccba6b	snd_card_file_add	vmlinux	EXPORT_SYMBOL
+0xa7aeb4c1	crypto_drop_spawn	vmlinux	EXPORT_SYMBOL_GPL
+0x8810440b	snd_midi_event_new	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x46c1c4a2	irlmp_unregister_service	net/irda/irda	EXPORT_SYMBOL
+0x75a6e05f	snd_pcm_lib_mmap_iomem	vmlinux	EXPORT_SYMBOL
+0xfec18a81	pccard_reset_card	vmlinux	EXPORT_SYMBOL
+0x390653fc	mptbase_sas_persist_operation	vmlinux	EXPORT_SYMBOL
+0x047e86f4	ata_cable_80wire	vmlinux	EXPORT_SYMBOL_GPL
+0x3a8bc7a1	jbd2_journal_dirty_data	vmlinux	EXPORT_SYMBOL
+0x40046949	param_set_short	vmlinux	EXPORT_SYMBOL
+0x32b8f1ff	nf_nat_tftp_hook	net/netfilter/nf_conntrack_tftp	EXPORT_SYMBOL_GPL
+0xfe7b2598	get_h225_addr	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xe919dd5c	drm_sman_owner_clean	drivers/char/drm/drm	EXPORT_SYMBOL
+0x4349c976	skb_pad	vmlinux	EXPORT_SYMBOL
+0xc98b5e81	hpsb_send_packet	vmlinux	EXPORT_SYMBOL
+0xbb29e993	generic_file_llseek	vmlinux	EXPORT_SYMBOL
+0x9ad8cb24	snd_soc_dapm_new_widgets	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x54aa38d3	snd_trident_synth_free	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0xc2a6c99e	pcmcia_disable_device	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x7d7e0dbc	ei_interrupt	drivers/net/8390	EXPORT_SYMBOL
+0x7dca846e	snd_info_create_module_entry	vmlinux	EXPORT_SYMBOL
+0xac8e7c5f	pcmcia_adjust_resource_info	vmlinux	EXPORT_SYMBOL
+0x37c34f7b	mpt_config	vmlinux	EXPORT_SYMBOL
+0x2fd1d81c	vfree	vmlinux	EXPORT_SYMBOL
+0xcab866c1	wait_on_page_bit	vmlinux	EXPORT_SYMBOL
+0x0da3d7ad	mutex_lock	vmlinux	EXPORT_SYMBOL
+0x77b1da93	irttp_open_tsap	net/irda/irda	EXPORT_SYMBOL
+0x68841798	irlmp_open_lsap	net/irda/irda	EXPORT_SYMBOL
+0xbbcb9267	ib_response_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x6d452c4e	dma_async_memcpy_pg_to_pg	vmlinux	EXPORT_SYMBOL
+0x783f9193	scsi_get_host_dev	vmlinux	EXPORT_SYMBOL
+0xca8f40ae	dma_pool_alloc	vmlinux	EXPORT_SYMBOL
+0x920c49ab	rdmsr_on_cpu	vmlinux	EXPORT_SYMBOL
+0x85791e16	swiotlb_sync_sg_for_device	vmlinux	EXPORT_SYMBOL
+0x14d5bca1	elv_rq_merge_ok	vmlinux	EXPORT_SYMBOL
+0x0729116e	gs_setserial	drivers/char/generic_serial	EXPORT_SYMBOL
+0x6bbc2cbf	gs_getserial	drivers/char/generic_serial	EXPORT_SYMBOL
+0x52726827	tcp_v4_do_rcv	vmlinux	EXPORT_SYMBOL
+0xcbe46b35	get_device	vmlinux	EXPORT_SYMBOL_GPL
+0xf065f629	ioread16be	vmlinux	EXPORT_SYMBOL
+0x51b5b93e	blk_dump_rq_flags	vmlinux	EXPORT_SYMBOL
+0x6fbfab52	exportfs_decode_fh	vmlinux	EXPORT_SYMBOL_GPL
+0x75eb8851	sysfs_create_group	vmlinux	EXPORT_SYMBOL_GPL
+0x2cff36ac	sppp_do_ioctl	drivers/net/wan/syncppp	EXPORT_SYMBOL
+0x00c52ef5	g_make_token_header	vmlinux	EXPORT_SYMBOL
+0x109a807a	xfrm_unregister_mode	vmlinux	EXPORT_SYMBOL
+0xc6720fca	scsi_add_device	vmlinux	EXPORT_SYMBOL
+0x1036e5f9	scsi_free_sgtable	vmlinux	EXPORT_SYMBOL
+0x13d24d60	pci_match_id	vmlinux	EXPORT_SYMBOL
+0x92f936d4	snd_opl3_hwdep_new	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x0e81d9dc	rt2x00lib_suspend	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x90684097	input_allocate_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0x54ce4957	i2c_add_numbered_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x2a4ec7fe	rpc_alloc_iostats	vmlinux	EXPORT_SYMBOL
+0xfa8e2ba6	tcf_action_dump_1	vmlinux	EXPORT_SYMBOL
+0x6baf62b0	ethtool_op_get_tso	vmlinux	EXPORT_SYMBOL
+0xcd85a0e7	usb_unanchor_urb	vmlinux	EXPORT_SYMBOL_GPL
+0x01fa5931	kobject_register	vmlinux	EXPORT_SYMBOL
+0x0dc7484e	thinkpad_ec_try_read_row	drivers/misc/thinkpad_ec	EXPORT_SYMBOL_GPL
+0xf96fc9de	ib_unpack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3a070f89	tcp_prot	vmlinux	EXPORT_SYMBOL
+0xcceaaf57	csr1212_attach_keyval_to_directory	vmlinux	EXPORT_SYMBOL
+0xf4b5b3c0	i2o_cntxt_list_remove	vmlinux	EXPORT_SYMBOL
+0x36c8ea1f	dvb_frontend_sleep_until	vmlinux	EXPORT_SYMBOL
+0x3c3ec3d6	textsearch_prepare	vmlinux	EXPORT_SYMBOL
+0xb3b3f7ed	__down_read	vmlinux	EXPORT_SYMBOL
+0x7ab3476a	proc_dointvec_ms_jiffies	vmlinux	EXPORT_SYMBOL
+0x6876581b	raise_softirq_irqoff	vmlinux	EXPORT_SYMBOL
+0x8e75a65f	or51211_attach	drivers/media/dvb/frontends/or51211	EXPORT_SYMBOL
+0xc5ec4fa9	sas_port_alloc	vmlinux	EXPORT_SYMBOL
+0x9b489bc2	pci_iounmap	vmlinux	EXPORT_SYMBOL
+0xd7661c77	blk_queue_max_phys_segments	vmlinux	EXPORT_SYMBOL
+0x9d2b6730	async_memcpy	vmlinux	EXPORT_SYMBOL_GPL
+0x6dad8eca	simple_getattr	vmlinux	EXPORT_SYMBOL
+0x06f2d5c7	mempool_free	vmlinux	EXPORT_SYMBOL
+0x1b39ad7c	configfs_register_subsystem	fs/configfs/configfs	EXPORT_SYMBOL
+0x52f8ff21	rt2x00lib_beacondone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x15aab337	cx88_sram_channel_setup	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xee3d78fe	tcf_em_tree_validate	vmlinux	EXPORT_SYMBOL
+0xe1ee4582	llc_sap_open	vmlinux	EXPORT_SYMBOL
+0xee8d9242	attribute_container_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x18872575	driver_for_each_device	vmlinux	EXPORT_SYMBOL_GPL
+0x25d8041e	journal_init_inode	vmlinux	EXPORT_SYMBOL
+0xf3e13c96	tcp_rcv_state_process	vmlinux	EXPORT_SYMBOL
+0x1ee42ab5	ethtool_op_get_tx_csum	vmlinux	EXPORT_SYMBOL
+0x398548ce	skb_to_sgvec	vmlinux	EXPORT_SYMBOL_GPL
+0x34f90040	sas_phy_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x065eec6f	agp_alloc_bridge	vmlinux	EXPORT_SYMBOL
+0x859204af	sscanf	vmlinux	EXPORT_SYMBOL
+0x4019a3ea	__breadahead	vmlinux	EXPORT_SYMBOL
+0x30123eb5	icmpv6_statistics	net/ipv6/ipv6	EXPORT_SYMBOL
+0x573b72d0	sirdev_raw_read	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x3e8ff8ff	led_classdev_suspend	drivers/leds/led-class	EXPORT_SYMBOL_GPL
+0xca4c12c3	rpc_bind_new_program	vmlinux	EXPORT_SYMBOL
+0x115230d7	snd_pcm_hw_constraint_integer	vmlinux	EXPORT_SYMBOL
+0xabdbcea3	hpsb_set_packet_complete_task	vmlinux	EXPORT_SYMBOL
+0x00163ae7	journal_stop	vmlinux	EXPORT_SYMBOL
+0xa52dad39	inotify_add_watch	vmlinux	EXPORT_SYMBOL_GPL
+0x07e43c47	wait_for_completion	vmlinux	EXPORT_SYMBOL
+0xc95d6a93	dccp_sample_rtt	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xfe2fe4a0	i2c_smbus_write_byte_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x73a801d2	tcp_v4_md5_do_del	vmlinux	EXPORT_SYMBOL
+0x2c3fab4d	usb_unlink_urb	vmlinux	EXPORT_SYMBOL
+0x0fa412f0	agp_add_bridge	vmlinux	EXPORT_SYMBOL_GPL
+0xcb6beb40	hweight32	vmlinux	EXPORT_SYMBOL
+0xe8cd902e	hweight16	vmlinux	EXPORT_SYMBOL
+0x35ad67ec	hweight64	vmlinux	EXPORT_SYMBOL
+0xfd774188	hostap_remove_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x4eaaba2d	snd_dma_alloc_pages	vmlinux	EXPORT_SYMBOL
+0xc5ed4d7b	scsi_kmap_atomic_sg	vmlinux	EXPORT_SYMBOL
+0xc4bc7c2d	platform_device_add_data	vmlinux	EXPORT_SYMBOL_GPL
+0x4779d5d3	rxrpc_kernel_abort_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x43cb6e74	lapb_getparms	net/lapb/lapb	EXPORT_SYMBOL
+0xf3be21b1	ieee80211softmac_wx_get_essid	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x7ac37253	edac_mc_handle_ce_no_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xaa520e0f	put_rpccred	vmlinux	EXPORT_SYMBOL
+0x1c7a3728	rpcauth_init_cred	vmlinux	EXPORT_SYMBOL
+0x1fcece42	inet_twdr_twcal_tick	vmlinux	EXPORT_SYMBOL_GPL
+0x512294eb	sock_create_lite	vmlinux	EXPORT_SYMBOL
+0x0da6c6f2	swiotlb_sync_single_range_for_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x3fc3ceb1	snd_seq_event_port_attach	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x29606072	tifm_free_device	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x8d2ad963	cpufreq_unregister_governor	vmlinux	EXPORT_SYMBOL_GPL
+0xf3561663	cdrom_release	vmlinux	EXPORT_SYMBOL
+0xaaeb10d3	swiotlb_dma_mapping_error	vmlinux	EXPORT_SYMBOL
+0xa4df0456	ip4_datagram_connect	vmlinux	EXPORT_SYMBOL
+0x7d737513	tcp_timewait_state_process	vmlinux	EXPORT_SYMBOL
+0xb7ec9cd2	hpsb_get_hostinfo_bykey	vmlinux	EXPORT_SYMBOL
+0xbcc38a0f	pnp_start_dev	vmlinux	EXPORT_SYMBOL
+0xa545ff9e	irttp_dup	net/irda/irda	EXPORT_SYMBOL
+0x43e10903	drm_get_resource_len	drivers/char/drm/drm	EXPORT_SYMBOL
+0xb9aeee28	starget_for_each_device	vmlinux	EXPORT_SYMBOL
+0xe7da6642	parport_wait_event	vmlinux	EXPORT_SYMBOL
+0xf666cbb3	__memcpy_fromio	vmlinux	EXPORT_SYMBOL
+0xa754bd0b	nobh_writepage	vmlinux	EXPORT_SYMBOL
+0x4b6e4bad	clear_page_dirty_for_io	vmlinux	EXPORT_SYMBOL
+0xc6144286	srcu_init_notifier_head	vmlinux	EXPORT_SYMBOL_GPL
+0xa7502f48	jiffies_to_timeval	vmlinux	EXPORT_SYMBOL
+0xab3c60ff	arch_acpi_processor_init_pdc	vmlinux	EXPORT_SYMBOL
+0xd18b6eb2	acpi_unmap_lsapic	vmlinux	EXPORT_SYMBOL
+0xdd19aac2	snd_rawmidi_kernel_write	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xef50a1ef	tipc_disable_bearer	net/tipc/tipc	EXPORT_SYMBOL
+0x563454fa	ftdi_elan_gone_away	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x60dde141	spi_bitbang_stop	drivers/spi/spi_bitbang	EXPORT_SYMBOL_GPL
+0x73a8543e	tcp_reno_min_cwnd	vmlinux	EXPORT_SYMBOL_GPL
+0x38a03bf3	tty_get_baud_rate	vmlinux	EXPORT_SYMBOL
+0x8e3c4b50	tty_schedule_flip	vmlinux	EXPORT_SYMBOL
+0xd124c423	vfs_follow_link	vmlinux	EXPORT_SYMBOL
+0xaf965174	snd_ac97_pcm_double_rate_rules	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x212db8d2	pcmcia_socket_list	vmlinux	EXPORT_SYMBOL
+0xcddc2302	sysdev_class_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xd416008b	tty_devnum	vmlinux	EXPORT_SYMBOL
+0x9b30a6d3	inotify_rm_wd	vmlinux	EXPORT_SYMBOL_GPL
+0xb3de7e4c	ccid_new	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xfe255f7f	ib_post_send_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xa9cd1b9b	tpm_release	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xa58b6804	nla_parse	vmlinux	EXPORT_SYMBOL
+0x9c27b513	pcmcia_read_cis_mem	vmlinux	EXPORT_SYMBOL
+0xcc3c772c	llc_sap_find	vmlinux	EXPORT_SYMBOL
+0x65a5aad9	input_free_device	vmlinux	EXPORT_SYMBOL
+0x31611390	hpsb_reset_bus	vmlinux	EXPORT_SYMBOL
+0xb85388bd	ata_host_init	vmlinux	EXPORT_SYMBOL_GPL
+0x98adfde2	request_module	vmlinux	EXPORT_SYMBOL
+0x6c8602c5	hci_conn_auth	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x91487dd4	alloc_ltalkdev	net/appletalk/appletalk	EXPORT_SYMBOL
+0xde8def88	pppox_unbind_sock	drivers/net/pppox	EXPORT_SYMBOL
+0x4e016e67	tifm_unmap_sg	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x85a4f812	async_trigger_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x7d11c268	jiffies	vmlinux	EXPORT_SYMBOL
+0xcbf75b6d	avmcard_dma_alloc	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x045738d1	dev_queue_xmit	vmlinux	EXPORT_SYMBOL
+0xd4bbff39	do_map_probe	vmlinux	EXPORT_SYMBOL
+0xefc52c3d	proc_mkdir	vmlinux	EXPORT_SYMBOL
+0x847b9211	__kfifo_put	vmlinux	EXPORT_SYMBOL
+0x53c4b881	__kfifo_get	vmlinux	EXPORT_SYMBOL
+0x99dabe64	sis_malloc_new	drivers/video/sis/sisfb	EXPORT_SYMBOL_GPL
+0x4fb48f94	phone_unregister_device	drivers/telephony/phonedev	EXPORT_SYMBOL
+0x766905f9	ivtv_api	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0xfc54a5cd	ir_codes_asus_pc39	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x7fad4a7f	dmam_free_noncoherent	vmlinux	EXPORT_SYMBOL
+0x4e1dce49	parport_find_base	vmlinux	EXPORT_SYMBOL
+0x2cbceb72	blk_rq_map_sg	vmlinux	EXPORT_SYMBOL
+0xb56717cf	xtime	vmlinux	EXPORT_SYMBOL
+0x73c9d974	proc_dointvec_jiffies	vmlinux	EXPORT_SYMBOL
+0x4c0ded6d	dccp_feat_confirm_recv	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xc0a49492	sk_stream_wait_memory	vmlinux	EXPORT_SYMBOL
+0xfa5c494a	usb_set_interface	vmlinux	EXPORT_SYMBOL
+0x9f2bdaac	__bitmap_or	vmlinux	EXPORT_SYMBOL
+0x81f3f852	snd_ak4117_reg_write	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0xf923948e	snd_ak4114_reg_write	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x5dd67618	register_netevent_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x0727c4f3	iowrite8	vmlinux	EXPORT_SYMBOL
+0x25ec1b28	strlen	vmlinux	EXPORT_SYMBOL
+0x3fa913da	strspn	vmlinux	EXPORT_SYMBOL
+0x6e9d5d90	_spin_trylock_bh	vmlinux	EXPORT_SYMBOL
+0x3bf6bab9	snd_soc_dapm_connect_input	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xedbaee5e	nla_strcmp	vmlinux	EXPORT_SYMBOL
+0x92ade107	snd_ac97_mixer	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xc7c1d77f	dccp_hashinfo	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x4c7d4188	dibusb_streaming_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x6ae82ba8	parport_announce_port	vmlinux	EXPORT_SYMBOL
+0x8b55badc	__copy_from_user_inatomic	vmlinux	EXPORT_SYMBOL
+0x28d48bd6	boot_cpu_data	vmlinux	EXPORT_SYMBOL
+0x6bb71038	snd_seq_delete_kernel_client	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xcbb871a2	power_supply_changed	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0xe56c102f	rt2x00lib_resume	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xad9c48e1	svc_proc_register	vmlinux	EXPORT_SYMBOL
+0x4ee307db	xfrm_policy_delete	vmlinux	EXPORT_SYMBOL
+0xd4713e39	rtc_irq_register	vmlinux	EXPORT_SYMBOL_GPL
+0x4e3567f7	match_int	vmlinux	EXPORT_SYMBOL
+0x8631f188	radix_tree_tag_set	vmlinux	EXPORT_SYMBOL
+0x53e93e54	sysctl_string	vmlinux	EXPORT_SYMBOL
+0x6faa475a	cond_resched_lock	vmlinux	EXPORT_SYMBOL
+0xca00d738	skb_cow_data	vmlinux	EXPORT_SYMBOL_GPL
+0x7c0117ce	snd_pcm_kernel_ioctl	vmlinux	EXPORT_SYMBOL
+0x0cda578f	i2o_exec_lct_get	vmlinux	EXPORT_SYMBOL
+0xdbb6cbd9	unlock_cpu_hotplug	vmlinux	EXPORT_SYMBOL_GPL
+0x04d8c750	release_perfctr_nmi	vmlinux	EXPORT_SYMBOL
+0x4e3a812c	ieee80211softmac_set_rates	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x4dc3f2c7	rdma_connect	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x349f8dd7	i2c_get_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x6980b6ce	snd_card_free_when_closed	vmlinux	EXPORT_SYMBOL
+0x4558c192	dm_unregister_dirty_log_type	vmlinux	EXPORT_SYMBOL
+0x868acba5	get_options	vmlinux	EXPORT_SYMBOL
+0x397ca264	free_ieee80211softmac	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x61ffc1c2	hci_connect	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xb55a52e5	input_unregister_handler	vmlinux	EXPORT_SYMBOL
+0x8f188395	agp_generic_alloc_by_type	vmlinux	EXPORT_SYMBOL
+0x5d934c61	rt2x00usb_disconnect	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xc467cf63	usbnet_get_settings	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x8df578ba	usbnet_set_settings	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xe8ff92cb	v4l_compat_ioctl32	drivers/media/video/compat_ioctl32	EXPORT_SYMBOL_GPL
+0x513043fd	rtc_read_alarm	vmlinux	EXPORT_SYMBOL_GPL
+0xa6277579	pci_remove_behind_bridge	vmlinux	EXPORT_SYMBOL
+0x7a496590	fat_fill_super	vmlinux	EXPORT_SYMBOL_GPL
+0x1c3b80d4	dquot_initialize	vmlinux	EXPORT_SYMBOL
+0xc56a694e	register_exec_domain	vmlinux	EXPORT_SYMBOL
+0x29ba16c5	snd_pt2258_build_controls	sound/i2c/other/snd-pt2258	EXPORT_SYMBOL
+0x921e452e	fl6_sock_lookup	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0xb389be05	libertas_prepare_and_send_command	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x7dccd66b	snd_pci_quirk_lookup	vmlinux	EXPORT_SYMBOL
+0x73d78d95	pci_bus_write_config_word	vmlinux	EXPORT_SYMBOL
+0xb45c974f	call_usermodehelper_exec	vmlinux	EXPORT_SYMBOL
+0x70c66486	ptrace_notify	vmlinux	EXPORT_SYMBOL
+0xaef101ab	snd_ak4117_create	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0x82a9f74e	snd_ak4114_create	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x7ab50e5d	pcmcia_dev_present	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x8ee710ca	tifm_register_driver	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x0a956f95	nf_hooks	vmlinux	EXPORT_SYMBOL
+0x139ea63f	snd_info_free_entry	vmlinux	EXPORT_SYMBOL
+0x2975daf8	hpsb_iso_xmit_sync	vmlinux	EXPORT_SYMBOL
+0x3a9f4177	pci_release_region	vmlinux	EXPORT_SYMBOL
+0xe07f8552	proc_net	vmlinux	EXPORT_SYMBOL
+0xae0c87ee	pm_qos_remove_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xedefb33b	power_supply_unregister	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0xe4f4665b	ipmi_validate_addr	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x9406031f	drm_release	drivers/char/drm/drm	EXPORT_SYMBOL
+0xff1e9dd8	seq_list_start	vmlinux	EXPORT_SYMBOL
+0xa2a1e5c9	_write_lock_bh	vmlinux	EXPORT_SYMBOL
+0xac46d018	nf_ct_port_nfattr_to_tuple	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x2bd1184f	register_ip_vs_scheduler	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x968458a6	cycx_peek	drivers/net/wan/cycx_drv	EXPORT_SYMBOL
+0xa239e637	cx8802_get_driver	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0x0d85b67f	km_state_notify	vmlinux	EXPORT_SYMBOL
+0xfe4952cc	snd_pcm_set_ops	vmlinux	EXPORT_SYMBOL
+0x1528d7fc	cpuidle_enable_device	vmlinux	EXPORT_SYMBOL_GPL
+0x9960c492	kvm_resched	vmlinux	EXPORT_SYMBOL_GPL
+0x01d58b27	hpsb_selfid_complete	vmlinux	EXPORT_SYMBOL
+0xaf6ef0ee	mlx4_alloc_cmd_mailbox	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x1a4f097f	sk_stream_mem_schedule	vmlinux	EXPORT_SYMBOL
+0xfa0756dd	load_msrs	vmlinux	EXPORT_SYMBOL_GPL
+0xd1d65629	mptscsih_dev_reset	vmlinux	EXPORT_SYMBOL
+0x5392a9b0	mpt_detach	vmlinux	EXPORT_SYMBOL
+0x258355b4	fb_find_best_mode	vmlinux	EXPORT_SYMBOL
+0x785ae063	inotify_init	vmlinux	EXPORT_SYMBOL_GPL
+0x8f8db519	seq_printf	vmlinux	EXPORT_SYMBOL
+0x226f1f43	ax25_linkfail_release	net/ax25/ax25	EXPORT_SYMBOL
+0x39b05f8e	mmc_free_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xbf4f92e6	ivtv_clear_irq_mask	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x77ab9713	mptscsih_raid_id_to_num	vmlinux	EXPORT_SYMBOL
+0xed3d4293	pci_dev_driver	vmlinux	EXPORT_SYMBOL
+0x0b742fd7	simple_strtol	vmlinux	EXPORT_SYMBOL
+0x6646bd53	ilookup5_nowait	vmlinux	EXPORT_SYMBOL
+0x01848a8e	local_apic_timer_c2_ok	vmlinux	EXPORT_SYMBOL_GPL
+0x321c5e1d	libertas_reset_device	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x4287b53d	unregister_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x3563d2b9	ib_send_cm_lap	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xeb37482a	gen_kill_estimator	vmlinux	EXPORT_SYMBOL
+0x076b3ec7	lpfc_vport_create	vmlinux	EXPORT_SYMBOL
+0x02aff2f4	acpi_install_gpe_handler	vmlinux	EXPORT_SYMBOL
+0xde8f2ae9	pci_set_power_state	vmlinux	EXPORT_SYMBOL
+0x86e3a980	unlock_super	vmlinux	EXPORT_SYMBOL
+0xfdd87de7	remote_llseek	vmlinux	EXPORT_SYMBOL
+0x24e152ab	snd_i2c_sendbytes	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0x6bfbe5ea	dibusb_pid_filter_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x4be55725	attach_capi_ctr	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xd708d9b0	snd_ctl_elem_read	vmlinux	EXPORT_SYMBOL
+0x796fc5ce	scsi_get_sense_info_fld	vmlinux	EXPORT_SYMBOL
+0xdc24d101	acpi_set_current_resources	vmlinux	EXPORT_SYMBOL
+0xdb3066eb	pci_bus_size_bridges	vmlinux	EXPORT_SYMBOL
+0xe82298f3	__bio_clone	vmlinux	EXPORT_SYMBOL
+0x35a07e32	vfs_stat	vmlinux	EXPORT_SYMBOL
+0xa0fbac79	wake_up_bit	vmlinux	EXPORT_SYMBOL
+0x2b619e9d	zlib_deflateReset	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0x79422f36	snd_pcm_lib_malloc_pages	vmlinux	EXPORT_SYMBOL
+0x08523563	sata_phy_reset	vmlinux	EXPORT_SYMBOL_GPL
+0xea1fd02f	sysdev_driver_register	vmlinux	EXPORT_SYMBOL_GPL
+0x4bd84ddc	cap_netlink_recv	vmlinux	EXPORT_SYMBOL
+0x763e54a4	irlmp_unregister_client	net/irda/irda	EXPORT_SYMBOL
+0x05f47f41	ib_cancel_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xa78bd894	iTCO_vendor_pre_set_heartbeat	drivers/char/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x56c8799d	scsi_kunmap_atomic_sg	vmlinux	EXPORT_SYMBOL
+0xd355dbd2	scsi_block_when_processing_errors	vmlinux	EXPORT_SYMBOL
+0xde9b17ed	agp3_generic_fetch_size	vmlinux	EXPORT_SYMBOL
+0x96e5c86f	f_setown	vmlinux	EXPORT_SYMBOL
+0xc5efb48f	snd_seq_instr_find	sound/core/seq/snd-seq-instr	EXPORT_SYMBOL
+0xd9fbc1ea	edac_device_free_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x05e807a9	xdr_encode_string	vmlinux	EXPORT_SYMBOL
+0x8c1254c9	usb_clear_halt	vmlinux	EXPORT_SYMBOL
+0x2d96b304	dvb_generic_release	vmlinux	EXPORT_SYMBOL
+0xce4904a4	acpi_leave_sleep_state	vmlinux	EXPORT_SYMBOL
+0x1e9319b5	__down_write_trylock	vmlinux	EXPORT_SYMBOL
+0x6d27ef64	__bitmap_empty	vmlinux	EXPORT_SYMBOL
+0x2e965e8c	elv_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x4b8270ce	submit_bh	vmlinux	EXPORT_SYMBOL
+0x341907ff	page_mkclean	vmlinux	EXPORT_SYMBOL_GPL
+0x405c1144	get_seconds	vmlinux	EXPORT_SYMBOL
+0xb714a981	console_print	vmlinux	EXPORT_SYMBOL
+0x3021997d	sys_fillrect	drivers/video/sysfillrect	EXPORT_SYMBOL
+0xe3e5d063	hostap_set_word	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x38ea31d4	videobuf_dvb_register	drivers/media/video/video-buf-dvb	EXPORT_SYMBOL
+0x595f0fcc	unregister_8022_client	vmlinux	EXPORT_SYMBOL
+0x1d3c23b7	pi_do_claimed	vmlinux	EXPORT_SYMBOL
+0xf0f1246c	kvasprintf	vmlinux	EXPORT_SYMBOL
+0xa6dcc773	rb_insert_color	vmlinux	EXPORT_SYMBOL
+0xcef721d2	__inode_dir_notify	vmlinux	EXPORT_SYMBOL
+0xe401f220	svcauth_unix_set_client	vmlinux	EXPORT_SYMBOL
+0x8b752ac1	ata_tf_to_fis	vmlinux	EXPORT_SYMBOL_GPL
+0x66d87d38	symbol_put_addr	vmlinux	EXPORT_SYMBOL_GPL
+0x8775ebc9	irttp_close_tsap	net/irda/irda	EXPORT_SYMBOL
+0x0af6596b	hashbin_remove_this	net/irda/irda	EXPORT_SYMBOL
+0xacd3841c	irlmp_close_lsap	net/irda/irda	EXPORT_SYMBOL
+0xa69322d8	ib_create_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x96ac41ae	i2c_smbus_read_word_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x2ccb0163	tcf_hash_search	vmlinux	EXPORT_SYMBOL
+0xd0fa14de	llc_set_station_handler	vmlinux	EXPORT_SYMBOL
+0x6c715c6d	tty_buffer_request_room	vmlinux	EXPORT_SYMBOL_GPL
+0xb922c831	d_alloc	vmlinux	EXPORT_SYMBOL
+0x4616d9bf	b1_load_t4file	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xfee11c2c	fc_host_post_event	vmlinux	EXPORT_SYMBOL
+0xa47433d5	journal_extend	vmlinux	EXPORT_SYMBOL
+0x2375de85	wiphy_unregister	vmlinux	EXPORT_SYMBOL
+0x4d451cbb	dvb_ca_en50221_camchange_irq	vmlinux	EXPORT_SYMBOL
+0xdbbad5d4	blk_execute_rq_nowait	vmlinux	EXPORT_SYMBOL_GPL
+0x4884e0b5	__percpu_depopulate_mask	vmlinux	EXPORT_SYMBOL_GPL
+0xb0baa1a5	dccp_feat_change	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xc6073d51	edac_pci_release_generic_ctl	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xd98ebe8b	ipmi_destroy_user	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xe0e65555	udp_proc_register	vmlinux	EXPORT_SYMBOL
+0x1dbfa2ac	kernel_sendpage	vmlinux	EXPORT_SYMBOL
+0xdf327cd1	ata_interrupt	vmlinux	EXPORT_SYMBOL_GPL
+0xdc018fb5	pci_choose_state	vmlinux	EXPORT_SYMBOL
+0x47636033	swiotlb	vmlinux	EXPORT_SYMBOL
+0xe7a2620e	save_vga	drivers/video/vgastate	EXPORT_SYMBOL
+0xcf8b77a4	cx2341x_mpeg_ctrls	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x23a6e4a0	ttpci_budget_init_hooks	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x902a3cd2	ir_codes_hauppauge_new	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x331bccad	percpu_counter_init	vmlinux	EXPORT_SYMBOL
+0xd1581077	clear_user	vmlinux	EXPORT_SYMBOL
+0x9f823278	register_capi_driver	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x4c5aa0a7	rdma_leave_multicast	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x76a58260	tpm_get_timeouts	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xc8ac81c2	compat_tcp_getsockopt	vmlinux	EXPORT_SYMBOL
+0x1937d273	led_trigger_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x41fe29b7	dm_device_name	vmlinux	EXPORT_SYMBOL_GPL
+0x453acd98	ata_eh_qc_retry	vmlinux	EXPORT_SYMBOL_GPL
+0xa4f963a2	clear_inode	vmlinux	EXPORT_SYMBOL
+0xd5122194	__mlx4_cmd	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xc5ee23c6	usbvideo_TestPattern	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0xed5cccd1	ir_input_keydown	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x34a5b02c	neigh_parms_release	vmlinux	EXPORT_SYMBOL
+0xabf9be12	hpsb_register_highlevel	vmlinux	EXPORT_SYMBOL
+0x5c892caf	device_release_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x0ea0ea45	swiotlb_alloc_coherent	vmlinux	EXPORT_SYMBOL
+0x77a108df	_write_unlock_irqrestore	vmlinux	EXPORT_SYMBOL
+0x3a00548c	snd_trident_start_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x521375fe	snd_sbdsp_reset	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x518bb7f8	copy_from_user_toio	vmlinux	EXPORT_SYMBOL
+0x00cd9c6f	scsi_register_interface	vmlinux	EXPORT_SYMBOL
+0x47a6979c	vfs_setlease	vmlinux	EXPORT_SYMBOL_GPL
+0x80564cb8	i2c_smbus_read_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x9f25882b	usb_put_intf	vmlinux	EXPORT_SYMBOL_GPL
+0xe694cc8a	set_current_groups	vmlinux	EXPORT_SYMBOL
+0x6d33adf8	wait_for_completion_timeout	vmlinux	EXPORT_SYMBOL
+0x715fed0d	snd_cs8427_iec958_build	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0x9bb422ba	__nf_conntrack_helper_find_byname	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xcc0345e4	xfrm6_input_addr	net/ipv6/ipv6	EXPORT_SYMBOL
+0x387afc09	mlx4_cq_alloc	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xd45757c9	tda8083_attach	drivers/media/dvb/frontends/tda8083	EXPORT_SYMBOL
+0xfc06937e	acpi_processor_unregister_performance	vmlinux	EXPORT_SYMBOL
+0xfa037e79	update_region	vmlinux	EXPORT_SYMBOL
+0x661601de	sprint_symbol	vmlinux	EXPORT_SYMBOL_GPL
+0x2fe33a09	hci_get_route	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x7b8d602c	tifm_remove_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xcf4e0bc6	cx88_set_tvaudio	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x821b4f1b	capi20_release	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xa02ec3b0	tcf_em_unregister	vmlinux	EXPORT_SYMBOL
+0x7718a0be	scm_fp_dup	vmlinux	EXPORT_SYMBOL
+0x0e5124e4	devres_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xc82f17ca	tty_vhangup	vmlinux	EXPORT_SYMBOL
+0xba990497	shrink_dcache_parent	vmlinux	EXPORT_SYMBOL
+0x922c012b	ac97_bus_type	sound/ac97_bus	EXPORT_SYMBOL
+0x419b02fc	tipc_send2port	net/tipc/tipc	EXPORT_SYMBOL
+0x3609de81	nf_conntrack_count	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe330bce9	v4l2_prio_init	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xca76a643	suni_init	drivers/atm/suni	EXPORT_SYMBOL
+0xf589b391	inet_twdr_twkill_work	vmlinux	EXPORT_SYMBOL_GPL
+0x609f1c7e	synchronize_net	vmlinux	EXPORT_SYMBOL
+0xe70edc9a	bus_for_each_dev	vmlinux	EXPORT_SYMBOL_GPL
+0xac70ae19	bus_for_each_drv	vmlinux	EXPORT_SYMBOL_GPL
+0xe523ad75	synchronize_irq	vmlinux	EXPORT_SYMBOL
+0x6091797f	synchronize_rcu	vmlinux	EXPORT_SYMBOL_GPL
+0x9d70fea3	tipc_recv_msg	net/tipc/tipc	EXPORT_SYMBOL
+0xf3d5644b	pneigh_lookup	vmlinux	EXPORT_SYMBOL
+0xa7a92557	parport_negotiate	vmlinux	EXPORT_SYMBOL
+0x9e7d6bd0	__udelay	vmlinux	EXPORT_SYMBOL
+0xdf8c695a	__ndelay	vmlinux	EXPORT_SYMBOL
+0xe062bfc9	selinux_relabel_packet_permission	vmlinux	EXPORT_SYMBOL_GPL
+0x1211df5d	saa7134_devlist	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x806d4a84	snd_timer_close	vmlinux	EXPORT_SYMBOL
+0x67f7d481	blk_queue_find_tag	vmlinux	EXPORT_SYMBOL
+0x42a4bdf2	in_egroup_p	vmlinux	EXPORT_SYMBOL
+0x5057bc7e	edac_mc_handle_ue_no_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x07a890c8	fb_alloc_cmap	vmlinux	EXPORT_SYMBOL
+0x409873e3	tty_termios_baud_rate	vmlinux	EXPORT_SYMBOL
+0xe520315d	dccp_check_req	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x8b48bdb1	skb_append_datato_frags	vmlinux	EXPORT_SYMBOL
+0x6ef56f31	release_firmware	vmlinux	EXPORT_SYMBOL
+0x8c183cbe	iowrite16	vmlinux	EXPORT_SYMBOL
+0x436c2179	iowrite32	vmlinux	EXPORT_SYMBOL
+0x37befc70	jiffies_to_msecs	vmlinux	EXPORT_SYMBOL
+0x7f24de73	jiffies_to_usecs	vmlinux	EXPORT_SYMBOL
+0xb18782d7	tcp_child_process	vmlinux	EXPORT_SYMBOL
+0xa9f9dab0	pcmcia_socket_class	vmlinux	EXPORT_SYMBOL
+0xaa136450	param_get_charp	vmlinux	EXPORT_SYMBOL
+0xa9824bfa	cxgb3_ofld_send	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x35481717	swiotlb_sync_single_range_for_device	vmlinux	EXPORT_SYMBOL_GPL
+0xb5718443	bsg_unregister_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xd128c0ec	prepare_binprm	vmlinux	EXPORT_SYMBOL
+0x0ccf3e4e	find_pid	vmlinux	EXPORT_SYMBOL_GPL
+0xf6c58c8d	hashbin_get_first	net/irda/irda	EXPORT_SYMBOL
+0xe46518a5	atm_dev_deregister	net/atm/atm	EXPORT_SYMBOL
+0x0ecb2e5d	cfag12864b_disable	drivers/auxdisplay/cfag12864b	EXPORT_SYMBOL_GPL
+0xcc40dcf1	tcp_v4_destroy_sock	vmlinux	EXPORT_SYMBOL
+0xf8814f73	rb_last	vmlinux	EXPORT_SYMBOL
+0x119021c4	inotify_rm_watch	vmlinux	EXPORT_SYMBOL_GPL
+0xe6fbe430	can_do_mlock	vmlinux	EXPORT_SYMBOL
+0xdf60cc27	__print_symbol	vmlinux	EXPORT_SYMBOL
+0x60a13e90	rcu_barrier	vmlinux	EXPORT_SYMBOL_GPL
+0x893c55d1	ndisc_mc_map	net/ipv6/ipv6	EXPORT_SYMBOL
+0xd464e760	v4l2_ctrl_query_menu	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xf495e611	b1_load_firmware	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x817cf418	acpi_smbus_read	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0xf3c264ed	sysdev_register	vmlinux	EXPORT_SYMBOL_GPL
+0x19d5d20a	acpi_walk_namespace	vmlinux	EXPORT_SYMBOL
+0x1d26aa98	sprintf	vmlinux	EXPORT_SYMBOL
+0x72ce7867	simple_unlink	vmlinux	EXPORT_SYMBOL
+0x60b770af	simple_attr_write	vmlinux	EXPORT_SYMBOL_GPL
+0x2e2666e8	generic_listxattr	vmlinux	EXPORT_SYMBOL
+0xdc0631a3	ieee80211softmac_start	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x9c447fba	rdma_addr_register_client	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0xf6ebc03b	net_ratelimit	vmlinux	EXPORT_SYMBOL
+0xdbcb7b6a	csr1212_release_keyval	vmlinux	EXPORT_SYMBOL
+0xc5ca0911	mptscsih_io_done	vmlinux	EXPORT_SYMBOL
+0xb7c65793	iscsi_prep_unsolicit_data_pdu	vmlinux	EXPORT_SYMBOL_GPL
+0xbe71780e	sas_eh_bus_reset_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x927e989f	gen_pool_alloc	vmlinux	EXPORT_SYMBOL
+0x6451294b	posix_acl_valid	vmlinux	EXPORT_SYMBOL
+0xd220ec70	snd_seq_instr_list_free	sound/core/seq/snd-seq-instr	EXPORT_SYMBOL
+0x7cf9f07d	raid_class_release	vmlinux	EXPORT_SYMBOL
+0xd8d0fb83	scsi_register	vmlinux	EXPORT_SYMBOL
+0x615fc72c	journal_dirty_data	vmlinux	EXPORT_SYMBOL
+0x7f81d8b8	find_vma	vmlinux	EXPORT_SYMBOL
+0x76b895c6	nf_ct_extend_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x58be820e	hdlcdrv_transmitter	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0x6a2ffe8e	svc_print_addr	vmlinux	EXPORT_SYMBOL_GPL
+0x5038a1e4	xfrm_state_get_afinfo	vmlinux	EXPORT_SYMBOL
+0xfaf022d6	kernel_connect	vmlinux	EXPORT_SYMBOL
+0x6c21c830	hpsb_alloc_packet	vmlinux	EXPORT_SYMBOL
+0x1eb6ee42	inotify_dentry_parent_queue_event	vmlinux	EXPORT_SYMBOL_GPL
+0x05abecfe	dma_ops	vmlinux	EXPORT_SYMBOL
+0x5dab4070	nxt200x_attach	drivers/media/dvb/frontends/nxt200x	EXPORT_SYMBOL
+0x9001db97	inet_stream_connect	vmlinux	EXPORT_SYMBOL
+0xa05c03df	mempool_kmalloc	vmlinux	EXPORT_SYMBOL
+0x044fbf49	mempool_kzalloc	vmlinux	EXPORT_SYMBOL
+0x2ddc0a4e	screen_info	vmlinux	EXPORT_SYMBOL
+0xe17ea4af	ata_eh_qc_complete	vmlinux	EXPORT_SYMBOL_GPL
+0xf0bcc0b3	acpi_os_create_semaphore	vmlinux	EXPORT_SYMBOL
+0xf92a4c87	pci_release_regions	vmlinux	EXPORT_SYMBOL
+0x1eb344b3	boot_tvec_bases	vmlinux	EXPORT_SYMBOL
+0x16471586	snd_util_mem_free	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0xd5791cfd	snd_seq_simple_init	sound/core/seq/instr/snd-ainstr-simple	EXPORT_SYMBOL
+0xcdfd7781	tms380tr_close	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0xbd41046e	videobuf_reqbufs	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xe9456a5a	sysctl_xfrm_aevent_rseqth	vmlinux	EXPORT_SYMBOL
+0x5e235983	mpt_device_driver_register	vmlinux	EXPORT_SYMBOL
+0xaa5a5677	relay_subbufs_consumed	vmlinux	EXPORT_SYMBOL_GPL
+0x0d26a76d	_write_lock_irq	vmlinux	EXPORT_SYMBOL
+0x82c7ffc3	ieee80211_wake_queue	net/mac80211/mac80211	EXPORT_SYMBOL
+0x602eb89b	ht_create_irq	vmlinux	EXPORT_SYMBOL
+0x4318d102	crypto_hash_type	vmlinux	EXPORT_SYMBOL_GPL
+0x66ce8587	journal_ack_err	vmlinux	EXPORT_SYMBOL
+0x92fd9230	inet6_csk_addr2sockaddr	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x1878f62b	edac_err_assert	vmlinux	EXPORT_SYMBOL_GPL
+0x2926c790	devres_close_group	vmlinux	EXPORT_SYMBOL_GPL
+0xe4c1df3e	_read_lock_bh	vmlinux	EXPORT_SYMBOL
+0xff88375f	xt_unregister_targets	net/netfilter/x_tables	EXPORT_SYMBOL
+0x8250af10	klist_next	vmlinux	EXPORT_SYMBOL_GPL
+0xa9a7e445	tcp_rcv_established	vmlinux	EXPORT_SYMBOL
+0xf1f13f7b	spi_alloc_master	vmlinux	EXPORT_SYMBOL_GPL
+0x85593273	acpi_ec_remove_query_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x20000329	simple_strtoul	vmlinux	EXPORT_SYMBOL
+0xc6d6ded3	proc_net_stat	vmlinux	EXPORT_SYMBOL
+0x720eaed4	drop_pagecache_sb	vmlinux	EXPORT_SYMBOL
+0xd60f2c6c	o2hb_check_local_node_heartbeating	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x1cf244ce	tda826x_attach	drivers/media/dvb/frontends/tda826x	EXPORT_SYMBOL
+0xb1f4eb35	ir_codes_avermedia_dvbt	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x37d357d4	ib_send_cm_dreq	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x072ab39f	ib_send_cm_drep	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xd9043b53	drm_addmap	drivers/char/drm/drm	EXPORT_SYMBOL
+0xf93f594e	nf_register_afinfo	vmlinux	EXPORT_SYMBOL_GPL
+0xe31fc0bd	mraid_mm_register_adp	vmlinux	EXPORT_SYMBOL
+0x23f4d384	proc_symlink	vmlinux	EXPORT_SYMBOL
+0x9da8d8b6	get_sb_pseudo	vmlinux	EXPORT_SYMBOL
+0x011e0d37	dump_trace	vmlinux	EXPORT_SYMBOL
+0xde1fce67	ieee80211softmac_wx_set_essid	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0x435cbb6b	ssb_dma_set_mask	drivers/ssb/ssb	EXPORT_SYMBOL
+0x10cde9ba	videobuf_qbuf	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x61169d62	__rtnl_link_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xa0396e02	parport_ieee1284_ecp_write_data	vmlinux	EXPORT_SYMBOL
+0x08ac6c8b	parport_ieee1284_epp_write_data	vmlinux	EXPORT_SYMBOL
+0x39f1ee6d	blk_queue_dma_alignment	vmlinux	EXPORT_SYMBOL
+0xb7aa3824	remap_vmalloc_range	vmlinux	EXPORT_SYMBOL
+0xd985dc99	mempool_free_pages	vmlinux	EXPORT_SYMBOL
+0xfcec0987	enable_irq	vmlinux	EXPORT_SYMBOL
+0x1e7bbcb3	kernel_restart	vmlinux	EXPORT_SYMBOL_GPL
+0x0c447649	bt878_device_control	drivers/media/dvb/bt8xx/bt878	EXPORT_SYMBOL
+0x7b943366	b1_getrevision	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xc8e0638a	ib_modify_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xd62be902	ib_query_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xe00ebbd4	pcmcia_register_socket	vmlinux	EXPORT_SYMBOL
+0xc632525c	sata_phy_resume	vmlinux	EXPORT_SYMBOL_GPL
+0xd1bfed2b	iscsi_set_param	vmlinux	EXPORT_SYMBOL_GPL
+0x00464b25	agp_unbind_memory	vmlinux	EXPORT_SYMBOL
+0x6d1b1bf6	snd_vx_free_firmware	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0xd71c4c58	__ieee80211_get_rx_led_name	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2ee68ce8	i2o_cntxt_list_add	vmlinux	EXPORT_SYMBOL
+0x65ac4920	i2o_event_register	vmlinux	EXPORT_SYMBOL
+0x8c81a9c8	raid_class_attach	vmlinux	EXPORT_SYMBOL
+0xc740c64a	memchr	vmlinux	EXPORT_SYMBOL
+0x57f46cef	_spin_lock_irq	vmlinux	EXPORT_SYMBOL
+0xc18ac88d	nf_ct_expect_hsize	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd7eaa39f	inet6_release	net/ipv6/ipv6	EXPORT_SYMBOL
+0x105d4f47	mpt_add_sge	vmlinux	EXPORT_SYMBOL
+0xa86c0d9b	vfs_kern_mount	vmlinux	EXPORT_SYMBOL_GPL
+0x70a6e8d9	zlib_deflateInit2	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0xd1e76e0d	dib7000pc_detection	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x4f76ac2f	b1dma_register_appl	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x24a1347b	spi_bus_type	vmlinux	EXPORT_SYMBOL_GPL
+0x64e25bf9	anon_transport_class_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x6a9112c0	submit_bio	vmlinux	EXPORT_SYMBOL
+0x1ba15924	alloc_page_buffers	vmlinux	EXPORT_SYMBOL_GPL
+0xfbf9be5d	register_oom_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xa266ecf6	sppp_reopen	drivers/net/wan/syncppp	EXPORT_SYMBOL
+0xdc12d061	mmc_remove_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xa0eea2f4	genl_sock	vmlinux	EXPORT_SYMBOL
+0x39045d84	neigh_lookup	vmlinux	EXPORT_SYMBOL
+0x604073dd	usb_put_hcd	vmlinux	EXPORT_SYMBOL
+0x8907a283	ata_host_resume	vmlinux	EXPORT_SYMBOL_GPL
+0xf6087a85	sta_info_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0xce7ff2ae	tcp_mtup_init	vmlinux	EXPORT_SYMBOL
+0xf5283172	snd_pcm_build_linear_format	vmlinux	EXPORT_SYMBOL
+0x3c7d5115	mpt_HardResetHandler	vmlinux	EXPORT_SYMBOL
+0x4c512c4f	snd_soc_dapm_get_enum_double	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x1d1b2100	snd_soc_dapm_put_enum_double	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x5ae9de22	libertas_stop_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x97a0f6c1	rdma_addr_unregister_client	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0x66ddf6be	cache_purge	vmlinux	EXPORT_SYMBOL
+0x57df67b6	simple_map_init	vmlinux	EXPORT_SYMBOL
+0xaacfdf55	alloc_buffer_head	vmlinux	EXPORT_SYMBOL
+0x93f47223	inode_setattr	vmlinux	EXPORT_SYMBOL
+0x25e2e594	pagedir1	vmlinux	EXPORT_SYMBOL_GPL
+0x98b3095e	dccp_feat_clean	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xbab53cf2	dccp_feat_clone	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xf818b0ac	usbnet_get_endpoints	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xb57b1192	gameport_unregister_port	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xc41fe6c2	xdr_write_pages	vmlinux	EXPORT_SYMBOL
+0x3fcc16ec	ip_route_input	vmlinux	EXPORT_SYMBOL
+0xe4e15c41	cpu_data	vmlinux	EXPORT_SYMBOL
+0xaa62f7e8	iscsi_conn_teardown	vmlinux	EXPORT_SYMBOL_GPL
+0x2263da82	device_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0xc8bf9ffa	nf_ct_alloc_hashtable	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x91bb98e2	gs_flush_chars	drivers/char/generic_serial	EXPORT_SYMBOL
+0x9f85bd50	ipv6_skip_exthdr	vmlinux	EXPORT_SYMBOL
+0xbb5c29b4	hpsb_allocate_and_register_addrspace	vmlinux	EXPORT_SYMBOL
+0x20c8fc33	pci_osc_control_set	vmlinux	EXPORT_SYMBOL
+0xcfb2dc00	aio_complete	vmlinux	EXPORT_SYMBOL
+0x7ded8240	param_get_ulong	vmlinux	EXPORT_SYMBOL
+0x1765880a	kill_pid	vmlinux	EXPORT_SYMBOL
+0x93763fba	rt6_lookup	net/ipv6/ipv6	EXPORT_SYMBOL
+0x8b9eba0e	spi_bitbang_cleanup	drivers/spi/spi_bitbang	EXPORT_SYMBOL_GPL
+0xb5ca1c46	slhc_free	drivers/net/slhc	EXPORT_SYMBOL
+0x02500586	thinkpad_ec_unlock	drivers/misc/thinkpad_ec	EXPORT_SYMBOL_GPL
+0xcdb28670	hpsb_make_lockpacket	vmlinux	EXPORT_SYMBOL
+0x819cc9ba	cap_settime	vmlinux	EXPORT_SYMBOL
+0x64999478	congestion_wait	vmlinux	EXPORT_SYMBOL
+0xdd0944a5	sysctl_intvec	vmlinux	EXPORT_SYMBOL
+0x111fe416	dccp_v4_connect	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x48091afc	hci_recv_fragment	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xb8b45556	config_item_set_name	fs/configfs/configfs	EXPORT_SYMBOL
+0x40a5633c	i2c_del_driver	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x9bd4a076	blk_remove_plug	vmlinux	EXPORT_SYMBOL
+0x3bf0e299	dquot_release	vmlinux	EXPORT_SYMBOL
+0xb5f54afa	__atomic_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0xc7888308	snd_soc_free_pcms	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x5dfa4696	move_addr_to_kernel	vmlinux	EXPORT_SYMBOL
+0x606b4b00	hpsb_iso_xmit_init	vmlinux	EXPORT_SYMBOL
+0xe312239c	ata_altstatus	vmlinux	EXPORT_SYMBOL_GPL
+0x10815c71	sas_slave_configure	vmlinux	EXPORT_SYMBOL_GPL
+0x9db21624	hex_dump_to_buffer	vmlinux	EXPORT_SYMBOL
+0x5a6a66c2	file_ra_state_init	vmlinux	EXPORT_SYMBOL_GPL
+0x3a5de3b0	snd_rawmidi_kernel_release	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x027f9f76	mult_to_ib_rate	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x761be4a5	i2c_clients_command	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x1e87949f	xfrm_register_mode	vmlinux	EXPORT_SYMBOL
+0xafbdfa89	inet_csk_get_port	vmlinux	EXPORT_SYMBOL_GPL
+0x4dd5586b	kvm_init_arch	vmlinux	EXPORT_SYMBOL_GPL
+0xe7990475	sas_change_queue_type	vmlinux	EXPORT_SYMBOL_GPL
+0xd2be54fb	add_to_page_cache	vmlinux	EXPORT_SYMBOL
+0x0ca0d219	snd_soc_new_pcms	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x0085abe1	hostap_init_ap_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xfcfc5266	videobuf_dma_init	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xe19a11ac	capi20_get_profile	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x88d8c843	klist_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x909206fe	ethtool_op_get_ufo	vmlinux	EXPORT_SYMBOL
+0xddd09ff8	dev_get_flags	vmlinux	EXPORT_SYMBOL
+0xe7115b05	usb_get_status	vmlinux	EXPORT_SYMBOL
+0x33b1c0c7	mptscsih_ioc_reset	vmlinux	EXPORT_SYMBOL
+0xc5263736	__wait_on_bit_lock	vmlinux	EXPORT_SYMBOL
+0x6d2053c7	DoC2k_init	drivers/mtd/devices/doc2000	EXPORT_SYMBOL_GPL
+0x9ee7d53c	qt1010_attach	drivers/media/dvb/frontends/qt1010	EXPORT_SYMBOL
+0x06830b9a	ib_pack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb8000b1c	svc_auth_register	vmlinux	EXPORT_SYMBOL
+0xe5122890	flow_cache_genid	vmlinux	EXPORT_SYMBOL
+0x12e71d8c	gen_new_estimator	vmlinux	EXPORT_SYMBOL
+0xbd61b110	input_class	vmlinux	EXPORT_SYMBOL_GPL
+0xb4c00dcf	i2o_controllers	vmlinux	EXPORT_SYMBOL
+0x3d5e77ed	agp_backend_release	vmlinux	EXPORT_SYMBOL
+0xfe81ca5a	pci_set_master	vmlinux	EXPORT_SYMBOL
+0x1063b0ce	crypto_alg_mod_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0xa0fe5771	__devm_request_region	vmlinux	EXPORT_SYMBOL
+0x616ce30b	alloc_orinocodev	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xe51eb17a	mmc_set_data_timeout	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x7b870361	flexcop_pass_dmx_data	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xb497b5a1	iw_cm_accept	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x027d0b66	reqsk_queue_alloc	vmlinux	EXPORT_SYMBOL
+0x1e1f7c4e	dma_async_device_unregister	vmlinux	EXPORT_SYMBOL
+0x563f388b	scsi_eh_finish_cmd	vmlinux	EXPORT_SYMBOL
+0x1ec08943	vc_cons	vmlinux	EXPORT_SYMBOL
+0x234509f3	strncat	vmlinux	EXPORT_SYMBOL
+0xb11fa1ce	strlcat	vmlinux	EXPORT_SYMBOL
+0x5c46b6fa	posix_acl_chmod_masq	vmlinux	EXPORT_SYMBOL
+0xd2965f6f	kthread_should_stop	vmlinux	EXPORT_SYMBOL
+0xa89a9f9a	snd_ac97_bus	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x2bccce36	csr1212_parse_keyval	vmlinux	EXPORT_SYMBOL
+0x4d166d89	ata_pci_device_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0x9a88c144	blk_rq_map_kern	vmlinux	EXPORT_SYMBOL
+0xa4e8ccbc	sync_mapping_buffers	vmlinux	EXPORT_SYMBOL
+0x5122e9af	irias_delete_object	net/irda/irda	EXPORT_SYMBOL
+0x2db99e07	bt_sock_register	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x17ff2c1d	__nvram_read_byte	drivers/char/nvram	EXPORT_SYMBOL
+0x22a73912	__tcp_put_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0x6c05933a	__scsi_add_device	vmlinux	EXPORT_SYMBOL
+0x7a10c1f6	fat_scan	vmlinux	EXPORT_SYMBOL_GPL
+0x95a5df3f	inode_change_ok	vmlinux	EXPORT_SYMBOL
+0xbcd3ef13	irias_object_change_attribute	net/irda/irda	EXPORT_SYMBOL
+0x148df8be	datagram_poll	vmlinux	EXPORT_SYMBOL
+0x6efbb589	snd_pcm_hw_constraint_minmax	vmlinux	EXPORT_SYMBOL
+0x69d38ed9	__scsi_print_sense	vmlinux	EXPORT_SYMBOL
+0x4bc7a6b9	blk_queue_end_tag	vmlinux	EXPORT_SYMBOL
+0xe00177d7	snd_midi_event_free	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x4ff03460	__tcf_em_tree_match	vmlinux	EXPORT_SYMBOL
+0xd0c92b70	pci_get_bus_and_slot	vmlinux	EXPORT_SYMBOL
+0x41f3d3a7	__up_read	vmlinux	EXPORT_SYMBOL
+0x08763718	jbd2_journal_check_available_features	vmlinux	EXPORT_SYMBOL
+0x93653d0e	flush_old_exec	vmlinux	EXPORT_SYMBOL
+0xaab06af8	_write_lock_irqsave	vmlinux	EXPORT_SYMBOL
+0x7f1baad7	mdiobus_unregister	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x16f55bd8	flexcop_dma_control_timer_irq	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xa1dc8a62	inet_addr_type	vmlinux	EXPORT_SYMBOL
+0xfe33fecb	llc_sap_close	vmlinux	EXPORT_SYMBOL
+0x439ce317	__sata_phy_reset	vmlinux	EXPORT_SYMBOL_GPL
+0x20267f8c	cpu_online_map	vmlinux	EXPORT_SYMBOL
+0xc105d52f	ieee80211softmac_wx_get_scan_results	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0xc80e9978	phy_detach	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x55f060ee	drm_sman_set_range	drivers/char/drm/drm	EXPORT_SYMBOL
+0x54abc774	mii_link_ok	vmlinux	EXPORT_SYMBOL
+0xb3d4176e	nf_conntrack_l4proto_udp6	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x3277a2aa	tcp_proc_register	vmlinux	EXPORT_SYMBOL
+0x2ee6392f	stop_tty	vmlinux	EXPORT_SYMBOL
+0x85a4d980	lookup_create	vmlinux	EXPORT_SYMBOL_GPL
+0xdc15ae01	get_sb_nodev	vmlinux	EXPORT_SYMBOL
+0x134b0482	kthread_create	vmlinux	EXPORT_SYMBOL
+0x49f5c36e	rt2x00mac_tx	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x3b0537ce	rt2x00mac_erp_ie_changed	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x45df357e	gss_decrypt_xdr_buf	vmlinux	EXPORT_SYMBOL
+0xc9beb17d	loopback_dev	vmlinux	EXPORT_SYMBOL
+0x0d3dda14	acpi_get_type	vmlinux	EXPORT_SYMBOL
+0xe885e03c	jbd2_journal_stop	vmlinux	EXPORT_SYMBOL
+0xa335a303	hci_unregister_proto	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xa67a91e8	cfi_fixup	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL
+0xed061606	capi20_manufacturer	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x2c488ed5	ipmi_get_my_LUN	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xaf037b90	twofish_setkey	crypto/twofish_common	EXPORT_SYMBOL_GPL
+0xdc5a41d3	neigh_ifdown	vmlinux	EXPORT_SYMBOL
+0x75b6c376	snd_pcm_hw_constraint_ratnums	vmlinux	EXPORT_SYMBOL
+0xafe82e10	strcspn	vmlinux	EXPORT_SYMBOL
+0x392a51bd	md_allow_write	vmlinux	EXPORT_SYMBOL_GPL
+0xf7bcfdf5	pci_scan_bridge	vmlinux	EXPORT_SYMBOL
+0x9b5f66ea	jbd2_journal_extend	vmlinux	EXPORT_SYMBOL
+0xf0f04fc8	nf_conntrack_l3proto_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe13572c7	nf_conntrack_l4proto_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x244fcdb0	usb_serial_resume	drivers/usb/serial/usbserial	EXPORT_SYMBOL
+0xce817919	sirdev_write_complete	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x1129f6fb	cx88_set_tvnorm	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x5240b30a	hid_parse_report	vmlinux	EXPORT_SYMBOL_GPL
+0xca89a65d	ieee80211_rx_irqsafe	net/mac80211/mac80211	EXPORT_SYMBOL
+0xd27555ad	ieee80211_rx	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x31ff2077	sirdev_receive	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x89cc1189	ir_codes_winfast	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x3e0048ff	nsc_gpio_read	drivers/char/nsc_gpio	EXPORT_SYMBOL
+0xca889345	drm_get_drawable_info	drivers/char/drm/drm	EXPORT_SYMBOL
+0x92381eae	ata_timing_compute	vmlinux	EXPORT_SYMBOL_GPL
+0xfe1407ca	class_create	vmlinux	EXPORT_SYMBOL_GPL
+0x40722f98	dccp_rcv_established	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xcc888113	init_atmel_card	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0xf065d4d5	usbnet_skb_return	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xa3042743	thinkpad_ec_prefetch_row	drivers/misc/thinkpad_ec	EXPORT_SYMBOL_GPL
+0xb124f021	gss_svc_to_pseudoflavor	vmlinux	EXPORT_SYMBOL
+0x38f81ed6	svc_process	vmlinux	EXPORT_SYMBOL
+0xa248b563	rpc_force_rebind	vmlinux	EXPORT_SYMBOL_GPL
+0xd3892b68	__nla_reserve	vmlinux	EXPORT_SYMBOL
+0x255db29a	register_sound_special	vmlinux	EXPORT_SYMBOL
+0xde3c41fe	ata_std_softreset	vmlinux	EXPORT_SYMBOL_GPL
+0x828ac3d6	parport_unregister_device	vmlinux	EXPORT_SYMBOL
+0x5fe18b88	percpu_counter_mod	vmlinux	EXPORT_SYMBOL
+0x29537c9e	alloc_chrdev_region	vmlinux	EXPORT_SYMBOL
+0x800d966c	inc_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x6b6506a1	rxrpc_kernel_data_delivered	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x7990a590	nf_ct_iterate_cleanup	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x3c627247	deregister_mtd_blktrans	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0x71be0b2b	tpm_show_caps	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xa0aba0c1	rpc_killall_tasks	vmlinux	EXPORT_SYMBOL
+0x729cd308	arp_find	vmlinux	EXPORT_SYMBOL
+0xbf685bdd	dev_getbyhwaddr	vmlinux	EXPORT_SYMBOL
+0x5ec3f22e	skb_checksum	vmlinux	EXPORT_SYMBOL
+0xfd98879a	rb_next	vmlinux	EXPORT_SYMBOL
+0xad09c2db	get_nfs_grace_period	vmlinux	EXPORT_SYMBOL
+0xc7690fda	buffer_migrate_page	vmlinux	EXPORT_SYMBOL
+0x5878e0d0	finish_wait	vmlinux	EXPORT_SYMBOL
+0x1212de68	ct_sip_search	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x592c3258	phy_start_aneg	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xd06d557d	saa7146_set_hps_source_and_sync	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x48021de8	alloc_etherdev_mq	vmlinux	EXPORT_SYMBOL
+0x52d7b2fd	llc_sap_list	vmlinux	EXPORT_SYMBOL
+0x91aa0c2b	scsi_print_result	vmlinux	EXPORT_SYMBOL
+0x4bbc5a25	dvb_unregister_adapter	vmlinux	EXPORT_SYMBOL
+0x61b7b126	simple_strtoull	vmlinux	EXPORT_SYMBOL
+0x4cbbd171	__bitmap_weight	vmlinux	EXPORT_SYMBOL
+0x5a5e7ea3	simple_read_from_buffer	vmlinux	EXPORT_SYMBOL
+0x18ef2fba	kmem_ptr_validate	vmlinux	EXPORT_SYMBOL
+0x54ecefb5	net2280_set_fifo_mode	drivers/usb/gadget/net2280	EXPORT_SYMBOL
+0xd8178b7e	pccard_validate_cis	vmlinux	EXPORT_SYMBOL
+0xe449528f	class_device_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xff9ca065	fb_edid_to_monspecs	vmlinux	EXPORT_SYMBOL
+0x3147857d	default_red	vmlinux	EXPORT_SYMBOL
+0xa681fe88	generate_random_uuid	vmlinux	EXPORT_SYMBOL
+0x9ca8a036	rxrpc_kernel_accept_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x8e44fa29	nf_ct_free_hashtable	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4be9f0b5	t3_l2t_send_slow	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x99883c12	fb_deferred_io_cleanup	vmlinux	EXPORT_SYMBOL_GPL
+0x0b571477	path_release	vmlinux	EXPORT_SYMBOL
+0x2e7d6357	vfs_statfs	vmlinux	EXPORT_SYMBOL
+0xd526ec9c	t3_l2e_free	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x93169c61	or51132_attach	drivers/media/dvb/frontends/or51132	EXPORT_SYMBOL
+0xdfd423a5	saa7146_devices_lock	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x2af736f6	xfrm_replay_check	vmlinux	EXPORT_SYMBOL
+0xf3f5d7bf	cfi_cmdset_0020	drivers/mtd/chips/cfi_cmdset_0020	EXPORT_SYMBOL_GPL
+0x8651419f	cfi_cmdset_0002	drivers/mtd/chips/cfi_cmdset_0002	EXPORT_SYMBOL_GPL
+0xc0d75693	cfi_cmdset_0001	drivers/mtd/chips/cfi_cmdset_0001	EXPORT_SYMBOL_GPL
+0x43084b72	cfi_cmdset_0003	drivers/mtd/chips/cfi_cmdset_0001	EXPORT_SYMBOL_GPL
+0x94bef5db	cfi_cmdset_0200	drivers/mtd/chips/cfi_cmdset_0001	EXPORT_SYMBOL_GPL
+0xbe3e295a	i2c_new_probed_device	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0xdf1e51e1	drm_agp_free	drivers/char/drm/drm	EXPORT_SYMBOL
+0x5bcd05f0	udp_ioctl	vmlinux	EXPORT_SYMBOL
+0x8b565ee3	__nla_reserve_nohdr	vmlinux	EXPORT_SYMBOL
+0x6cf28e32	br_handle_frame_hook	vmlinux	EXPORT_SYMBOL
+0x0ed6ba17	rtnetlink_put_metrics	vmlinux	EXPORT_SYMBOL
+0xea10212a	int_to_scsilun	vmlinux	EXPORT_SYMBOL
+0xa58b766d	class_device_del	vmlinux	EXPORT_SYMBOL_GPL
+0x45dacff0	may_umount	vmlinux	EXPORT_SYMBOL
+0x16eecc7c	ib_query_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x110c200e	dm_register_dirty_log_type	vmlinux	EXPORT_SYMBOL
+0xbae477e1	kvm_emulate_cpuid	vmlinux	EXPORT_SYMBOL_GPL
+0x23c40fc7	pcix_get_max_mmrbc	vmlinux	EXPORT_SYMBOL
+0xb3175bad	block_read_full_page	vmlinux	EXPORT_SYMBOL
+0x68a0378c	__scsi_alloc_queue	vmlinux	EXPORT_SYMBOL
+0xfd97e3b5	pci_cleanup_aer_correct_error_status	vmlinux	EXPORT_SYMBOL_GPL
+0xeaa36240	__up_write	vmlinux	EXPORT_SYMBOL
+0xf22aa033	hashbin_find	net/irda/irda	EXPORT_SYMBOL
+0x31c044ce	edac_pci_del_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xdb7cebfe	tcp_v4_connect	vmlinux	EXPORT_SYMBOL
+0x5d1f990c	tcp_sync_mss	vmlinux	EXPORT_SYMBOL
+0x95cbda90	sas_port_delete	vmlinux	EXPORT_SYMBOL
+0x3c83b8f3	dvb_net_init	vmlinux	EXPORT_SYMBOL
+0x2fecc500	jbd2_journal_ack_err	vmlinux	EXPORT_SYMBOL
+0xd0c05159	emergency_restart	vmlinux	EXPORT_SYMBOL_GPL
+0x3ff62317	local_bh_disable	vmlinux	EXPORT_SYMBOL
+0x72d2c1b8	snd_rawmidi_input_params	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x4f69299d	cxgb3_remove_tid	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0xea03d9bd	tcp_death_row	vmlinux	EXPORT_SYMBOL_GPL
+0xeadffa90	md_error	vmlinux	EXPORT_SYMBOL
+0x6d509555	serio_rescan	vmlinux	EXPORT_SYMBOL
+0x10bc03a9	framebuffer_alloc	vmlinux	EXPORT_SYMBOL
+0x0082eebf	bio_get_nr_vecs	vmlinux	EXPORT_SYMBOL
+0x0b074a7b	tipc_multicast	net/tipc/tipc	EXPORT_SYMBOL
+0x86be7924	dccp_packet_name	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xbd5fde3d	xfrm_policy_byid	vmlinux	EXPORT_SYMBOL
+0x71978b9d	cpufreq_driver_target	vmlinux	EXPORT_SYMBOL_GPL
+0x0cd89d74	load_nls_default	vmlinux	EXPORT_SYMBOL
+0x49aa82c8	nonseekable_open	vmlinux	EXPORT_SYMBOL
+0x1339bbe7	kmem_cache_create	vmlinux	EXPORT_SYMBOL
+0xd281ab14	clear_dynpageflag	vmlinux	EXPORT_SYMBOL_GPL
+0x1b6d6a8a	mlx4_mr_free	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x21f18d75	dm_scsi_err_handler	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0xeb8f54b3	strstrip	vmlinux	EXPORT_SYMBOL
+0x594f7cd7	seq_escape	vmlinux	EXPORT_SYMBOL
+0x3c7907ed	snd_i2c_probeaddr	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0x6eddcefa	ubi_open_volume	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x237282e6	xfrm_ealg_get_byname	vmlinux	EXPORT_SYMBOL_GPL
+0x110013f3	dev_get_by_flags	vmlinux	EXPORT_SYMBOL
+0x4bc64d4e	ata_qc_issue_prot	vmlinux	EXPORT_SYMBOL_GPL
+0x08182358	class_device_create	vmlinux	EXPORT_SYMBOL_GPL
+0x73bb053b	d_alloc_root	vmlinux	EXPORT_SYMBOL
+0x9939e6c1	mlx4_pd_free	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x64f87c64	xfrm_lookup	vmlinux	EXPORT_SYMBOL
+0xcd89afd0	skb_store_bits	vmlinux	EXPORT_SYMBOL
+0x9b806d46	skb_over_panic	vmlinux	EXPORT_SYMBOL
+0x8d20e114	page_cache_sync_readahead	vmlinux	EXPORT_SYMBOL_GPL
+0xa2c26375	snd_soc_get_volsw	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x9597be2a	snd_soc_put_volsw	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x132f9d9c	i2c_smbus_read_byte	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x19d9f461	inet_unregister_protosw	vmlinux	EXPORT_SYMBOL
+0x83230e05	rtattr_strlcpy	vmlinux	EXPORT_SYMBOL
+0x457749e6	mb_cache_entry_free	vmlinux	EXPORT_SYMBOL
+0x208ce54a	sys_ioctl	vmlinux	EXPORT_SYMBOL
+0xd2c2bd18	snd_sbdsp_create	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x0bb64a59	ei_close	drivers/net/8390	EXPORT_SYMBOL
+0x7502f12e	blkcipher_walk_phys	vmlinux	EXPORT_SYMBOL_GPL
+0x55f508b9	dccp_v4_send_check	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0xfc4b67d9	cxgb3_free_atid	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x409ee8e7	rdma_create_id	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x1c3fb218	rdma_create_qp	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x9924c496	__usb_get_extra_descriptor	vmlinux	EXPORT_SYMBOL
+0x1de314f3	hpet_control	vmlinux	EXPORT_SYMBOL
+0x8083632e	pci_bus_assign_resources	vmlinux	EXPORT_SYMBOL
+0xd3d01535	swap_io_context	vmlinux	EXPORT_SYMBOL
+0xb9f5133b	simple_commit_write	vmlinux	EXPORT_SYMBOL
+0x7caa9b5e	ppp_unit_number	drivers/net/ppp_generic	EXPORT_SYMBOL
+0x1d90a1fe	ppp_input_error	drivers/net/ppp_generic	EXPORT_SYMBOL
+0xc0755f14	tpm_continue_selftest	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xdeb83dce	hpsb_node_write	vmlinux	EXPORT_SYMBOL
+0xa73d833c	usb_serial_generic_open	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xe8dd4f95	register_netdevice	vmlinux	EXPORT_SYMBOL
+0xa8c8f8d4	ps2_init	vmlinux	EXPORT_SYMBOL
+0x9147f926	scsi_finish_command	vmlinux	EXPORT_SYMBOL
+0x80e3832d	dvb_filter_get_ac3info	vmlinux	EXPORT_SYMBOL
+0x5d992667	elv_queue_empty	vmlinux	EXPORT_SYMBOL
+0xfcd830de	user_describe	vmlinux	EXPORT_SYMBOL_GPL
+0xe3f1c7a1	blkdev_get	vmlinux	EXPORT_SYMBOL
+0xb70f42c9	blkdev_put	vmlinux	EXPORT_SYMBOL
+0xbd0eed35	ebt_do_table	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0x5200ccc5	hci_unregister_cb	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xec78124f	cx24110_attach	drivers/media/dvb/frontends/cx24110	EXPORT_SYMBOL
+0x917c53fd	kill_pid_info_as_uid	vmlinux	EXPORT_SYMBOL_GPL
+0xc02cfdf8	snd_virmidi_new	sound/core/seq/snd-seq-virmidi	EXPORT_SYMBOL
+0xe812c2f6	ieee80211softmac_wx_trigger_scan	net/ieee80211/softmac/ieee80211softmac	EXPORT_SYMBOL_GPL
+0xf60f15ac	tcp_get_info	vmlinux	EXPORT_SYMBOL_GPL
+0x14c4764e	__alloc_skb	vmlinux	EXPORT_SYMBOL
+0x190257fb	hpsb_iso_recv_set_channel_mask	vmlinux	EXPORT_SYMBOL
+0x4e28744f	generic_osync_inode	vmlinux	EXPORT_SYMBOL
+0xc85f2e1f	mutex_trylock	vmlinux	EXPORT_SYMBOL
+0xe24d3a97	jiffies_64	vmlinux	EXPORT_SYMBOL
+0x0d6e2e7b	videocodec_register	drivers/media/video/videocodec	EXPORT_SYMBOL
+0xd44ef171	dst_ca_attach	drivers/media/dvb/bt8xx/dst_ca	EXPORT_SYMBOL
+0xb2730791	svc_create	vmlinux	EXPORT_SYMBOL
+0xeba2303e	pi_disconnect	vmlinux	EXPORT_SYMBOL
+0x2954af2b	mptscsih_abort	vmlinux	EXPORT_SYMBOL
+0x108e91c0	videobuf_dma_init_user	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xa18487d9	videobuf_queue_is_busy	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xde907a06	saa7146_register_device	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x37e7595b	xfrm_state_migrate	vmlinux	EXPORT_SYMBOL
+0x510dbb9b	sas_slave_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0xd2173d2a	pci_cleanup_aer_uncorrect_error_status	vmlinux	EXPORT_SYMBOL_GPL
+0x6def2db2	half_md4_transform	vmlinux	EXPORT_SYMBOL
+0xb2bcc347	dcache_readdir	vmlinux	EXPORT_SYMBOL
+0xa6b16a62	inode_add_bytes	vmlinux	EXPORT_SYMBOL
+0xd3565fc1	generic_file_mmap	vmlinux	EXPORT_SYMBOL
+0xca2702d5	ieee80211_alloc_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0xe40cec3b	tcp_alloc_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0x38b92846	llc_remove_pack	vmlinux	EXPORT_SYMBOL
+0x4188d439	neigh_rand_reach_time	vmlinux	EXPORT_SYMBOL
+0x78732d60	sock_common_getsockopt	vmlinux	EXPORT_SYMBOL
+0xde4a089d	sock_common_setsockopt	vmlinux	EXPORT_SYMBOL
+0x7ac29570	mptscsih_slave_configure	vmlinux	EXPORT_SYMBOL
+0xa29aac17	parport_pc_probe_port	vmlinux	EXPORT_SYMBOL
+0x0247a6e4	idr_find	vmlinux	EXPORT_SYMBOL
+0xb6c02abb	vfs_mknod	vmlinux	EXPORT_SYMBOL
+0xc906ea30	dccp_insert_option_timestamp	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x032ed16b	mlx4_multicast_attach	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xaa8f4947	ib_get_rmpp_segment	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xbbb34271	tpm_read	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x42d1c335	ethtool_op_get_sg	vmlinux	EXPORT_SYMBOL
+0x0421eb7c	skb_dequeue	vmlinux	EXPORT_SYMBOL
+0x992826f0	dvb_register_adapter	vmlinux	EXPORT_SYMBOL
+0xe43617f7	acpi_gbl_FADT	vmlinux	EXPORT_SYMBOL
+0x97c1f8ce	filemap_write_and_wait	vmlinux	EXPORT_SYMBOL
+0x27bbf221	disable_irq_nosync	vmlinux	EXPORT_SYMBOL
+0xba813bd6	lock_cpu_hotplug	vmlinux	EXPORT_SYMBOL_GPL
+0xa0921a31	call_usermodehelper_freeinfo	vmlinux	EXPORT_SYMBOL
+0x3ec398bf	irda_notify_init	net/irda/irda	EXPORT_SYMBOL
+0x01292b78	dccp_create_openreq_child	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xbf2977ee	mlx4_srq_query	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xf7584a9c	find_font	vmlinux	EXPORT_SYMBOL
+0x45e87ae6	add_uevent_var	vmlinux	EXPORT_SYMBOL_GPL
+0xedce84f5	dccp_child_process	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xdb2038db	ivtv_vapi	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x2af1a608	ir_codes_proteus_2309	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xf725b7db	ipmi_smi_watcher_unregister	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xbad001ac	rpc_wake_up_task	vmlinux	EXPORT_SYMBOL
+0xffae221d	netdev_features_change	vmlinux	EXPORT_SYMBOL
+0xe5a20dbf	platform_get_resource_byname	vmlinux	EXPORT_SYMBOL_GPL
+0x8f39d67d	refresh_vm_stats	vmlinux	EXPORT_SYMBOL
+0x46d9e0e2	phy_start	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x4ef0ac5b	gs_chars_in_buffer	drivers/char/generic_serial	EXPORT_SYMBOL
+0xc989dd34	mpt_register	vmlinux	EXPORT_SYMBOL
+0x44308bce	devres_find	vmlinux	EXPORT_SYMBOL_GPL
+0x67300234	proc_dostring	vmlinux	EXPORT_SYMBOL
+0xb54533f7	usecs_to_jiffies	vmlinux	EXPORT_SYMBOL
+0xeb0805ab	ib_query_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x9c28fee8	pci_bus_write_config_byte	vmlinux	EXPORT_SYMBOL
+0x89758544	sysfs_schedule_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x7ddcca2c	ircomm_connect_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x9f51a636	w1_reset_bus	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x6903f16c	hostap_80211_get_hdrlen	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x8c04994e	skb_insert	vmlinux	EXPORT_SYMBOL
+0xf004eb28	dm_create_error_table	vmlinux	EXPORT_SYMBOL_GPL
+0xa526443a	cap_vm_enough_memory	vmlinux	EXPORT_SYMBOL
+0xbd69cda4	journal_force_commit_nested	vmlinux	EXPORT_SYMBOL
+0x60c8e39d	uio_unregister_device	drivers/uio/uio	EXPORT_SYMBOL_GPL
+0xa8cfc855	hostap_set_auth_algs	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x904b8696	cx88_audio_thread	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x71627e85	tc_classify_compat	vmlinux	EXPORT_SYMBOL
+0x3edad223	usb_usual_clear_present	vmlinux	EXPORT_SYMBOL_GPL
+0x8532cc96	mpt_stm_index	vmlinux	EXPORT_SYMBOL
+0x6fd10e45	blk_queue_max_segment_size	vmlinux	EXPORT_SYMBOL
+0xb0bb9ed8	klist_add_tail	vmlinux	EXPORT_SYMBOL_GPL
+0x29716afb	dm_table_get_size	vmlinux	EXPORT_SYMBOL
+0x29246a23	kill_mtd_super	vmlinux	EXPORT_SYMBOL_GPL
+0xae3aa7c4	hpsb_iso_xmit_start	vmlinux	EXPORT_SYMBOL
+0x600683d3	do_unblank_screen	vmlinux	EXPORT_SYMBOL
+0x6d2afe26	pci_find_ext_capability	vmlinux	EXPORT_SYMBOL_GPL
+0x82ce7e7d	log_wait_commit	vmlinux	EXPORT_SYMBOL
+0x6e9dd606	__symbol_put	vmlinux	EXPORT_SYMBOL
+0x2c00e762	snd_ac97_get_short_name	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x2ffe84be	ssb_dma_translation	drivers/ssb/ssb	EXPORT_SYMBOL
+0x933d0bb3	ir_codes_msi_tvanywhere	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x4b4eca50	drm_compat_ioctl	drivers/char/drm/drm	EXPORT_SYMBOL
+0xa1a85d74	hpsb_create_hostinfo	vmlinux	EXPORT_SYMBOL
+0x20092385	acpi_enter_sleep_state_s4bios	vmlinux	EXPORT_SYMBOL
+0x20972bcd	pci_claim_resource	vmlinux	EXPORT_SYMBOL_GPL
+0x9b388444	get_zeroed_page	vmlinux	EXPORT_SYMBOL
+0xa41fd4cf	snd_pcm_lib_read	vmlinux	EXPORT_SYMBOL
+0x6f16294a	input_close_device	vmlinux	EXPORT_SYMBOL
+0x894416ff	mpt_raid_phys_disk_pg0	vmlinux	EXPORT_SYMBOL
+0x20c22a9c	key_validate	vmlinux	EXPORT_SYMBOL
+0xff25c5ba	tcp_vegas_init	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0x50b33ca4	capi_cmsg2message	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x650f8603	snd_pcm_format_silence_64	vmlinux	EXPORT_SYMBOL
+0x150cfce2	tty_insert_flip_string_flags	vmlinux	EXPORT_SYMBOL
+0x6e524de2	prepare_to_wait_exclusive	vmlinux	EXPORT_SYMBOL
+0xfaae81e5	ubi_open_volume_nm	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x21b5aa74	b1_release_appl	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xc34359a9	tcf_action_exec	vmlinux	EXPORT_SYMBOL
+0x9711ebdd	platform_device_add	vmlinux	EXPORT_SYMBOL_GPL
+0x4b5e8d00	remove_proc_entry	vmlinux	EXPORT_SYMBOL
+0x1d432735	ipv6_opt_accepted	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0xb04c88f8	arpt_register_table	net/ipv4/netfilter/arp_tables	EXPORT_SYMBOL
+0x0dfedd0f	ssb_bus_powerup	drivers/ssb/ssb	EXPORT_SYMBOL
+0x3cc0a3bb	xfrm_spd_getinfo	vmlinux	EXPORT_SYMBOL
+0x4b624ab4	ata_host_intr	vmlinux	EXPORT_SYMBOL_GPL
+0x95f5dd5b	pci_walk_bus	vmlinux	EXPORT_SYMBOL_GPL
+0xc06ed111	bd_release_from_disk	vmlinux	EXPORT_SYMBOL_GPL
+0xa6bf04a6	atm_alloc_charge	net/atm/atm	EXPORT_SYMBOL
+0xa6e8ea9b	cx88_reset	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x89a31a56	_snd_pcm_hw_param_setempty	vmlinux	EXPORT_SYMBOL
+0x06198c21	uart_resume_port	vmlinux	EXPORT_SYMBOL
+0x4f353ca3	snd_vx_dsp_boot	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x8ede9e26	ax25_protocol_release	net/ax25/ax25	EXPORT_SYMBOL
+0x8c78d198	ivtv_udma_setup	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x2b8eab1f	capilib_free_ncci	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xb05fc310	sysctl_rmem_max	vmlinux	EXPORT_SYMBOL
+0xfac8865f	sysctl_wmem_max	vmlinux	EXPORT_SYMBOL
+0x9b8df747	ps2_handle_ack	vmlinux	EXPORT_SYMBOL
+0x23e7297b	parport_ieee1284_ecp_read_data	vmlinux	EXPORT_SYMBOL
+0x362d0ae0	parport_ieee1284_epp_read_data	vmlinux	EXPORT_SYMBOL
+0x85f57b61	jbd2_journal_errno	vmlinux	EXPORT_SYMBOL
+0xe370a9f9	dquot_transfer	vmlinux	EXPORT_SYMBOL
+0x4fd020b9	lapb_register	net/lapb/lapb	EXPORT_SYMBOL
+0x9966f83f	__orinoco_up	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0xd20eb853	drm_agp_release	drivers/char/drm/drm	EXPORT_SYMBOL
+0x3fb0515e	md_wakeup_thread	vmlinux	EXPORT_SYMBOL
+0x9fb19b7a	ata_std_bios_param	vmlinux	EXPORT_SYMBOL_GPL
+0xbd506a46	unregister_hotplug_dock_device	vmlinux	EXPORT_SYMBOL_GPL
+0x232f5d51	xip_truncate_page	vmlinux	EXPORT_SYMBOL_GPL
+0x131e02bb	irda_device_set_media_busy	net/irda/irda	EXPORT_SYMBOL
+0xb1dd0c6a	rpc_clone_client	vmlinux	EXPORT_SYMBOL
+0x38c99093	move_addr_to_user	vmlinux	EXPORT_SYMBOL
+0xcdb4468b	spi_register_master	vmlinux	EXPORT_SYMBOL_GPL
+0xcc36f32e	fb_unregister_client	vmlinux	EXPORT_SYMBOL
+0xfde0b92c	crypto_larval_error	vmlinux	EXPORT_SYMBOL_GPL
+0xa17f9180	__nf_ct_l4proto_find	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe819267c	ip_vs_conn_out_get	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x6d1ced27	vcc_sklist_lock	net/atm/atm	EXPORT_SYMBOL
+0x1d5c43d3	inet_csk_init_xmit_timers	vmlinux	EXPORT_SYMBOL
+0x0f964c2d	capi20_set_callback	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x3d0838be	kvm_write_guest	vmlinux	EXPORT_SYMBOL_GPL
+0xdc7f6abd	hpsb_make_lock64packet	vmlinux	EXPORT_SYMBOL
+0xaa85ff76	ata_qc_prep	vmlinux	EXPORT_SYMBOL_GPL
+0xc8c98e99	dvb_ca_en50221_camready_irq	vmlinux	EXPORT_SYMBOL
+0xe5a1da1b	transport_add_device	vmlinux	EXPORT_SYMBOL_GPL
+0x05c620fc	vfs_readlink	vmlinux	EXPORT_SYMBOL
+0x446b1a3e	complete_and_exit	vmlinux	EXPORT_SYMBOL
+0xf51eb97e	rt2x00pci_write_tx_data	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xe6bd776d	mlx4_buf_write_mtt	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xdbf03da2	capi_ctr_ready	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x20102469	inet6_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x493e25e1	udp_hash	vmlinux	EXPORT_SYMBOL
+0x4f38b2ca	scsi_nl_sock	vmlinux	EXPORT_SYMBOL_GPL
+0xff6878cf	fb_default_cmap	vmlinux	EXPORT_SYMBOL
+0x0ff10104	sysfs_remove_group	vmlinux	EXPORT_SYMBOL_GPL
+0x565f0a68	sysfs_remove_file_from_group	vmlinux	EXPORT_SYMBOL_GPL
+0x7d221a6b	down_read_trylock	vmlinux	EXPORT_SYMBOL
+0xb1d5966c	rt2x00lib_rxdone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x9d7cc1d3	vp3054_i2c_probe	drivers/media/video/cx88/cx88-vp3054-i2c	EXPORT_SYMBOL
+0x8a6339e7	cpufreq_register_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x2c54c957	capifs_free_ncci	drivers/isdn/capi/capifs	EXPORT_SYMBOL
+0xbba7269c	ib_register_client	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xd1660763	i2c_smbus_xfer	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x0922c66e	rpc_init_task	vmlinux	EXPORT_SYMBOL
+0x7bdbf8f9	nf_setsockopt	vmlinux	EXPORT_SYMBOL
+0x06d8b6f5	nf_getsockopt	vmlinux	EXPORT_SYMBOL
+0x579e0bf5	rtnl_unregister_all	vmlinux	EXPORT_SYMBOL_GPL
+0xcc6f8a39	netif_rx_ni	vmlinux	EXPORT_SYMBOL
+0x82827ed7	device_attach	vmlinux	EXPORT_SYMBOL_GPL
+0xc6905112	alloc_disk	vmlinux	EXPORT_SYMBOL
+0x5a485971	blk_rq_map_user_iov	vmlinux	EXPORT_SYMBOL
+0x46ffdc39	nfs4_acl_posix_to_nfsv4	vmlinux	EXPORT_SYMBOL
+0x3a880be5	dquot_commit_info	vmlinux	EXPORT_SYMBOL
+0x91a9deae	seq_putc	vmlinux	EXPORT_SYMBOL
+0x4cf735aa	seq_puts	vmlinux	EXPORT_SYMBOL
+0xe530071c	pm_qos_remove_requirement	vmlinux	EXPORT_SYMBOL_GPL
+0xe396f303	unregister_page_fault_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xb90668b2	snd_seq_autoload_lock	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0x6d6fd444	snd_pcm_hw_param_last	vmlinux	EXPORT_SYMBOL
+0xbdd83fce	ata_dev_disable	vmlinux	EXPORT_SYMBOL_GPL
+0xf6d39bd1	uart_update_timeout	vmlinux	EXPORT_SYMBOL
+0xa0be38df	do_add_mount	vmlinux	EXPORT_SYMBOL_GPL
+0xc8d2cd33	d_genocide	vmlinux	EXPORT_SYMBOL
+0xf6641e00	toi_compress_bytes_out	vmlinux	EXPORT_SYMBOL_GPL
+0x07317299	__module_put_and_exit	vmlinux	EXPORT_SYMBOL
+0xece9b313	__write_lock_failed	vmlinux	EXPORT_SYMBOL
+0x4777f14c	videobuf_dvb_unregister	drivers/media/video/video-buf-dvb	EXPORT_SYMBOL
+0xcffa2aff	spi_populate_width_msg	vmlinux	EXPORT_SYMBOL_GPL
+0xe723e6fe	tcp_vegas_cwnd_event	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0xe597140a	elv_dispatch_add_tail	vmlinux	EXPORT_SYMBOL
+0xf87b5b40	end_buffer_write_sync	vmlinux	EXPORT_SYMBOL
+0x023ef3ef	d_rehash	vmlinux	EXPORT_SYMBOL
+0x93841aad	b1_alloc_card	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x60327ee5	gs_start	drivers/char/generic_serial	EXPORT_SYMBOL
+0xb79dd10a	n_tty_ioctl	vmlinux	EXPORT_SYMBOL
+0xf48996d6	pci_get_class	vmlinux	EXPORT_SYMBOL
+0x6b1b67d3	__bdevname	vmlinux	EXPORT_SYMBOL
+0x24a311d1	cont_prepare_write	vmlinux	EXPORT_SYMBOL
+0x8e7256cd	vfs_write	vmlinux	EXPORT_SYMBOL
+0xfff5de7a	change_page_attr	vmlinux	EXPORT_SYMBOL
+0x95a9647f	snd_soc_info_volsw_2r	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x4ea698a2	ir_codes_purpletv	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x3f8e4630	netif_rx	vmlinux	EXPORT_SYMBOL
+0x16ce24ff	snd_pcm_hw_refine	vmlinux	EXPORT_SYMBOL
+0xa8cb36c3	dm_set_device_limits	vmlinux	EXPORT_SYMBOL_GPL
+0x512c956d	mraid_mm_unregister_adp	vmlinux	EXPORT_SYMBOL
+0x73d7c2fa	swiotlb_sync_sg_for_cpu	vmlinux	EXPORT_SYMBOL
+0xfc950df2	__crypto_alg_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x7825e72a	unregister_ip_vs_app	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0xb668e92b	rt2x00lib_probe_dev	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x14f67530	ivtv_debug	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x0550c63f	iw_handler_set_spy	vmlinux	EXPORT_SYMBOL
+0x85a3e740	xfrm_stateonly_find	vmlinux	EXPORT_SYMBOL
+0xbb036204	usb_create_hcd	vmlinux	EXPORT_SYMBOL
+0x72ea7b2d	scsi_device_type	vmlinux	EXPORT_SYMBOL
+0x304219e7	ib_dealloc_mw	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x28a5d67a	unregister_binfmt	vmlinux	EXPORT_SYMBOL
+0x0e1c46b2	alloc_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0xb922ecbc	__mod_timer	vmlinux	EXPORT_SYMBOL
+0x95c84963	pcmcia_request_io	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x6e44a67d	xdr_init_encode	vmlinux	EXPORT_SYMBOL
+0xc4e8cdd8	sock_no_accept	vmlinux	EXPORT_SYMBOL
+0x874aea72	acpi_os_signal	vmlinux	EXPORT_SYMBOL
+0x8bf786ff	mmc_unregister_driver	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x4de27841	dst_gpio_inb	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0xaf5d533f	klist_del	vmlinux	EXPORT_SYMBOL_GPL
+0x47ff881c	tcf_generic_walker	vmlinux	EXPORT_SYMBOL
+0x1bedbfbf	dvb_dmxdev_release	vmlinux	EXPORT_SYMBOL
+0x3c38bb49	elevator_exit	vmlinux	EXPORT_SYMBOL
+0x956e4291	__lock_buffer	vmlinux	EXPORT_SYMBOL
+0x37eb44b9	snd_ac97_write	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xece2279c	ieee80211_register_crypto_ops	net/ieee80211/ieee80211_crypt	EXPORT_SYMBOL
+0x589cad50	ir_codes_apac_viewcomp	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x0fd00a68	acpi_clear_event	vmlinux	EXPORT_SYMBOL
+0xc6fa15b2	saa7134_set_dmabits	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x151f35cc	tua6100_attach	drivers/media/dvb/frontends/tua6100	EXPORT_SYMBOL
+0x4f9285af	mtd_table	vmlinux	EXPORT_SYMBOL_GPL
+0x7538b132	agp_off	vmlinux	EXPORT_SYMBOL
+0x5a30791e	__nf_ct_event_cache_init	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x386365da	inet6_csk_xmit	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x37b6e688	sirdev_set_dtr_rts	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x24c5ee72	dm_unregister_path_selector	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0xb821d86a	tcp_ioctl	vmlinux	EXPORT_SYMBOL
+0xce45853c	registered_fb	vmlinux	EXPORT_SYMBOL
+0x900c54a2	vfs_symlink	vmlinux	EXPORT_SYMBOL
+0x64547d48	bt_class	net/bluetooth/bluetooth	EXPORT_SYMBOL_GPL
+0xa0c71dac	spi_populate_sync_msg	vmlinux	EXPORT_SYMBOL_GPL
+0xe67d81ba	strlen_user	vmlinux	EXPORT_SYMBOL
+0xc0e2f389	unmap_mapping_range	vmlinux	EXPORT_SYMBOL
+0x12326e43	dump_pagemap	vmlinux	EXPORT_SYMBOL_GPL
+0xf8358d27	__alloc_pages	vmlinux	EXPORT_SYMBOL
+0x8b618d08	overflowuid	vmlinux	EXPORT_SYMBOL
+0x7171121c	overflowgid	vmlinux	EXPORT_SYMBOL
+0xd2f381d7	tpm_show_caps_1_2	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x1395e8a0	inet_select_addr	vmlinux	EXPORT_SYMBOL
+0x9fb456d3	dma_async_tx_descriptor_init	vmlinux	EXPORT_SYMBOL
+0xee8bac29	pci_enable_device	vmlinux	EXPORT_SYMBOL
+0x5765919c	snd_soc_get_enum_double	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x062f9cd3	snd_soc_put_enum_double	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xe6c83a37	wireless_send_event	vmlinux	EXPORT_SYMBOL
+0xe7bd30dc	dcache_dir_close	vmlinux	EXPORT_SYMBOL
+0x43a4938f	vm_get_page_prot	vmlinux	EXPORT_SYMBOL
+0xd8d5b106	phy_driver_register	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xc880918c	unregister_snap_client	vmlinux	EXPORT_SYMBOL
+0x25832e58	snd_ctl_unregister_ioctl_compat	vmlinux	EXPORT_SYMBOL
+0x8e99fc4e	rtc_irq_set_state	vmlinux	EXPORT_SYMBOL_GPL
+0xb813f90c	scsi_dma_unmap	vmlinux	EXPORT_SYMBOL
+0xcb3e476a	relay_reset	vmlinux	EXPORT_SYMBOL_GPL
+0xa0dd23b8	snd_akm4xxx_write	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0xcbf7fd2a	nf_conntrack_register_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x3fd56e4d	phy_print_status	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xeaa2c3e4	dst_wait_dst_ready	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0xbf4774db	ks0108_writecontrol	drivers/auxdisplay/ks0108	EXPORT_SYMBOL_GPL
+0x8a87e5a9	inet_put_port	vmlinux	EXPORT_SYMBOL
+0x95f7f3aa	sock_no_connect	vmlinux	EXPORT_SYMBOL
+0x07b0b3f4	pci_remove_rom	vmlinux	EXPORT_SYMBOL
+0xe9fe9129	pci_remove_bus	vmlinux	EXPORT_SYMBOL
+0xf9d6fa50	dquot_mark_dquot_dirty	vmlinux	EXPORT_SYMBOL
+0x1f27d6d7	_write_unlock	vmlinux	EXPORT_SYMBOL
+0xa181f084	snd_ice1712_akm4xxx_build_controls	sound/pci/ice1712/snd-ice17xx-ak4xxx	EXPORT_SYMBOL
+0x02d17c0a	w1_write_block	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x0faf866a	videobuf_status	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x8c0690f5	pi_init	vmlinux	EXPORT_SYMBOL
+0xae11a385	mpt_attach	vmlinux	EXPORT_SYMBOL
+0x70d8ab82	acpi_acquire_global_lock	vmlinux	EXPORT_SYMBOL
+0x00566d8f	inotify_get_cookie	vmlinux	EXPORT_SYMBOL_GPL
+0x76f3f8a5	num_k8_northbridges	vmlinux	EXPORT_SYMBOL
+0x6e224a7a	need_conntrack	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x62f6db89	o2nm_node_put	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xb01bf0e2	flexcop_device_kmalloc	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x4a358252	__bitmap_subset	vmlinux	EXPORT_SYMBOL
+0xa00a9d36	saa7134_set_gpio	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x2dcb6757	eth_type_trans	vmlinux	EXPORT_SYMBOL
+0xf826deb0	dvb_filter_pes2ts	vmlinux	EXPORT_SYMBOL
+0xa0c39d65	debugfs_create_blob	vmlinux	EXPORT_SYMBOL_GPL
+0xf6e4651a	mb_cache_entry_get	vmlinux	EXPORT_SYMBOL
+0xcd3bd0ea	send_sig	vmlinux	EXPORT_SYMBOL
+0x2036ad06	irda_param_insert	net/irda/irda	EXPORT_SYMBOL
+0x2dcbf38c	tcp_shutdown	vmlinux	EXPORT_SYMBOL
+0xe243dde3	copy_to_user_fromio	vmlinux	EXPORT_SYMBOL
+0x87f13dd7	scsi_nonblockable_ioctl	vmlinux	EXPORT_SYMBOL
+0x0a4a42b1	down_write_trylock	vmlinux	EXPORT_SYMBOL
+0x8abac70a	param_set_uint	vmlinux	EXPORT_SYMBOL
+0xd431f85c	rpc_init_wait_queue	vmlinux	EXPORT_SYMBOL
+0x133157f9	tcp_v4_md5_do_add	vmlinux	EXPORT_SYMBOL
+0x199ed0cd	net_disable_timestamp	vmlinux	EXPORT_SYMBOL
+0x9608bcf3	cdrom_open	vmlinux	EXPORT_SYMBOL
+0x2932344f	hpsb_node_fill_packet	vmlinux	EXPORT_SYMBOL
+0x037ed12b	blk_end_sync_rq	vmlinux	EXPORT_SYMBOL
+0x5a3e4571	snd_seq_fm_init	sound/core/seq/instr/snd-ainstr-fm	EXPORT_SYMBOL
+0xeca34f17	mpt_put_msg_frame	vmlinux	EXPORT_SYMBOL
+0x69e9a2cb	ata_scsi_slave_config	vmlinux	EXPORT_SYMBOL_GPL
+0xd47a17b1	ata_pci_device_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x4afe9a77	scsi_partsize	vmlinux	EXPORT_SYMBOL
+0xdffbfe67	drm_pci_alloc	drivers/char/drm/drm	EXPORT_SYMBOL
+0x550f8ade	groups_alloc	vmlinux	EXPORT_SYMBOL
+0x1639e2c9	alloc_ieee80211	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x51d071d0	ib_create_cm_id	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xf338d4c3	netlink_unregister_notifier	vmlinux	EXPORT_SYMBOL
+0xeb54c64c	simple_release_fs	vmlinux	EXPORT_SYMBOL
+0x3bb64875	ipmi_create_user	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xdc7534f6	iscsi_change_queue_depth	vmlinux	EXPORT_SYMBOL_GPL
+0xd756bf4b	generic_file_aio_write_nolock	vmlinux	EXPORT_SYMBOL
+0x3c79f177	ubi_leb_write	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x1e70921a	kvm_exit_arch	vmlinux	EXPORT_SYMBOL_GPL
+0x2086b71d	mtd_concat_create	vmlinux	EXPORT_SYMBOL
+0x46db9a53	scsi_host_put	vmlinux	EXPORT_SYMBOL
+0x748ed1ae	configfs_depend_item	fs/configfs/configfs	EXPORT_SYMBOL
+0x2b2d9e10	usb_ftdi_elan_read_pcimem	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x62e32d43	capilib_data_b3_conf	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x2506cabb	sas_domain_release_transport	vmlinux	EXPORT_SYMBOL_GPL
+0xab2cd386	add_wait_queue	vmlinux	EXPORT_SYMBOL
+0x957274ee	cyber2000fb_enable_extregs	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0x57010491	tpm_open	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xff40f36d	dev_add_pack	vmlinux	EXPORT_SYMBOL
+0x9f984513	strrchr	vmlinux	EXPORT_SYMBOL
+0x7242e96d	strnchr	vmlinux	EXPORT_SYMBOL
+0xd50d0277	balance_dirty_pages_ratelimited_nr	vmlinux	EXPORT_SYMBOL
+0x6339b6d0	snd_seq_device_load_drivers	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0xbdf339ae	edac_pci_handle_pe	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x0e57f111	vsnprintf	vmlinux	EXPORT_SYMBOL
+0x44b911c3	rb_replace_node	vmlinux	EXPORT_SYMBOL
+0x185ce7f1	crypto_mod_put	vmlinux	EXPORT_SYMBOL_GPL
+0x02e372d5	journal_clear_err	vmlinux	EXPORT_SYMBOL
+0x08d8708f	cancel_work_sync	vmlinux	EXPORT_SYMBOL_GPL
+0x82f94e40	nf_ct_gre_keymap_flush	net/netfilter/nf_conntrack_proto_gre	EXPORT_SYMBOL
+0x78100936	dlm_register_eviction_cb	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x92489798	ssb_set_devtypedata	drivers/ssb/ssb	EXPORT_SYMBOL
+0x99cdc86b	sysctl_tcp_reordering	vmlinux	EXPORT_SYMBOL
+0x53535830	snd_pcm_hw_constraint_pow2	vmlinux	EXPORT_SYMBOL
+0xf2c91f4d	alloc_pci_dev	vmlinux	EXPORT_SYMBOL
+0x9754ec10	radix_tree_preload	vmlinux	EXPORT_SYMBOL
+0xbb4654be	blkdev_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0x8ee7d2d7	vfs_quota_on_mount	vmlinux	EXPORT_SYMBOL
+0xe48a35b3	__i2c_board_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x532aa016	tty_ldisc_flush	vmlinux	EXPORT_SYMBOL_GPL
+0x229f46ef	crypto_register_instance	vmlinux	EXPORT_SYMBOL_GPL
+0x608c9643	snd_sb16dsp_get_pcm_ops	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0x994b7f32	kvm_setup_pio	vmlinux	EXPORT_SYMBOL_GPL
+0xc6a1439a	tty_set_operations	vmlinux	EXPORT_SYMBOL
+0x9c0ea3cd	memscan	vmlinux	EXPORT_SYMBOL
+0xf17b5fbd	mark_buffer_dirty	vmlinux	EXPORT_SYMBOL
+0xa79eacde	get_super	vmlinux	EXPORT_SYMBOL
+0x00801678	flush_scheduled_work	vmlinux	EXPORT_SYMBOL
+0xd2328794	tms380tr_wait	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x24bfa389	ib_create_ah_from_wc	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4e042e0e	xfrm_state_sort	vmlinux	EXPORT_SYMBOL
+0x6c9716bd	skb_copy_and_csum_bits	vmlinux	EXPORT_SYMBOL
+0x5f698c37	ll_rw_block	vmlinux	EXPORT_SYMBOL
+0x0d05ff83	ps2_sendbyte	vmlinux	EXPORT_SYMBOL
+0x3533216d	sas_rphy_free	vmlinux	EXPORT_SYMBOL
+0xe16cd88e	fc_release_transport	vmlinux	EXPORT_SYMBOL
+0x6cbc0d55	fb_deferred_io_fsync	vmlinux	EXPORT_SYMBOL_GPL
+0x51d7a776	acpi_detach_data	vmlinux	EXPORT_SYMBOL
+0x124f2056	crypto_get_attr_type	vmlinux	EXPORT_SYMBOL_GPL
+0xe716baed	acpi_unregister_ioapic	vmlinux	EXPORT_SYMBOL
+0x8829d938	nfnetlink_send	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0x43302532	ib_umem_release	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x07efc4dd	ib_fmr_pool_unmap	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x12e280e3	svc_proc_unregister	vmlinux	EXPORT_SYMBOL
+0xd893f078	pi_write_block	vmlinux	EXPORT_SYMBOL
+0x26c90ea4	scsi_eh_get_sense	vmlinux	EXPORT_SYMBOL_GPL
+0xe2d3739c	device_create_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x47007c7e	pci_intx	vmlinux	EXPORT_SYMBOL_GPL
+0x83800bfa	kref_init	vmlinux	EXPORT_SYMBOL
+0x56ea266a	dccp_state_name	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xabcd223a	mlx4_mtt_cleanup	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xc267a4bc	dev_set_mac_address	vmlinux	EXPORT_SYMBOL
+0x5c47a6d5	sk_receive_skb	vmlinux	EXPORT_SYMBOL
+0xda51e432	serio_open	vmlinux	EXPORT_SYMBOL
+0x8201ffed	pccard_get_tuple_data	vmlinux	EXPORT_SYMBOL
+0x519d4b5c	acpi_os_unmap_memory	vmlinux	EXPORT_SYMBOL_GPL
+0x9124a37b	agp_generic_free_by_type	vmlinux	EXPORT_SYMBOL
+0x1e6f82a9	cap_bprm_apply_creds	vmlinux	EXPORT_SYMBOL
+0xfe392bcd	generic_segment_checks	vmlinux	EXPORT_SYMBOL
+0x1a18a58b	audit_log_format	vmlinux	EXPORT_SYMBOL
+0x124ccd1b	snd_usb_create_midi_interface	sound/usb/snd-usb-lib	EXPORT_SYMBOL
+0x36e8b784	rt2x00pci_initialize	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x57029be3	sock_register	vmlinux	EXPORT_SYMBOL
+0xf2288a11	serio_close	vmlinux	EXPORT_SYMBOL
+0x54f90d54	loop_register_transfer	vmlinux	EXPORT_SYMBOL
+0x853f2ffd	pci_find_bus	vmlinux	EXPORT_SYMBOL
+0x90a943ba	nmi_active	vmlinux	EXPORT_SYMBOL
+0xf4a5c213	avail_to_resrv_perfctr_nmi_bit	vmlinux	EXPORT_SYMBOL
+0x17fd8e28	__snd_util_mem_alloc	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x4b2243c6	tipc_portimportance	net/tipc/tipc	EXPORT_SYMBOL
+0x538b228a	tipc_withdraw	net/tipc/tipc	EXPORT_SYMBOL
+0xad356f0c	inet6_register_protosw	net/ipv6/ipv6	EXPORT_SYMBOL
+0x4bd0af7f	ieee80211_get_crypto_ops	net/ieee80211/ieee80211_crypt	EXPORT_SYMBOL
+0x6ba3058f	rt2x00usb_suspend	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x2ff7dea8	hdlc_open	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x93e227f3	register_mtd_blktrans	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0x3d835b5a	saa7134_pgtable_free	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0xd5b0b1f8	hpsb_packet_success	vmlinux	EXPORT_SYMBOL
+0x78cf4783	snd_midi_event_encode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0xcd141cc8	dccp_tx_hist_purge_older	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x2fc60482	ib_get_dma_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x5dba0757	ip_nat_decode_session	vmlinux	EXPORT_SYMBOL
+0x67fdfdc3	skb_under_panic	vmlinux	EXPORT_SYMBOL
+0x2141d11d	vfs_writev	vmlinux	EXPORT_SYMBOL
+0xaeaec5a4	videobuf_next_field	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x055b1ab4	af9005_rc_decode	drivers/media/dvb/dvb-usb/dvb-usb-af9005-remote	EXPORT_SYMBOL
+0xf5f1607d	proc_dointvec	vmlinux	EXPORT_SYMBOL
+0xf5019917	snd_seq_instr_event	sound/core/seq/snd-seq-instr	EXPORT_SYMBOL
+0xa2e359a7	nf_nat_proto_put	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x81a17396	mlog_and_bits	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x172bd22f	scsi_host_put_command	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x89602f5d	hostap_set_hostapd_sta	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xa2a5fd77	inet_ehash_secret	vmlinux	EXPORT_SYMBOL
+0x4241c7f6	atm_dev_lookup	net/atm/atm	EXPORT_SYMBOL
+0x0e18f962	srp_target_alloc	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0xeaeb928a	rpc_print_iostats	vmlinux	EXPORT_SYMBOL
+0xf21094b4	ata_pci_init_bmdma	vmlinux	EXPORT_SYMBOL_GPL
+0x8bd55462	acpi_bus_register_driver	vmlinux	EXPORT_SYMBOL
+0x2c2c3839	genhd_media_change_notify	vmlinux	EXPORT_SYMBOL_GPL
+0xf05d15ef	set_ras_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xf20b9c6b	v4l2_chip_ident_i2c_client	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x2f0440cb	drm_open	drivers/char/drm/drm	EXPORT_SYMBOL
+0xac711d71	nf_hook_slow	vmlinux	EXPORT_SYMBOL
+0xce5ac24f	zlib_inflate_workspacesize	vmlinux	EXPORT_SYMBOL
+0xd5cc56cd	sync_page_range	vmlinux	EXPORT_SYMBOL
+0x36418553	o2net_send_message	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x7eb95d1e	usb_cypress_load_firmware	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0xbfb9add7	tcp_recvmsg	vmlinux	EXPORT_SYMBOL
+0xfa3a7742	snd_pcm_limit_hw_rates	vmlinux	EXPORT_SYMBOL
+0xace5c0fc	usb_bus_list	vmlinux	EXPORT_SYMBOL_GPL
+0x10f2bf08	match_strcpy	vmlinux	EXPORT_SYMBOL
+0x06f40780	pi_connect	vmlinux	EXPORT_SYMBOL
+0x3a347602	ata_scsi_queuecmd	vmlinux	EXPORT_SYMBOL_GPL
+0x7989c047	dvb_ringbuffer_avail	vmlinux	EXPORT_SYMBOL
+0x2802a025	proc_dointvec_userhz_jiffies	vmlinux	EXPORT_SYMBOL
+0x59cd2f58	console_start	vmlinux	EXPORT_SYMBOL
+0xef773bcf	xt_register_match	net/netfilter/x_tables	EXPORT_SYMBOL
+0x5e4528b8	ivtv_cards	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x6f13b75f	tcp_simple_retransmit	vmlinux	EXPORT_SYMBOL
+0x27efb8e6	inet_csk_bind_conflict	vmlinux	EXPORT_SYMBOL_GPL
+0x13ab497f	parport_unregister_driver	vmlinux	EXPORT_SYMBOL
+0xde3ed591	simple_dir_inode_operations	vmlinux	EXPORT_SYMBOL
+0x36504c06	kvm_put_guest_fpu	vmlinux	EXPORT_SYMBOL_GPL
+0x469ed6d5	dmam_pool_create	vmlinux	EXPORT_SYMBOL
+0xfa47d3d9	snd_emu10k1_synth_free	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xdfbea09c	cpci_hp_register_bus	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x672ad148	dma_region_sync_for_device	vmlinux	EXPORT_SYMBOL
+0xd0ea8e1a	mod_unreg_security	vmlinux	EXPORT_SYMBOL_GPL
+0x65a028ca	__find_get_block	vmlinux	EXPORT_SYMBOL
+0xd746bf14	dcache_dir_open	vmlinux	EXPORT_SYMBOL
+0x3f4547a7	put_unused_fd	vmlinux	EXPORT_SYMBOL
+0xd2555f19	jiffies_64_to_clock_t	vmlinux	EXPORT_SYMBOL
+0x1b8569be	inet6_lookup_listener	vmlinux	EXPORT_SYMBOL_GPL
+0x17a76e71	rb_first	vmlinux	EXPORT_SYMBOL
+0x7c904ded	unregister_module_notifier	vmlinux	EXPORT_SYMBOL
+0x81e41fad	edac_device_find	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xfe868db4	gs_write	drivers/char/generic_serial	EXPORT_SYMBOL
+0x594ed59a	ata_dummy_port_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x9b53ec28	sas_change_queue_depth	vmlinux	EXPORT_SYMBOL_GPL
+0xcf047c83	acpi_disable_gpe	vmlinux	EXPORT_SYMBOL
+0xf964f165	zero_fill_bio	vmlinux	EXPORT_SYMBOL
+0x5a609eb2	mmc_resume_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x661b0f06	bus_register	vmlinux	EXPORT_SYMBOL_GPL
+0x082c3213	pci_root_buses	vmlinux	EXPORT_SYMBOL
+0x866e72db	ieee80211_txb_free	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0xf3ab03e3	mmc_alloc_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x40101f4d	videobuf_iolock	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0xd60f5b35	ib_find_cached_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x8644b053	nf_log_unregister	vmlinux	EXPORT_SYMBOL
+0x6c8cc09b	ata_std_dev_select	vmlinux	EXPORT_SYMBOL_GPL
+0x96a9841d	scsi_eh_ready_devs	vmlinux	EXPORT_SYMBOL_GPL
+0x986e6135	fb_pad_unaligned_buffer	vmlinux	EXPORT_SYMBOL
+0x3656bf5a	lock_kernel	vmlinux	EXPORT_SYMBOL
+0xab404be6	generic_file_buffered_write	vmlinux	EXPORT_SYMBOL
+0x1b9981cc	set_irq_wake	vmlinux	EXPORT_SYMBOL
+0x5ea760d7	snd_rawmidi_drain_input	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x07a90c64	lapb_data_received	net/lapb/lapb	EXPORT_SYMBOL
+0x338e4759	dccp_death_row	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x12dde9b7	libertas_debug	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x72389071	ttpci_budget_set_video_port	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x70c15ac1	snd_dma_disable	vmlinux	EXPORT_SYMBOL
+0xe592f5ee	snd_register_device_for_dev	vmlinux	EXPORT_SYMBOL
+0x080bceaa	input_open_device	vmlinux	EXPORT_SYMBOL
+0xf0870c16	fsync_bdev	vmlinux	EXPORT_SYMBOL
+0x78a484c9	_read_unlock_irqrestore	vmlinux	EXPORT_SYMBOL
+0x62e8eab6	snd_ak4117_external_rate	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0xebdaa47e	snd_ak4114_external_rate	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x1b5383f0	ip6_dst_lookup	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x78efdde6	ssb_pcihost_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0x63663bab	i2c_new_device	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x4116f765	cache_unregister	vmlinux	EXPORT_SYMBOL
+0xf0ce3c6f	device_for_each_child	vmlinux	EXPORT_SYMBOL_GPL
+0x54d299ad	hibernation_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x7008a9b7	timespec_to_jiffies	vmlinux	EXPORT_SYMBOL
+0xb9948d2c	snd_midi_channel_free_set	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0xe9af40be	ieee80211_free_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0xdefdb8f7	dccp_close	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x225dbdb7	hci_resume_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x2ebf6e5a	dma_prog_region_init	vmlinux	EXPORT_SYMBOL
+0xb27005f5	device_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0xe8a3605f	acpi_processor_set_thermal_limit	vmlinux	EXPORT_SYMBOL
+0xf47d47e0	acpi_enable_gpe	vmlinux	EXPORT_SYMBOL
+0x0097b9f6	unregister_key_type	vmlinux	EXPORT_SYMBOL
+0xb1971a4e	tipc_set_msg_option	net/tipc/tipc	EXPORT_SYMBOL
+0x8ce04a71	dlmunlock	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x6bbcb6f5	pppox_ioctl	drivers/net/pppox	EXPORT_SYMBOL
+0xa729e4da	saa7146_i2c_transfer	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x3fa260a6	rpc_shutdown_client	vmlinux	EXPORT_SYMBOL
+0x7ceb925d	ata_pci_init_one	vmlinux	EXPORT_SYMBOL_GPL
+0xcd9dd180	firmware_register	vmlinux	EXPORT_SYMBOL_GPL
+0x8d3894f2	_ctype	vmlinux	EXPORT_SYMBOL
+0x6caab99c	blk_get_queue	vmlinux	EXPORT_SYMBOL
+0x88925d45	bd_set_size	vmlinux	EXPORT_SYMBOL
+0x635b2611	udp_proc_unregister	vmlinux	EXPORT_SYMBOL
+0xc2cd8574	pcmcia_write_cis_mem	vmlinux	EXPORT_SYMBOL
+0xa5701df1	pci_set_dma_mask	vmlinux	EXPORT_SYMBOL
+0x527b0234	ib_alloc_fmr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x57568023	inet_sk_rebuild_header	vmlinux	EXPORT_SYMBOL
+0x09e67ae5	skb_copy	vmlinux	EXPORT_SYMBOL
+0x8599523f	snd_pcm_stop	vmlinux	EXPORT_SYMBOL
+0x126526f1	input_inject_event	vmlinux	EXPORT_SYMBOL
+0x5029017c	pci_bus_read_config_dword	vmlinux	EXPORT_SYMBOL
+0x23f2d36f	memparse	vmlinux	EXPORT_SYMBOL
+0x25ba9129	block_truncate_page	vmlinux	EXPORT_SYMBOL
+0x475989ee	generic_write_checks	vmlinux	EXPORT_SYMBOL
+0x72270e35	do_gettimeofday	vmlinux	EXPORT_SYMBOL
+0xd6035d05	do_settimeofday	vmlinux	EXPORT_SYMBOL
+0xfd697c64	libertas_remove_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xaa4d5cc4	drm_locked_tasklet	drivers/char/drm/drm	EXPORT_SYMBOL
+0xc516e4de	mptscsih_host_attrs	vmlinux	EXPORT_SYMBOL
+0xd3099c4c	iscsi_session_get_param	vmlinux	EXPORT_SYMBOL_GPL
+0x3b3ad620	uart_match_port	vmlinux	EXPORT_SYMBOL
+0x36d5355b	acpi_register_gsi	vmlinux	EXPORT_SYMBOL
+0xeba1670e	destroy_8023_client	net/802/p8023	EXPORT_SYMBOL
+0xaa89a968	saa_dsp_writel	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0x1477c728	flow_cache_lookup	vmlinux	EXPORT_SYMBOL
+0x3f1d8d27	iscsi_host_get_param	vmlinux	EXPORT_SYMBOL_GPL
+0xe5ae8707	intlog10	vmlinux	EXPORT_SYMBOL
+0x4f2964b8	alloc_tty_driver	vmlinux	EXPORT_SYMBOL
+0xf1573d6b	pcie_port_service_register	vmlinux	EXPORT_SYMBOL
+0xea943664	pci_request_selected_regions	vmlinux	EXPORT_SYMBOL
+0xb646f8fe	__splice_from_pipe	vmlinux	EXPORT_SYMBOL
+0x05c67412	__nf_ct_ext_destroy	net/netfilter/nf_conntrack	EXPORT_SYMBOL
+0xbd087800	pci_hotplug_slots_subsys	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x496923a0	rt2x00usb_resume	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x94e11af9	stop_atmel_card	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0x4c593f5f	cpufreq_register_governor	vmlinux	EXPORT_SYMBOL_GPL
+0x3674af2a	scsi_is_sas_phy	vmlinux	EXPORT_SYMBOL
+0x693266d5	acpi_processor_register_performance	vmlinux	EXPORT_SYMBOL
+0x84fa3d06	sysfs_add_file_to_group	vmlinux	EXPORT_SYMBOL_GPL
+0xcb2c0452	lnbp21_attach	drivers/media/dvb/frontends/lnbp21	EXPORT_SYMBOL
+0xf14bf8b1	b1pcmcia_addcard_b1	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0xaec3240e	b1pcmcia_addcard_m1	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0xea620116	b1pcmcia_addcard_m2	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0x92d16215	gs_set_termios	drivers/char/generic_serial	EXPORT_SYMBOL
+0x10ee20bb	default_blu	vmlinux	EXPORT_SYMBOL
+0x547d0334	blk_register_region	vmlinux	EXPORT_SYMBOL
+0xdc830a4f	bio_put	vmlinux	EXPORT_SYMBOL
+0xd42b7232	_write_unlock_bh	vmlinux	EXPORT_SYMBOL
+0x800e2217	ieee80211_rts_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x03892c1f	w1_read_block	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0xaa1e0b69	video_ioctl2	drivers/media/video/videodev	EXPORT_SYMBOL
+0x66ec02d4	tpm_store_cancel	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x99cbfc18	ohci1394_stop_context	vmlinux	EXPORT_SYMBOL
+0x3b1463fd	sata_port_hardreset	vmlinux	EXPORT_SYMBOL_GPL
+0xbd55b2cc	scsi_is_target_device	vmlinux	EXPORT_SYMBOL
+0x3606a923	journal_force_commit	vmlinux	EXPORT_SYMBOL
+0xac93ae05	ax25_bcast	net/ax25/ax25	EXPORT_SYMBOL_GPL
+0x950cc579	phy_write	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x8640eaeb	ib_modify_qp_is_ok	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x6f742add	sk_dst_check	vmlinux	EXPORT_SYMBOL
+0x7ddc5846	inode_needs_sync	vmlinux	EXPORT_SYMBOL
+0x316516c6	grab_cache_page_nowait	vmlinux	EXPORT_SYMBOL
+0x94a96b7e	snd_rawmidi_receive	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xc95585d2	irttp_connect_request	net/irda/irda	EXPORT_SYMBOL
+0x51080bcd	irlmp_connect_request	net/irda/irda	EXPORT_SYMBOL
+0xb7f74e54	saa7134_tvaudio_setmute	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL
+0xd9c7f010	ir_codes_rc5_tv	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x19ad79d4	dev_getfirstbyhwtype	vmlinux	EXPORT_SYMBOL
+0xea048810	scsi_internal_device_block	vmlinux	EXPORT_SYMBOL_GPL
+0x25820c64	fs_overflowuid	vmlinux	EXPORT_SYMBOL
+0x51f0571f	wake_up_process	vmlinux	EXPORT_SYMBOL
+0x66212d85	snd_seq_kernel_client_enqueue	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x9d9f123d	tipc_get_port	net/tipc/tipc	EXPORT_SYMBOL
+0x63666b04	__nf_ct_refresh_acct	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd8c0ed40	ieee80211_rx_mgt	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x53dea1ff	ax2asc	net/ax25/ax25	EXPORT_SYMBOL
+0x974dc54f	flexcop_device_exit	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x76ac472d	skb_dequeue_tail	vmlinux	EXPORT_SYMBOL
+0xac0bbd09	input_ff_erase	vmlinux	EXPORT_SYMBOL_GPL
+0x4f476e96	init_cdrom_command	vmlinux	EXPORT_SYMBOL
+0x7a2f5700	scsi_is_sas_port	vmlinux	EXPORT_SYMBOL
+0x5f20b95c	scsi_target_resume	vmlinux	EXPORT_SYMBOL
+0x77d06ac6	_spin_unlock_irq	vmlinux	EXPORT_SYMBOL
+0xca08d29b	srp_cmd_queue	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0x13c54ab0	videobuf_dma_unmap	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x47d3fc51	capi_info2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x5109132c	inet_stream_ops	vmlinux	EXPORT_SYMBOL
+0x0fb4f17c	qdisc_reset	vmlinux	EXPORT_SYMBOL
+0x63ecad53	register_netdevice_notifier	vmlinux	EXPORT_SYMBOL
+0x55a88384	hpsb_free_packet	vmlinux	EXPORT_SYMBOL
+0xa7e5f318	pci_get_device	vmlinux	EXPORT_SYMBOL
+0x008d20df	blk_complete_request	vmlinux	EXPORT_SYMBOL
+0x6a9a4af8	end_that_request_last	vmlinux	EXPORT_SYMBOL
+0x0e5426e2	fat_fs_panic	vmlinux	EXPORT_SYMBOL_GPL
+0xfa0d95c9	edac_mc_free	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xfae681db	put_inotify_watch	vmlinux	EXPORT_SYMBOL_GPL
+0xdca48d64	fail_migrate_page	vmlinux	EXPORT_SYMBOL
+0x079cd7f1	ns_to_timeval	vmlinux	EXPORT_SYMBOL
+0x259b74f9	tipc_acknowledge	net/tipc/tipc	EXPORT_SYMBOL
+0xbc887e16	nf_ct_expect_register_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8cafa899	dccp_connect	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xd80c3603	crc7_syndrome_table	lib/crc7	EXPORT_SYMBOL
+0x6876b423	fixed_mdio_set_link_update	drivers/net/phy/fixed	EXPORT_SYMBOL
+0x27c33efe	csum_ipv6_magic	vmlinux	EXPORT_SYMBOL
+0x466c14a7	__delay	vmlinux	EXPORT_SYMBOL
+0x1ed8f56f	cap_inode_removexattr	vmlinux	EXPORT_SYMBOL
+0x75afb08a	dnotify_parent	vmlinux	EXPORT_SYMBOL_GPL
+0xd25f2e86	get_sb_single	vmlinux	EXPORT_SYMBOL
+0xdc2adb35	add_taint	vmlinux	EXPORT_SYMBOL
+0x60a32ea9	pm_power_off	vmlinux	EXPORT_SYMBOL
+0x85f4cc8d	__neigh_for_each_release	vmlinux	EXPORT_SYMBOL
+0xfad4f4f3	spi_busnum_to_master	vmlinux	EXPORT_SYMBOL_GPL
+0xc692b662	device_initialize	vmlinux	EXPORT_SYMBOL_GPL
+0xf9c2bc79	blk_queue_init_tags	vmlinux	EXPORT_SYMBOL
+0x8232b5fe	user_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x2ec28a0b	dquot_alloc_inode	vmlinux	EXPORT_SYMBOL
+0xa2f29a41	bdget	vmlinux	EXPORT_SYMBOL
+0x47c84962	bdput	vmlinux	EXPORT_SYMBOL
+0x4d362499	fsstack_copy_inode_size	vmlinux	EXPORT_SYMBOL_GPL
+0x969b4294	nf_conntrack_untracked	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x73398de0	dm_table_get	vmlinux	EXPORT_SYMBOL
+0x91ba9824	blk_queue_issue_unprotect_fn	vmlinux	EXPORT_SYMBOL
+0xbbe44e31	snd_soc_info_volsw_ext	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x25d28a26	scsi_tgt_cmd_to_host	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x8a416c12	arp_broken_ops	vmlinux	EXPORT_SYMBOL
+0xd925fc50	tcf_em_register	vmlinux	EXPORT_SYMBOL
+0x13ea9b0e	cap_capset_set	vmlinux	EXPORT_SYMBOL
+0x5cfcf0f1	percpu_free	vmlinux	EXPORT_SYMBOL_GPL
+0x8871be90	cpuidle_unregister_governor	vmlinux	EXPORT_SYMBOL_GPL
+0xf92c2165	cdrom_ioctl	vmlinux	EXPORT_SYMBOL
+0x6263e02d	strncpy_from_user	vmlinux	EXPORT_SYMBOL
+0x4d7123ce	bio_init	vmlinux	EXPORT_SYMBOL
+0x7278d328	all_vm_events	vmlinux	EXPORT_SYMBOL_GPL
+0xc73e8b16	cx8802_buf_prepare	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0x03654fa3	gss_mech_put	vmlinux	EXPORT_SYMBOL
+0x0a7a8bc1	rpc_max_payload	vmlinux	EXPORT_SYMBOL_GPL
+0x5ff99f0d	inet6_hash_connect	vmlinux	EXPORT_SYMBOL_GPL
+0x25593169	gnet_stats_copy_rate_est	vmlinux	EXPORT_SYMBOL
+0xe8e9ee03	pi_write_regr	vmlinux	EXPORT_SYMBOL
+0xa0b62091	create_empty_buffers	vmlinux	EXPORT_SYMBOL
+0x79332ef6	init_special_inode	vmlinux	EXPORT_SYMBOL
+0xcea599f5	videobuf_read_stop	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x819e8148	skb_make_writable	vmlinux	EXPORT_SYMBOL
+0x53c0767c	sk_chk_filter	vmlinux	EXPORT_SYMBOL
+0x8f595b11	snd_major	vmlinux	EXPORT_SYMBOL
+0xc79bcd36	dm_vcalloc	vmlinux	EXPORT_SYMBOL
+0xa3c1929f	simple_attr_close	vmlinux	EXPORT_SYMBOL_GPL
+0xd200af0f	__mod_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x49d5f81b	__inc_zone_page_state	vmlinux	EXPORT_SYMBOL
+0xd2635ba7	__dec_zone_page_state	vmlinux	EXPORT_SYMBOL
+0xe00fb238	release_resource	vmlinux	EXPORT_SYMBOL
+0xe2a806be	cs_error	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x0cc160de	ppp_register_compressor	drivers/net/ppp_generic	EXPORT_SYMBOL
+0xe5c8c74e	videobuf_waiton	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x4e8a4d69	brioctl_set	vmlinux	EXPORT_SYMBOL
+0x4d358bbf	device_schedule_callback_owner	vmlinux	EXPORT_SYMBOL_GPL
+0x5ff1033e	vm_insert_pfn	vmlinux	EXPORT_SYMBOL
+0xd264d635	toi_running	vmlinux	EXPORT_SYMBOL_GPL
+0xfcaa04a0	out_of_line_wait_on_bit_lock	vmlinux	EXPORT_SYMBOL
+0xb2e8fec1	xfrm_state_alloc	vmlinux	EXPORT_SYMBOL
+0xecf3ad67	fat_remove_entries	vmlinux	EXPORT_SYMBOL_GPL
+0x4061069f	page_symlink	vmlinux	EXPORT_SYMBOL
+0xe26731c0	snd_soc_get_volsw_2r	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xaa104653	snd_soc_put_volsw_2r	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x5d1fa7bb	o2hb_register_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xf3792dc0	tda10045_attach	drivers/media/dvb/frontends/tda1004x	EXPORT_SYMBOL
+0x6f506974	tda10046_attach	drivers/media/dvb/frontends/tda1004x	EXPORT_SYMBOL
+0xfd04d287	__xfrm_route_forward	vmlinux	EXPORT_SYMBOL
+0x32bd8edd	compat_sock_common_getsockopt	vmlinux	EXPORT_SYMBOL
+0xd9bd3046	compat_sock_common_setsockopt	vmlinux	EXPORT_SYMBOL
+0x6753aa7a	nfsacl_encode	vmlinux	EXPORT_SYMBOL
+0x865e0b7d	nfsacl_decode	vmlinux	EXPORT_SYMBOL
+0x596bd6ec	spi_bitbang_setup	drivers/spi/spi_bitbang	EXPORT_SYMBOL_GPL
+0xd1e0258a	ir_codes_flyvideo	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x227ae7d3	gen_replace_estimator	vmlinux	EXPORT_SYMBOL
+0x2f82f8f6	scsi_target_unblock	vmlinux	EXPORT_SYMBOL_GPL
+0x5ad53dbc	param_set_byte	vmlinux	EXPORT_SYMBOL
+0x5611e4ec	param_get_bool	vmlinux	EXPORT_SYMBOL
+0x0854a054	sm501_misc_control	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x2f360fdd	rpc_call_null	vmlinux	EXPORT_SYMBOL
+0x83e2798a	rtc_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xdf0da3cc	acpi_get_devices	vmlinux	EXPORT_SYMBOL
+0x0760c7db	init_srcu_struct	vmlinux	EXPORT_SYMBOL_GPL
+0x740a1b95	reserve_evntsel_nmi	vmlinux	EXPORT_SYMBOL
+0xb29e394b	snd_opl3_init	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x58c60c6e	phy_attach	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xe67bc9ae	sunrpc_cache_lookup	vmlinux	EXPORT_SYMBOL
+0xb5f4e8dd	arp_tbl	vmlinux	EXPORT_SYMBOL
+0xfe6c618e	parport_ieee1284_interrupt	vmlinux	EXPORT_SYMBOL
+0x6237f6b5	acpi_enable_event	vmlinux	EXPORT_SYMBOL
+0xfe7c4287	nr_cpu_ids	vmlinux	EXPORT_SYMBOL
+0x52855445	snd_soc_dapm_new_control	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0xb08b9ae6	xt_unregister_match	net/netfilter/x_tables	EXPORT_SYMBOL
+0x2906a517	acpiphp_unregister_attention	drivers/pci/hotplug/acpiphp	EXPORT_SYMBOL_GPL
+0xbdce6594	ir_codes_tt_1500	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x0d3cfd51	rdma_translate_ip	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0x065994f1	xdr_encode_opaque_fixed	vmlinux	EXPORT_SYMBOL
+0xc16ef495	pi_read_block	vmlinux	EXPORT_SYMBOL
+0xad13c689	acpi_os_execute	vmlinux	EXPORT_SYMBOL
+0x2f7fec77	toi_result	vmlinux	EXPORT_SYMBOL_GPL
+0x1c932f39	RingQueue_Enqueue	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0x8a49b738	drm_agp_acquire	drivers/char/drm/drm	EXPORT_SYMBOL
+0x9e65d5f6	mptscsih_suspend	vmlinux	EXPORT_SYMBOL
+0x99d73cbd	simple_transaction_get	vmlinux	EXPORT_SYMBOL
+0x13b381c6	__nf_conntrack_find	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd3f714e5	hermes_bap_pread	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x6e2a1870	ir_codes_adstech_dvb_t_pci	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x274245e9	klist_node_attached	vmlinux	EXPORT_SYMBOL_GPL
+0x5fe79359	lock_sock_nested	vmlinux	EXPORT_SYMBOL
+0xfbb19ede	platform_add_devices	vmlinux	EXPORT_SYMBOL_GPL
+0xc46eb198	cxgb3_alloc_atid	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x1568e189	cxgb3_alloc_stid	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0x1f651fb0	gf128mul_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x9b3507d4	skb_icv_walk	vmlinux	EXPORT_SYMBOL_GPL
+0x2f0d52d4	bitmap_close_sync	vmlinux	EXPORT_SYMBOL
+0xa77b47df	usb_deregister	vmlinux	EXPORT_SYMBOL_GPL_FUTURE
+0xd23bf6f4	p54_parse_firmware	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0xa50fa2c2	hostap_master_start_xmit	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x04cda566	snd_interval_refine	vmlinux	EXPORT_SYMBOL
+0xb7dacf8a	set_cr8	vmlinux	EXPORT_SYMBOL_GPL
+0x31b5534f	acpi_bus_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x22053e30	crypto_alloc_instance	vmlinux	EXPORT_SYMBOL_GPL
+0x3d858cb8	mpage_writepage	vmlinux	EXPORT_SYMBOL
+0x6b2dc060	dump_stack	vmlinux	EXPORT_SYMBOL
+0xe3b2c1b4	nfnetlink_subsys_unregister	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xd5336e5d	hermes_init	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x3fbcddc3	netdev_compute_features	vmlinux	EXPORT_SYMBOL
+0xc2e5411f	rtc_read_time	vmlinux	EXPORT_SYMBOL_GPL
+0x8c5ff75a	ata_dev_pair	vmlinux	EXPORT_SYMBOL_GPL
+0xbaace51f	scsi_execute_async	vmlinux	EXPORT_SYMBOL_GPL
+0xd4007f8b	flexcop_dma_config	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x5873189e	drm_core_reclaim_buffers	drivers/char/drm/drm	EXPORT_SYMBOL
+0x2e846ce8	hpsb_unregister_protocol	vmlinux	EXPORT_SYMBOL
+0xa3bbcd80	acpi_set_gpe_type	vmlinux	EXPORT_SYMBOL
+0x0adba436	kobject_del	vmlinux	EXPORT_SYMBOL
+0x40785973	nat_callforwarding_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x8812badd	rpc_exit_task	vmlinux	EXPORT_SYMBOL
+0x67fba256	snd_ctl_find_numid	vmlinux	EXPORT_SYMBOL
+0x94aa4d71	poll_initwait	vmlinux	EXPORT_SYMBOL
+0xd27d1c2f	unregister_console	vmlinux	EXPORT_SYMBOL
+0x510f2615	nf_ct_helper_ext_add	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x966976f5	ieee80211_get_geo	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x4900035b	o2hb_stop_all_regions	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x472f3262	phy_disconnect	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x2437815a	edac_device_handle_ce	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xf788d1eb	edac_device_handle_ue	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x79fac690	led_trigger_unregister_simple	vmlinux	EXPORT_SYMBOL_GPL
+0xd8e484f0	register_chrdev_region	vmlinux	EXPORT_SYMBOL
+0xd840988d	mlx4_unregister_interface	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x02a15190	cx88_risc_buffer	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xc4e85ec5	ieee80211_radiotap_iterator_next	vmlinux	EXPORT_SYMBOL
+0x6239c72a	inet_csk_reqsk_queue_prune	vmlinux	EXPORT_SYMBOL_GPL
+0xa463ce7c	netdev_state_change	vmlinux	EXPORT_SYMBOL
+0x9ca95a0e	sort	vmlinux	EXPORT_SYMBOL
+0x6c49c4f2	clockevents_notify	vmlinux	EXPORT_SYMBOL_GPL
+0x73e79418	snd_rawmidi_kernel_read	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x99b2e113	ib_register_mad_snoop	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xbce67dc0	xprt_set_timeout	vmlinux	EXPORT_SYMBOL
+0xcf838092	usb_sg_cancel	vmlinux	EXPORT_SYMBOL
+0x89e25a30	struct_module	vmlinux	EXPORT_SYMBOL
+0x18a4b726	snd_emux_new	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x4dc72897	pcmcia_get_status	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x40dedf84	sm501_find_clock	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0xba31ede4	ib_register_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb3b9d0b5	nf_register_queue_handler	vmlinux	EXPORT_SYMBOL
+0x19fb5407	iscsi_destroy_conn	vmlinux	EXPORT_SYMBOL_GPL
+0xf1b6d696	shrink_dcache_sb	vmlinux	EXPORT_SYMBOL
+0x333bebb1	snd_seq_instr_list_free_cond	sound/core/seq/snd-seq-instr	EXPORT_SYMBOL
+0xb6394b23	ivtv_udma_alloc	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x1e1241ce	ib_register_event_handler	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x1c341220	ipmi_unregister_for_cmd	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xa413b16e	blkdev_issue_flush	vmlinux	EXPORT_SYMBOL
+0x499043d3	crypto_init_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xe428f13e	default_backing_dev_info	vmlinux	EXPORT_SYMBOL_GPL
+0xe513afc0	cache_k8_northbridges	vmlinux	EXPORT_SYMBOL_GPL
+0x424b1c53	ieee80211_crypt_quiescing	net/ieee80211/ieee80211_crypt	EXPORT_SYMBOL
+0x1010b94b	kvm_load_guest_fpu	vmlinux	EXPORT_SYMBOL_GPL
+0xa8b64001	cap_capget	vmlinux	EXPORT_SYMBOL
+0xa5693df7	posix_acl_clone	vmlinux	EXPORT_SYMBOL
+0x95fe0089	generic_drop_inode	vmlinux	EXPORT_SYMBOL_GPL
+0x051133c0	find_inode_number	vmlinux	EXPORT_SYMBOL
+0xb8140d9a	dccp_v4_request_recv_sock	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x808e08a2	hci_unregister_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x23c8f257	slhc_uncompress	drivers/net/slhc	EXPORT_SYMBOL
+0x8fa5915f	mpt_findImVolumes	vmlinux	EXPORT_SYMBOL
+0x6fc188cd	get_agp_version	vmlinux	EXPORT_SYMBOL
+0x743be946	unregister_con_driver	vmlinux	EXPORT_SYMBOL
+0xae48c671	vfs_permission	vmlinux	EXPORT_SYMBOL
+0xfe5d4bb2	sys_tz	vmlinux	EXPORT_SYMBOL
+0xd112f981	cpu_possible_map	vmlinux	EXPORT_SYMBOL
+0xb21bd8d2	acpi_processor_preregister_performance	vmlinux	EXPORT_SYMBOL
+0x21e0ea22	acpi_get_id	vmlinux	EXPORT_SYMBOL
+0xb5cb3a85	blk_init_queue	vmlinux	EXPORT_SYMBOL
+0xd5687b51	unlock_page	vmlinux	EXPORT_SYMBOL
+0xa9fb135f	escape_essid	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x2c59eb39	lcd_device_register	drivers/video/backlight/lcd	EXPORT_SYMBOL
+0x916061ed	cx88_set_scale	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0x66a3d79e	toi_poweroff_method	vmlinux	EXPORT_SYMBOL_GPL
+0x1fccfb21	tpm_show_pubek	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x0f668ba9	svc_auth_unregister	vmlinux	EXPORT_SYMBOL
+0x0c917328	xfrm_unregister_type	vmlinux	EXPORT_SYMBOL
+0x9e4cdab0	nf_ip_checksum	vmlinux	EXPORT_SYMBOL
+0x8c503565	snd_info_register	vmlinux	EXPORT_SYMBOL
+0xa4cddcdd	jbd2_log_wait_commit	vmlinux	EXPORT_SYMBOL
+0xa13798f8	printk_ratelimit	vmlinux	EXPORT_SYMBOL
+0x3e48c757	neigh_compat_output	vmlinux	EXPORT_SYMBOL
+0x7c5cec98	_snd_pcm_hw_params_any	vmlinux	EXPORT_SYMBOL
+0x1f4cc94e	module_put	vmlinux	EXPORT_SYMBOL
+0xd0923df0	__nf_conntrack_attach	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x66476c85	rt2x00mac_stop	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x1021b4ae	videobuf_dqbuf	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x439dcd91	ipmi_register_for_cmd	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xd19bb294	acpi_install_address_space_handler	vmlinux	EXPORT_SYMBOL
+0xbbbefbb9	inode_get_bytes	vmlinux	EXPORT_SYMBOL
+0x994e1983	__wake_up	vmlinux	EXPORT_SYMBOL
+0x65c01c53	nf_conntrack_helper_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x2e7b3a86	irias_new_object	net/irda/irda	EXPORT_SYMBOL
+0x444eede3	srp_iu_get	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0x56818ba1	srp_iu_put	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0x65c35297	edac_device_add_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x6c51a7e3	edac_device_del_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xd9abde66	mpt_free_msg_frame	vmlinux	EXPORT_SYMBOL
+0xb5f99743	dev_driver_string	vmlinux	EXPORT_SYMBOL
+0x63a79d3a	pcie_get_readrq	vmlinux	EXPORT_SYMBOL
+0x42056ae4	vfs_mkdir	vmlinux	EXPORT_SYMBOL
+0x08acf310	tipc_available_nodes	net/tipc/tipc	EXPORT_SYMBOL
+0x1ada2b28	usbvideo_AllocateDevice	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0x8070b3a3	ipmi_user_set_run_to_completion	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xce01fe74	usb_driver_claim_interface	vmlinux	EXPORT_SYMBOL
+0x9cfd56c5	scsi_print_status	vmlinux	EXPORT_SYMBOL
+0xde6241de	snd_opl3_reset	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x42732709	led_trigger_set	vmlinux	EXPORT_SYMBOL_GPL
+0x1e530251	iscsi_conn_failure	vmlinux	EXPORT_SYMBOL_GPL
+0xcedab4f7	ieee80211_set_geo	net/ieee80211/ieee80211	EXPORT_SYMBOL
+0x61ef3fab	dccp_insert_option	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x90da3679	wiphy_new	vmlinux	EXPORT_SYMBOL
+0x169d8092	snd_pcm_mmap_data	vmlinux	EXPORT_SYMBOL
+0xa0581403	usb_get_dev	vmlinux	EXPORT_SYMBOL
+0x04986fea	usb_find_device	vmlinux	EXPORT_SYMBOL
+0xd762caa7	securityfs_create_dir	vmlinux	EXPORT_SYMBOL_GPL
+0x7808e392	mb_cache_create	vmlinux	EXPORT_SYMBOL
+0xad9b1035	inotify_find_update_watch	vmlinux	EXPORT_SYMBOL_GPL
+0x494f096a	iunique	vmlinux	EXPORT_SYMBOL
+0x01a4ea6d	unregister_die_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x3a7f8b86	__local_bh_enable	vmlinux	EXPORT_SYMBOL_GPL
+0xaf52c2d3	iommu_bio_merge	vmlinux	EXPORT_SYMBOL
+0x4f0f1c8c	snd_ac97_tune_hardware	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xf08d862f	w1_write_8	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x686de290	restore_vga	drivers/video/vgastate	EXPORT_SYMBOL
+0xee34c2fd	inet_dgram_ops	vmlinux	EXPORT_SYMBOL
+0x47908f94	input_release_device	vmlinux	EXPORT_SYMBOL
+0xc289e796	ata_id_to_dma_mode	vmlinux	EXPORT_SYMBOL_GPL
+0xe9b9e5f7	scsi_put_command	vmlinux	EXPORT_SYMBOL
+0x7068ddb9	blk_alloc_queue	vmlinux	EXPORT_SYMBOL
+0xd5263820	mb_cache_destroy	vmlinux	EXPORT_SYMBOL
+0x6f0fced1	proc_net_eicon	drivers/isdn/hardware/eicon/divadidd	EXPORT_SYMBOL
+0x0903c239	vid_from_reg	drivers/hwmon/hwmon-vid	EXPORT_SYMBOL
+0x60ade7fc	make_checksum	vmlinux	EXPORT_SYMBOL
+0x99bfbe39	get_unused_fd	vmlinux	EXPORT_SYMBOL
+0x4f13390d	proc_doulongvec_minmax	vmlinux	EXPORT_SYMBOL
+0x5e401deb	gameport_cooked_read	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xe1dbc4d2	tcp_proc_unregister	vmlinux	EXPORT_SYMBOL
+0x8d883d2f	hwmon_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x42049491	usb_store_new_id	vmlinux	EXPORT_SYMBOL_GPL
+0x6dcf00dd	device_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x26680080	simple_attr_open	vmlinux	EXPORT_SYMBOL_GPL
+0x660e0c07	shrink_submounts	vmlinux	EXPORT_SYMBOL_GPL
+0x0c072d10	dvb_usb_generic_rw	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x046166fb	usb_root_hub_lost_power	vmlinux	EXPORT_SYMBOL_GPL
+0x85c10896	rcu_batches_completed_bh	vmlinux	EXPORT_SYMBOL_GPL
+0xcc7fa952	local_bh_enable_ip	vmlinux	EXPORT_SYMBOL
+0x5e7f8103	pci_hp_deregister	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0x7f443df3	dibusb_pid_filter	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x51b9922f	udp_poll	vmlinux	EXPORT_SYMBOL
+0x33cda660	posix_acl_from_mode	vmlinux	EXPORT_SYMBOL
+0xbaa2782a	kstrndup	vmlinux	EXPORT_SYMBOL
+0x621d58db	console_stop	vmlinux	EXPORT_SYMBOL
+0x3167ea19	global_flush_tlb	vmlinux	EXPORT_SYMBOL
+0x0ebe03d1	unregister_wan_device	net/wanrouter/wanrouter	EXPORT_SYMBOL
+0xefaff20c	nf_conntrack_tuple_taken	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xacb503e9	inet6_getname	net/ipv6/ipv6	EXPORT_SYMBOL
+0x76d54a64	b1_load_config	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x4ff0d5d2	ib_find_cached_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xdbf60d05	rdma_copy_addr	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0xcd8e2729	snd_device_register	vmlinux	EXPORT_SYMBOL
+0xb31f2c0a	cpufreq_gov_performance	vmlinux	EXPORT_SYMBOL
+0x64e43824	i2o_msg_post_wait_mem	vmlinux	EXPORT_SYMBOL
+0x9a98d3f7	acpi_smbus_register_callback	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0x605cdbc9	auth_domain_find	vmlinux	EXPORT_SYMBOL
+0x4733a4f6	xdr_encode_word	vmlinux	EXPORT_SYMBOL
+0xb1338f1a	register_mtd_user	vmlinux	EXPORT_SYMBOL_GPL
+0x4fdc945d	sata_deb_timing_normal	vmlinux	EXPORT_SYMBOL_GPL
+0x2ae34c49	debugfs_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0x7ac81d1e	new_inode	vmlinux	EXPORT_SYMBOL
+0x31dbb880	__uio_register_device	drivers/uio/uio	EXPORT_SYMBOL_GPL
+0xedde6df2	ks0108_page	drivers/auxdisplay/ks0108	EXPORT_SYMBOL_GPL
+0x52188937	snd_ctl_find_id	vmlinux	EXPORT_SYMBOL
+0x8dd0383f	idr_get_new	vmlinux	EXPORT_SYMBOL
+0xd8c0aff8	ida_get_new	vmlinux	EXPORT_SYMBOL
+0xe0b13336	argv_free	vmlinux	EXPORT_SYMBOL
+0xce337f55	jbd2_journal_clear_err	vmlinux	EXPORT_SYMBOL
+0xc2c8b4f5	mmc_suspend_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x04e133fc	iTCO_vendor_check_noreboot_on	drivers/char/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x2afa7e68	ipmi_get_maintenance_mode	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xea6fcdaa	genl_unregister_family	vmlinux	EXPORT_SYMBOL
+0xfe769456	unregister_netdevice_notifier	vmlinux	EXPORT_SYMBOL
+0xac2ee547	tty_register_driver	vmlinux	EXPORT_SYMBOL
+0x485055f3	freezer_state	vmlinux	EXPORT_SYMBOL
+0x6a8441be	cpci_hp_start	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0xb27ae597	hpsb_unregister_addrspace	vmlinux	EXPORT_SYMBOL
+0xda4778b2	driver_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0xff106f6a	swiotlb_free_coherent	vmlinux	EXPORT_SYMBOL
+0xed5b036d	kset_unregister	vmlinux	EXPORT_SYMBOL
+0x69fdebcd	debugfs_create_u32	vmlinux	EXPORT_SYMBOL_GPL
+0xd6deeaae	irda_setup_dma	net/irda/irda	EXPORT_SYMBOL
+0x6f04ba95	hostap_remove_interface	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xfe1be1ee	llc_build_and_send_ui_pkt	vmlinux	EXPORT_SYMBOL
+0x0ef06974	spi_populate_ppr_msg	vmlinux	EXPORT_SYMBOL_GPL
+0x16a35878	_read_unlock	vmlinux	EXPORT_SYMBOL
+0xb5f0fce7	dccp_tx_hist_new	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0x68d73b19	__alloc_ei_netdev	drivers/net/8390	EXPORT_SYMBOL
+0x9b3817db	videobuf_vmalloc_to_sg	drivers/media/video/video-buf	EXPORT_SYMBOL_GPL
+0x58d006d2	ttpci_budget_debiwrite	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x00208a72	inet_csk_reset_keepalive_timer	vmlinux	EXPORT_SYMBOL
+0xdbd7b61e	user_read	vmlinux	EXPORT_SYMBOL_GPL
+0x53326531	mempool_alloc_pages	vmlinux	EXPORT_SYMBOL
+0x47939e0d	__tasklet_hi_schedule	vmlinux	EXPORT_SYMBOL
+0x38e4db5e	xt_register_matches	net/netfilter/x_tables	EXPORT_SYMBOL
+0x2ae3a9bf	read_bytes_from_xdr_buf	vmlinux	EXPORT_SYMBOL
+0xe24d82ef	arp_send	vmlinux	EXPORT_SYMBOL
+0x873fbaea	edac_atomic_assert_error	vmlinux	EXPORT_SYMBOL_GPL
+0xd527f6d7	unregister_acpi_bus_type	vmlinux	EXPORT_SYMBOL
+0xf56a3962	zlib_inflateReset	vmlinux	EXPORT_SYMBOL
+0xd2f826f8	cdev_del	vmlinux	EXPORT_SYMBOL
+0xa63a531f	dccp_parse_options	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x0ae735a3	ssb_driver_unregister	drivers/ssb/ssb	EXPORT_SYMBOL
+0xeb63a3f1	ib_copy_ah_attr_to_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0xed93c0d6	ib_copy_qp_attr_to_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0xa76595f1	pneigh_enqueue	vmlinux	EXPORT_SYMBOL
+0x4918d7e8	dev_alloc_name	vmlinux	EXPORT_SYMBOL
+0xf6a11797	raid_component_add	vmlinux	EXPORT_SYMBOL
+0xf2b68bb7	soft_cursor	vmlinux	EXPORT_SYMBOL
+0x4e5aca92	async_xor	vmlinux	EXPORT_SYMBOL_GPL
+0x2974eeda	snd_ice1712_akm4xxx_free	sound/pci/ice1712/snd-ice17xx-ak4xxx	EXPORT_SYMBOL
+0x647160bc	pcmcia_release_window	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xd61a96c5	kvm_emulate_halt	vmlinux	EXPORT_SYMBOL_GPL
+0x208b3a2a	try_to_del_timer_sync	vmlinux	EXPORT_SYMBOL
+0x29562993	b1pcmcia_delcard	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0xd788bdf6	svc_addsock	vmlinux	EXPORT_SYMBOL_GPL
+0x63ea86c4	dma_async_memcpy_buf_to_pg	vmlinux	EXPORT_SYMBOL
+0x109b306f	dm_unregister_target	vmlinux	EXPORT_SYMBOL
+0x410075a1	blk_queue_bounce	vmlinux	EXPORT_SYMBOL
+0x3262d3be	snd_seq_device_register_driver	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0xb79b312f	config_group_find_item	fs/configfs/configfs	EXPORT_SYMBOL
+0x2ebc6dda	ata_sas_port_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x1b9b57a8	dvb_dmx_release	vmlinux	EXPORT_SYMBOL
+0x3145216f	pci_dev_present	vmlinux	EXPORT_SYMBOL
+0xb0498ed5	pci_dev_get	vmlinux	EXPORT_SYMBOL
+0x7a85c1c2	pci_dev_put	vmlinux	EXPORT_SYMBOL
+0xdb495c39	jbd2_journal_revoke	vmlinux	EXPORT_SYMBOL
+0xfdb261e3	read_dev_sector	vmlinux	EXPORT_SYMBOL
+0xf713bb54	__vm_enough_memory	vmlinux	EXPORT_SYMBOL
+0xfd5b31b7	srp_target_free	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0xb6987cc9	usb_ifnum_to_if	vmlinux	EXPORT_SYMBOL
+0x8bc457f1	journal_create	vmlinux	EXPORT_SYMBOL
+0x1042cbb5	__up_wakeup	vmlinux	EXPORT_SYMBOL
+0x9603006a	snd_rawmidi_transmit	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xe9d58deb	hashbin_lock_find	net/irda/irda	EXPORT_SYMBOL
+0xd6dea150	inet6_destroy_sock	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x30a03328	phy_device_create	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x8ae216a2	RingQueue_Flush	drivers/media/video/usbvideo/usbvideo	EXPORT_SYMBOL
+0x7336c1c5	svc_makesock	vmlinux	EXPORT_SYMBOL
+0x028adeae	paride_unregister	vmlinux	EXPORT_SYMBOL
+0x061d9b6b	cdrom_mode_sense	vmlinux	EXPORT_SYMBOL
+0x061651be	strcat	vmlinux	EXPORT_SYMBOL
+0xf4f52f93	dqstats	vmlinux	EXPORT_SYMBOL
+0xa9c41f41	mb_cache_entry_release	vmlinux	EXPORT_SYMBOL
+0xa9b90a0a	usb_gadget_unregister_driver	drivers/usb/gadget/net2280	EXPORT_SYMBOL
+0x788d398c	capi_cmsg2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xba099cf3	ib_query_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc25a8768	iscsi_conn_send_pdu	vmlinux	EXPORT_SYMBOL_GPL
+0x6966971c	jbd2_journal_get_write_access	vmlinux	EXPORT_SYMBOL
+0x1ded74af	jbd2_journal_invalidatepage	vmlinux	EXPORT_SYMBOL
+0x01ca1498	snd_ak4531_suspend	sound/pci/ac97/snd-ak4531-codec	EXPORT_SYMBOL
+0x464fb67d	inet6_unregister_protosw	net/ipv6/ipv6	EXPORT_SYMBOL
+0xa1dbc2d8	ip_vs_proto_name	net/ipv4/ipvs/ip_vs	EXPORT_SYMBOL
+0x32052d71	nf_register_hooks	vmlinux	EXPORT_SYMBOL
+0x309c370d	pfifo_qdisc_ops	vmlinux	EXPORT_SYMBOL
+0xda4629e4	radix_tree_insert	vmlinux	EXPORT_SYMBOL
+0x9f37f6ed	vfs_listxattr	vmlinux	EXPORT_SYMBOL_GPL
+0x1d3c44e5	kern_mount	vmlinux	EXPORT_SYMBOL
+0x5d7a3237	find_get_pages_contig	vmlinux	EXPORT_SYMBOL
+0xb8e448a0	snd_seq_set_queue_tempo	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x8d0f25ae	ieee80211_tx_status	net/mac80211/mac80211	EXPORT_SYMBOL
+0x67433d65	dccp_v4_do_rcv	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x5862d984	usbnet_defer_kevent	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x33b3b664	v4l2_video_std_construct	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xd2a52d86	ib_dispatch_event	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x1c3e13e1	drm_agp_info	drivers/char/drm/drm	EXPORT_SYMBOL
+0x431103b7	qdisc_create_dflt	vmlinux	EXPORT_SYMBOL
+0xe05021bd	sata_phy_debounce	vmlinux	EXPORT_SYMBOL_GPL
+0x4c4a0c11	uart_add_one_port	vmlinux	EXPORT_SYMBOL
+0x9dd0a982	key_put	vmlinux	EXPORT_SYMBOL
+0xacc15a92	get_inotify_watch	vmlinux	EXPORT_SYMBOL_GPL
+0xca9ff8a0	bmap	vmlinux	EXPORT_SYMBOL
+0x8b7fe311	kmemdup	vmlinux	EXPORT_SYMBOL
+0x682ece6e	__blocking_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x9e2179f8	dccp_sync_mss	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xe21289c3	hostap_get_porttype	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xfe7ad0a6	fx_init	vmlinux	EXPORT_SYMBOL_GPL
+0x23fd85d9	__strnlen_user	vmlinux	EXPORT_SYMBOL
+0x3984227b	node_online_map	vmlinux	EXPORT_SYMBOL
+0xf9f87acd	nf_conntrack_alloc	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x564d2364	__ssb_driver_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0x3b066777	tda827x_attach	drivers/media/dvb/frontends/tda827x	EXPORT_SYMBOL
+0x1e2b21e1	tcp_register_congestion_control	vmlinux	EXPORT_SYMBOL_GPL
+0xf7aec113	stv0299_attach	drivers/media/dvb/frontends/stv0299	EXPORT_SYMBOL
+0xfdb9aca4	tcp_connect	vmlinux	EXPORT_SYMBOL
+0x1ec08c4a	neigh_table_clear	vmlinux	EXPORT_SYMBOL
+0x27546935	led_trigger_event	vmlinux	EXPORT_SYMBOL_GPL
+0xafeee257	do_munmap	vmlinux	EXPORT_SYMBOL
+0xbc44dbbd	ib_dealloc_pd	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc48e9d95	cfag12864b_buffer	drivers/auxdisplay/cfag12864b	EXPORT_SYMBOL_GPL
+0xf8b8c12a	xfrm_aalg_get_byname	vmlinux	EXPORT_SYMBOL_GPL
+0xa2250e89	xfrm_state_flush	vmlinux	EXPORT_SYMBOL
+0xd0b9b8b8	snd_interval_list	vmlinux	EXPORT_SYMBOL
+0xf3042b69	pci_fixup_device	vmlinux	EXPORT_SYMBOL
+0x55b3145f	fat_flush_inodes	vmlinux	EXPORT_SYMBOL_GPL
+0x819bd39d	snd_trident_write_voice_regs	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x4cecb5b4	snd_vx_load_boot_image	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x4bf18d42	sm501_unit_power	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x96470cab	ir_codes_cinergy	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xbd2a7d57	xfrm_find_acq_byseq	vmlinux	EXPORT_SYMBOL
+0x06b5a362	xfrm_policy_unregister_afinfo	vmlinux	EXPORT_SYMBOL
+0x09c55cec	schedule_timeout_interruptible	vmlinux	EXPORT_SYMBOL
+0x8d428cd9	ebt_register_target	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0x943a4029	hdlc_ioctl	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x5fef1b4a	v4l2_ctrl_query_fill_std	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x1ace138d	bitmap_allocate_region	vmlinux	EXPORT_SYMBOL
+0x5f4e2665	hci_alloc_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x7489feae	rt2x00pci_beacon_update	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xf8b7cb47	hdlcdrv_arbitrate	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0xe8b4da13	ib_send_cm_req	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x48f68423	ib_send_cm_rep	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x85f2a1e5	ib_send_cm_rtu	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xf891731c	ib_send_cm_rej	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xbb5d343d	xfrm_get_acqseq	vmlinux	EXPORT_SYMBOL
+0x7f19c836	unlock_policy_rwsem_write	vmlinux	EXPORT_SYMBOL_GPL
+0xeee1a926	__scsi_iterate_devices	vmlinux	EXPORT_SYMBOL
+0x124e97a6	cx88_wakeup	drivers/media/video/cx88/cx88xx	EXPORT_SYMBOL
+0xddce3262	svc_reserve	vmlinux	EXPORT_SYMBOL
+0xb117c3cc	spi_register_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xba85d044	platform_bus	vmlinux	EXPORT_SYMBOL_GPL
+0x78cc64b2	blk_queue_bounce_limit	vmlinux	EXPORT_SYMBOL
+0x3a06aa13	snd_soc_cnew	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x4a010ea9	snd_ice1712_akm4xxx_init	sound/pci/ice1712/snd-ice17xx-ak4xxx	EXPORT_SYMBOL
+0xd549fe7b	nand_scan_ident	drivers/mtd/nand/nand	EXPORT_SYMBOL_GPL
+0x91965980	skb_abort_seq_read	vmlinux	EXPORT_SYMBOL
+0xfcb02864	ata_port_probe	vmlinux	EXPORT_SYMBOL_GPL
+0x2b0ba2b0	scsi_sense_desc_find	vmlinux	EXPORT_SYMBOL
+0x06fe3b14	default_grn	vmlinux	EXPORT_SYMBOL
+0x5857b225	ioread16_rep	vmlinux	EXPORT_SYMBOL
+0x74451c98	journal_restart	vmlinux	EXPORT_SYMBOL
+0x1f9c1a81	journal_destroy	vmlinux	EXPORT_SYMBOL
+0xbb227930	ieee80211_rate_control_unregister	net/mac80211/mac80211	EXPORT_SYMBOL
+0xf3e8240c	inet6_ioctl	net/ipv6/ipv6	EXPORT_SYMBOL
+0x4eeeb2ef	hostap_setup_dev	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x45937659	doc_decode_ecc	drivers/mtd/devices/docecc	EXPORT_SYMBOL_GPL
+0x4564099c	ves1820_attach	drivers/media/dvb/frontends/ves1820	EXPORT_SYMBOL
+0x058fc917	tcp_getsockopt	vmlinux	EXPORT_SYMBOL
+0xbb9b6c4e	tcp_setsockopt	vmlinux	EXPORT_SYMBOL
+0x17c014e3	rtnl_unicast	vmlinux	EXPORT_SYMBOL
+0x6ef8fcd8	snd_pcm_format_linear	vmlinux	EXPORT_SYMBOL
+0x733ea839	alloc_disk_node	vmlinux	EXPORT_SYMBOL
+0xa28e76e6	schedule_work	vmlinux	EXPORT_SYMBOL
+0x4dde9a69	dequeue_signal	vmlinux	EXPORT_SYMBOL_GPL
+0xe0b99ac3	snd_trident_synth_copy_from_user	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x92233cda	display_device_unregister	drivers/video/display/display	EXPORT_SYMBOL
+0xda6d2d87	rt2x00mac_start	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x49bed391	crypto_ablkcipher_type	crypto/ablkcipher	EXPORT_SYMBOL_GPL
+0x0ba671b3	sysdev_driver_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xbba27749	agp_generic_destroy_page	vmlinux	EXPORT_SYMBOL
+0x909d88d7	ip6t_register_table	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0x63b854b1	mlx4_qp_alloc	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x08e516a1	tveeprom_hauppauge_analog	drivers/media/video/tveeprom	EXPORT_SYMBOL
+0x1febe00d	cx8800_ctrl_query	drivers/media/video/cx88/cx8800	EXPORT_SYMBOL
+0x965c1dae	ib_ud_header_init	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xab5c63f8	xfrm_bundle_ok	vmlinux	EXPORT_SYMBOL
+0x0067df75	ata_tf_from_fis	vmlinux	EXPORT_SYMBOL_GPL
+0x6478134c	ec_burst_enable	vmlinux	EXPORT_SYMBOL
+0x6c5999e3	crypto_tfm_in_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xe53c1a69	compute_creds	vmlinux	EXPORT_SYMBOL
+0x76e7c2ef	atomic_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x8bc89ead	cx22702_attach	drivers/media/dvb/frontends/cx22702	EXPORT_SYMBOL
+0xf8306a2a	nsc_gpio_dump	drivers/char/nsc_gpio	EXPORT_SYMBOL
+0x8da4def3	backlight_device_unregister	vmlinux	EXPORT_SYMBOL
+0x6afad9e7	dccp_recvmsg	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x375d5ddc	ipmi_get_my_address	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xfc02b7ad	sysctl_tcp_wmem	vmlinux	EXPORT_SYMBOL
+0xf8509c8e	nf_unregister_hook	vmlinux	EXPORT_SYMBOL
+0xff8e74f0	unregister_mtd_user	vmlinux	EXPORT_SYMBOL_GPL
+0xc9ee1527	snd_seq_instr_list_new	sound/core/seq/snd-seq-instr	EXPORT_SYMBOL
+0x9f568350	xt_compat_target_offset	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x75f18d9c	hostap_set_antsel	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x8d109fa1	tcp_twsk_destructor	vmlinux	EXPORT_SYMBOL_GPL
+0xc4c56067	scm_detach_fds	vmlinux	EXPORT_SYMBOL
+0x13e1c297	md_write_end	vmlinux	EXPORT_SYMBOL
+0xde75b689	set_irq_type	vmlinux	EXPORT_SYMBOL
+0x929f222e	toi_debug_state	vmlinux	EXPORT_SYMBOL_GPL
+0x23ceb7a0	put_pid	vmlinux	EXPORT_SYMBOL_GPL
+0x0990c66a	edac_mc_handle_ce	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x108e61bd	driver_find_device	vmlinux	EXPORT_SYMBOL_GPL
+0x21e71035	tty_insert_flip_string	vmlinux	EXPORT_SYMBOL
+0x7a7ef853	__down_failed	vmlinux	EXPORT_SYMBOL
+0xcc0741eb	nf_nat_proto_find_get	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0xfba0c2e0	llc_sap_list_lock	vmlinux	EXPORT_SYMBOL
+0xd8b6d91c	hpsb_protocol_class	vmlinux	EXPORT_SYMBOL
+0xbb99125c	get_default_font	vmlinux	EXPORT_SYMBOL
+0x06d20c26	blk_get_request	vmlinux	EXPORT_SYMBOL
+0x6fef6afb	xfrm_ealg_get_byid	vmlinux	EXPORT_SYMBOL_GPL
+0x3c31bafd	__cpufreq_driver_getavg	vmlinux	EXPORT_SYMBOL_GPL
+0x2005e68a	acpi_remove_fixed_event_handler	vmlinux	EXPORT_SYMBOL
+0xeca95329	nfnetlink_has_listeners	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0x0f4efdad	nf_nat_port_range_to_nfattr	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x030789f0	cpufreq_frequency_table_target	vmlinux	EXPORT_SYMBOL_GPL
+0xf01fb863	congestion_end	vmlinux	EXPORT_SYMBOL
+0x3bd1b1f6	msecs_to_jiffies	vmlinux	EXPORT_SYMBOL
+0xe051bd19	snd_pcm_suspend_all	vmlinux	EXPORT_SYMBOL
+0x149a7cf9	i2o_driver_notify_device_add_all	vmlinux	EXPORT_SYMBOL
+0x87bbf2bd	acpi_match_device_ids	vmlinux	EXPORT_SYMBOL
+0x70e7b049	misc_deregister	vmlinux	EXPORT_SYMBOL
+0x7333ec03	lookup_one_len	vmlinux	EXPORT_SYMBOL
+0x4cc19756	relay_buf_full	vmlinux	EXPORT_SYMBOL_GPL
+0x009d258f	_write_lock	vmlinux	EXPORT_SYMBOL
+0xdaae0a21	inet6_bind	net/ipv6/ipv6	EXPORT_SYMBOL
+0x889abc79	edac_pci_create_generic_ctl	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x3e45e9ff	register_inetaddr_notifier	vmlinux	EXPORT_SYMBOL
+0x7afc9d8a	unregister_sound_mixer	vmlinux	EXPORT_SYMBOL
+0x9c012508	fb_parse_edid	vmlinux	EXPORT_SYMBOL
+0xdbf12059	snd_pcm_lib_write	vmlinux	EXPORT_SYMBOL
+0xfe913227	devres_add	vmlinux	EXPORT_SYMBOL_GPL
+0x6125353c	devres_get	vmlinux	EXPORT_SYMBOL_GPL
+0xf328c99d	parport_pc_unregister_port	vmlinux	EXPORT_SYMBOL
+0x5cfd9d48	journal_wipe	vmlinux	EXPORT_SYMBOL
+0xc949e53b	bt_accept_enqueue	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x0c0762c7	onenand_scan	drivers/mtd/onenand/onenand	EXPORT_SYMBOL_GPL
+0x120589ba	lgdt330x_attach	drivers/media/dvb/frontends/lgdt330x	EXPORT_SYMBOL
+0x3eb9b762	pcmcia_parse_events	vmlinux	EXPORT_SYMBOL
+0x7b1016f2	fc_host_post_vendor_event	vmlinux	EXPORT_SYMBOL
+0xf39f9ab0	pci_set_mwi	vmlinux	EXPORT_SYMBOL
+0x7485e15e	unregister_chrdev_region	vmlinux	EXPORT_SYMBOL
+0x908e3803	generic_writepages	vmlinux	EXPORT_SYMBOL
+0x05447bf6	dccp_feat_init	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x78a37706	bcm3510_attach	drivers/media/dvb/frontends/bcm3510	EXPORT_SYMBOL
+0x7a9669be	register_8022_client	vmlinux	EXPORT_SYMBOL
+0x4db1e1d4	posix_acl_equiv_mode	vmlinux	EXPORT_SYMBOL
+0xcefcf895	snd_soc_info_enum_double	sound/soc/snd-soc-core	EXPORT_SYMBOL_GPL
+0x7a5585a1	rtnl_register	vmlinux	EXPORT_SYMBOL_GPL
+0xe484e35f	ioread32	vmlinux	EXPORT_SYMBOL
+0x93f701de	gnet_stats_copy_basic	vmlinux	EXPORT_SYMBOL
+0xb852314c	percpu_counter_destroy	vmlinux	EXPORT_SYMBOL
+0x1877180d	permission	vmlinux	EXPORT_SYMBOL
+0x3953bef7	xtime_lock	vmlinux	EXPORT_SYMBOL
+0xb733017c	videocodec_attach	drivers/media/video/videocodec	EXPORT_SYMBOL
+0xaa04393f	tveeprom_read	drivers/media/video/tveeprom	EXPORT_SYMBOL
+0x38a3c9e2	cx2341x_log_status	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0xd1c3574d	inet_sendmsg	vmlinux	EXPORT_SYMBOL
+0xce2eade7	ip_cmsg_recv	vmlinux	EXPORT_SYMBOL
+0x250884d2	hidinput_report_event	vmlinux	EXPORT_SYMBOL_GPL
+0xb60e2d50	dm_io_client_resize	vmlinux	EXPORT_SYMBOL
+0x0a9a1f4c	crypto_alg_sem	vmlinux	EXPORT_SYMBOL_GPL
+0x7e6df5c5	module_remove_driver	vmlinux	EXPORT_SYMBOL
+0x9c84cccd	read_dst	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x440bb1fd	t1pci_detect	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x0e8f73c4	rpc_call_async	vmlinux	EXPORT_SYMBOL
+0x8dc372bb	alloc_fddidev	vmlinux	EXPORT_SYMBOL
+0xbdaf5b07	acpi_os_read_port	vmlinux	EXPORT_SYMBOL
+0xb5b054da	pci_unblock_user_cfg_access	vmlinux	EXPORT_SYMBOL_GPL
+0x493bb5b2	pageset1_map	vmlinux	EXPORT_SYMBOL_GPL
+0x932da67e	kill_proc	vmlinux	EXPORT_SYMBOL
+0x82ca1de2	cpu_sibling_map	vmlinux	EXPORT_SYMBOL
+0xb53ae573	cpu_idle_wait	vmlinux	EXPORT_SYMBOL_GPL
+0xad2fe38b	btcx_sort_clips	drivers/media/video/btcx-risc	EXPORT_SYMBOL
+0x760b437a	unregister_inetaddr_notifier	vmlinux	EXPORT_SYMBOL
+0x89d5538d	fb_pad_aligned_buffer	vmlinux	EXPORT_SYMBOL
+0x68eb0d7a	unregister_exec_domain	vmlinux	EXPORT_SYMBOL
+0xeee8574d	agp_generic_mask_memory	vmlinux	EXPORT_SYMBOL
+0x67f36b7c	interruptible_sleep_on_timeout	vmlinux	EXPORT_SYMBOL
+0x1e5a20e2	netlink_ack	vmlinux	EXPORT_SYMBOL
+0x06a20b5b	sock_get_timestamp	vmlinux	EXPORT_SYMBOL
+0xe314e018	sock_no_bind	vmlinux	EXPORT_SYMBOL
+0x930c640b	iscsi_register_transport	vmlinux	EXPORT_SYMBOL_GPL
+0x27a7bb31	acpi_extract_package	vmlinux	EXPORT_SYMBOL
+0x3b8be29d	zlib_inflateInit2	vmlinux	EXPORT_SYMBOL
+0x2cd7da6c	param_set_charp	vmlinux	EXPORT_SYMBOL
+0xa42ad0d3	ata_pci_clear_simplex	vmlinux	EXPORT_SYMBOL_GPL
+0x155d6784	bio_free	vmlinux	EXPORT_SYMBOL
+0x3cf51f68	fb_sys_read	drivers/video/fb_sys_fops	EXPORT_SYMBOL_GPL
+0xef1c781c	vid_which_vrm	drivers/hwmon/hwmon-vid	EXPORT_SYMBOL
+0xf15b702b	xip_file_read	vmlinux	EXPORT_SYMBOL_GPL
+0xdb5b568b	ircomm_connect_response	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x1a9d334a	orinoco_interrupt	drivers/net/wireless/orinoco	EXPORT_SYMBOL
+0x942892ab	v4l2_prio_open	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x8e725985	nf_log_unregister_pf	vmlinux	EXPORT_SYMBOL
+0x8df3789f	snd_oss_info_register	vmlinux	EXPORT_SYMBOL
+0x9d1c94ab	dmam_alloc_noncoherent	vmlinux	EXPORT_SYMBOL
+0x16a58713	transport_destroy_device	vmlinux	EXPORT_SYMBOL_GPL
+0xa4da6b51	ohci1394_register_iso_tasklet	vmlinux	EXPORT_SYMBOL
+0xc1e4b9a1	tty_unregister_device	vmlinux	EXPORT_SYMBOL
+0x777a8e29	vprintk	vmlinux	EXPORT_SYMBOL
+0x175245e8	_proxy_pda	vmlinux	EXPORT_SYMBOL
+0x7aa3cd9c	tcp_poll	vmlinux	EXPORT_SYMBOL
+0x782b0008	vsprintf	vmlinux	EXPORT_SYMBOL
+0x36196714	generic_splice_sendpage	vmlinux	EXPORT_SYMBOL
+0x4641bd7d	arcnet_interrupt	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0xcff5ed10	attribute_container_find_class_device	vmlinux	EXPORT_SYMBOL_GPL
+0xe12e4c3c	register_key_type	vmlinux	EXPORT_SYMBOL
+0xeb228272	posix_acl_create_masq	vmlinux	EXPORT_SYMBOL
+0x91c45723	rt_mutex_lock_interruptible	vmlinux	EXPORT_SYMBOL_GPL
+0x167e7f9d	__get_user_1	vmlinux	EXPORT_SYMBOL
+0xc3aaf0a9	__put_user_1	vmlinux	EXPORT_SYMBOL
+0x8115b580	class_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xf82f1109	utf8_wctomb	vmlinux	EXPORT_SYMBOL
+0xe8e5c9de	snd_rawmidi_output_params	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x2861a6f9	pnp_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x171e40cd	blk_queue_max_sectors	vmlinux	EXPORT_SYMBOL
+0xf421fc1b	wait_on_sync_kiocb	vmlinux	EXPORT_SYMBOL
+0xe820f822	redirty_page_for_writepage	vmlinux	EXPORT_SYMBOL
+0x4618c798	set_cpus_allowed	vmlinux	EXPORT_SYMBOL_GPL
+0x8ffe7e89	nf_conntrack_htable_size	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x792926ce	ieee80211_ctstoself_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2e5b495f	cxgb3_queue_tid_release	drivers/net/cxgb3/cxgb3	EXPORT_SYMBOL
+0xa336feb7	nand_manuf_ids	drivers/mtd/nand/nand_ids	EXPORT_SYMBOL
+0x1e123573	saa7134_ts_qops	drivers/media/video/saa7134/saa7134	EXPORT_SYMBOL_GPL
+0x85d37490	ir_codes_dntv_live_dvbt_pro	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xbe20991e	sk_stream_kill_queues	vmlinux	EXPORT_SYMBOL
+0x81ffe99a	vfs_get_dqinfo	vmlinux	EXPORT_SYMBOL
+0x7dc576a3	vfs_set_dqinfo	vmlinux	EXPORT_SYMBOL
+0x7ef43c57	audit_log_end	vmlinux	EXPORT_SYMBOL
+0x6d40a921	need_ipv4_conntrack	net/ipv4/netfilter/nf_conntrack_ipv4	EXPORT_SYMBOL_GPL
+0x8efad300	cfi_varsize_frob	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL
+0x2a4852cc	ir_codes_dntv_live_dvb_t	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0x2ca0e0b0	__sk_dst_check	vmlinux	EXPORT_SYMBOL
+0x475f05af	acpi_set_firmware_waking_vector	vmlinux	EXPORT_SYMBOL
+0xff0700b2	cpu_core_map	vmlinux	EXPORT_SYMBOL
+0x855a5d1b	irias_insert_object	net/irda/irda	EXPORT_SYMBOL
+0xd91985fc	ax25_register_pid	net/ax25/ax25	EXPORT_SYMBOL_GPL
+0x8cca69d5	snd_pcm_lib_preallocate_pages	vmlinux	EXPORT_SYMBOL
+0x6e701425	kcopyd_copy	vmlinux	EXPORT_SYMBOL
+0xbc156935	usb_interrupt_msg	vmlinux	EXPORT_SYMBOL_GPL
+0x32572801	bus_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xb07edfe8	pci_get_device_reverse	vmlinux	EXPORT_SYMBOL
+0x4c759827	byte_rev_table	vmlinux	EXPORT_SYMBOL_GPL
+0xcc574e81	__elv_add_request	vmlinux	EXPORT_SYMBOL
+0x71e9903a	set_bh_page	vmlinux	EXPORT_SYMBOL
+0xf6bab5ca	ax25_linkfail_register	net/ax25/ax25	EXPORT_SYMBOL
+0xd38d8ae2	hermes_read_ltv	drivers/net/wireless/hermes	EXPORT_SYMBOL
+0x329dcd21	iscsi_if_create_session_done	vmlinux	EXPORT_SYMBOL_GPL
+0xe914e41e	strcpy	vmlinux	EXPORT_SYMBOL
+0x490ebc87	filemap_fault	vmlinux	EXPORT_SYMBOL
+0xbf22424d	parport_ieee1284_read_byte	vmlinux	EXPORT_SYMBOL
+0x49a6bc9f	parport_claim_or_block	vmlinux	EXPORT_SYMBOL
+0xbf2df8c1	fb_get_buffer_offset	vmlinux	EXPORT_SYMBOL
+0xe1ca0f11	key_payload_reserve	vmlinux	EXPORT_SYMBOL
+0x32b870bf	inotify_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x629347fb	blocking_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0x767ea80e	snd_ak4531_mixer	sound/pci/ac97/snd-ak4531-codec	EXPORT_SYMBOL
+0xb2d6455b	skb_unlink	vmlinux	EXPORT_SYMBOL
+0xcb7c353a	get_cpu_sysdev	vmlinux	EXPORT_SYMBOL_GPL
+0x935f41c5	crypto_register_template	vmlinux	EXPORT_SYMBOL_GPL
+0xac6a7c16	dccp_send_sync	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x9c72429b	make_EII_client	vmlinux	EXPORT_SYMBOL
+0xb2e5ae4a	snd_lookup_minor_data	vmlinux	EXPORT_SYMBOL
+0x60b6fc98	lmsw	vmlinux	EXPORT_SYMBOL_GPL
+0x5641485b	tty_termios_encode_baud_rate	vmlinux	EXPORT_SYMBOL_GPL
+0xa3bfdf14	uts_sem	vmlinux	EXPORT_SYMBOL
+0x9c9cffbf	ttpci_budget_deinit	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x02b91afb	saa7146_stop_preview	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x5959bf44	auth_unix_lookup	vmlinux	EXPORT_SYMBOL
+0x58492844	inet_csk_delete_keepalive_timer	vmlinux	EXPORT_SYMBOL
+0xb8c5a7f8	usb_hcd_pci_shutdown	vmlinux	EXPORT_SYMBOL
+0x523c0306	ata_cable_40wire	vmlinux	EXPORT_SYMBOL_GPL
+0xe1dd5368	cap_syslog	vmlinux	EXPORT_SYMBOL
+0xa76c636c	xfrm_state_register_afinfo	vmlinux	EXPORT_SYMBOL
+0x364225ed	usb_register_device_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xa3ec099a	ata_cable_unknown	vmlinux	EXPORT_SYMBOL_GPL
+0x72a45545	kmem_cache_size	vmlinux	EXPORT_SYMBOL
+0xcb6046f5	ib_cm_init_qp_attr	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x69a5b666	inet_ioctl	vmlinux	EXPORT_SYMBOL
+0x0c8c9e99	scsi_show_extd_sense	vmlinux	EXPORT_SYMBOL
+0xe0ac8bd2	acpi_bus_generate_netlink_event	vmlinux	EXPORT_SYMBOL
+0x72d409cb	kobject_get_path	vmlinux	EXPORT_SYMBOL_GPL
+0x844e9c8e	toi_netlink_setup	vmlinux	EXPORT_SYMBOL_GPL
+0x37dc209d	clocksource_register	vmlinux	EXPORT_SYMBOL
+0x6d104885	xt_register_target	net/netfilter/x_tables	EXPORT_SYMBOL
+0xb0d2bca9	bt_sock_link	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xe193904c	hpsb_free_tlabel	vmlinux	EXPORT_SYMBOL
+0xa1b42d32	tipc_forward2port	net/tipc/tipc	EXPORT_SYMBOL
+0xb70c74dd	ib_get_cached_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4a2ad42d	nf_unregister_hooks	vmlinux	EXPORT_SYMBOL
+0x814e7730	nf_ct_destroy	vmlinux	EXPORT_SYMBOL
+0x22198fcc	dvb_unregister_device	vmlinux	EXPORT_SYMBOL
+0xb15a8d43	pnp_disable_dev	vmlinux	EXPORT_SYMBOL
+0xdd942b40	framebuffer_release	vmlinux	EXPORT_SYMBOL
+0xbfb6fd1d	_cpu_pda	vmlinux	EXPORT_SYMBOL
+0x81353cec	sppp_attach	drivers/net/wan/syncppp	EXPORT_SYMBOL
+0x1f32b517	saa7146_start_preview	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x2aa17774	rpc_free_iostats	vmlinux	EXPORT_SYMBOL
+0x46c47fb6	__node_distance	vmlinux	EXPORT_SYMBOL
+0x6eea229d	svcauth_unix_purge	vmlinux	EXPORT_SYMBOL
+0xa07a3fd7	dm_table_get_md	vmlinux	EXPORT_SYMBOL
+0xf3447438	usb_hcd_poll_rh_status	vmlinux	EXPORT_SYMBOL_GPL
+0x73fec4bb	mpt_event_deregister	vmlinux	EXPORT_SYMBOL
+0x9da60d97	class_device_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0x2c54d129	device_find_child	vmlinux	EXPORT_SYMBOL_GPL
+0x238076c4	fat_getattr	vmlinux	EXPORT_SYMBOL_GPL
+0x97bacf0e	generic_read_dir	vmlinux	EXPORT_SYMBOL
+0x5152a656	dentry_unhash	vmlinux	EXPORT_SYMBOL
+0x9f851796	gameport_set_phys	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x1d7305de	tpm_pm_suspend	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x94ef4d05	cpci_hp_stop	drivers/pci/hotplug/pci_hotplug	EXPORT_SYMBOL_GPL
+0xfcc1a494	NS8390_init	drivers/net/8390	EXPORT_SYMBOL
+0x2de2b633	v4l2_prio_check	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x0d8ecdd4	xfrm_ealg_get_byidx	vmlinux	EXPORT_SYMBOL_GPL
+0x009cd7bd	sock_no_shutdown	vmlinux	EXPORT_SYMBOL
+0xdd18a5c5	acpi_bus_generate_proc_event	vmlinux	EXPORT_SYMBOL
+0x165a4a6a	vc_resize	vmlinux	EXPORT_SYMBOL
+0x66eaa8a9	param_set_ulong	vmlinux	EXPORT_SYMBOL
+0xee2d0fc7	_local_bh_enable	vmlinux	EXPORT_SYMBOL
+0xe7aece47	tipc_ispublished	net/tipc/tipc	EXPORT_SYMBOL
+0x01d4a87d	nf_ct_expect_alloc	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x7042bc54	irlmp_register_client	net/irda/irda	EXPORT_SYMBOL
+0x1b89c6ee	o2hb_fill_node_map	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x35cf49a2	p54_init_common	drivers/net/wireless/p54common	EXPORT_SYMBOL_GPL
+0x123c259a	ib_modify_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x9bb08e64	usb_ftdi_elan_edset_flush	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xf07ec772	flexcop_dma_allocate	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xd7f27605	nf_ct_attach	vmlinux	EXPORT_SYMBOL
+0x3fc1a3b1	snd_timer_global_free	vmlinux	EXPORT_SYMBOL
+0x0f10c889	saa7146_unregister_device	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x4631aafa	snd_pcm_lib_writev	vmlinux	EXPORT_SYMBOL
+0x961a8cd3	unlock_policy_rwsem_read	vmlinux	EXPORT_SYMBOL_GPL
+0xec19a56d	sas_target_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x61caba6e	driver_attach	vmlinux	EXPORT_SYMBOL_GPL
+0xca8acc78	acpi_dbg_level	vmlinux	EXPORT_SYMBOL
+0x475f010b	acpi_purge_cached_objects	vmlinux	EXPORT_SYMBOL
+0x6ef3de72	textsearch_register	vmlinux	EXPORT_SYMBOL
+0xecf357c9	__nf_ct_expect_find	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xedd521c2	irlmp_get_discoveries	net/irda/irda	EXPORT_SYMBOL
+0x7ae3b378	dccp_rcv_state_process	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xa653af76	usbnet_generic_cdc_bind	drivers/net/usb/cdc_ether	EXPORT_SYMBOL_GPL
+0x2a1092e8	platform_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x5934392b	fb_register_client	vmlinux	EXPORT_SYMBOL
+0xad0413d4	match_hex	vmlinux	EXPORT_SYMBOL
+0x91f1c210	snd_vx_suspend	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x4310760f	bt878_start	drivers/media/dvb/bt8xx/bt878	EXPORT_SYMBOL
+0x5f9ec11c	__inet_lookup_listener	vmlinux	EXPORT_SYMBOL_GPL
+0x79005a2a	nf_unregister_sockopt	vmlinux	EXPORT_SYMBOL
+0x038dd7f2	skb_realloc_headroom	vmlinux	EXPORT_SYMBOL
+0x4b013b78	platform_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x2e7abfda	percpu_depopulate	vmlinux	EXPORT_SYMBOL_GPL
+0x2514503b	ipv6_find_hdr	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0x22c86a74	uPD98402_init	drivers/atm/uPD98402	EXPORT_SYMBOL
+0x211066e7	uhci_reset_hc	vmlinux	EXPORT_SYMBOL_GPL
+0x29830207	jbd2_journal_dirty_metadata	vmlinux	EXPORT_SYMBOL
+0x6a47571d	__set_personality	vmlinux	EXPORT_SYMBOL
+0x69c7294c	hashbin_new	net/irda/irda	EXPORT_SYMBOL
+0x4b168d07	mlx4_cq_free	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x5982da89	ioc4_unregister_submodule	drivers/misc/ioc4	EXPORT_SYMBOL
+0xb3196a7d	flexcop_dma_control_size_irq	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xd9b01271	ib_get_client_data	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4ee9c668	ib_set_client_data	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x756685d3	sas_bios_param	vmlinux	EXPORT_SYMBOL_GPL
+0x7ad8aa81	sas_attach_transport	vmlinux	EXPORT_SYMBOL
+0xc1d45583	dvb_ringbuffer_free	vmlinux	EXPORT_SYMBOL
+0x7be11962	dvb_dmxdev_init	vmlinux	EXPORT_SYMBOL
+0x088bc1bf	register_con_driver	vmlinux	EXPORT_SYMBOL
+0xf4372d6d	blkcipher_walk_done	vmlinux	EXPORT_SYMBOL_GPL
+0x573687d6	page_readlink	vmlinux	EXPORT_SYMBOL
+0x5a332374	ubi_is_mapped	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x3d9aefbf	i2c_detach_client	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x3590a804	edac_mc_handle_ue	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xb953952a	nf_unregister_afinfo	vmlinux	EXPORT_SYMBOL_GPL
+0x1dd571e6	fb_copy_cmap	vmlinux	EXPORT_SYMBOL
+0x2e85366e	pci_map_rom_copy	vmlinux	EXPORT_SYMBOL
+0xcb6547b3	blk_verify_command	vmlinux	EXPORT_SYMBOL_GPL
+0x56380397	async_tx_find_channel	vmlinux	EXPORT_SYMBOL_GPL
+0xc499ae1e	kstrdup	vmlinux	EXPORT_SYMBOL
+0xf326090b	snd_opl3_interrupt	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x448b8aaa	irda_qos_bits_to_value	net/irda/irda	EXPORT_SYMBOL
+0x02ccea56	lock_policy_rwsem_write	vmlinux	EXPORT_SYMBOL_GPL
+0x918e82a4	ata_host_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0xad99410b	scsi_unprotect_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xe92a00e0	_atomic_dec_and_lock	vmlinux	EXPORT_SYMBOL
+0x95ceb864	key_update	vmlinux	EXPORT_SYMBOL
+0x89ed7ef9	simple_prepare_write	vmlinux	EXPORT_SYMBOL
+0xc1444946	ax25cmp	net/ax25/ax25	EXPORT_SYMBOL
+0x10fa8562	rt2x00lib_get_ring	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xe4c3259a	xfrm_register_km	vmlinux	EXPORT_SYMBOL
+0xf71d01ae	ip_mc_dec_group	vmlinux	EXPORT_SYMBOL
+0x5b5fbb14	iscsi_conn_bind	vmlinux	EXPORT_SYMBOL_GPL
+0xcb7131fb	fb_get_options	vmlinux	EXPORT_SYMBOL
+0x33c2322f	kasprintf	vmlinux	EXPORT_SYMBOL
+0x6ff96115	simple_rename	vmlinux	EXPORT_SYMBOL
+0x31643485	vfs_setxattr	vmlinux	EXPORT_SYMBOL_GPL
+0xbc7313c8	vfs_getxattr	vmlinux	EXPORT_SYMBOL_GPL
+0x3c2fa489	rfkill_allocate	net/rfkill/rfkill	EXPORT_SYMBOL
+0xd5d0bdef	bt878_num	drivers/media/dvb/bt8xx/bt878	EXPORT_SYMBOL
+0x34bdc867	iw_cm_reject	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0xae36cd11	sock_init_data	vmlinux	EXPORT_SYMBOL
+0xe57ea9be	snd_ctl_free_one	vmlinux	EXPORT_SYMBOL
+0xac58ea5e	acpi_unload_table_id	vmlinux	EXPORT_SYMBOL
+0x8d8d96c6	acpi_get_sleep_type_data	vmlinux	EXPORT_SYMBOL
+0xc2424641	agp3_generic_cleanup	vmlinux	EXPORT_SYMBOL
+0x96f9d4cd	dlm_print_one_lock	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xef770f33	gs_hangup	drivers/char/generic_serial	EXPORT_SYMBOL
+0x65634ead	ip_queue_xmit	vmlinux	EXPORT_SYMBOL
+0xda359b35	pci_get_slot	vmlinux	EXPORT_SYMBOL
+0x69a0ca7d	iowrite16be	vmlinux	EXPORT_SYMBOL
+0x6acb973d	iowrite32be	vmlinux	EXPORT_SYMBOL
+0xba052651	scatterwalk_map	vmlinux	EXPORT_SYMBOL_GPL
+0x9ef749e2	unregister_chrdev	vmlinux	EXPORT_SYMBOL
+0x215fff1e	ib_find_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4b868755	km_query	vmlinux	EXPORT_SYMBOL
+0x2a5eaa85	inet_release	vmlinux	EXPORT_SYMBOL
+0xb5cb48cf	mpt_resume	vmlinux	EXPORT_SYMBOL
+0x20430a29	blk_queue_start_tag	vmlinux	EXPORT_SYMBOL
+0x547c2d74	async_xor_zero_sum	vmlinux	EXPORT_SYMBOL_GPL
+0x69583dbf	jbd2_journal_force_commit	vmlinux	EXPORT_SYMBOL
+0xc42508f2	rdma_addr_cancel	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0xe36e2590	__xfrm_policy_destroy	vmlinux	EXPORT_SYMBOL
+0x30ea86c1	neigh_create	vmlinux	EXPORT_SYMBOL
+0x9fce80db	fb_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x81d1d295	rt2x00pci_probe	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x643cf993	sirdev_raw_write	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x8ab8843c	cpufreq_get_policy	vmlinux	EXPORT_SYMBOL
+0xdd805159	ioc_list	vmlinux	EXPORT_SYMBOL
+0x4bcc57b8	i2o_driver_notify_controller_add_all	vmlinux	EXPORT_SYMBOL
+0x9cfa6518	elv_next_request	vmlinux	EXPORT_SYMBOL
+0x8f6cee77	__round_jiffies_relative	vmlinux	EXPORT_SYMBOL_GPL
+0xd2fe5e14	inet_twsk_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x09c0b944	__serio_register_driver	vmlinux	EXPORT_SYMBOL
+0x86e23291	crypto_free_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0x037a0cba	kfree	vmlinux	EXPORT_SYMBOL
+0x477f7ec1	__rt_mutex_init	vmlinux	EXPORT_SYMBOL_GPL
+0xc9260474	ib_modify_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xaf29788e	drm_sman_init	drivers/char/drm/drm	EXPORT_SYMBOL
+0x9522a342	cfag12864b_getrate	drivers/auxdisplay/cfag12864b	EXPORT_SYMBOL_GPL
+0x9597242f	xfrm_state_delete	vmlinux	EXPORT_SYMBOL
+0xb17a6556	nf_register_sockopt	vmlinux	EXPORT_SYMBOL
+0xe0b80c35	sock_kmalloc	vmlinux	EXPORT_SYMBOL
+0xe15c0acb	sas_target_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x4084a29b	mlx4_buf_free	drivers/net/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xbc505df4	ubi_get_device_info	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x15847b12	ip_route_output_key	vmlinux	EXPORT_SYMBOL
+0x058c75d9	acpi_get_pci_id	vmlinux	EXPORT_SYMBOL
+0xe7d4daac	seq_list_next	vmlinux	EXPORT_SYMBOL
+0x538383c0	unregister_inet6addr_notifier	net/ipv6/ipv6	EXPORT_SYMBOL
+0xebd387f6	pm_active	vmlinux	EXPORT_SYMBOL
+0x18d6cf84	ipv6_chk_addr	net/ipv6/ipv6	EXPORT_SYMBOL
+0xc4f988d9	uart_suspend_port	vmlinux	EXPORT_SYMBOL
+0x28bd8b76	blk_alloc_queue_node	vmlinux	EXPORT_SYMBOL
+0x222f31d2	hpsb_set_hostinfo_key	vmlinux	EXPORT_SYMBOL
+0x41ed212e	scsi_device_resume	vmlinux	EXPORT_SYMBOL
+0x5c7a4ef0	bio_phys_segments	vmlinux	EXPORT_SYMBOL
+0xd2169228	snd_emux_register	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x4a1d62f4	ipv6_find_tlv	net/ipv6/ipv6	EXPORT_SYMBOL_GPL
+0x0f0036cd	ivtv_udma_unmap	drivers/media/video/ivtv/ivtv	EXPORT_SYMBOL
+0x2456e513	ir_decode_pulsedistance	drivers/media/common/ir-common	EXPORT_SYMBOL_GPL
+0xa97f0100	b1_register_appl	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x05301d4a	neigh_changeaddr	vmlinux	EXPORT_SYMBOL
+0xa120d33c	tty_unregister_ldisc	vmlinux	EXPORT_SYMBOL
+0x7dc5d0b6	crypto_unregister_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x2ada04c1	invalidate_inode_pages2	vmlinux	EXPORT_SYMBOL_GPL
+0xc84df378	snd_seq_dump_var_event	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xc11728c7	ipt_do_table	net/ipv4/netfilter/ip_tables	EXPORT_SYMBOL
+0x133e83a2	led_classdev_register	drivers/leds/led-class	EXPORT_SYMBOL_GPL
+0xd65c1685	ib_create_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x8879f8f0	dma_region_sync_for_cpu	vmlinux	EXPORT_SYMBOL
+0xaeb10270	scsi_calculate_bounce_limit	vmlinux	EXPORT_SYMBOL
+0xa11031eb	kmem_cache_destroy	vmlinux	EXPORT_SYMBOL
+0x2099274a	pm_register	vmlinux	EXPORT_SYMBOL
+0x40f0a34d	xt_find_target	net/netfilter/x_tables	EXPORT_SYMBOL
+0xc9c1bdef	usb_serial_disconnect	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x3712e340	tipc_portunreliable	net/tipc/tipc	EXPORT_SYMBOL
+0x5bfebf12	phy_mii_ioctl	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xacbba5eb	rpc_proc_register	vmlinux	EXPORT_SYMBOL
+0x431d79f9	dget_locked	vmlinux	EXPORT_SYMBOL
+0x8bb33e7d	__release_region	vmlinux	EXPORT_SYMBOL
+0x3f072204	complete_all	vmlinux	EXPORT_SYMBOL
+0xb82477d2	snd_emu10k1_ptr_write	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xbcf2d2fb	bttv_read_gpio	drivers/media/video/bt8xx/bttv	EXPORT_SYMBOL
+0x54290dc9	nla_validate	vmlinux	EXPORT_SYMBOL
+0x29f177ac	sock_enable_timestamp	vmlinux	EXPORT_SYMBOL
+0x291f9bed	bio_split_pool	vmlinux	EXPORT_SYMBOL
+0x273f066e	_write_unlock_irq	vmlinux	EXPORT_SYMBOL
+0xf105b86d	dst_error_bailout	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0x7fe913d7	rdma_destroy_qp	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x1f6e895d	rdma_destroy_id	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x1000ade4	inet_csk_clear_xmit_timers	vmlinux	EXPORT_SYMBOL
+0x9fdea959	snd_pcm_hw_param_value	vmlinux	EXPORT_SYMBOL
+0x31ef6ede	pccard_get_next_tuple	vmlinux	EXPORT_SYMBOL
+0xf3980883	nf_nat_follow_master	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xf8f3a0fb	ata_ratelimit	vmlinux	EXPORT_SYMBOL_GPL
+0x3e4b82b3	fc_remote_port_rolechg	vmlinux	EXPORT_SYMBOL
+0x7ac647ac	agp_free_memory	vmlinux	EXPORT_SYMBOL
+0x48060a04	agp_copy_info	vmlinux	EXPORT_SYMBOL
+0xebbf1dba	strncasecmp	vmlinux	EXPORT_SYMBOL
+0xde9a244c	default_llseek	vmlinux	EXPORT_SYMBOL
+0x65ef8727	exit_fs	vmlinux	EXPORT_SYMBOL_GPL
+0x3061c52d	snd_use_lock_sync_helper	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x9b2bbc55	cx8802_register_driver	drivers/media/video/cx88/cx8802	EXPORT_SYMBOL
+0x935d127e	dst_comm_init	drivers/media/dvb/bt8xx/dst	EXPORT_SYMBOL
+0xba837ad6	tcp_read_sock	vmlinux	EXPORT_SYMBOL
+0xc160b1eb	kvm_mmu_load	vmlinux	EXPORT_SYMBOL_GPL
+0xffff1ec4	dccp_li_hist_calc_i_mean	net/dccp/ccids/lib/dccp_tfrc_lib	EXPORT_SYMBOL_GPL
+0xfc31fe88	l2cap_load	net/bluetooth/l2cap	EXPORT_SYMBOL
+0xc5011ff1	sirdev_get_instance	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x7e3ba18c	sirdev_put_instance	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0xdfcec0b6	rpc_peeraddr	vmlinux	EXPORT_SYMBOL_GPL
+0x6f6836f0	ip_fragment	vmlinux	EXPORT_SYMBOL
+0x60db26ad	cpuidle_register_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x815b5dd4	match_octal	vmlinux	EXPORT_SYMBOL
+0x523594a6	bio_map_kern	vmlinux	EXPORT_SYMBOL
+0x4fe71e06	xt_register_targets	net/netfilter/x_tables	EXPORT_SYMBOL
+0x58e97b68	i2c_smbus_write_byte	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xdb0d0b5b	scsi_register_driver	vmlinux	EXPORT_SYMBOL
+0x3892b43b	poll_freewait	vmlinux	EXPORT_SYMBOL
+0xb3a307c6	si_meminfo	vmlinux	EXPORT_SYMBOL
+0x2543770b	snd_timer_pause	vmlinux	EXPORT_SYMBOL
+0x5b6c00e6	xor_blocks	vmlinux	EXPORT_SYMBOL
+0x359cee19	get_fs_type	vmlinux	EXPORT_SYMBOL
+0x1efcae98	snd_trident_free_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x55ea7bfa	nf_nat_pptp_hook_outbound	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0x1c1a3067	nf_nat_seq_adjust	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0x9ce6627a	dquot_acquire	vmlinux	EXPORT_SYMBOL
+0x6583fdd2	mpt_send_handshake_request	vmlinux	EXPORT_SYMBOL
+0x71a32089	scsi_host_set_state	vmlinux	EXPORT_SYMBOL
+0x362e23ec	call_rcu_bh	vmlinux	EXPORT_SYMBOL_GPL
+0x67955ce6	profile_hits	vmlinux	EXPORT_SYMBOL_GPL
+0x3976041f	tipc_set_portimportance	net/tipc/tipc	EXPORT_SYMBOL
+0x854fbefd	nat_t120_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xaae84ea1	genphy_config_aneg	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xcd083b10	unregister_sound_dsp	vmlinux	EXPORT_SYMBOL
+0xa5b68ac5	hpsb_destroy_hostinfo	vmlinux	EXPORT_SYMBOL
+0x96f9b931	blk_start_queue	vmlinux	EXPORT_SYMBOL
+0x8b63de78	journal_check_used_features	vmlinux	EXPORT_SYMBOL
+0x7422ff18	bio_copy_user	vmlinux	EXPORT_SYMBOL
+0xd00fd414	alloc_irdadev	net/irda/irda	EXPORT_SYMBOL
+0x20aa2688	arpt_unregister_table	net/ipv4/netfilter/arp_tables	EXPORT_SYMBOL
+0x53fd3f18	hci_send_acl	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xf2ea928b	sas_slave_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xa2e67f08	acpi_bus_generate_proc_event4	vmlinux	EXPORT_SYMBOL_GPL
+0x7d535d18	crypto_km_types	vmlinux	EXPORT_SYMBOL_GPL
+0x5557fa77	generic_removexattr	vmlinux	EXPORT_SYMBOL
+0xd7f9f791	deactivate_super	vmlinux	EXPORT_SYMBOL
+0x9f291044	vmap	vmlinux	EXPORT_SYMBOL
diff -urpN linux-2.6.23-sabayon/net/mac80211/ieee80211_iface.c testtry/net/mac80211/ieee80211_iface.c
--- linux-2.6.23-sabayon/net/mac80211/ieee80211_iface.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/net/mac80211/ieee80211_iface.c	2007-10-15 15:15:49.000000000 +0000
@@ -106,7 +106,7 @@ void ieee80211_if_set_type(struct net_de
 	 * which already has a hard_start_xmit routine assigned
 	 * which must not be changed.
 	 */
-	if (!dev->hard_start_xmit)
+	if (dev != sdata->local->mdev)
 		dev->hard_start_xmit = ieee80211_subif_start_xmit;
 
 	/*
diff -urpN linux-2.6.23-sabayon/net/mac80211/rx.c testtry/net/mac80211/rx.c
--- linux-2.6.23-sabayon/net/mac80211/rx.c	2007-10-15 14:50:10.000000000 +0000
+++ testtry/net/mac80211/rx.c	2007-10-15 15:16:05.000000000 +0000
@@ -535,7 +535,7 @@ ieee80211_rx_h_decrypt(struct ieee80211_
 		break;
 	}
 
-	/* either the frame will be decrypted or dropped */
+	/* either the frame has been decrypted or will be dropped */
 	rx->u.rx.status->flag |= RX_FLAG_DECRYPTED;
 
 	return result;
Files linux-2.6.23-sabayon/scripts/basic/docproc and testtry/scripts/basic/docproc differ
Files linux-2.6.23-sabayon/scripts/basic/fixdep and testtry/scripts/basic/fixdep differ
Files linux-2.6.23-sabayon/scripts/bin2c and testtry/scripts/bin2c differ
Files linux-2.6.23-sabayon/scripts/conmakehash and testtry/scripts/conmakehash differ
Files linux-2.6.23-sabayon/scripts/genksyms/genksyms and testtry/scripts/genksyms/genksyms differ
diff -urpN linux-2.6.23-sabayon/scripts/genksyms/keywords.c testtry/scripts/genksyms/keywords.c
--- linux-2.6.23-sabayon/scripts/genksyms/keywords.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/genksyms/keywords.c	2007-10-15 16:44:58.000000000 +0000
@@ -0,0 +1,212 @@
+/* ANSI-C code produced by gperf version 3.0.1 */
+/* Command-line: gperf -L ANSI-C -a -C -E -g -H is_reserved_hash -k '1,3,$' -N is_reserved_word -p -t scripts/genksyms/keywords.gperf  */
+
+#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
+      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
+      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
+      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
+      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
+      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
+      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
+      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
+      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
+      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
+      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
+      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
+      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
+      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
+      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
+      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
+      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
+      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
+      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
+      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
+      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
+      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
+      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
+/* The character set is not based on ISO-646.  */
+#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
+#endif
+
+#line 1 "scripts/genksyms/keywords.gperf"
+
+#line 3 "scripts/genksyms/keywords.gperf"
+struct resword { const char *name; int token; };
+/* maximum key range = 68, duplicates = 0 */
+
+#ifdef __GNUC__
+__inline
+#else
+#ifdef __cplusplus
+inline
+#endif
+#endif
+static unsigned int
+is_reserved_hash (register const char *str, register unsigned int len)
+{
+  static const unsigned char asso_values[] =
+    {
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71,  0,
+      71, 71, 71, 71, 71, 71, 35, 71, 71, 71,
+       5, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71,  0, 71,  0, 71,  5,
+       5,  0, 10, 20, 71, 25, 71, 71, 20,  0,
+      20, 30, 25, 71, 10,  5,  0, 20, 15, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
+      71, 71, 71, 71, 71, 71
+    };
+  return len + asso_values[(unsigned char)str[2]] + asso_values[(unsigned char)str[0]] + asso_values[(unsigned char)str[len - 1]];
+}
+
+#ifdef __GNUC__
+__inline
+#endif
+const struct resword *
+is_reserved_word (register const char *str, register unsigned int len)
+{
+  enum
+    {
+      TOTAL_KEYWORDS = 42,
+      MIN_WORD_LENGTH = 3,
+      MAX_WORD_LENGTH = 24,
+      MIN_HASH_VALUE = 3,
+      MAX_HASH_VALUE = 70
+    };
+
+  static const struct resword wordlist[] =
+    {
+      {""}, {""}, {""},
+#line 25 "scripts/genksyms/keywords.gperf"
+      {"asm", ASM_KEYW},
+      {""},
+#line 8 "scripts/genksyms/keywords.gperf"
+      {"__asm", ASM_KEYW},
+      {""},
+#line 9 "scripts/genksyms/keywords.gperf"
+      {"__asm__", ASM_KEYW},
+      {""},
+#line 22 "scripts/genksyms/keywords.gperf"
+      {"_restrict", RESTRICT_KEYW},
+#line 51 "scripts/genksyms/keywords.gperf"
+      {"__typeof__", TYPEOF_KEYW},
+#line 10 "scripts/genksyms/keywords.gperf"
+      {"__attribute", ATTRIBUTE_KEYW},
+#line 12 "scripts/genksyms/keywords.gperf"
+      {"__const", CONST_KEYW},
+#line 11 "scripts/genksyms/keywords.gperf"
+      {"__attribute__", ATTRIBUTE_KEYW},
+#line 13 "scripts/genksyms/keywords.gperf"
+      {"__const__", CONST_KEYW},
+#line 17 "scripts/genksyms/keywords.gperf"
+      {"__signed__", SIGNED_KEYW},
+#line 43 "scripts/genksyms/keywords.gperf"
+      {"static", STATIC_KEYW},
+      {""},
+#line 16 "scripts/genksyms/keywords.gperf"
+      {"__signed", SIGNED_KEYW},
+#line 31 "scripts/genksyms/keywords.gperf"
+      {"char", CHAR_KEYW},
+      {""},
+#line 44 "scripts/genksyms/keywords.gperf"
+      {"struct", STRUCT_KEYW},
+#line 23 "scripts/genksyms/keywords.gperf"
+      {"__restrict__", RESTRICT_KEYW},
+#line 24 "scripts/genksyms/keywords.gperf"
+      {"restrict", RESTRICT_KEYW},
+#line 34 "scripts/genksyms/keywords.gperf"
+      {"enum", ENUM_KEYW},
+#line 18 "scripts/genksyms/keywords.gperf"
+      {"__volatile", VOLATILE_KEYW},
+#line 35 "scripts/genksyms/keywords.gperf"
+      {"extern", EXTERN_KEYW},
+#line 19 "scripts/genksyms/keywords.gperf"
+      {"__volatile__", VOLATILE_KEYW},
+#line 38 "scripts/genksyms/keywords.gperf"
+      {"int", INT_KEYW},
+#line 7 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_SYMBOL_GPL_FUTURE", EXPORT_SYMBOL_KEYW},
+#line 32 "scripts/genksyms/keywords.gperf"
+      {"const", CONST_KEYW},
+#line 33 "scripts/genksyms/keywords.gperf"
+      {"double", DOUBLE_KEYW},
+      {""},
+#line 14 "scripts/genksyms/keywords.gperf"
+      {"__inline", INLINE_KEYW},
+#line 30 "scripts/genksyms/keywords.gperf"
+      {"auto", AUTO_KEYW},
+#line 15 "scripts/genksyms/keywords.gperf"
+      {"__inline__", INLINE_KEYW},
+#line 42 "scripts/genksyms/keywords.gperf"
+      {"signed", SIGNED_KEYW},
+      {""},
+#line 47 "scripts/genksyms/keywords.gperf"
+      {"unsigned", UNSIGNED_KEYW},
+      {""},
+#line 41 "scripts/genksyms/keywords.gperf"
+      {"short", SHORT_KEYW},
+#line 50 "scripts/genksyms/keywords.gperf"
+      {"typeof", TYPEOF_KEYW},
+#line 45 "scripts/genksyms/keywords.gperf"
+      {"typedef", TYPEDEF_KEYW},
+#line 49 "scripts/genksyms/keywords.gperf"
+      {"volatile", VOLATILE_KEYW},
+      {""},
+#line 36 "scripts/genksyms/keywords.gperf"
+      {"float", FLOAT_KEYW},
+      {""}, {""},
+#line 40 "scripts/genksyms/keywords.gperf"
+      {"register", REGISTER_KEYW},
+#line 48 "scripts/genksyms/keywords.gperf"
+      {"void", VOID_KEYW},
+      {""},
+#line 37 "scripts/genksyms/keywords.gperf"
+      {"inline", INLINE_KEYW},
+      {""},
+#line 5 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_SYMBOL", EXPORT_SYMBOL_KEYW},
+      {""},
+#line 21 "scripts/genksyms/keywords.gperf"
+      {"_Bool", BOOL_KEYW},
+      {""},
+#line 6 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_SYMBOL_GPL", EXPORT_SYMBOL_KEYW},
+      {""}, {""}, {""}, {""}, {""}, {""},
+#line 39 "scripts/genksyms/keywords.gperf"
+      {"long", LONG_KEYW},
+      {""}, {""}, {""}, {""}, {""},
+#line 46 "scripts/genksyms/keywords.gperf"
+      {"union", UNION_KEYW}
+    };
+
+  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
+    {
+      register int key = is_reserved_hash (str, len);
+
+      if (key <= MAX_HASH_VALUE && key >= 0)
+        {
+          register const char *s = wordlist[key].name;
+
+          if (*str == *s && !strcmp (str + 1, s + 1))
+            return &wordlist[key];
+        }
+    }
+  return 0;
+}
diff -urpN linux-2.6.23-sabayon/scripts/genksyms/lex.c testtry/scripts/genksyms/lex.c
--- linux-2.6.23-sabayon/scripts/genksyms/lex.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/genksyms/lex.c	2007-10-15 16:44:57.000000000 +0000
@@ -0,0 +1,2166 @@
+#line 2 "scripts/genksyms/lex.c"
+/* A lexical scanner generated by flex */
+
+/* Scanner skeleton version:
+ * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
+ */
+
+#define FLEX_SCANNER
+#define YY_FLEX_MAJOR_VERSION 2
+#define YY_FLEX_MINOR_VERSION 5
+
+#include <stdio.h>
+#include <unistd.h>
+
+
+/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
+#ifdef c_plusplus
+#ifndef __cplusplus
+#define __cplusplus
+#endif
+#endif
+
+
+#ifdef __cplusplus
+
+#include <stdlib.h>
+
+/* Use prototypes in function declarations. */
+#define YY_USE_PROTOS
+
+/* The "const" storage-class-modifier is valid. */
+#define YY_USE_CONST
+
+#else	/* ! __cplusplus */
+
+#if __STDC__
+
+#define YY_USE_PROTOS
+#define YY_USE_CONST
+
+#endif	/* __STDC__ */
+#endif	/* ! __cplusplus */
+
+#ifdef __TURBOC__
+ #pragma warn -rch
+ #pragma warn -use
+#include <io.h>
+#include <stdlib.h>
+#define YY_USE_CONST
+#define YY_USE_PROTOS
+#endif
+
+#ifdef YY_USE_CONST
+#define yyconst const
+#else
+#define yyconst
+#endif
+
+
+#ifdef YY_USE_PROTOS
+#define YY_PROTO(proto) proto
+#else
+#define YY_PROTO(proto) ()
+#endif
+
+/* Returned upon end-of-file. */
+#define YY_NULL 0
+
+/* Promotes a possibly negative, possibly signed char to an unsigned
+ * integer for use as an array index.  If the signed char is negative,
+ * we want to instead treat it as an 8-bit unsigned char, hence the
+ * double cast.
+ */
+#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
+
+/* Enter a start condition.  This macro really ought to take a parameter,
+ * but we do it the disgusting crufty way forced on us by the ()-less
+ * definition of BEGIN.
+ */
+#define BEGIN yy_start = 1 + 2 *
+
+/* Translate the current start state into a value that can be later handed
+ * to BEGIN to return to the state.  The YYSTATE alias is for lex
+ * compatibility.
+ */
+#define YY_START ((yy_start - 1) / 2)
+#define YYSTATE YY_START
+
+/* Action number for EOF rule of a given start state. */
+#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
+
+/* Special action meaning "start processing a new file". */
+#define YY_NEW_FILE yyrestart( yyin )
+
+#define YY_END_OF_BUFFER_CHAR 0
+
+/* Size of default input buffer. */
+#define YY_BUF_SIZE 16384
+
+typedef struct yy_buffer_state *YY_BUFFER_STATE;
+
+extern int yyleng;
+extern FILE *yyin, *yyout;
+
+#define EOB_ACT_CONTINUE_SCAN 0
+#define EOB_ACT_END_OF_FILE 1
+#define EOB_ACT_LAST_MATCH 2
+
+/* The funky do-while in the following #define is used to turn the definition
+ * int a single C statement (which needs a semi-colon terminator).  This
+ * avoids problems with code like:
+ *
+ * 	if ( condition_holds )
+ *		yyless( 5 );
+ *	else
+ *		do_something_else();
+ *
+ * Prior to using the do-while the compiler would get upset at the
+ * "else" because it interpreted the "if" statement as being all
+ * done when it reached the ';' after the yyless() call.
+ */
+
+/* Return all but the first 'n' matched characters back to the input stream. */
+
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up yytext. */ \
+		*yy_cp = yy_hold_char; \
+		YY_RESTORE_YY_MORE_OFFSET \
+		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
+		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
+		} \
+	while ( 0 )
+
+#define unput(c) yyunput( c, yytext_ptr )
+
+/* The following is because we cannot portably get our hands on size_t
+ * (without autoconf's help, which isn't available because we want
+ * flex-generated scanners to compile on their own).
+ */
+typedef unsigned int yy_size_t;
+
+
+struct yy_buffer_state
+	{
+	FILE *yy_input_file;
+
+	char *yy_ch_buf;		/* input buffer */
+	char *yy_buf_pos;		/* current position in input buffer */
+
+	/* Size of input buffer in bytes, not including room for EOB
+	 * characters.
+	 */
+	yy_size_t yy_buf_size;
+
+	/* Number of characters read into yy_ch_buf, not including EOB
+	 * characters.
+	 */
+	int yy_n_chars;
+
+	/* Whether we "own" the buffer - i.e., we know we created it,
+	 * and can realloc() it to grow it, and should free() it to
+	 * delete it.
+	 */
+	int yy_is_our_buffer;
+
+	/* Whether this is an "interactive" input source; if so, and
+	 * if we're using stdio for input, then we want to use getc()
+	 * instead of fread(), to make sure we stop fetching input after
+	 * each newline.
+	 */
+	int yy_is_interactive;
+
+	/* Whether we're considered to be at the beginning of a line.
+	 * If so, '^' rules will be active on the next match, otherwise
+	 * not.
+	 */
+	int yy_at_bol;
+
+	/* Whether to try to fill the input buffer when we reach the
+	 * end of it.
+	 */
+	int yy_fill_buffer;
+
+	int yy_buffer_status;
+#define YY_BUFFER_NEW 0
+#define YY_BUFFER_NORMAL 1
+	/* When an EOF's been seen but there's still some text to process
+	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
+	 * shouldn't try reading from the input source any more.  We might
+	 * still have a bunch of tokens to match, though, because of
+	 * possible backing-up.
+	 *
+	 * When we actually see the EOF, we change the status to "new"
+	 * (via yyrestart()), so that the user can continue scanning by
+	 * just pointing yyin at a new input file.
+	 */
+#define YY_BUFFER_EOF_PENDING 2
+	};
+
+static YY_BUFFER_STATE yy_current_buffer = 0;
+
+/* We provide macros for accessing buffer states in case in the
+ * future we want to put the buffer states in a more general
+ * "scanner state".
+ */
+#define YY_CURRENT_BUFFER yy_current_buffer
+
+
+/* yy_hold_char holds the character lost when yytext is formed. */
+static char yy_hold_char;
+
+static int yy_n_chars;		/* number of characters read into yy_ch_buf */
+
+
+int yyleng;
+
+/* Points to current character in buffer. */
+static char *yy_c_buf_p = (char *) 0;
+static int yy_init = 1;		/* whether we need to initialize */
+static int yy_start = 0;	/* start state number */
+
+/* Flag which is used to allow yywrap()'s to do buffer switches
+ * instead of setting up a fresh yyin.  A bit of a hack ...
+ */
+static int yy_did_buffer_switch_on_eof;
+
+void yyrestart YY_PROTO(( FILE *input_file ));
+
+void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
+void yy_load_buffer_state YY_PROTO(( void ));
+YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
+void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
+void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
+void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
+#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
+
+YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
+YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
+YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
+
+static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
+static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
+static void yy_flex_free YY_PROTO(( void * ));
+
+#define yy_new_buffer yy_create_buffer
+
+#define yy_set_interactive(is_interactive) \
+	{ \
+	if ( ! yy_current_buffer ) \
+		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
+	yy_current_buffer->yy_is_interactive = is_interactive; \
+	}
+
+#define yy_set_bol(at_bol) \
+	{ \
+	if ( ! yy_current_buffer ) \
+		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
+	yy_current_buffer->yy_at_bol = at_bol; \
+	}
+
+#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)
+
+
+#define yywrap() 1
+#define YY_SKIP_YYWRAP
+
+#define FLEX_DEBUG
+typedef unsigned char YY_CHAR;
+FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
+typedef int yy_state_type;
+
+#define FLEX_DEBUG
+extern char *yytext;
+#define yytext_ptr yytext
+
+static yy_state_type yy_get_previous_state YY_PROTO(( void ));
+static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
+static int yy_get_next_buffer YY_PROTO(( void ));
+static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));
+
+/* Done after the current pattern has been matched and before the
+ * corresponding action - sets up yytext.
+ */
+#define YY_DO_BEFORE_ACTION \
+	yytext_ptr = yy_bp; \
+	yyleng = (int) (yy_cp - yy_bp); \
+	yy_hold_char = *yy_cp; \
+	*yy_cp = '\0'; \
+	yy_c_buf_p = yy_cp;
+
+#define YY_NUM_RULES 13
+#define YY_END_OF_BUFFER 14
+static yyconst short int yy_accept[76] =
+    {   0,
+        0,    0,    0,    0,   14,   12,    4,    3,   12,    7,
+       12,   12,    7,   12,   12,   12,   12,   12,    9,    9,
+       12,   12,   12,    4,    0,    5,    0,    7,    0,    6,
+        0,    0,    0,    0,    0,    0,    2,    8,   10,   10,
+        9,    0,    0,    9,    9,    0,    9,    0,    0,   11,
+        0,    0,    0,   10,    0,   10,    9,    9,    0,    0,
+        0,    0,    0,    0,    0,   10,   10,    0,    0,    0,
+        0,    0,    0,    1,    0
+    } ;
+
+static yyconst int yy_ec[256] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
+        4,    4,    4,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    2,    1,    5,    6,    7,    8,    9,   10,    1,
+        1,    8,   11,    1,   12,   13,    8,   14,   15,   15,
+       15,   15,   15,   15,   15,   16,   16,    1,    1,   17,
+       18,   19,    1,    1,   20,   20,   20,   20,   21,   22,
+        7,    7,    7,    7,    7,   23,    7,    7,    7,    7,
+        7,    7,    7,    7,   24,    7,    7,   25,    7,    7,
+        1,   26,    1,    8,    7,    1,   20,   20,   20,   20,
+
+       21,   22,    7,    7,    7,    7,    7,   27,    7,    7,
+        7,    7,    7,    7,    7,    7,   24,    7,    7,   25,
+        7,    7,    1,   28,    1,    8,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1
+    } ;
+
+static yyconst int yy_meta[29] =
+    {   0,
+        1,    1,    2,    1,    1,    1,    3,    1,    1,    1,
+        4,    4,    5,    6,    6,    6,    1,    1,    1,    7,
+        8,    7,    3,    3,    3,    1,    3,    1
+    } ;
+
+static yyconst short int yy_base[88] =
+    {   0,
+        0,  147,   21,  140,  145,  284,   39,  284,   26,    0,
+       32,  126,   40,   44,  115,   35,   36,   46,   50,   53,
+       39,   61,   54,   79,   65,  284,    0,    0,   66,  284,
+        0,  119,   79,   75,  123,  104,  284,  284,  107,    0,
+       79,   73,   76,   76,   66,    0,    0,   85,   86,  284,
+      133,   83,   91,  284,   99,  147,  284,  114,  122,   70,
+      107,  141,  172,  151,  135,  181,  284,  137,  114,  157,
+      149,   48,   45,  284,  284,  208,  214,  222,  230,  238,
+      246,  250,  255,  256,  261,  267,  275
+    } ;
+
+static yyconst short int yy_def[88] =
+    {   0,
+       75,    1,    1,    3,   75,   75,   75,   75,   76,   77,
+       78,   75,   77,   79,   75,   75,   75,   75,   75,   19,
+       75,   75,   75,   75,   76,   75,   80,   77,   78,   75,
+       81,   75,   76,   78,   79,   79,   75,   75,   75,   39,
+       19,   82,   83,   75,   75,   84,   20,   76,   78,   75,
+       79,   51,   85,   75,   75,   75,   75,   84,   79,   51,
+       79,   79,   79,   51,   75,   75,   75,   86,   79,   63,
+       86,   87,   87,   75,    0,   75,   75,   75,   75,   75,
+       75,   75,   75,   75,   75,   75,   75
+    } ;
+
+static yyconst short int yy_nxt[313] =
+    {   0,
+        6,    7,    8,    7,    9,    6,   10,    6,    6,   11,
+        6,    6,   12,    6,    6,    6,    6,    6,    6,   10,
+       10,   10,   13,   10,   10,    6,   10,    6,   15,   16,
+       26,   15,   17,   18,   19,   20,   20,   21,   15,   22,
+       24,   30,   24,   38,   33,   36,   37,   74,   23,   34,
+       74,   27,   38,   38,   38,   38,   38,   31,   32,   39,
+       39,   39,   40,   41,   41,   42,   47,   47,   47,   26,
+       43,   38,   44,   45,   46,   30,   44,   75,   38,   38,
+       24,   38,   24,   26,   30,   40,   55,   55,   57,   26,
+       27,   31,   57,   43,   35,   30,   64,   64,   64,   57,
+
+       31,   65,   65,   75,   27,   36,   37,   35,   59,   37,
+       27,   31,   56,   56,   56,   59,   37,   51,   52,   52,
+       39,   39,   39,   59,   37,   37,   68,   53,   54,   54,
+       69,   50,   38,   54,   59,   37,   44,   45,   32,   37,
+       44,   35,   59,   37,   75,   14,   60,   60,   66,   66,
+       66,   37,   14,   72,   75,   61,   62,   63,   59,   61,
+       56,   56,   56,   69,   64,   64,   64,   69,   67,   67,
+       75,   75,   75,   67,   37,   35,   75,   75,   75,   61,
+       62,   75,   75,   61,   75,   70,   70,   70,   75,   75,
+       75,   70,   70,   70,   66,   66,   66,   75,   75,   75,
+
+       75,   75,   54,   54,   75,   75,   75,   54,   25,   25,
+       25,   25,   25,   25,   25,   25,   28,   75,   75,   28,
+       28,   28,   29,   29,   29,   29,   29,   29,   29,   29,
+       35,   35,   35,   35,   35,   35,   35,   35,   48,   75,
+       48,   48,   48,   48,   48,   48,   49,   75,   49,   49,
+       49,   49,   49,   49,   42,   42,   75,   42,   56,   75,
+       56,   58,   58,   58,   66,   75,   66,   71,   71,   71,
+       71,   71,   71,   71,   71,   73,   73,   73,   73,   73,
+       73,   73,   73,    5,   75,   75,   75,   75,   75,   75,
+       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
+
+       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
+       75,   75
+    } ;
+
+static yyconst short int yy_chk[313] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    3,    3,
+        9,    3,    3,    3,    3,    3,    3,    3,    3,    3,
+        7,   11,    7,   16,   13,   14,   14,   73,    3,   13,
+       72,    9,   16,   17,   17,   21,   21,   11,   18,   18,
+       18,   18,   19,   19,   19,   19,   20,   20,   20,   25,
+       19,   23,   19,   19,   19,   29,   19,   20,   22,   22,
+       24,   23,   24,   33,   34,   42,   43,   43,   45,   48,
+       25,   29,   45,   42,   60,   49,   52,   52,   52,   44,
+
+       34,   53,   53,   41,   33,   36,   36,   52,   61,   61,
+       48,   49,   55,   55,   55,   69,   69,   36,   36,   36,
+       39,   39,   39,   59,   59,   35,   59,   39,   39,   39,
+       61,   32,   15,   39,   51,   51,   58,   58,   12,   68,
+       58,   68,   62,   62,    5,    4,   51,   51,   65,   65,
+       65,   71,    2,   71,    0,   51,   51,   51,   70,   51,
+       56,   56,   56,   62,   64,   64,   64,   62,   56,   56,
+        0,    0,    0,   56,   63,   64,    0,    0,    0,   70,
+       70,    0,    0,   70,    0,   63,   63,   63,    0,    0,
+        0,   63,   63,   63,   66,   66,   66,    0,    0,    0,
+
+        0,    0,   66,   66,    0,    0,    0,   66,   76,   76,
+       76,   76,   76,   76,   76,   76,   77,    0,    0,   77,
+       77,   77,   78,   78,   78,   78,   78,   78,   78,   78,
+       79,   79,   79,   79,   79,   79,   79,   79,   80,    0,
+       80,   80,   80,   80,   80,   80,   81,    0,   81,   81,
+       81,   81,   81,   81,   82,   82,    0,   82,   83,    0,
+       83,   84,   84,   84,   85,    0,   85,   86,   86,   86,
+       86,   86,   86,   86,   86,   87,   87,   87,   87,   87,
+       87,   87,   87,   75,   75,   75,   75,   75,   75,   75,
+       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
+
+       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
+       75,   75
+    } ;
+
+static yy_state_type yy_last_accepting_state;
+static char *yy_last_accepting_cpos;
+
+extern int yy_flex_debug;
+int yy_flex_debug = 1;
+
+static yyconst short int yy_rule_linenum[13] =
+    {   0,
+       69,   70,   71,   74,   77,   78,   79,   85,   86,   87,
+       89,   92
+    } ;
+
+/* The intent behind this definition is that it'll catch
+ * any uses of REJECT which flex missed.
+ */
+#define REJECT reject_used_but_not_detected
+#define yymore() yymore_used_but_not_detected
+#define YY_MORE_ADJ 0
+#define YY_RESTORE_YY_MORE_OFFSET
+char *yytext;
+#line 1 "scripts/genksyms/lex.l"
+#define INITIAL 0
+/* Lexical analysis for genksyms.
+   Copyright 1996, 1997 Linux International.
+
+   New implementation contributed by Richard Henderson <rth@tamu.edu>
+   Based on original work by Bjorn Ekwall <bj0rn@blox.se>
+
+   Taken from Linux modutils 2.4.22.
+
+   This program is free software; you can redistribute it and/or modify it
+   under the terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 2 of the License, or (at your
+   option) any later version.
+
+   This program is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software Foundation,
+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+#line 25 "scripts/genksyms/lex.l"
+
+#include <limits.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+
+#include "genksyms.h"
+#include "parse.h"
+
+/* We've got a two-level lexer here.  We let flex do basic tokenization
+   and then we categorize those basic tokens in the second stage.  */
+#define YY_DECL		static int yylex1(void)
+
+/* Version 2 checksumming does proper tokenization; version 1 wasn't
+   quite so pedantic.  */
+#define V2_TOKENS 1
+
+/* We don't do multiple input files.  */
+#line 513 "scripts/genksyms/lex.c"
+
+/* Macros after this point can all be overridden by user definitions in
+ * section 1.
+ */
+
+#ifndef YY_SKIP_YYWRAP
+#ifdef __cplusplus
+extern "C" int yywrap YY_PROTO(( void ));
+#else
+extern int yywrap YY_PROTO(( void ));
+#endif
+#endif
+
+#ifndef YY_NO_UNPUT
+static void yyunput YY_PROTO(( int c, char *buf_ptr ));
+#endif
+
+#ifndef yytext_ptr
+static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int yy_flex_strlen YY_PROTO(( yyconst char * ));
+#endif
+
+#ifndef YY_NO_INPUT
+#ifdef __cplusplus
+static int yyinput YY_PROTO(( void ));
+#else
+static int input YY_PROTO(( void ));
+#endif
+#endif
+
+#if YY_STACK_USED
+static int yy_start_stack_ptr = 0;
+static int yy_start_stack_depth = 0;
+static int *yy_start_stack = 0;
+#ifndef YY_NO_PUSH_STATE
+static void yy_push_state YY_PROTO(( int new_state ));
+#endif
+#ifndef YY_NO_POP_STATE
+static void yy_pop_state YY_PROTO(( void ));
+#endif
+#ifndef YY_NO_TOP_STATE
+static int yy_top_state YY_PROTO(( void ));
+#endif
+
+#else
+#define YY_NO_PUSH_STATE 1
+#define YY_NO_POP_STATE 1
+#define YY_NO_TOP_STATE 1
+#endif
+
+#ifdef YY_MALLOC_DECL
+YY_MALLOC_DECL
+#else
+#if __STDC__
+#ifndef __cplusplus
+#include <stdlib.h>
+#endif
+#else
+/* Just try to get by without declaring the routines.  This will fail
+ * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
+ * or sizeof(void*) != sizeof(int).
+ */
+#endif
+#endif
+
+/* Amount of stuff to slurp up with each read. */
+#ifndef YY_READ_BUF_SIZE
+#define YY_READ_BUF_SIZE 8192
+#endif
+
+/* Copy whatever the last rule matched to the standard output. */
+
+#ifndef ECHO
+/* This used to be an fputs(), but since the string might contain NUL's,
+ * we now use fwrite().
+ */
+#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
+#endif
+
+/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
+ * is returned in "result".
+ */
+#ifndef YY_INPUT
+#define YY_INPUT(buf,result,max_size) \
+	if ( yy_current_buffer->yy_is_interactive ) \
+		{ \
+		int c = '*', n; \
+		for ( n = 0; n < max_size && \
+			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
+			buf[n] = (char) c; \
+		if ( c == '\n' ) \
+			buf[n++] = (char) c; \
+		if ( c == EOF && ferror( yyin ) ) \
+			YY_FATAL_ERROR( "input in flex scanner failed" ); \
+		result = n; \
+		} \
+	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
+		  && ferror( yyin ) ) \
+		YY_FATAL_ERROR( "input in flex scanner failed" );
+#endif
+
+/* No semi-colon after return; correct usage is to write "yyterminate();" -
+ * we don't want an extra ';' after the "return" because that will cause
+ * some compilers to complain about unreachable statements.
+ */
+#ifndef yyterminate
+#define yyterminate() return YY_NULL
+#endif
+
+/* Number of entries by which start-condition stack grows. */
+#ifndef YY_START_STACK_INCR
+#define YY_START_STACK_INCR 25
+#endif
+
+/* Report a fatal error. */
+#ifndef YY_FATAL_ERROR
+#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
+#endif
+
+/* Default declaration of generated scanner - a define so the user can
+ * easily add parameters.
+ */
+#ifndef YY_DECL
+#define YY_DECL int yylex YY_PROTO(( void ))
+#endif
+
+/* Code executed at the beginning of each rule, after yytext and yyleng
+ * have been set up.
+ */
+#ifndef YY_USER_ACTION
+#define YY_USER_ACTION
+#endif
+
+/* Code executed at the end of each rule. */
+#ifndef YY_BREAK
+#define YY_BREAK break;
+#endif
+
+#define YY_RULE_SETUP \
+	if ( yyleng > 0 ) \
+		yy_current_buffer->yy_at_bol = \
+				(yytext[yyleng - 1] == '\n'); \
+	YY_USER_ACTION
+
+YY_DECL
+	{
+	register yy_state_type yy_current_state;
+	register char *yy_cp = NULL, *yy_bp = NULL;
+	register int yy_act;
+
+#line 65 "scripts/genksyms/lex.l"
+
+
+
+ /* Keep track of our location in the original source files.  */
+#line 672 "scripts/genksyms/lex.c"
+
+	if ( yy_init )
+		{
+		yy_init = 0;
+
+#ifdef YY_USER_INIT
+		YY_USER_INIT;
+#endif
+
+		if ( ! yy_start )
+			yy_start = 1;	/* first start state */
+
+		if ( ! yyin )
+			yyin = stdin;
+
+		if ( ! yyout )
+			yyout = stdout;
+
+		if ( ! yy_current_buffer )
+			yy_current_buffer =
+				yy_create_buffer( yyin, YY_BUF_SIZE );
+
+		yy_load_buffer_state();
+		}
+
+	while ( 1 )		/* loops until end-of-file is reached */
+		{
+		yy_cp = yy_c_buf_p;
+
+		/* Support of yytext. */
+		*yy_cp = yy_hold_char;
+
+		/* yy_bp points to the position in yy_ch_buf of the start of
+		 * the current run.
+		 */
+		yy_bp = yy_cp;
+
+		yy_current_state = yy_start;
+		yy_current_state += YY_AT_BOL();
+yy_match:
+		do
+			{
+			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
+			if ( yy_accept[yy_current_state] )
+				{
+				yy_last_accepting_state = yy_current_state;
+				yy_last_accepting_cpos = yy_cp;
+				}
+			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
+				{
+				yy_current_state = (int) yy_def[yy_current_state];
+				if ( yy_current_state >= 76 )
+					yy_c = yy_meta[(unsigned int) yy_c];
+				}
+			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
+			++yy_cp;
+			}
+		while ( yy_base[yy_current_state] != 284 );
+
+yy_find_action:
+		yy_act = yy_accept[yy_current_state];
+		if ( yy_act == 0 )
+			{ /* have to back up */
+			yy_cp = yy_last_accepting_cpos;
+			yy_current_state = yy_last_accepting_state;
+			yy_act = yy_accept[yy_current_state];
+			}
+
+		YY_DO_BEFORE_ACTION;
+
+
+do_action:	/* This label is used only to access EOF actions. */
+
+		if ( yy_flex_debug )
+			{
+			if ( yy_act == 0 )
+				fprintf( stderr, "--scanner backing up\n" );
+			else if ( yy_act < 13 )
+				fprintf( stderr, "--accepting rule at line %d (\"%s\")\n",
+				         yy_rule_linenum[yy_act], yytext );
+			else if ( yy_act == 13 )
+				fprintf( stderr, "--accepting default rule (\"%s\")\n",
+				         yytext );
+			else if ( yy_act == 14 )
+				fprintf( stderr, "--(end of buffer or a NUL)\n" );
+			else
+				fprintf( stderr, "--EOF (start condition %d)\n", YY_START );
+			}
+
+		switch ( yy_act )
+	{ /* beginning of action switch */
+			case 0: /* must back up */
+			/* undo the effects of YY_DO_BEFORE_ACTION */
+			*yy_cp = yy_hold_char;
+			yy_cp = yy_last_accepting_cpos;
+			yy_current_state = yy_last_accepting_state;
+			goto yy_find_action;
+
+case 1:
+YY_RULE_SETUP
+#line 69 "scripts/genksyms/lex.l"
+return FILENAME;
+	YY_BREAK
+case 2:
+YY_RULE_SETUP
+#line 70 "scripts/genksyms/lex.l"
+cur_line++;
+	YY_BREAK
+case 3:
+YY_RULE_SETUP
+#line 71 "scripts/genksyms/lex.l"
+cur_line++;
+	YY_BREAK
+/* Ignore all other whitespace.  */
+case 4:
+YY_RULE_SETUP
+#line 74 "scripts/genksyms/lex.l"
+;
+	YY_BREAK
+case 5:
+YY_RULE_SETUP
+#line 77 "scripts/genksyms/lex.l"
+return STRING;
+	YY_BREAK
+case 6:
+YY_RULE_SETUP
+#line 78 "scripts/genksyms/lex.l"
+return CHAR;
+	YY_BREAK
+case 7:
+YY_RULE_SETUP
+#line 79 "scripts/genksyms/lex.l"
+return IDENT;
+	YY_BREAK
+/* The Pedant requires that the other C multi-character tokens be
+    recognized as tokens.  We don't actually use them since we don't
+    parse expressions, but we do want whitespace to be arranged
+    around them properly.  */
+case 8:
+YY_RULE_SETUP
+#line 85 "scripts/genksyms/lex.l"
+return OTHER;
+	YY_BREAK
+case 9:
+YY_RULE_SETUP
+#line 86 "scripts/genksyms/lex.l"
+return INT;
+	YY_BREAK
+case 10:
+YY_RULE_SETUP
+#line 87 "scripts/genksyms/lex.l"
+return REAL;
+	YY_BREAK
+case 11:
+YY_RULE_SETUP
+#line 89 "scripts/genksyms/lex.l"
+return DOTS;
+	YY_BREAK
+/* All other tokens are single characters.  */
+case 12:
+YY_RULE_SETUP
+#line 92 "scripts/genksyms/lex.l"
+return yytext[0];
+	YY_BREAK
+case 13:
+YY_RULE_SETUP
+#line 95 "scripts/genksyms/lex.l"
+ECHO;
+	YY_BREAK
+#line 842 "scripts/genksyms/lex.c"
+case YY_STATE_EOF(INITIAL):
+case YY_STATE_EOF(V2_TOKENS):
+	yyterminate();
+
+	case YY_END_OF_BUFFER:
+		{
+		/* Amount of text matched not including the EOB char. */
+		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;
+
+		/* Undo the effects of YY_DO_BEFORE_ACTION. */
+		*yy_cp = yy_hold_char;
+		YY_RESTORE_YY_MORE_OFFSET
+
+		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
+			{
+			/* We're scanning a new file or input source.  It's
+			 * possible that this happened because the user
+			 * just pointed yyin at a new source and called
+			 * yylex().  If so, then we have to assure
+			 * consistency between yy_current_buffer and our
+			 * globals.  Here is the right place to do so, because
+			 * this is the first action (other than possibly a
+			 * back-up) that will match for the new input source.
+			 */
+			yy_n_chars = yy_current_buffer->yy_n_chars;
+			yy_current_buffer->yy_input_file = yyin;
+			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
+			}
+
+		/* Note that here we test for yy_c_buf_p "<=" to the position
+		 * of the first EOB in the buffer, since yy_c_buf_p will
+		 * already have been incremented past the NUL character
+		 * (since all states make transitions on EOB to the
+		 * end-of-buffer state).  Contrast this with the test
+		 * in input().
+		 */
+		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
+			{ /* This was really a NUL. */
+			yy_state_type yy_next_state;
+
+			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;
+
+			yy_current_state = yy_get_previous_state();
+
+			/* Okay, we're now positioned to make the NUL
+			 * transition.  We couldn't have
+			 * yy_get_previous_state() go ahead and do it
+			 * for us because it doesn't know how to deal
+			 * with the possibility of jamming (and we don't
+			 * want to build jamming into it because then it
+			 * will run more slowly).
+			 */
+
+			yy_next_state = yy_try_NUL_trans( yy_current_state );
+
+			yy_bp = yytext_ptr + YY_MORE_ADJ;
+
+			if ( yy_next_state )
+				{
+				/* Consume the NUL. */
+				yy_cp = ++yy_c_buf_p;
+				yy_current_state = yy_next_state;
+				goto yy_match;
+				}
+
+			else
+				{
+				yy_cp = yy_c_buf_p;
+				goto yy_find_action;
+				}
+			}
+
+		else switch ( yy_get_next_buffer() )
+			{
+			case EOB_ACT_END_OF_FILE:
+				{
+				yy_did_buffer_switch_on_eof = 0;
+
+				if ( yywrap() )
+					{
+					/* Note: because we've taken care in
+					 * yy_get_next_buffer() to have set up
+					 * yytext, we can now set up
+					 * yy_c_buf_p so that if some total
+					 * hoser (like flex itself) wants to
+					 * call the scanner after we return the
+					 * YY_NULL, it'll still work - another
+					 * YY_NULL will get returned.
+					 */
+					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;
+
+					yy_act = YY_STATE_EOF(YY_START);
+					goto do_action;
+					}
+
+				else
+					{
+					if ( ! yy_did_buffer_switch_on_eof )
+						YY_NEW_FILE;
+					}
+				break;
+				}
+
+			case EOB_ACT_CONTINUE_SCAN:
+				yy_c_buf_p =
+					yytext_ptr + yy_amount_of_matched_text;
+
+				yy_current_state = yy_get_previous_state();
+
+				yy_cp = yy_c_buf_p;
+				yy_bp = yytext_ptr + YY_MORE_ADJ;
+				goto yy_match;
+
+			case EOB_ACT_LAST_MATCH:
+				yy_c_buf_p =
+				&yy_current_buffer->yy_ch_buf[yy_n_chars];
+
+				yy_current_state = yy_get_previous_state();
+
+				yy_cp = yy_c_buf_p;
+				yy_bp = yytext_ptr + YY_MORE_ADJ;
+				goto yy_find_action;
+			}
+		break;
+		}
+
+	default:
+		YY_FATAL_ERROR(
+			"fatal flex scanner internal error--no action found" );
+	} /* end of action switch */
+		} /* end of scanning one token */
+	} /* end of yylex */
+
+
+/* yy_get_next_buffer - try to read in a new buffer
+ *
+ * Returns a code representing an action:
+ *	EOB_ACT_LAST_MATCH -
+ *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
+ *	EOB_ACT_END_OF_FILE - end of file
+ */
+
+static int yy_get_next_buffer()
+	{
+	register char *dest = yy_current_buffer->yy_ch_buf;
+	register char *source = yytext_ptr;
+	register int number_to_move, i;
+	int ret_val;
+
+	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
+		YY_FATAL_ERROR(
+		"fatal flex scanner internal error--end of buffer missed" );
+
+	if ( yy_current_buffer->yy_fill_buffer == 0 )
+		{ /* Don't try to fill the buffer, so this is an EOF. */
+		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
+			{
+			/* We matched a single character, the EOB, so
+			 * treat this as a final EOF.
+			 */
+			return EOB_ACT_END_OF_FILE;
+			}
+
+		else
+			{
+			/* We matched some text prior to the EOB, first
+			 * process it.
+			 */
+			return EOB_ACT_LAST_MATCH;
+			}
+		}
+
+	/* Try to read more data. */
+
+	/* First move last chars to start of buffer. */
+	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;
+
+	for ( i = 0; i < number_to_move; ++i )
+		*(dest++) = *(source++);
+
+	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
+		/* don't do the read, it's not guaranteed to return an EOF,
+		 * just force an EOF
+		 */
+		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
+
+	else
+		{
+		int num_to_read =
+			yy_current_buffer->yy_buf_size - number_to_move - 1;
+
+		while ( num_to_read <= 0 )
+			{ /* Not enough room in the buffer - grow it. */
+#ifdef YY_USES_REJECT
+			YY_FATAL_ERROR(
+"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
+#else
+
+			/* just a shorter name for the current buffer */
+			YY_BUFFER_STATE b = yy_current_buffer;
+
+			int yy_c_buf_p_offset =
+				(int) (yy_c_buf_p - b->yy_ch_buf);
+
+			if ( b->yy_is_our_buffer )
+				{
+				int new_size = b->yy_buf_size * 2;
+
+				if ( new_size <= 0 )
+					b->yy_buf_size += b->yy_buf_size / 8;
+				else
+					b->yy_buf_size *= 2;
+
+				b->yy_ch_buf = (char *)
+					/* Include room in for 2 EOB chars. */
+					yy_flex_realloc( (void *) b->yy_ch_buf,
+							 b->yy_buf_size + 2 );
+				}
+			else
+				/* Can't grow it, we don't own it. */
+				b->yy_ch_buf = 0;
+
+			if ( ! b->yy_ch_buf )
+				YY_FATAL_ERROR(
+				"fatal error - scanner input buffer overflow" );
+
+			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];
+
+			num_to_read = yy_current_buffer->yy_buf_size -
+						number_to_move - 1;
+#endif
+			}
+
+		if ( num_to_read > YY_READ_BUF_SIZE )
+			num_to_read = YY_READ_BUF_SIZE;
+
+		/* Read in more data. */
+		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
+			yy_n_chars, num_to_read );
+
+		yy_current_buffer->yy_n_chars = yy_n_chars;
+		}
+
+	if ( yy_n_chars == 0 )
+		{
+		if ( number_to_move == YY_MORE_ADJ )
+			{
+			ret_val = EOB_ACT_END_OF_FILE;
+			yyrestart( yyin );
+			}
+
+		else
+			{
+			ret_val = EOB_ACT_LAST_MATCH;
+			yy_current_buffer->yy_buffer_status =
+				YY_BUFFER_EOF_PENDING;
+			}
+		}
+
+	else
+		ret_val = EOB_ACT_CONTINUE_SCAN;
+
+	yy_n_chars += number_to_move;
+	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
+	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;
+
+	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];
+
+	return ret_val;
+	}
+
+
+/* yy_get_previous_state - get the state just before the EOB char was reached */
+
+static yy_state_type yy_get_previous_state()
+	{
+	register yy_state_type yy_current_state;
+	register char *yy_cp;
+
+	yy_current_state = yy_start;
+	yy_current_state += YY_AT_BOL();
+
+	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
+		{
+		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
+		if ( yy_accept[yy_current_state] )
+			{
+			yy_last_accepting_state = yy_current_state;
+			yy_last_accepting_cpos = yy_cp;
+			}
+		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
+			{
+			yy_current_state = (int) yy_def[yy_current_state];
+			if ( yy_current_state >= 76 )
+				yy_c = yy_meta[(unsigned int) yy_c];
+			}
+		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
+		}
+
+	return yy_current_state;
+	}
+
+
+/* yy_try_NUL_trans - try to make a transition on the NUL character
+ *
+ * synopsis
+ *	next_state = yy_try_NUL_trans( current_state );
+ */
+
+#ifdef YY_USE_PROTOS
+static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
+#else
+static yy_state_type yy_try_NUL_trans( yy_current_state )
+yy_state_type yy_current_state;
+#endif
+	{
+	register int yy_is_jam;
+	register char *yy_cp = yy_c_buf_p;
+
+	register YY_CHAR yy_c = 1;
+	if ( yy_accept[yy_current_state] )
+		{
+		yy_last_accepting_state = yy_current_state;
+		yy_last_accepting_cpos = yy_cp;
+		}
+	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
+		{
+		yy_current_state = (int) yy_def[yy_current_state];
+		if ( yy_current_state >= 76 )
+			yy_c = yy_meta[(unsigned int) yy_c];
+		}
+	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
+	yy_is_jam = (yy_current_state == 75);
+
+	return yy_is_jam ? 0 : yy_current_state;
+	}
+
+
+#ifndef YY_NO_UNPUT
+#ifdef YY_USE_PROTOS
+static void yyunput( int c, register char *yy_bp )
+#else
+static void yyunput( c, yy_bp )
+int c;
+register char *yy_bp;
+#endif
+	{
+	register char *yy_cp = yy_c_buf_p;
+
+	/* undo effects of setting up yytext */
+	*yy_cp = yy_hold_char;
+
+	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
+		{ /* need to shift things up to make room */
+		/* +2 for EOB chars. */
+		register int number_to_move = yy_n_chars + 2;
+		register char *dest = &yy_current_buffer->yy_ch_buf[
+					yy_current_buffer->yy_buf_size + 2];
+		register char *source =
+				&yy_current_buffer->yy_ch_buf[number_to_move];
+
+		while ( source > yy_current_buffer->yy_ch_buf )
+			*--dest = *--source;
+
+		yy_cp += (int) (dest - source);
+		yy_bp += (int) (dest - source);
+		yy_current_buffer->yy_n_chars =
+			yy_n_chars = yy_current_buffer->yy_buf_size;
+
+		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
+			YY_FATAL_ERROR( "flex scanner push-back overflow" );
+		}
+
+	*--yy_cp = (char) c;
+
+
+	yytext_ptr = yy_bp;
+	yy_hold_char = *yy_cp;
+	yy_c_buf_p = yy_cp;
+	}
+#endif	/* ifndef YY_NO_UNPUT */
+
+
+#ifdef __cplusplus
+static int yyinput()
+#else
+static int input()
+#endif
+	{
+	int c;
+
+	*yy_c_buf_p = yy_hold_char;
+
+	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
+		{
+		/* yy_c_buf_p now points to the character we want to return.
+		 * If this occurs *before* the EOB characters, then it's a
+		 * valid NUL; if not, then we've hit the end of the buffer.
+		 */
+		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
+			/* This was really a NUL. */
+			*yy_c_buf_p = '\0';
+
+		else
+			{ /* need more input */
+			int offset = yy_c_buf_p - yytext_ptr;
+			++yy_c_buf_p;
+
+			switch ( yy_get_next_buffer() )
+				{
+				case EOB_ACT_LAST_MATCH:
+					/* This happens because yy_g_n_b()
+					 * sees that we've accumulated a
+					 * token and flags that we need to
+					 * try matching the token before
+					 * proceeding.  But for input(),
+					 * there's no matching to consider.
+					 * So convert the EOB_ACT_LAST_MATCH
+					 * to EOB_ACT_END_OF_FILE.
+					 */
+
+					/* Reset buffer status. */
+					yyrestart( yyin );
+
+					/* fall through */
+
+				case EOB_ACT_END_OF_FILE:
+					{
+					if ( yywrap() )
+						return EOF;
+
+					if ( ! yy_did_buffer_switch_on_eof )
+						YY_NEW_FILE;
+#ifdef __cplusplus
+					return yyinput();
+#else
+					return input();
+#endif
+					}
+
+				case EOB_ACT_CONTINUE_SCAN:
+					yy_c_buf_p = yytext_ptr + offset;
+					break;
+				}
+			}
+		}
+
+	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
+	*yy_c_buf_p = '\0';	/* preserve yytext */
+	yy_hold_char = *++yy_c_buf_p;
+
+	yy_current_buffer->yy_at_bol = (c == '\n');
+
+	return c;
+	}
+
+
+#ifdef YY_USE_PROTOS
+void yyrestart( FILE *input_file )
+#else
+void yyrestart( input_file )
+FILE *input_file;
+#endif
+	{
+	if ( ! yy_current_buffer )
+		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );
+
+	yy_init_buffer( yy_current_buffer, input_file );
+	yy_load_buffer_state();
+	}
+
+
+#ifdef YY_USE_PROTOS
+void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
+#else
+void yy_switch_to_buffer( new_buffer )
+YY_BUFFER_STATE new_buffer;
+#endif
+	{
+	if ( yy_current_buffer == new_buffer )
+		return;
+
+	if ( yy_current_buffer )
+		{
+		/* Flush out information for old buffer. */
+		*yy_c_buf_p = yy_hold_char;
+		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
+		yy_current_buffer->yy_n_chars = yy_n_chars;
+		}
+
+	yy_current_buffer = new_buffer;
+	yy_load_buffer_state();
+
+	/* We don't actually know whether we did this switch during
+	 * EOF (yywrap()) processing, but the only time this flag
+	 * is looked at is after yywrap() is called, so it's safe
+	 * to go ahead and always set it.
+	 */
+	yy_did_buffer_switch_on_eof = 1;
+	}
+
+
+#ifdef YY_USE_PROTOS
+void yy_load_buffer_state( void )
+#else
+void yy_load_buffer_state()
+#endif
+	{
+	yy_n_chars = yy_current_buffer->yy_n_chars;
+	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
+	yyin = yy_current_buffer->yy_input_file;
+	yy_hold_char = *yy_c_buf_p;
+	}
+
+
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
+#else
+YY_BUFFER_STATE yy_create_buffer( file, size )
+FILE *file;
+int size;
+#endif
+	{
+	YY_BUFFER_STATE b;
+
+	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
+
+	b->yy_buf_size = size;
+
+	/* yy_ch_buf has to be 2 characters longer than the size given because
+	 * we need to put in 2 end-of-buffer characters.
+	 */
+	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
+	if ( ! b->yy_ch_buf )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
+
+	b->yy_is_our_buffer = 1;
+
+	yy_init_buffer( b, file );
+
+	return b;
+	}
+
+
+#ifdef YY_USE_PROTOS
+void yy_delete_buffer( YY_BUFFER_STATE b )
+#else
+void yy_delete_buffer( b )
+YY_BUFFER_STATE b;
+#endif
+	{
+	if ( ! b )
+		return;
+
+	if ( b == yy_current_buffer )
+		yy_current_buffer = (YY_BUFFER_STATE) 0;
+
+	if ( b->yy_is_our_buffer )
+		yy_flex_free( (void *) b->yy_ch_buf );
+
+	yy_flex_free( (void *) b );
+	}
+
+
+
+#ifdef YY_USE_PROTOS
+void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
+#else
+void yy_init_buffer( b, file )
+YY_BUFFER_STATE b;
+FILE *file;
+#endif
+
+
+	{
+	yy_flush_buffer( b );
+
+	b->yy_input_file = file;
+	b->yy_fill_buffer = 1;
+
+#if YY_ALWAYS_INTERACTIVE
+	b->yy_is_interactive = 1;
+#else
+#if YY_NEVER_INTERACTIVE
+	b->yy_is_interactive = 0;
+#else
+	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
+#endif
+#endif
+	}
+
+
+#ifdef YY_USE_PROTOS
+void yy_flush_buffer( YY_BUFFER_STATE b )
+#else
+void yy_flush_buffer( b )
+YY_BUFFER_STATE b;
+#endif
+
+	{
+	if ( ! b )
+		return;
+
+	b->yy_n_chars = 0;
+
+	/* We always need two end-of-buffer characters.  The first causes
+	 * a transition to the end-of-buffer state.  The second causes
+	 * a jam in that state.
+	 */
+	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
+	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
+
+	b->yy_buf_pos = &b->yy_ch_buf[0];
+
+	b->yy_at_bol = 1;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	if ( b == yy_current_buffer )
+		yy_load_buffer_state();
+	}
+
+
+#ifndef YY_NO_SCAN_BUFFER
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
+#else
+YY_BUFFER_STATE yy_scan_buffer( base, size )
+char *base;
+yy_size_t size;
+#endif
+	{
+	YY_BUFFER_STATE b;
+
+	if ( size < 2 ||
+	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
+	     base[size-1] != YY_END_OF_BUFFER_CHAR )
+		/* They forgot to leave room for the EOB's. */
+		return 0;
+
+	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
+
+	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
+	b->yy_buf_pos = b->yy_ch_buf = base;
+	b->yy_is_our_buffer = 0;
+	b->yy_input_file = 0;
+	b->yy_n_chars = b->yy_buf_size;
+	b->yy_is_interactive = 0;
+	b->yy_at_bol = 1;
+	b->yy_fill_buffer = 0;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	yy_switch_to_buffer( b );
+
+	return b;
+	}
+#endif
+
+
+#ifndef YY_NO_SCAN_STRING
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
+#else
+YY_BUFFER_STATE yy_scan_string( yy_str )
+yyconst char *yy_str;
+#endif
+	{
+	int len;
+	for ( len = 0; yy_str[len]; ++len )
+		;
+
+	return yy_scan_bytes( yy_str, len );
+	}
+#endif
+
+
+#ifndef YY_NO_SCAN_BYTES
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
+#else
+YY_BUFFER_STATE yy_scan_bytes( bytes, len )
+yyconst char *bytes;
+int len;
+#endif
+	{
+	YY_BUFFER_STATE b;
+	char *buf;
+	yy_size_t n;
+	int i;
+
+	/* Get memory for full buffer, including space for trailing EOB's. */
+	n = len + 2;
+	buf = (char *) yy_flex_alloc( n );
+	if ( ! buf )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
+
+	for ( i = 0; i < len; ++i )
+		buf[i] = bytes[i];
+
+	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;
+
+	b = yy_scan_buffer( buf, n );
+	if ( ! b )
+		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
+
+	/* It's okay to grow etc. this buffer, and we should throw it
+	 * away when we're done.
+	 */
+	b->yy_is_our_buffer = 1;
+
+	return b;
+	}
+#endif
+
+
+#ifndef YY_NO_PUSH_STATE
+#ifdef YY_USE_PROTOS
+static void yy_push_state( int new_state )
+#else
+static void yy_push_state( new_state )
+int new_state;
+#endif
+	{
+	if ( yy_start_stack_ptr >= yy_start_stack_depth )
+		{
+		yy_size_t new_size;
+
+		yy_start_stack_depth += YY_START_STACK_INCR;
+		new_size = yy_start_stack_depth * sizeof( int );
+
+		if ( ! yy_start_stack )
+			yy_start_stack = (int *) yy_flex_alloc( new_size );
+
+		else
+			yy_start_stack = (int *) yy_flex_realloc(
+					(void *) yy_start_stack, new_size );
+
+		if ( ! yy_start_stack )
+			YY_FATAL_ERROR(
+			"out of memory expanding start-condition stack" );
+		}
+
+	yy_start_stack[yy_start_stack_ptr++] = YY_START;
+
+	BEGIN(new_state);
+	}
+#endif
+
+
+#ifndef YY_NO_POP_STATE
+static void yy_pop_state()
+	{
+	if ( --yy_start_stack_ptr < 0 )
+		YY_FATAL_ERROR( "start-condition stack underflow" );
+
+	BEGIN(yy_start_stack[yy_start_stack_ptr]);
+	}
+#endif
+
+
+#ifndef YY_NO_TOP_STATE
+static int yy_top_state()
+	{
+	return yy_start_stack[yy_start_stack_ptr - 1];
+	}
+#endif
+
+#ifndef YY_EXIT_FAILURE
+#define YY_EXIT_FAILURE 2
+#endif
+
+#ifdef YY_USE_PROTOS
+static void yy_fatal_error( yyconst char msg[] )
+#else
+static void yy_fatal_error( msg )
+char msg[];
+#endif
+	{
+	(void) fprintf( stderr, "%s\n", msg );
+	exit( YY_EXIT_FAILURE );
+	}
+
+
+
+/* Redefine yyless() so it works in section 3 code. */
+
+#undef yyless
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up yytext. */ \
+		yytext[yyleng] = yy_hold_char; \
+		yy_c_buf_p = yytext + n; \
+		yy_hold_char = *yy_c_buf_p; \
+		*yy_c_buf_p = '\0'; \
+		yyleng = n; \
+		} \
+	while ( 0 )
+
+
+/* Internal utility routines. */
+
+#ifndef yytext_ptr
+#ifdef YY_USE_PROTOS
+static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
+#else
+static void yy_flex_strncpy( s1, s2, n )
+char *s1;
+yyconst char *s2;
+int n;
+#endif
+	{
+	register int i;
+	for ( i = 0; i < n; ++i )
+		s1[i] = s2[i];
+	}
+#endif
+
+#ifdef YY_NEED_STRLEN
+#ifdef YY_USE_PROTOS
+static int yy_flex_strlen( yyconst char *s )
+#else
+static int yy_flex_strlen( s )
+yyconst char *s;
+#endif
+	{
+	register int n;
+	for ( n = 0; s[n]; ++n )
+		;
+
+	return n;
+	}
+#endif
+
+
+#ifdef YY_USE_PROTOS
+static void *yy_flex_alloc( yy_size_t size )
+#else
+static void *yy_flex_alloc( size )
+yy_size_t size;
+#endif
+	{
+	return (void *) malloc( size );
+	}
+
+#ifdef YY_USE_PROTOS
+static void *yy_flex_realloc( void *ptr, yy_size_t size )
+#else
+static void *yy_flex_realloc( ptr, size )
+void *ptr;
+yy_size_t size;
+#endif
+	{
+	/* The cast to (char *) in the following accommodates both
+	 * implementations that use char* generic pointers, and those
+	 * that use void* generic pointers.  It works with the latter
+	 * because both ANSI C and C++ allow castless assignment from
+	 * any pointer type to void*, and deal with argument conversions
+	 * as though doing an assignment.
+	 */
+	return (void *) realloc( (char *) ptr, size );
+	}
+
+#ifdef YY_USE_PROTOS
+static void yy_flex_free( void *ptr )
+#else
+static void yy_flex_free( ptr )
+void *ptr;
+#endif
+	{
+	free( ptr );
+	}
+
+#if YY_MAIN
+int main()
+	{
+	yylex();
+	return 0;
+	}
+#endif
+#line 95 "scripts/genksyms/lex.l"
+
+
+/* Bring in the keyword recognizer.  */
+
+#include "keywords.c"
+
+
+/* Macros to append to our phrase collection list.  */
+
+#define _APP(T,L)	do {						   \
+			  cur_node = next_node;				   \
+			  next_node = xmalloc(sizeof(*next_node));	   \
+			  next_node->next = cur_node;			   \
+			  cur_node->string = memcpy(xmalloc(L+1), T, L+1); \
+			  cur_node->tag = SYM_NORMAL;			   \
+			} while (0)
+
+#define APP		_APP(yytext, yyleng)
+
+
+/* The second stage lexer.  Here we incorporate knowledge of the state
+   of the parser to tailor the tokens that are returned.  */
+
+int
+yylex(void)
+{
+  static enum {
+    ST_NOTSTARTED, ST_NORMAL, ST_ATTRIBUTE, ST_ASM, ST_BRACKET, ST_BRACE,
+    ST_EXPRESSION, ST_TABLE_1, ST_TABLE_2, ST_TABLE_3, ST_TABLE_4,
+    ST_TABLE_5, ST_TABLE_6
+  } lexstate = ST_NOTSTARTED;
+
+  static int suppress_type_lookup, dont_want_brace_phrase;
+  static struct string_list *next_node;
+
+  int token, count = 0;
+  struct string_list *cur_node;
+
+  if (lexstate == ST_NOTSTARTED)
+    {
+      BEGIN(V2_TOKENS);
+      next_node = xmalloc(sizeof(*next_node));
+      next_node->next = NULL;
+      lexstate = ST_NORMAL;
+    }
+
+repeat:
+  token = yylex1();
+
+  if (token == 0)
+    return 0;
+  else if (token == FILENAME)
+    {
+      char *file, *e;
+
+      /* Save the filename and line number for later error messages.  */
+
+      if (cur_filename)
+	free(cur_filename);
+
+      file = strchr(yytext, '\"')+1;
+      e = strchr(file, '\"');
+      *e = '\0';
+      cur_filename = memcpy(xmalloc(e-file+1), file, e-file+1);
+      cur_line = atoi(yytext+2);
+
+      goto repeat;
+    }
+
+  switch (lexstate)
+    {
+    case ST_NORMAL:
+      switch (token)
+	{
+	case IDENT:
+	  APP;
+	  {
+	    const struct resword *r = is_reserved_word(yytext, yyleng);
+	    if (r)
+	      {
+		switch (token = r->token)
+		  {
+		  case ATTRIBUTE_KEYW:
+		    lexstate = ST_ATTRIBUTE;
+		    count = 0;
+		    goto repeat;
+		  case ASM_KEYW:
+		    lexstate = ST_ASM;
+		    count = 0;
+		    goto repeat;
+
+		  case STRUCT_KEYW:
+		  case UNION_KEYW:
+		    dont_want_brace_phrase = 3;
+		  case ENUM_KEYW:
+		    suppress_type_lookup = 2;
+		    goto fini;
+
+		  case EXPORT_SYMBOL_KEYW:
+		      goto fini;
+		  }
+	      }
+	    if (!suppress_type_lookup)
+	      {
+		struct symbol *sym = find_symbol(yytext, SYM_TYPEDEF);
+		if (sym && sym->type == SYM_TYPEDEF)
+		  token = TYPE;
+	      }
+	  }
+	  break;
+
+	case '[':
+	  APP;
+	  lexstate = ST_BRACKET;
+	  count = 1;
+	  goto repeat;
+
+	case '{':
+	  APP;
+	  if (dont_want_brace_phrase)
+	    break;
+	  lexstate = ST_BRACE;
+	  count = 1;
+	  goto repeat;
+
+	case '=': case ':':
+	  APP;
+	  lexstate = ST_EXPRESSION;
+	  break;
+
+	case DOTS:
+	default:
+	  APP;
+	  break;
+	}
+      break;
+
+    case ST_ATTRIBUTE:
+      APP;
+      switch (token)
+	{
+	case '(':
+	  ++count;
+	  goto repeat;
+	case ')':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = ATTRIBUTE_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_ASM:
+      APP;
+      switch (token)
+	{
+	case '(':
+	  ++count;
+	  goto repeat;
+	case ')':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = ASM_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_BRACKET:
+      APP;
+      switch (token)
+	{
+	case '[':
+	  ++count;
+	  goto repeat;
+	case ']':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = BRACKET_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_BRACE:
+      APP;
+      switch (token)
+	{
+	case '{':
+	  ++count;
+	  goto repeat;
+	case '}':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = BRACE_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_EXPRESSION:
+      switch (token)
+	{
+	case '(': case '[': case '{':
+	  ++count;
+	  APP;
+	  goto repeat;
+	case ')': case ']': case '}':
+	  --count;
+	  APP;
+	  goto repeat;
+	case ',': case ';':
+	  if (count == 0)
+	    {
+	      /* Put back the token we just read so's we can find it again
+		 after registering the expression.  */
+	      unput(token);
+
+	      lexstate = ST_NORMAL;
+	      token = EXPRESSION_PHRASE;
+	      break;
+	    }
+	  APP;
+	  goto repeat;
+	default:
+	  APP;
+	  goto repeat;
+	}
+      break;
+
+    case ST_TABLE_1:
+      goto repeat;
+
+    case ST_TABLE_2:
+      if (token == IDENT && yyleng == 1 && yytext[0] == 'X')
+	{
+	  token = EXPORT_SYMBOL_KEYW;
+	  lexstate = ST_TABLE_5;
+	  APP;
+	  break;
+	}
+      lexstate = ST_TABLE_6;
+      /* FALLTHRU */
+
+    case ST_TABLE_6:
+      switch (token)
+	{
+	case '{': case '[': case '(':
+	  ++count;
+	  break;
+	case '}': case ']': case ')':
+	  --count;
+	  break;
+	case ',':
+	  if (count == 0)
+	    lexstate = ST_TABLE_2;
+	  break;
+	};
+      goto repeat;
+
+    case ST_TABLE_3:
+      goto repeat;
+
+    case ST_TABLE_4:
+      if (token == ';')
+	lexstate = ST_NORMAL;
+      goto repeat;
+
+    case ST_TABLE_5:
+      switch (token)
+	{
+	case ',':
+	  token = ';';
+	  lexstate = ST_TABLE_2;
+	  APP;
+	  break;
+	default:
+	  APP;
+	  break;
+	}
+      break;
+
+    default:
+      exit(1);
+    }
+fini:
+
+  if (suppress_type_lookup > 0)
+    --suppress_type_lookup;
+  if (dont_want_brace_phrase > 0)
+    --dont_want_brace_phrase;
+
+  yylval = &next_node->next;
+
+  return token;
+}
+/* A Bison parser, made by GNU Bison 2.0.  */
+
+/* Skeleton parser for Yacc-like parsing with Bison,
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330,
+   Boston, MA 02111-1307, USA.  */
+
+/* As a special exception, when this file is copied by Bison into a
+   Bison output file, you may use that output file without restriction.
+   This special exception was added by the Free Software Foundation
+   in version 1.24 of Bison.  */
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     ASM_KEYW = 258,
+     ATTRIBUTE_KEYW = 259,
+     AUTO_KEYW = 260,
+     BOOL_KEYW = 261,
+     CHAR_KEYW = 262,
+     CONST_KEYW = 263,
+     DOUBLE_KEYW = 264,
+     ENUM_KEYW = 265,
+     EXTERN_KEYW = 266,
+     FLOAT_KEYW = 267,
+     INLINE_KEYW = 268,
+     INT_KEYW = 269,
+     LONG_KEYW = 270,
+     REGISTER_KEYW = 271,
+     RESTRICT_KEYW = 272,
+     SHORT_KEYW = 273,
+     SIGNED_KEYW = 274,
+     STATIC_KEYW = 275,
+     STRUCT_KEYW = 276,
+     TYPEDEF_KEYW = 277,
+     UNION_KEYW = 278,
+     UNSIGNED_KEYW = 279,
+     VOID_KEYW = 280,
+     VOLATILE_KEYW = 281,
+     TYPEOF_KEYW = 282,
+     EXPORT_SYMBOL_KEYW = 283,
+     ASM_PHRASE = 284,
+     ATTRIBUTE_PHRASE = 285,
+     BRACE_PHRASE = 286,
+     BRACKET_PHRASE = 287,
+     EXPRESSION_PHRASE = 288,
+     CHAR = 289,
+     DOTS = 290,
+     IDENT = 291,
+     INT = 292,
+     REAL = 293,
+     STRING = 294,
+     TYPE = 295,
+     OTHER = 296,
+     FILENAME = 297
+   };
+#endif
+#define ASM_KEYW 258
+#define ATTRIBUTE_KEYW 259
+#define AUTO_KEYW 260
+#define BOOL_KEYW 261
+#define CHAR_KEYW 262
+#define CONST_KEYW 263
+#define DOUBLE_KEYW 264
+#define ENUM_KEYW 265
+#define EXTERN_KEYW 266
+#define FLOAT_KEYW 267
+#define INLINE_KEYW 268
+#define INT_KEYW 269
+#define LONG_KEYW 270
+#define REGISTER_KEYW 271
+#define RESTRICT_KEYW 272
+#define SHORT_KEYW 273
+#define SIGNED_KEYW 274
+#define STATIC_KEYW 275
+#define STRUCT_KEYW 276
+#define TYPEDEF_KEYW 277
+#define UNION_KEYW 278
+#define UNSIGNED_KEYW 279
+#define VOID_KEYW 280
+#define VOLATILE_KEYW 281
+#define TYPEOF_KEYW 282
+#define EXPORT_SYMBOL_KEYW 283
+#define ASM_PHRASE 284
+#define ATTRIBUTE_PHRASE 285
+#define BRACE_PHRASE 286
+#define BRACKET_PHRASE 287
+#define EXPRESSION_PHRASE 288
+#define CHAR 289
+#define DOTS 290
+#define IDENT 291
+#define INT 292
+#define REAL 293
+#define STRING 294
+#define TYPE 295
+#define OTHER 296
+#define FILENAME 297
+
+
+
+
+#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
+typedef int YYSTYPE;
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
+#endif
+
+extern YYSTYPE yylval;
+
+
+
diff -urpN linux-2.6.23-sabayon/scripts/genksyms/parse.c testtry/scripts/genksyms/parse.c
--- linux-2.6.23-sabayon/scripts/genksyms/parse.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/genksyms/parse.c	2007-10-15 16:44:58.000000000 +0000
@@ -0,0 +1,2051 @@
+/* A Bison parser, made by GNU Bison 2.0.  */
+
+/* Skeleton parser for Yacc-like parsing with Bison,
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330,
+   Boston, MA 02111-1307, USA.  */
+
+/* As a special exception, when this file is copied by Bison into a
+   Bison output file, you may use that output file without restriction.
+   This special exception was added by the Free Software Foundation
+   in version 1.24 of Bison.  */
+
+/* Written by Richard Stallman by simplifying the original so called
+   ``semantic'' parser.  */
+
+/* All symbols defined below should begin with yy or YY, to avoid
+   infringing on user name space.  This should be done even for local
+   variables, as they might otherwise be expanded by user macros.
+   There are some unavoidable exceptions within include files to
+   define necessary library symbols; they are noted "INFRINGES ON
+   USER NAME SPACE" below.  */
+
+/* Identify Bison output.  */
+#define YYBISON 1
+
+/* Skeleton name.  */
+#define YYSKELETON_NAME "yacc.c"
+
+/* Pure parsers.  */
+#define YYPURE 0
+
+/* Using locations.  */
+#define YYLSP_NEEDED 0
+
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     ASM_KEYW = 258,
+     ATTRIBUTE_KEYW = 259,
+     AUTO_KEYW = 260,
+     BOOL_KEYW = 261,
+     CHAR_KEYW = 262,
+     CONST_KEYW = 263,
+     DOUBLE_KEYW = 264,
+     ENUM_KEYW = 265,
+     EXTERN_KEYW = 266,
+     FLOAT_KEYW = 267,
+     INLINE_KEYW = 268,
+     INT_KEYW = 269,
+     LONG_KEYW = 270,
+     REGISTER_KEYW = 271,
+     RESTRICT_KEYW = 272,
+     SHORT_KEYW = 273,
+     SIGNED_KEYW = 274,
+     STATIC_KEYW = 275,
+     STRUCT_KEYW = 276,
+     TYPEDEF_KEYW = 277,
+     UNION_KEYW = 278,
+     UNSIGNED_KEYW = 279,
+     VOID_KEYW = 280,
+     VOLATILE_KEYW = 281,
+     TYPEOF_KEYW = 282,
+     EXPORT_SYMBOL_KEYW = 283,
+     ASM_PHRASE = 284,
+     ATTRIBUTE_PHRASE = 285,
+     BRACE_PHRASE = 286,
+     BRACKET_PHRASE = 287,
+     EXPRESSION_PHRASE = 288,
+     CHAR = 289,
+     DOTS = 290,
+     IDENT = 291,
+     INT = 292,
+     REAL = 293,
+     STRING = 294,
+     TYPE = 295,
+     OTHER = 296,
+     FILENAME = 297
+   };
+#endif
+#define ASM_KEYW 258
+#define ATTRIBUTE_KEYW 259
+#define AUTO_KEYW 260
+#define BOOL_KEYW 261
+#define CHAR_KEYW 262
+#define CONST_KEYW 263
+#define DOUBLE_KEYW 264
+#define ENUM_KEYW 265
+#define EXTERN_KEYW 266
+#define FLOAT_KEYW 267
+#define INLINE_KEYW 268
+#define INT_KEYW 269
+#define LONG_KEYW 270
+#define REGISTER_KEYW 271
+#define RESTRICT_KEYW 272
+#define SHORT_KEYW 273
+#define SIGNED_KEYW 274
+#define STATIC_KEYW 275
+#define STRUCT_KEYW 276
+#define TYPEDEF_KEYW 277
+#define UNION_KEYW 278
+#define UNSIGNED_KEYW 279
+#define VOID_KEYW 280
+#define VOLATILE_KEYW 281
+#define TYPEOF_KEYW 282
+#define EXPORT_SYMBOL_KEYW 283
+#define ASM_PHRASE 284
+#define ATTRIBUTE_PHRASE 285
+#define BRACE_PHRASE 286
+#define BRACKET_PHRASE 287
+#define EXPRESSION_PHRASE 288
+#define CHAR 289
+#define DOTS 290
+#define IDENT 291
+#define INT 292
+#define REAL 293
+#define STRING 294
+#define TYPE 295
+#define OTHER 296
+#define FILENAME 297
+
+
+
+
+/* Copy the first part of user declarations.  */
+#line 24 "scripts/genksyms/parse.y"
+
+
+#include <assert.h>
+#include <malloc.h>
+#include "genksyms.h"
+
+static int is_typedef;
+static int is_extern;
+static char *current_name;
+static struct string_list *decl_spec;
+
+static void yyerror(const char *);
+
+static inline void
+remove_node(struct string_list **p)
+{
+  struct string_list *node = *p;
+  *p = node->next;
+  free_node(node);
+}
+
+static inline void
+remove_list(struct string_list **pb, struct string_list **pe)
+{
+  struct string_list *b = *pb, *e = *pe;
+  *pb = e;
+  free_list(b, e);
+}
+
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 1
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
+typedef int YYSTYPE;
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
+#endif
+
+
+
+/* Copy the second part of user declarations.  */
+
+
+/* Line 213 of yacc.c.  */
+#line 202 "scripts/genksyms/parse.c"
+
+#if ! defined (yyoverflow) || YYERROR_VERBOSE
+
+# ifndef YYFREE
+#  define YYFREE free
+# endif
+# ifndef YYMALLOC
+#  define YYMALLOC malloc
+# endif
+
+/* The parser invokes alloca or malloc; define the necessary symbols.  */
+
+# ifdef YYSTACK_USE_ALLOCA
+#  if YYSTACK_USE_ALLOCA
+#   ifdef __GNUC__
+#    define YYSTACK_ALLOC __builtin_alloca
+#   else
+#    define YYSTACK_ALLOC alloca
+#   endif
+#  endif
+# endif
+
+# ifdef YYSTACK_ALLOC
+   /* Pacify GCC's `empty if-body' warning. */
+#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
+# else
+#  if defined (__STDC__) || defined (__cplusplus)
+#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#   define YYSIZE_T size_t
+#  endif
+#  define YYSTACK_ALLOC YYMALLOC
+#  define YYSTACK_FREE YYFREE
+# endif
+#endif /* ! defined (yyoverflow) || YYERROR_VERBOSE */
+
+
+#if (! defined (yyoverflow) \
+     && (! defined (__cplusplus) \
+	 || (defined (YYSTYPE_IS_TRIVIAL) && YYSTYPE_IS_TRIVIAL)))
+
+/* A type that is properly aligned for any stack member.  */
+union yyalloc
+{
+  short int yyss;
+  YYSTYPE yyvs;
+  };
+
+/* The size of the maximum gap between one aligned stack and the next.  */
+# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
+
+/* The size of an array large to enough to hold all stacks, each with
+   N elements.  */
+# define YYSTACK_BYTES(N) \
+     ((N) * (sizeof (short int) + sizeof (YYSTYPE))			\
+      + YYSTACK_GAP_MAXIMUM)
+
+/* Copy COUNT objects from FROM to TO.  The source and destination do
+   not overlap.  */
+# ifndef YYCOPY
+#  if defined (__GNUC__) && 1 < __GNUC__
+#   define YYCOPY(To, From, Count) \
+      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
+#  else
+#   define YYCOPY(To, From, Count)		\
+      do					\
+	{					\
+	  register YYSIZE_T yyi;		\
+	  for (yyi = 0; yyi < (Count); yyi++)	\
+	    (To)[yyi] = (From)[yyi];		\
+	}					\
+      while (0)
+#  endif
+# endif
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (0)
+
+#endif
+
+#if defined (__STDC__) || defined (__cplusplus)
+   typedef signed char yysigned_char;
+#else
+   typedef short int yysigned_char;
+#endif
+
+/* YYFINAL -- State number of the termination state. */
+#define YYFINAL  4
+/* YYLAST -- Last index in YYTABLE.  */
+#define YYLAST   535
+
+/* YYNTOKENS -- Number of terminals. */
+#define YYNTOKENS  52
+/* YYNNTS -- Number of nonterminals. */
+#define YYNNTS  45
+/* YYNRULES -- Number of rules. */
+#define YYNRULES  124
+/* YYNRULES -- Number of states. */
+#define YYNSTATES  174
+
+/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+#define YYUNDEFTOK  2
+#define YYMAXUTOK   297
+
+#define YYTRANSLATE(YYX) 						\
+  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
+
+/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+static const unsigned char yytranslate[] =
+{
+       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+      46,    48,    47,     2,    45,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    51,    43,
+       2,    49,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,    50,     2,    44,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
+       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,    37,    38,    39,    40,    41,    42
+};
+
+#if YYDEBUG
+/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
+   YYRHS.  */
+static const unsigned short int yyprhs[] =
+{
+       0,     0,     3,     5,     8,     9,    12,    13,    17,    19,
+      21,    23,    25,    28,    31,    35,    36,    38,    40,    44,
+      49,    50,    52,    54,    57,    59,    61,    63,    65,    67,
+      69,    71,    73,    75,    81,    86,    89,    92,    95,    99,
+     103,   107,   110,   113,   116,   118,   120,   122,   124,   126,
+     128,   130,   132,   134,   136,   138,   141,   142,   144,   146,
+     149,   151,   153,   155,   157,   160,   162,   164,   169,   174,
+     177,   181,   185,   188,   190,   192,   194,   199,   204,   207,
+     211,   215,   218,   220,   224,   225,   227,   229,   233,   236,
+     239,   241,   242,   244,   246,   251,   256,   259,   263,   267,
+     271,   272,   274,   277,   281,   285,   286,   288,   290,   293,
+     297,   300,   301,   303,   305,   309,   312,   315,   317,   320,
+     321,   323,   326,   327,   329
+};
+
+/* YYRHS -- A `-1'-separated list of the rules' RHS. */
+static const yysigned_char yyrhs[] =
+{
+      53,     0,    -1,    54,    -1,    53,    54,    -1,    -1,    55,
+      56,    -1,    -1,    22,    57,    58,    -1,    58,    -1,    82,
+      -1,    94,    -1,    96,    -1,     1,    43,    -1,     1,    44,
+      -1,    62,    59,    43,    -1,    -1,    60,    -1,    61,    -1,
+      60,    45,    61,    -1,    72,    95,    93,    83,    -1,    -1,
+      63,    -1,    64,    -1,    63,    64,    -1,    65,    -1,    66,
+      -1,     5,    -1,    16,    -1,    20,    -1,    11,    -1,    13,
+      -1,    67,    -1,    71,    -1,    27,    46,    63,    47,    48,
+      -1,    27,    46,    63,    48,    -1,    21,    36,    -1,    23,
+      36,    -1,    10,    36,    -1,    21,    36,    85,    -1,    23,
+      36,    85,    -1,    10,    36,    31,    -1,    10,    31,    -1,
+      21,    85,    -1,    23,    85,    -1,     7,    -1,    18,    -1,
+      14,    -1,    15,    -1,    19,    -1,    24,    -1,    12,    -1,
+       9,    -1,    25,    -1,     6,    -1,    40,    -1,    47,    69,
+      -1,    -1,    70,    -1,    71,    -1,    70,    71,    -1,     8,
+      -1,    26,    -1,    30,    -1,    17,    -1,    68,    72,    -1,
+      73,    -1,    36,    -1,    73,    46,    76,    48,    -1,    73,
+      46,     1,    48,    -1,    73,    32,    -1,    46,    72,    48,
+      -1,    46,     1,    48,    -1,    68,    74,    -1,    75,    -1,
+      36,    -1,    40,    -1,    75,    46,    76,    48,    -1,    75,
+      46,     1,    48,    -1,    75,    32,    -1,    46,    74,    48,
+      -1,    46,     1,    48,    -1,    77,    35,    -1,    77,    -1,
+      78,    45,    35,    -1,    -1,    78,    -1,    79,    -1,    78,
+      45,    79,    -1,    63,    80,    -1,    68,    80,    -1,    81,
+      -1,    -1,    36,    -1,    40,    -1,    81,    46,    76,    48,
+      -1,    81,    46,     1,    48,    -1,    81,    32,    -1,    46,
+      80,    48,    -1,    46,     1,    48,    -1,    62,    72,    31,
+      -1,    -1,    84,    -1,    49,    33,    -1,    50,    86,    44,
+      -1,    50,     1,    44,    -1,    -1,    87,    -1,    88,    -1,
+      87,    88,    -1,    62,    89,    43,    -1,     1,    43,    -1,
+      -1,    90,    -1,    91,    -1,    90,    45,    91,    -1,    74,
+      93,    -1,    36,    92,    -1,    92,    -1,    51,    33,    -1,
+      -1,    30,    -1,    29,    43,    -1,    -1,    29,    -1,    28,
+      46,    36,    48,    43,    -1
+};
+
+/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+static const unsigned short int yyrline[] =
+{
+       0,   102,   102,   103,   107,   107,   113,   113,   115,   116,
+     117,   118,   119,   120,   124,   138,   139,   143,   151,   164,
+     170,   171,   175,   176,   180,   186,   190,   191,   192,   193,
+     194,   198,   199,   200,   201,   205,   207,   209,   213,   220,
+     227,   236,   237,   238,   242,   243,   244,   245,   246,   247,
+     248,   249,   250,   251,   252,   256,   261,   262,   266,   267,
+     271,   271,   271,   272,   280,   281,   285,   294,   296,   298,
+     300,   302,   309,   310,   314,   315,   316,   318,   320,   322,
+     324,   329,   330,   331,   335,   336,   340,   341,   346,   351,
+     353,   357,   358,   366,   370,   372,   374,   376,   378,   383,
+     392,   393,   398,   403,   404,   408,   409,   413,   414,   418,
+     420,   425,   426,   430,   431,   435,   436,   437,   441,   445,
+     446,   450,   454,   455,   459
+};
+#endif
+
+#if YYDEBUG || YYERROR_VERBOSE
+/* YYTNME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
+   First, the terminals, then, starting at YYNTOKENS, nonterminals. */
+static const char *const yytname[] =
+{
+  "$end", "error", "$undefined", "ASM_KEYW", "ATTRIBUTE_KEYW",
+  "AUTO_KEYW", "BOOL_KEYW", "CHAR_KEYW", "CONST_KEYW", "DOUBLE_KEYW",
+  "ENUM_KEYW", "EXTERN_KEYW", "FLOAT_KEYW", "INLINE_KEYW", "INT_KEYW",
+  "LONG_KEYW", "REGISTER_KEYW", "RESTRICT_KEYW", "SHORT_KEYW",
+  "SIGNED_KEYW", "STATIC_KEYW", "STRUCT_KEYW", "TYPEDEF_KEYW",
+  "UNION_KEYW", "UNSIGNED_KEYW", "VOID_KEYW", "VOLATILE_KEYW",
+  "TYPEOF_KEYW", "EXPORT_SYMBOL_KEYW", "ASM_PHRASE", "ATTRIBUTE_PHRASE",
+  "BRACE_PHRASE", "BRACKET_PHRASE", "EXPRESSION_PHRASE", "CHAR", "DOTS",
+  "IDENT", "INT", "REAL", "STRING", "TYPE", "OTHER", "FILENAME", "';'",
+  "'}'", "','", "'('", "'*'", "')'", "'='", "'{'", "':'", "$accept",
+  "declaration_seq", "declaration", "@1", "declaration1", "@2",
+  "simple_declaration", "init_declarator_list_opt", "init_declarator_list",
+  "init_declarator", "decl_specifier_seq_opt", "decl_specifier_seq",
+  "decl_specifier", "storage_class_specifier", "type_specifier",
+  "simple_type_specifier", "ptr_operator", "cvar_qualifier_seq_opt",
+  "cvar_qualifier_seq", "cvar_qualifier", "declarator",
+  "direct_declarator", "nested_declarator", "direct_nested_declarator",
+  "parameter_declaration_clause", "parameter_declaration_list_opt",
+  "parameter_declaration_list", "parameter_declaration",
+  "m_abstract_declarator", "direct_m_abstract_declarator",
+  "function_definition", "initializer_opt", "initializer", "class_body",
+  "member_specification_opt", "member_specification", "member_declaration",
+  "member_declarator_list_opt", "member_declarator_list",
+  "member_declarator", "member_bitfield_declarator", "attribute_opt",
+  "asm_definition", "asm_phrase_opt", "export_definition", 0
+};
+#endif
+
+# ifdef YYPRINT
+/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
+   token YYLEX-NUM.  */
+static const unsigned short int yytoknum[] =
+{
+       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
+     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
+     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
+     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
+     295,   296,   297,    59,   125,    44,    40,    42,    41,    61,
+     123,    58
+};
+# endif
+
+/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const unsigned char yyr1[] =
+{
+       0,    52,    53,    53,    55,    54,    57,    56,    56,    56,
+      56,    56,    56,    56,    58,    59,    59,    60,    60,    61,
+      62,    62,    63,    63,    64,    64,    65,    65,    65,    65,
+      65,    66,    66,    66,    66,    66,    66,    66,    66,    66,
+      66,    66,    66,    66,    67,    67,    67,    67,    67,    67,
+      67,    67,    67,    67,    67,    68,    69,    69,    70,    70,
+      71,    71,    71,    71,    72,    72,    73,    73,    73,    73,
+      73,    73,    74,    74,    75,    75,    75,    75,    75,    75,
+      75,    76,    76,    76,    77,    77,    78,    78,    79,    80,
+      80,    81,    81,    81,    81,    81,    81,    81,    81,    82,
+      83,    83,    84,    85,    85,    86,    86,    87,    87,    88,
+      88,    89,    89,    90,    90,    91,    91,    91,    92,    93,
+      93,    94,    95,    95,    96
+};
+
+/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
+static const unsigned char yyr2[] =
+{
+       0,     2,     1,     2,     0,     2,     0,     3,     1,     1,
+       1,     1,     2,     2,     3,     0,     1,     1,     3,     4,
+       0,     1,     1,     2,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     5,     4,     2,     2,     2,     3,     3,
+       3,     2,     2,     2,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     2,     0,     1,     1,     2,
+       1,     1,     1,     1,     2,     1,     1,     4,     4,     2,
+       3,     3,     2,     1,     1,     1,     4,     4,     2,     3,
+       3,     2,     1,     3,     0,     1,     1,     3,     2,     2,
+       1,     0,     1,     1,     4,     4,     2,     3,     3,     3,
+       0,     1,     2,     3,     3,     0,     1,     1,     2,     3,
+       2,     0,     1,     1,     3,     2,     2,     1,     2,     0,
+       1,     2,     0,     1,     5
+};
+
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
+   means the default is an error.  */
+static const unsigned char yydefact[] =
+{
+       4,     4,     2,     0,     1,     3,     0,    26,    53,    44,
+      60,    51,     0,    29,    50,    30,    46,    47,    27,    63,
+      45,    48,    28,     0,     6,     0,    49,    52,    61,     0,
+       0,     0,    62,    54,     5,     8,    15,    21,    22,    24,
+      25,    31,    32,     9,    10,    11,    12,    13,    41,    37,
+      35,     0,    42,    20,    36,    43,     0,     0,   121,    66,
+       0,    56,     0,    16,    17,     0,   122,    65,    23,    40,
+      38,     0,   111,     0,     0,   107,     7,    15,    39,     0,
+       0,     0,     0,    55,    57,    58,    14,     0,    64,   123,
+      99,   119,    69,     0,   110,   104,    74,    75,     0,     0,
+       0,   119,    73,     0,   112,   113,   117,   103,     0,   108,
+     122,     0,    34,     0,    71,    70,    59,    18,   120,   100,
+       0,    91,     0,    82,    85,    86,   116,     0,    74,     0,
+     118,    72,   115,    78,     0,   109,     0,    33,   124,     0,
+      19,   101,    68,    92,    54,     0,    91,    88,    90,    67,
+      81,     0,    80,    79,     0,     0,   114,   102,     0,    93,
+       0,    89,    96,     0,    83,    87,    77,    76,    98,    97,
+       0,     0,    95,    94
+};
+
+/* YYDEFGOTO[NTERM-NUM]. */
+static const short int yydefgoto[] =
+{
+      -1,     1,     2,     3,    34,    53,    35,    62,    63,    64,
+      72,    37,    38,    39,    40,    41,    65,    83,    84,    42,
+     110,    67,   101,   102,   122,   123,   124,   125,   147,   148,
+      43,   140,   141,    52,    73,    74,    75,   103,   104,   105,
+     106,   119,    44,    91,    45
+};
+
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
+#define YYPACT_NINF -128
+static const short int yypact[] =
+{
+    -128,    13,  -128,   329,  -128,  -128,    36,  -128,  -128,  -128,
+    -128,  -128,   -16,  -128,  -128,  -128,  -128,  -128,  -128,  -128,
+    -128,  -128,  -128,   -25,  -128,   -24,  -128,  -128,  -128,   -29,
+      -4,   -22,  -128,  -128,  -128,  -128,   -28,   495,  -128,  -128,
+    -128,  -128,  -128,  -128,  -128,  -128,  -128,  -128,  -128,    16,
+     -23,   103,  -128,   495,   -23,  -128,   495,    35,  -128,  -128,
+       3,    15,     9,    17,  -128,   -28,   -15,    -8,  -128,  -128,
+    -128,    47,    23,    44,   150,  -128,  -128,   -28,  -128,   372,
+      33,    48,    49,  -128,    15,  -128,  -128,   -28,  -128,  -128,
+    -128,    64,  -128,   197,  -128,  -128,    50,  -128,    21,    65,
+      37,    64,    14,    56,    55,  -128,  -128,  -128,    59,  -128,
+      74,    57,  -128,    63,  -128,  -128,  -128,  -128,  -128,    76,
+      83,   416,    84,    99,    90,  -128,  -128,    88,  -128,    89,
+    -128,  -128,  -128,  -128,   241,  -128,    23,  -128,  -128,   105,
+    -128,  -128,  -128,  -128,  -128,     8,    46,  -128,    26,  -128,
+    -128,   459,  -128,  -128,    92,    93,  -128,  -128,    94,  -128,
+      96,  -128,  -128,   285,  -128,  -128,  -128,  -128,  -128,  -128,
+      97,   100,  -128,  -128
+};
+
+/* YYPGOTO[NTERM-NUM].  */
+static const short int yypgoto[] =
+{
+    -128,  -128,   151,  -128,  -128,  -128,   119,  -128,  -128,    66,
+       0,   -56,   -36,  -128,  -128,  -128,   -70,  -128,  -128,   -51,
+     -31,  -128,   -11,  -128,  -127,  -128,  -128,    27,   -81,  -128,
+    -128,  -128,  -128,   -19,  -128,  -128,   107,  -128,  -128,    43,
+      86,    82,  -128,  -128,  -128
+};
+
+/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule which
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
+#define YYTABLE_NINF -107
+static const short int yytable[] =
+{
+      79,    68,   100,    36,    81,    66,    55,   155,    59,   158,
+      85,    50,    54,     4,    89,    48,    90,    56,    60,    61,
+      49,    58,   127,    10,    92,    51,    51,    51,   100,    82,
+     100,    70,    19,   116,    88,    78,   171,   121,    93,    59,
+     -91,    28,    57,    68,   143,    32,   133,    69,   159,    60,
+      61,   146,    86,    77,   145,    61,   -91,   128,   162,    96,
+     134,    97,    87,    97,   160,   161,   100,    98,    61,    98,
+      61,    80,   163,   128,    99,   146,   146,    97,   121,    46,
+      47,   113,   143,    98,    61,    68,   159,   129,   107,   131,
+      94,    95,   145,    61,   118,   121,   114,   115,   130,   135,
+     136,    99,    94,    89,    71,   137,   138,   121,     7,     8,
+       9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
+      19,    20,    21,    22,    23,   139,    25,    26,    27,    28,
+      29,   142,   149,    32,   150,   151,   152,   153,   157,   -20,
+     166,   167,   168,    33,   169,   172,   -20,  -105,   173,   -20,
+     -20,   108,     5,   117,   -20,     7,     8,     9,    10,    11,
+      12,    13,    14,    15,    16,    17,    18,    19,    20,    21,
+      22,    23,    76,    25,    26,    27,    28,    29,   165,   156,
+      32,   109,   126,   132,     0,     0,   -20,     0,     0,     0,
+      33,     0,     0,   -20,  -106,     0,   -20,   -20,   120,     0,
+       0,   -20,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,     0,
+      25,    26,    27,    28,    29,     0,     0,    32,     0,     0,
+       0,     0,   -84,     0,     0,     0,     0,    33,     0,     0,
+       0,     0,   154,     0,     0,   -84,     7,     8,     9,    10,
+      11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
+      21,    22,    23,     0,    25,    26,    27,    28,    29,     0,
+       0,    32,     0,     0,     0,     0,   -84,     0,     0,     0,
+       0,    33,     0,     0,     0,     0,   170,     0,     0,   -84,
+       7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
+      17,    18,    19,    20,    21,    22,    23,     0,    25,    26,
+      27,    28,    29,     0,     0,    32,     0,     0,     0,     0,
+     -84,     0,     0,     0,     0,    33,     0,     0,     0,     0,
+       6,     0,     0,   -84,     7,     8,     9,    10,    11,    12,
+      13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+       0,     0,     0,     0,     0,   -20,     0,     0,     0,    33,
+       0,     0,   -20,     0,     0,   -20,   -20,     7,     8,     9,
+      10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
+      20,    21,    22,    23,     0,    25,    26,    27,    28,    29,
+       0,     0,    32,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,    33,     0,     0,     0,     0,     0,     0,   111,
+     112,     7,     8,     9,    10,    11,    12,    13,    14,    15,
+      16,    17,    18,    19,    20,    21,    22,    23,     0,    25,
+      26,    27,    28,    29,     0,     0,    32,     0,     0,     0,
+       0,     0,   143,     0,     0,     0,   144,     0,     0,     0,
+       0,     0,   145,    61,     7,     8,     9,    10,    11,    12,
+      13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
+      23,     0,    25,    26,    27,    28,    29,     0,     0,    32,
+       0,     0,     0,     0,   164,     0,     0,     0,     0,    33,
+       7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
+      17,    18,    19,    20,    21,    22,    23,     0,    25,    26,
+      27,    28,    29,     0,     0,    32,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,    33
+};
+
+static const short int yycheck[] =
+{
+      56,    37,    72,     3,     1,    36,    25,   134,    36,     1,
+      61,    36,    36,     0,    29,    31,    31,    46,    46,    47,
+      36,    43,     1,     8,    32,    50,    50,    50,    98,    60,
+     100,    50,    17,    84,    65,    54,   163,    93,    46,    36,
+      32,    26,    46,    79,    36,    30,    32,    31,    40,    46,
+      47,   121,    43,    53,    46,    47,    48,    36,    32,    36,
+      46,    40,    45,    40,   145,   146,   136,    46,    47,    46,
+      47,    36,    46,    36,    51,   145,   146,    40,   134,    43,
+      44,    48,    36,    46,    47,   121,    40,    98,    44,   100,
+      43,    44,    46,    47,    30,   151,    48,    48,    33,    43,
+      45,    51,    43,    29,     1,    48,    43,   163,     5,     6,
+       7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
+      17,    18,    19,    20,    21,    49,    23,    24,    25,    26,
+      27,    48,    48,    30,    35,    45,    48,    48,    33,    36,
+      48,    48,    48,    40,    48,    48,    43,    44,    48,    46,
+      47,     1,     1,    87,    51,     5,     6,     7,     8,     9,
+      10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
+      20,    21,    53,    23,    24,    25,    26,    27,   151,   136,
+      30,    74,    96,   101,    -1,    -1,    36,    -1,    -1,    -1,
+      40,    -1,    -1,    43,    44,    -1,    46,    47,     1,    -1,
+      -1,    51,     5,     6,     7,     8,     9,    10,    11,    12,
+      13,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
+      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
+      -1,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1,
+      -1,    -1,     1,    -1,    -1,    48,     5,     6,     7,     8,
+       9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
+      19,    20,    21,    -1,    23,    24,    25,    26,    27,    -1,
+      -1,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,
+      -1,    40,    -1,    -1,    -1,    -1,     1,    -1,    -1,    48,
+       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
+      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    -1,
+      35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
+       1,    -1,    -1,    48,     5,     6,     7,     8,     9,    10,
+      11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
+      -1,    -1,    43,    -1,    -1,    46,    47,     5,     6,     7,
+       8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
+      18,    19,    20,    21,    -1,    23,    24,    25,    26,    27,
+      -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
+      48,     5,     6,     7,     8,     9,    10,    11,    12,    13,
+      14,    15,    16,    17,    18,    19,    20,    21,    -1,    23,
+      24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,
+      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    -1,
+      -1,    -1,    46,    47,     5,     6,     7,     8,     9,    10,
+      11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
+      21,    -1,    23,    24,    25,    26,    27,    -1,    -1,    30,
+      -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,    -1,    40,
+       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
+      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    40
+};
+
+/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+   symbol of state STATE-NUM.  */
+static const unsigned char yystos[] =
+{
+       0,    53,    54,    55,     0,    54,     1,     5,     6,     7,
+       8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
+      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
+      28,    29,    30,    40,    56,    58,    62,    63,    64,    65,
+      66,    67,    71,    82,    94,    96,    43,    44,    31,    36,
+      36,    50,    85,    57,    36,    85,    46,    46,    43,    36,
+      46,    47,    59,    60,    61,    68,    72,    73,    64,    31,
+      85,     1,    62,    86,    87,    88,    58,    62,    85,    63,
+      36,     1,    72,    69,    70,    71,    43,    45,    72,    29,
+      31,    95,    32,    46,    43,    44,    36,    40,    46,    51,
+      68,    74,    75,    89,    90,    91,    92,    44,     1,    88,
+      72,    47,    48,    48,    48,    48,    71,    61,    30,    93,
+       1,    63,    76,    77,    78,    79,    92,     1,    36,    74,
+      33,    74,    93,    32,    46,    43,    45,    48,    43,    49,
+      83,    84,    48,    36,    40,    46,    68,    80,    81,    48,
+      35,    45,    48,    48,     1,    76,    91,    33,     1,    40,
+      80,    80,    32,    46,    35,    79,    48,    48,    48,    48,
+       1,    76,    48,    48
+};
+
+#if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
+# define YYSIZE_T __SIZE_TYPE__
+#endif
+#if ! defined (YYSIZE_T) && defined (size_t)
+# define YYSIZE_T size_t
+#endif
+#if ! defined (YYSIZE_T)
+# if defined (__STDC__) || defined (__cplusplus)
+#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYSIZE_T size_t
+# endif
+#endif
+#if ! defined (YYSIZE_T)
+# define YYSIZE_T unsigned int
+#endif
+
+#define yyerrok		(yyerrstatus = 0)
+#define yyclearin	(yychar = YYEMPTY)
+#define YYEMPTY		(-2)
+#define YYEOF		0
+
+#define YYACCEPT	goto yyacceptlab
+#define YYABORT		goto yyabortlab
+#define YYERROR		goto yyerrorlab
+
+
+/* Like YYERROR except do call yyerror.  This remains here temporarily
+   to ease the transition to the new meaning of YYERROR, for GCC.
+   Once GCC version 2 has supplanted version 1, this can go.  */
+
+#define YYFAIL		goto yyerrlab
+
+#define YYRECOVERING()  (!!yyerrstatus)
+
+#define YYBACKUP(Token, Value)					\
+do								\
+  if (yychar == YYEMPTY && yylen == 1)				\
+    {								\
+      yychar = (Token);						\
+      yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
+      YYPOPSTACK;						\
+      goto yybackup;						\
+    }								\
+  else								\
+    { 								\
+      yyerror ("syntax error: cannot back up");\
+      YYERROR;							\
+    }								\
+while (0)
+
+
+#define YYTERROR	1
+#define YYERRCODE	256
+
+
+/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
+   If N is 0, then set CURRENT to the empty location which ends
+   the previous symbol: RHS[0] (always defined).  */
+
+#define YYRHSLOC(Rhs, K) ((Rhs)[K])
+#ifndef YYLLOC_DEFAULT
+# define YYLLOC_DEFAULT(Current, Rhs, N)				\
+    do									\
+      if (N)								\
+	{								\
+	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
+	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
+	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
+	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
+	}								\
+      else								\
+	{								\
+	  (Current).first_line   = (Current).last_line   =		\
+	    YYRHSLOC (Rhs, 0).last_line;				\
+	  (Current).first_column = (Current).last_column =		\
+	    YYRHSLOC (Rhs, 0).last_column;				\
+	}								\
+    while (0)
+#endif
+
+
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
+
+#ifndef YY_LOCATION_PRINT
+# if YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+              (Loc).first_line, (Loc).first_column,	\
+              (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
+#endif
+
+
+/* YYLEX -- calling `yylex' with the right arguments.  */
+
+#ifdef YYLEX_PARAM
+# define YYLEX yylex (YYLEX_PARAM)
+#else
+# define YYLEX yylex ()
+#endif
+
+/* Enable debugging if requested.  */
+#if YYDEBUG
+
+# ifndef YYFPRINTF
+#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYFPRINTF fprintf
+# endif
+
+# define YYDPRINTF(Args)			\
+do {						\
+  if (yydebug)					\
+    YYFPRINTF Args;				\
+} while (0)
+
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)		\
+do {								\
+  if (yydebug)							\
+    {								\
+      YYFPRINTF (stderr, "%s ", Title);				\
+      yysymprint (stderr, 					\
+                  Type, Value);	\
+      YYFPRINTF (stderr, "\n");					\
+    }								\
+} while (0)
+
+/*------------------------------------------------------------------.
+| yy_stack_print -- Print the state stack from its BOTTOM up to its |
+| TOP (included).                                                   |
+`------------------------------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yy_stack_print (short int *bottom, short int *top)
+#else
+static void
+yy_stack_print (bottom, top)
+    short int *bottom;
+    short int *top;
+#endif
+{
+  YYFPRINTF (stderr, "Stack now");
+  for (/* Nothing. */; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
+  YYFPRINTF (stderr, "\n");
+}
+
+# define YY_STACK_PRINT(Bottom, Top)				\
+do {								\
+  if (yydebug)							\
+    yy_stack_print ((Bottom), (Top));				\
+} while (0)
+
+
+/*------------------------------------------------.
+| Report that the YYRULE is going to be reduced.  |
+`------------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yy_reduce_print (int yyrule)
+#else
+static void
+yy_reduce_print (yyrule)
+    int yyrule;
+#endif
+{
+  int yyi;
+  unsigned int yylno = yyrline[yyrule];
+  YYFPRINTF (stderr, "Reducing stack by rule %d (line %u), ",
+             yyrule - 1, yylno);
+  /* Print the symbols being reduced, and their result.  */
+  for (yyi = yyprhs[yyrule]; 0 <= yyrhs[yyi]; yyi++)
+    YYFPRINTF (stderr, "%s ", yytname [yyrhs[yyi]]);
+  YYFPRINTF (stderr, "-> %s\n", yytname [yyr1[yyrule]]);
+}
+
+# define YY_REDUCE_PRINT(Rule)		\
+do {					\
+  if (yydebug)				\
+    yy_reduce_print (Rule);		\
+} while (0)
+
+/* Nonzero means print parse trace.  It is left uninitialized so that
+   multiple parsers can coexist.  */
+int yydebug;
+#else /* !YYDEBUG */
+# define YYDPRINTF(Args)
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
+# define YY_STACK_PRINT(Bottom, Top)
+# define YY_REDUCE_PRINT(Rule)
+#endif /* !YYDEBUG */
+
+
+/* YYINITDEPTH -- initial size of the parser's stacks.  */
+#ifndef	YYINITDEPTH
+# define YYINITDEPTH 200
+#endif
+
+/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
+   if the built-in stack extension method is used).
+
+   Do not make this value too large; the results are undefined if
+   SIZE_MAX < YYSTACK_BYTES (YYMAXDEPTH)
+   evaluated with infinite-precision integer arithmetic.  */
+
+#ifndef YYMAXDEPTH
+# define YYMAXDEPTH 10000
+#endif
+
+
+
+#if YYERROR_VERBOSE
+
+# ifndef yystrlen
+#  if defined (__GLIBC__) && defined (_STRING_H)
+#   define yystrlen strlen
+#  else
+/* Return the length of YYSTR.  */
+static YYSIZE_T
+#   if defined (__STDC__) || defined (__cplusplus)
+yystrlen (const char *yystr)
+#   else
+yystrlen (yystr)
+     const char *yystr;
+#   endif
+{
+  register const char *yys = yystr;
+
+  while (*yys++ != '\0')
+    continue;
+
+  return yys - yystr - 1;
+}
+#  endif
+# endif
+
+# ifndef yystpcpy
+#  if defined (__GLIBC__) && defined (_STRING_H) && defined (_GNU_SOURCE)
+#   define yystpcpy stpcpy
+#  else
+/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
+   YYDEST.  */
+static char *
+#   if defined (__STDC__) || defined (__cplusplus)
+yystpcpy (char *yydest, const char *yysrc)
+#   else
+yystpcpy (yydest, yysrc)
+     char *yydest;
+     const char *yysrc;
+#   endif
+{
+  register char *yyd = yydest;
+  register const char *yys = yysrc;
+
+  while ((*yyd++ = *yys++) != '\0')
+    continue;
+
+  return yyd - 1;
+}
+#  endif
+# endif
+
+#endif /* !YYERROR_VERBOSE */
+
+
+
+#if YYDEBUG
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yysymprint (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  /* Pacify ``unused variable'' warnings.  */
+  (void) yyvaluep;
+
+  if (yytype < YYNTOKENS)
+    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
+  else
+    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+
+
+# ifdef YYPRINT
+  if (yytype < YYNTOKENS)
+    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
+# endif
+  switch (yytype)
+    {
+      default:
+        break;
+    }
+  YYFPRINTF (yyoutput, ")");
+}
+
+#endif /* ! YYDEBUG */
+/*-----------------------------------------------.
+| Release the memory associated to this symbol.  |
+`-----------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yydestruct (yymsg, yytype, yyvaluep)
+    const char *yymsg;
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  /* Pacify ``unused variable'' warnings.  */
+  (void) yyvaluep;
+
+  if (!yymsg)
+    yymsg = "Deleting";
+  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
+
+  switch (yytype)
+    {
+
+      default:
+        break;
+    }
+}
+
+
+/* Prevent warnings from -Wmissing-prototypes.  */
+
+#ifdef YYPARSE_PARAM
+# if defined (__STDC__) || defined (__cplusplus)
+int yyparse (void *YYPARSE_PARAM);
+# else
+int yyparse ();
+# endif
+#else /* ! YYPARSE_PARAM */
+#if defined (__STDC__) || defined (__cplusplus)
+int yyparse (void);
+#else
+int yyparse ();
+#endif
+#endif /* ! YYPARSE_PARAM */
+
+
+
+/* The look-ahead symbol.  */
+int yychar;
+
+/* The semantic value of the look-ahead symbol.  */
+YYSTYPE yylval;
+
+/* Number of syntax errors so far.  */
+int yynerrs;
+
+
+
+/*----------.
+| yyparse.  |
+`----------*/
+
+#ifdef YYPARSE_PARAM
+# if defined (__STDC__) || defined (__cplusplus)
+int yyparse (void *YYPARSE_PARAM)
+# else
+int yyparse (YYPARSE_PARAM)
+  void *YYPARSE_PARAM;
+# endif
+#else /* ! YYPARSE_PARAM */
+#if defined (__STDC__) || defined (__cplusplus)
+int
+yyparse (void)
+#else
+int
+yyparse ()
+
+#endif
+#endif
+{
+  
+  register int yystate;
+  register int yyn;
+  int yyresult;
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
+
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  short int yyssa[YYINITDEPTH];
+  short int *yyss = yyssa;
+  register short int *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  register YYSTYPE *yyvsp;
+
+
+
+#define YYPOPSTACK   (yyvsp--, yyssp--)
+
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
+  /* When reducing, the number of symbols on the RHS of the reduced
+     rule.  */
+  int yylen;
+
+  YYDPRINTF ((stderr, "Starting parse\n"));
+
+  yystate = 0;
+  yyerrstatus = 0;
+  yynerrs = 0;
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
+
+  /* Initialize stack pointers.
+     Waste one element of value and location stack
+     so that they stay on the same level as the state stack.
+     The wasted elements are never initialized.  */
+
+  yyssp = yyss;
+  yyvsp = yyvs;
+
+
+  yyvsp[0] = yylval;
+
+  goto yysetstate;
+
+/*------------------------------------------------------------.
+| yynewstate -- Push a new state, which is found in yystate.  |
+`------------------------------------------------------------*/
+ yynewstate:
+  /* In all cases, when you get here, the value and location stacks
+     have just been pushed. so pushing a state here evens the stacks.
+     */
+  yyssp++;
+
+ yysetstate:
+  *yyssp = yystate;
+
+  if (yyss + yystacksize - 1 <= yyssp)
+    {
+      /* Get the current used size of the three stacks, in elements.  */
+      YYSIZE_T yysize = yyssp - yyss + 1;
+
+#ifdef yyoverflow
+      {
+	/* Give user a chance to reallocate the stack. Use copies of
+	   these so that the &'s don't force the real ones into
+	   memory.  */
+	YYSTYPE *yyvs1 = yyvs;
+	short int *yyss1 = yyss;
+
+
+	/* Each stack pointer address is followed by the size of the
+	   data in use in that stack, in bytes.  This used to be a
+	   conditional around just the two extra args, but that might
+	   be undefined if yyoverflow is a macro.  */
+	yyoverflow ("parser stack overflow",
+		    &yyss1, yysize * sizeof (*yyssp),
+		    &yyvs1, yysize * sizeof (*yyvsp),
+
+		    &yystacksize);
+
+	yyss = yyss1;
+	yyvs = yyvs1;
+      }
+#else /* no yyoverflow */
+# ifndef YYSTACK_RELOCATE
+      goto yyoverflowlab;
+# else
+      /* Extend the stack our own way.  */
+      if (YYMAXDEPTH <= yystacksize)
+	goto yyoverflowlab;
+      yystacksize *= 2;
+      if (YYMAXDEPTH < yystacksize)
+	yystacksize = YYMAXDEPTH;
+
+      {
+	short int *yyss1 = yyss;
+	union yyalloc *yyptr =
+	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
+	if (! yyptr)
+	  goto yyoverflowlab;
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
+#  undef YYSTACK_RELOCATE
+	if (yyss1 != yyssa)
+	  YYSTACK_FREE (yyss1);
+      }
+# endif
+#endif /* no yyoverflow */
+
+      yyssp = yyss + yysize - 1;
+      yyvsp = yyvs + yysize - 1;
+
+
+      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
+		  (unsigned long int) yystacksize));
+
+      if (yyss + yystacksize - 1 <= yyssp)
+	YYABORT;
+    }
+
+  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
+
+  goto yybackup;
+
+/*-----------.
+| yybackup.  |
+`-----------*/
+yybackup:
+
+/* Do appropriate processing given the current state.  */
+/* Read a look-ahead token if we need one and don't already have one.  */
+/* yyresume: */
+
+  /* First try to decide what to do without reference to look-ahead token.  */
+
+  yyn = yypact[yystate];
+  if (yyn == YYPACT_NINF)
+    goto yydefault;
+
+  /* Not known => get a look-ahead token if don't already have one.  */
+
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
+  if (yychar == YYEMPTY)
+    {
+      YYDPRINTF ((stderr, "Reading a token: "));
+      yychar = YYLEX;
+    }
+
+  if (yychar <= YYEOF)
+    {
+      yychar = yytoken = YYEOF;
+      YYDPRINTF ((stderr, "Now at end of input.\n"));
+    }
+  else
+    {
+      yytoken = YYTRANSLATE (yychar);
+      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
+    }
+
+  /* If the proper action on seeing token YYTOKEN is to reduce or to
+     detect an error, take that action.  */
+  yyn += yytoken;
+  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
+    goto yydefault;
+  yyn = yytable[yyn];
+  if (yyn <= 0)
+    {
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
+      yyn = -yyn;
+      goto yyreduce;
+    }
+
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
+  /* Shift the look-ahead token.  */
+  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
+
+  /* Discard the token being shifted unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
+
+  *++yyvsp = yylval;
+
+
+  /* Count tokens shifted since error; after three, turn off error
+     status.  */
+  if (yyerrstatus)
+    yyerrstatus--;
+
+  yystate = yyn;
+  goto yynewstate;
+
+
+/*-----------------------------------------------------------.
+| yydefault -- do the default action for the current state.  |
+`-----------------------------------------------------------*/
+yydefault:
+  yyn = yydefact[yystate];
+  if (yyn == 0)
+    goto yyerrlab;
+  goto yyreduce;
+
+
+/*-----------------------------.
+| yyreduce -- Do a reduction.  |
+`-----------------------------*/
+yyreduce:
+  /* yyn is the number of a rule to reduce with.  */
+  yylen = yyr2[yyn];
+
+  /* If YYLEN is nonzero, implement the default value of the action:
+     `$$ = $1'.
+
+     Otherwise, the following line sets YYVAL to garbage.
+     This behavior is undocumented and Bison
+     users should not rely upon it.  Assigning to YYVAL
+     unconditionally makes the parser a bit smaller, and it avoids a
+     GCC warning that YYVAL may be used uninitialized.  */
+  yyval = yyvsp[1-yylen];
+
+
+  YY_REDUCE_PRINT (yyn);
+  switch (yyn)
+    {
+        case 4:
+#line 107 "scripts/genksyms/parse.y"
+    { is_typedef = 0; is_extern = 0; current_name = NULL; decl_spec = NULL; ;}
+    break;
+
+  case 5:
+#line 109 "scripts/genksyms/parse.y"
+    { free_list(*(yyvsp[0]), NULL); *(yyvsp[0]) = NULL; ;}
+    break;
+
+  case 6:
+#line 113 "scripts/genksyms/parse.y"
+    { is_typedef = 1; ;}
+    break;
+
+  case 7:
+#line 114 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 12:
+#line 119 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 13:
+#line 120 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 14:
+#line 125 "scripts/genksyms/parse.y"
+    { if (current_name) {
+		    struct string_list *decl = (*(yyvsp[0]))->next;
+		    (*(yyvsp[0]))->next = NULL;
+		    add_symbol(current_name,
+			       is_typedef ? SYM_TYPEDEF : SYM_NORMAL,
+			       decl, is_extern);
+		    current_name = NULL;
+		  }
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 15:
+#line 138 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 17:
+#line 144 "scripts/genksyms/parse.y"
+    { struct string_list *decl = *(yyvsp[0]);
+		  *(yyvsp[0]) = NULL;
+		  add_symbol(current_name,
+			     is_typedef ? SYM_TYPEDEF : SYM_NORMAL, decl, is_extern);
+		  current_name = NULL;
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 18:
+#line 152 "scripts/genksyms/parse.y"
+    { struct string_list *decl = *(yyvsp[0]);
+		  *(yyvsp[0]) = NULL;
+		  free_list(*(yyvsp[-1]), NULL);
+		  *(yyvsp[-1]) = decl_spec;
+		  add_symbol(current_name,
+			     is_typedef ? SYM_TYPEDEF : SYM_NORMAL, decl, is_extern);
+		  current_name = NULL;
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 19:
+#line 165 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]) ? (yyvsp[0]) : (yyvsp[-1]) ? (yyvsp[-1]) : (yyvsp[-2]) ? (yyvsp[-2]) : (yyvsp[-3]); ;}
+    break;
+
+  case 20:
+#line 170 "scripts/genksyms/parse.y"
+    { decl_spec = NULL; ;}
+    break;
+
+  case 22:
+#line 175 "scripts/genksyms/parse.y"
+    { decl_spec = *(yyvsp[0]); ;}
+    break;
+
+  case 23:
+#line 176 "scripts/genksyms/parse.y"
+    { decl_spec = *(yyvsp[0]); ;}
+    break;
+
+  case 24:
+#line 181 "scripts/genksyms/parse.y"
+    { /* Version 2 checksumming ignores storage class, as that
+		     is really irrelevant to the linkage.  */
+		  remove_node((yyvsp[0]));
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 29:
+#line 193 "scripts/genksyms/parse.y"
+    { is_extern = 1; (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 30:
+#line 194 "scripts/genksyms/parse.y"
+    { is_extern = 0; (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 35:
+#line 206 "scripts/genksyms/parse.y"
+    { remove_node((yyvsp[-1])); (*(yyvsp[0]))->tag = SYM_STRUCT; (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 36:
+#line 208 "scripts/genksyms/parse.y"
+    { remove_node((yyvsp[-1])); (*(yyvsp[0]))->tag = SYM_UNION; (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 37:
+#line 210 "scripts/genksyms/parse.y"
+    { remove_node((yyvsp[-1])); (*(yyvsp[0]))->tag = SYM_ENUM; (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 38:
+#line 214 "scripts/genksyms/parse.y"
+    { struct string_list *s = *(yyvsp[0]), *i = *(yyvsp[-1]), *r;
+		  r = copy_node(i); r->tag = SYM_STRUCT;
+		  r->next = (*(yyvsp[-2]))->next; *(yyvsp[0]) = r; (*(yyvsp[-2]))->next = NULL;
+		  add_symbol(i->string, SYM_STRUCT, s, is_extern);
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 39:
+#line 221 "scripts/genksyms/parse.y"
+    { struct string_list *s = *(yyvsp[0]), *i = *(yyvsp[-1]), *r;
+		  r = copy_node(i); r->tag = SYM_UNION;
+		  r->next = (*(yyvsp[-2]))->next; *(yyvsp[0]) = r; (*(yyvsp[-2]))->next = NULL;
+		  add_symbol(i->string, SYM_UNION, s, is_extern);
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 40:
+#line 228 "scripts/genksyms/parse.y"
+    { struct string_list *s = *(yyvsp[0]), *i = *(yyvsp[-1]), *r;
+		  r = copy_node(i); r->tag = SYM_ENUM;
+		  r->next = (*(yyvsp[-2]))->next; *(yyvsp[0]) = r; (*(yyvsp[-2]))->next = NULL;
+		  add_symbol(i->string, SYM_ENUM, s, is_extern);
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 41:
+#line 236 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 42:
+#line 237 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 43:
+#line 238 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 54:
+#line 252 "scripts/genksyms/parse.y"
+    { (*(yyvsp[0]))->tag = SYM_TYPEDEF; (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 55:
+#line 257 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]) ? (yyvsp[0]) : (yyvsp[-1]); ;}
+    break;
+
+  case 56:
+#line 261 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 59:
+#line 267 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 63:
+#line 273 "scripts/genksyms/parse.y"
+    { /* restrict has no effect in prototypes so ignore it */
+		  remove_node((yyvsp[0]));
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 64:
+#line 280 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 66:
+#line 286 "scripts/genksyms/parse.y"
+    { if (current_name != NULL) {
+		    error_with_pos("unexpected second declaration name");
+		    YYERROR;
+		  } else {
+		    current_name = (*(yyvsp[0]))->string;
+		    (yyval) = (yyvsp[0]);
+		  }
+		;}
+    break;
+
+  case 67:
+#line 295 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 68:
+#line 297 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 69:
+#line 299 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 70:
+#line 301 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 71:
+#line 303 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 72:
+#line 309 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 76:
+#line 317 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 77:
+#line 319 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 78:
+#line 321 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 79:
+#line 323 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 80:
+#line 325 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 81:
+#line 329 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 83:
+#line 331 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 84:
+#line 335 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 87:
+#line 342 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 88:
+#line 347 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]) ? (yyvsp[0]) : (yyvsp[-1]); ;}
+    break;
+
+  case 89:
+#line 352 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]) ? (yyvsp[0]) : (yyvsp[-1]); ;}
+    break;
+
+  case 91:
+#line 357 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 92:
+#line 359 "scripts/genksyms/parse.y"
+    { /* For version 2 checksums, we don't want to remember
+		     private parameter names.  */
+		  remove_node((yyvsp[0]));
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 93:
+#line 367 "scripts/genksyms/parse.y"
+    { remove_node((yyvsp[0]));
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 94:
+#line 371 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 95:
+#line 373 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 96:
+#line 375 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 97:
+#line 377 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 98:
+#line 379 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 99:
+#line 384 "scripts/genksyms/parse.y"
+    { struct string_list *decl = *(yyvsp[-1]);
+		  *(yyvsp[-1]) = NULL;
+		  add_symbol(current_name, SYM_NORMAL, decl, is_extern);
+		  (yyval) = (yyvsp[0]);
+		;}
+    break;
+
+  case 100:
+#line 392 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 102:
+#line 399 "scripts/genksyms/parse.y"
+    { remove_list((yyvsp[0]), &(*(yyvsp[-1]))->next); (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 103:
+#line 403 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 104:
+#line 404 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 105:
+#line 408 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 108:
+#line 414 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 109:
+#line 419 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 110:
+#line 421 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 111:
+#line 425 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 114:
+#line 431 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 115:
+#line 435 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]) ? (yyvsp[0]) : (yyvsp[-1]); ;}
+    break;
+
+  case 116:
+#line 436 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 118:
+#line 441 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 119:
+#line 445 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 121:
+#line 450 "scripts/genksyms/parse.y"
+    { (yyval) = (yyvsp[0]); ;}
+    break;
+
+  case 122:
+#line 454 "scripts/genksyms/parse.y"
+    { (yyval) = NULL; ;}
+    break;
+
+  case 124:
+#line 460 "scripts/genksyms/parse.y"
+    { export_symbol((*(yyvsp[-2]))->string); (yyval) = (yyvsp[0]); ;}
+    break;
+
+
+    }
+
+/* Line 1037 of yacc.c.  */
+#line 1816 "scripts/genksyms/parse.c"
+
+  yyvsp -= yylen;
+  yyssp -= yylen;
+
+
+  YY_STACK_PRINT (yyss, yyssp);
+
+  *++yyvsp = yyval;
+
+
+  /* Now `shift' the result of the reduction.  Determine what state
+     that goes to, based on the state we popped back to and the rule
+     number reduced by.  */
+
+  yyn = yyr1[yyn];
+
+  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
+  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
+    yystate = yytable[yystate];
+  else
+    yystate = yydefgoto[yyn - YYNTOKENS];
+
+  goto yynewstate;
+
+
+/*------------------------------------.
+| yyerrlab -- here on detecting error |
+`------------------------------------*/
+yyerrlab:
+  /* If not already recovering from an error, report this error.  */
+  if (!yyerrstatus)
+    {
+      ++yynerrs;
+#if YYERROR_VERBOSE
+      yyn = yypact[yystate];
+
+      if (YYPACT_NINF < yyn && yyn < YYLAST)
+	{
+	  YYSIZE_T yysize = 0;
+	  int yytype = YYTRANSLATE (yychar);
+	  const char* yyprefix;
+	  char *yymsg;
+	  int yyx;
+
+	  /* Start YYX at -YYN if negative to avoid negative indexes in
+	     YYCHECK.  */
+	  int yyxbegin = yyn < 0 ? -yyn : 0;
+
+	  /* Stay within bounds of both yycheck and yytname.  */
+	  int yychecklim = YYLAST - yyn;
+	  int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+	  int yycount = 0;
+
+	  yyprefix = ", expecting ";
+	  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	      {
+		yysize += yystrlen (yyprefix) + yystrlen (yytname [yyx]);
+		yycount += 1;
+		if (yycount == 5)
+		  {
+		    yysize = 0;
+		    break;
+		  }
+	      }
+	  yysize += (sizeof ("syntax error, unexpected ")
+		     + yystrlen (yytname[yytype]));
+	  yymsg = (char *) YYSTACK_ALLOC (yysize);
+	  if (yymsg != 0)
+	    {
+	      char *yyp = yystpcpy (yymsg, "syntax error, unexpected ");
+	      yyp = yystpcpy (yyp, yytname[yytype]);
+
+	      if (yycount < 5)
+		{
+		  yyprefix = ", expecting ";
+		  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+		    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+		      {
+			yyp = yystpcpy (yyp, yyprefix);
+			yyp = yystpcpy (yyp, yytname[yyx]);
+			yyprefix = " or ";
+		      }
+		}
+	      yyerror (yymsg);
+	      YYSTACK_FREE (yymsg);
+	    }
+	  else
+	    yyerror ("syntax error; also virtual memory exhausted");
+	}
+      else
+#endif /* YYERROR_VERBOSE */
+	yyerror ("syntax error");
+    }
+
+
+
+  if (yyerrstatus == 3)
+    {
+      /* If just tried and failed to reuse look-ahead token after an
+	 error, discard it.  */
+
+      if (yychar <= YYEOF)
+        {
+          /* If at end of input, pop the error token,
+	     then the rest of the stack, then return failure.  */
+	  if (yychar == YYEOF)
+	     for (;;)
+	       {
+
+		 YYPOPSTACK;
+		 if (yyssp == yyss)
+		   YYABORT;
+		 yydestruct ("Error: popping",
+                             yystos[*yyssp], yyvsp);
+	       }
+        }
+      else
+	{
+	  yydestruct ("Error: discarding", yytoken, &yylval);
+	  yychar = YYEMPTY;
+	}
+    }
+
+  /* Else will try to reuse look-ahead token after shifting the error
+     token.  */
+  goto yyerrlab1;
+
+
+/*---------------------------------------------------.
+| yyerrorlab -- error raised explicitly by YYERROR.  |
+`---------------------------------------------------*/
+yyerrorlab:
+
+#ifdef __GNUC__
+  /* Pacify GCC when the user code never invokes YYERROR and the label
+     yyerrorlab therefore never appears in user code.  */
+  if (0)
+     goto yyerrorlab;
+#endif
+
+yyvsp -= yylen;
+  yyssp -= yylen;
+  yystate = *yyssp;
+  goto yyerrlab1;
+
+
+/*-------------------------------------------------------------.
+| yyerrlab1 -- common code for both syntax error and YYERROR.  |
+`-------------------------------------------------------------*/
+yyerrlab1:
+  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
+
+  for (;;)
+    {
+      yyn = yypact[yystate];
+      if (yyn != YYPACT_NINF)
+	{
+	  yyn += YYTERROR;
+	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+	    {
+	      yyn = yytable[yyn];
+	      if (0 < yyn)
+		break;
+	    }
+	}
+
+      /* Pop the current state because it cannot handle the error token.  */
+      if (yyssp == yyss)
+	YYABORT;
+
+
+      yydestruct ("Error: popping", yystos[yystate], yyvsp);
+      YYPOPSTACK;
+      yystate = *yyssp;
+      YY_STACK_PRINT (yyss, yyssp);
+    }
+
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
+  *++yyvsp = yylval;
+
+
+  /* Shift the error token. */
+  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);
+
+  yystate = yyn;
+  goto yynewstate;
+
+
+/*-------------------------------------.
+| yyacceptlab -- YYACCEPT comes here.  |
+`-------------------------------------*/
+yyacceptlab:
+  yyresult = 0;
+  goto yyreturn;
+
+/*-----------------------------------.
+| yyabortlab -- YYABORT comes here.  |
+`-----------------------------------*/
+yyabortlab:
+  yydestruct ("Error: discarding lookahead",
+              yytoken, &yylval);
+  yychar = YYEMPTY;
+  yyresult = 1;
+  goto yyreturn;
+
+#ifndef yyoverflow
+/*----------------------------------------------.
+| yyoverflowlab -- parser overflow comes here.  |
+`----------------------------------------------*/
+yyoverflowlab:
+  yyerror ("parser stack overflow");
+  yyresult = 2;
+  /* Fall through.  */
+#endif
+
+yyreturn:
+#ifndef yyoverflow
+  if (yyss != yyssa)
+    YYSTACK_FREE (yyss);
+#endif
+  return yyresult;
+}
+
+
+#line 464 "scripts/genksyms/parse.y"
+
+
+static void
+yyerror(const char *e)
+{
+  error_with_pos("%s", e);
+}
+
diff -urpN linux-2.6.23-sabayon/scripts/genksyms/parse.h testtry/scripts/genksyms/parse.h
--- linux-2.6.23-sabayon/scripts/genksyms/parse.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/genksyms/parse.h	2007-10-15 16:44:58.000000000 +0000
@@ -0,0 +1,128 @@
+/* A Bison parser, made by GNU Bison 2.0.  */
+
+/* Skeleton parser for Yacc-like parsing with Bison,
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330,
+   Boston, MA 02111-1307, USA.  */
+
+/* As a special exception, when this file is copied by Bison into a
+   Bison output file, you may use that output file without restriction.
+   This special exception was added by the Free Software Foundation
+   in version 1.24 of Bison.  */
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     ASM_KEYW = 258,
+     ATTRIBUTE_KEYW = 259,
+     AUTO_KEYW = 260,
+     BOOL_KEYW = 261,
+     CHAR_KEYW = 262,
+     CONST_KEYW = 263,
+     DOUBLE_KEYW = 264,
+     ENUM_KEYW = 265,
+     EXTERN_KEYW = 266,
+     FLOAT_KEYW = 267,
+     INLINE_KEYW = 268,
+     INT_KEYW = 269,
+     LONG_KEYW = 270,
+     REGISTER_KEYW = 271,
+     RESTRICT_KEYW = 272,
+     SHORT_KEYW = 273,
+     SIGNED_KEYW = 274,
+     STATIC_KEYW = 275,
+     STRUCT_KEYW = 276,
+     TYPEDEF_KEYW = 277,
+     UNION_KEYW = 278,
+     UNSIGNED_KEYW = 279,
+     VOID_KEYW = 280,
+     VOLATILE_KEYW = 281,
+     TYPEOF_KEYW = 282,
+     EXPORT_SYMBOL_KEYW = 283,
+     ASM_PHRASE = 284,
+     ATTRIBUTE_PHRASE = 285,
+     BRACE_PHRASE = 286,
+     BRACKET_PHRASE = 287,
+     EXPRESSION_PHRASE = 288,
+     CHAR = 289,
+     DOTS = 290,
+     IDENT = 291,
+     INT = 292,
+     REAL = 293,
+     STRING = 294,
+     TYPE = 295,
+     OTHER = 296,
+     FILENAME = 297
+   };
+#endif
+#define ASM_KEYW 258
+#define ATTRIBUTE_KEYW 259
+#define AUTO_KEYW 260
+#define BOOL_KEYW 261
+#define CHAR_KEYW 262
+#define CONST_KEYW 263
+#define DOUBLE_KEYW 264
+#define ENUM_KEYW 265
+#define EXTERN_KEYW 266
+#define FLOAT_KEYW 267
+#define INLINE_KEYW 268
+#define INT_KEYW 269
+#define LONG_KEYW 270
+#define REGISTER_KEYW 271
+#define RESTRICT_KEYW 272
+#define SHORT_KEYW 273
+#define SIGNED_KEYW 274
+#define STATIC_KEYW 275
+#define STRUCT_KEYW 276
+#define TYPEDEF_KEYW 277
+#define UNION_KEYW 278
+#define UNSIGNED_KEYW 279
+#define VOID_KEYW 280
+#define VOLATILE_KEYW 281
+#define TYPEOF_KEYW 282
+#define EXPORT_SYMBOL_KEYW 283
+#define ASM_PHRASE 284
+#define ATTRIBUTE_PHRASE 285
+#define BRACE_PHRASE 286
+#define BRACKET_PHRASE 287
+#define EXPRESSION_PHRASE 288
+#define CHAR 289
+#define DOTS 290
+#define IDENT 291
+#define INT 292
+#define REAL 293
+#define STRING 294
+#define TYPE 295
+#define OTHER 296
+#define FILENAME 297
+
+
+
+
+#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
+typedef int YYSTYPE;
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
+#endif
+
+extern YYSTYPE yylval;
+
+
+
Files linux-2.6.23-sabayon/scripts/kallsyms and testtry/scripts/kallsyms differ
Files linux-2.6.23-sabayon/scripts/kconfig/conf and testtry/scripts/kconfig/conf differ
diff -urpN linux-2.6.23-sabayon/scripts/kconfig/lex.zconf.c testtry/scripts/kconfig/lex.zconf.c
--- linux-2.6.23-sabayon/scripts/kconfig/lex.zconf.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/kconfig/lex.zconf.c	2007-10-15 16:44:22.000000000 +0000
@@ -0,0 +1,2350 @@
+
+#line 3 "scripts/kconfig/lex.zconf.c"
+
+#define  YY_INT_ALIGNED short int
+
+/* A lexical scanner generated by flex */
+
+#define FLEX_SCANNER
+#define YY_FLEX_MAJOR_VERSION 2
+#define YY_FLEX_MINOR_VERSION 5
+#define YY_FLEX_SUBMINOR_VERSION 33
+#if YY_FLEX_SUBMINOR_VERSION > 0
+#define FLEX_BETA
+#endif
+
+/* First, we deal with  platform-specific or compiler-specific issues. */
+
+/* begin standard C headers. */
+#include <stdio.h>
+#include <string.h>
+#include <errno.h>
+#include <stdlib.h>
+
+/* end standard C headers. */
+
+/* flex integer type definitions */
+
+#ifndef FLEXINT_H
+#define FLEXINT_H
+
+/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
+
+#if __STDC_VERSION__ >= 199901L
+
+/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
+ * if you want the limit (max/min) macros for int types.
+ */
+#ifndef __STDC_LIMIT_MACROS
+#define __STDC_LIMIT_MACROS 1
+#endif
+
+#include <inttypes.h>
+typedef int8_t flex_int8_t;
+typedef uint8_t flex_uint8_t;
+typedef int16_t flex_int16_t;
+typedef uint16_t flex_uint16_t;
+typedef int32_t flex_int32_t;
+typedef uint32_t flex_uint32_t;
+#else
+typedef signed char flex_int8_t;
+typedef short int flex_int16_t;
+typedef int flex_int32_t;
+typedef unsigned char flex_uint8_t; 
+typedef unsigned short int flex_uint16_t;
+typedef unsigned int flex_uint32_t;
+#endif /* ! C99 */
+
+/* Limits of integral types. */
+#ifndef INT8_MIN
+#define INT8_MIN               (-128)
+#endif
+#ifndef INT16_MIN
+#define INT16_MIN              (-32767-1)
+#endif
+#ifndef INT32_MIN
+#define INT32_MIN              (-2147483647-1)
+#endif
+#ifndef INT8_MAX
+#define INT8_MAX               (127)
+#endif
+#ifndef INT16_MAX
+#define INT16_MAX              (32767)
+#endif
+#ifndef INT32_MAX
+#define INT32_MAX              (2147483647)
+#endif
+#ifndef UINT8_MAX
+#define UINT8_MAX              (255U)
+#endif
+#ifndef UINT16_MAX
+#define UINT16_MAX             (65535U)
+#endif
+#ifndef UINT32_MAX
+#define UINT32_MAX             (4294967295U)
+#endif
+
+#endif /* ! FLEXINT_H */
+
+#ifdef __cplusplus
+
+/* The "const" storage-class-modifier is valid. */
+#define YY_USE_CONST
+
+#else	/* ! __cplusplus */
+
+#if __STDC__
+
+#define YY_USE_CONST
+
+#endif	/* __STDC__ */
+#endif	/* ! __cplusplus */
+
+#ifdef YY_USE_CONST
+#define yyconst const
+#else
+#define yyconst
+#endif
+
+/* Returned upon end-of-file. */
+#define YY_NULL 0
+
+/* Promotes a possibly negative, possibly signed char to an unsigned
+ * integer for use as an array index.  If the signed char is negative,
+ * we want to instead treat it as an 8-bit unsigned char, hence the
+ * double cast.
+ */
+#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
+
+/* Enter a start condition.  This macro really ought to take a parameter,
+ * but we do it the disgusting crufty way forced on us by the ()-less
+ * definition of BEGIN.
+ */
+#define BEGIN (yy_start) = 1 + 2 *
+
+/* Translate the current start state into a value that can be later handed
+ * to BEGIN to return to the state.  The YYSTATE alias is for lex
+ * compatibility.
+ */
+#define YY_START (((yy_start) - 1) / 2)
+#define YYSTATE YY_START
+
+/* Action number for EOF rule of a given start state. */
+#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
+
+/* Special action meaning "start processing a new file". */
+#define YY_NEW_FILE zconfrestart(zconfin  )
+
+#define YY_END_OF_BUFFER_CHAR 0
+
+/* Size of default input buffer. */
+#ifndef YY_BUF_SIZE
+#define YY_BUF_SIZE 16384
+#endif
+
+/* The state buf must be large enough to hold one state per character in the main buffer.
+ */
+#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
+
+#ifndef YY_TYPEDEF_YY_BUFFER_STATE
+#define YY_TYPEDEF_YY_BUFFER_STATE
+typedef struct yy_buffer_state *YY_BUFFER_STATE;
+#endif
+
+extern int zconfleng;
+
+extern FILE *zconfin, *zconfout;
+
+#define EOB_ACT_CONTINUE_SCAN 0
+#define EOB_ACT_END_OF_FILE 1
+#define EOB_ACT_LAST_MATCH 2
+
+    #define YY_LESS_LINENO(n)
+    
+/* Return all but the first "n" matched characters back to the input stream. */
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up zconftext. */ \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		*yy_cp = (yy_hold_char); \
+		YY_RESTORE_YY_MORE_OFFSET \
+		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
+		YY_DO_BEFORE_ACTION; /* set up zconftext again */ \
+		} \
+	while ( 0 )
+
+#define unput(c) yyunput( c, (yytext_ptr)  )
+
+/* The following is because we cannot portably get our hands on size_t
+ * (without autoconf's help, which isn't available because we want
+ * flex-generated scanners to compile on their own).
+ */
+
+#ifndef YY_TYPEDEF_YY_SIZE_T
+#define YY_TYPEDEF_YY_SIZE_T
+typedef unsigned int yy_size_t;
+#endif
+
+#ifndef YY_STRUCT_YY_BUFFER_STATE
+#define YY_STRUCT_YY_BUFFER_STATE
+struct yy_buffer_state
+	{
+	FILE *yy_input_file;
+
+	char *yy_ch_buf;		/* input buffer */
+	char *yy_buf_pos;		/* current position in input buffer */
+
+	/* Size of input buffer in bytes, not including room for EOB
+	 * characters.
+	 */
+	yy_size_t yy_buf_size;
+
+	/* Number of characters read into yy_ch_buf, not including EOB
+	 * characters.
+	 */
+	int yy_n_chars;
+
+	/* Whether we "own" the buffer - i.e., we know we created it,
+	 * and can realloc() it to grow it, and should free() it to
+	 * delete it.
+	 */
+	int yy_is_our_buffer;
+
+	/* Whether this is an "interactive" input source; if so, and
+	 * if we're using stdio for input, then we want to use getc()
+	 * instead of fread(), to make sure we stop fetching input after
+	 * each newline.
+	 */
+	int yy_is_interactive;
+
+	/* Whether we're considered to be at the beginning of a line.
+	 * If so, '^' rules will be active on the next match, otherwise
+	 * not.
+	 */
+	int yy_at_bol;
+
+    int yy_bs_lineno; /**< The line count. */
+    int yy_bs_column; /**< The column count. */
+    
+	/* Whether to try to fill the input buffer when we reach the
+	 * end of it.
+	 */
+	int yy_fill_buffer;
+
+	int yy_buffer_status;
+
+#define YY_BUFFER_NEW 0
+#define YY_BUFFER_NORMAL 1
+	/* When an EOF's been seen but there's still some text to process
+	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
+	 * shouldn't try reading from the input source any more.  We might
+	 * still have a bunch of tokens to match, though, because of
+	 * possible backing-up.
+	 *
+	 * When we actually see the EOF, we change the status to "new"
+	 * (via zconfrestart()), so that the user can continue scanning by
+	 * just pointing zconfin at a new input file.
+	 */
+#define YY_BUFFER_EOF_PENDING 2
+
+	};
+#endif /* !YY_STRUCT_YY_BUFFER_STATE */
+
+/* Stack of input buffers. */
+static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
+static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
+static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
+
+/* We provide macros for accessing buffer states in case in the
+ * future we want to put the buffer states in a more general
+ * "scanner state".
+ *
+ * Returns the top of the stack, or NULL.
+ */
+#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
+                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
+                          : NULL)
+
+/* Same as previous macro, but useful when we know that the buffer stack is not
+ * NULL or when we need an lvalue. For internal use only.
+ */
+#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
+
+/* yy_hold_char holds the character lost when zconftext is formed. */
+static char yy_hold_char;
+static int yy_n_chars;		/* number of characters read into yy_ch_buf */
+int zconfleng;
+
+/* Points to current character in buffer. */
+static char *yy_c_buf_p = (char *) 0;
+static int yy_init = 0;		/* whether we need to initialize */
+static int yy_start = 0;	/* start state number */
+
+/* Flag which is used to allow zconfwrap()'s to do buffer switches
+ * instead of setting up a fresh zconfin.  A bit of a hack ...
+ */
+static int yy_did_buffer_switch_on_eof;
+
+void zconfrestart (FILE *input_file  );
+void zconf_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
+YY_BUFFER_STATE zconf_create_buffer (FILE *file,int size  );
+void zconf_delete_buffer (YY_BUFFER_STATE b  );
+void zconf_flush_buffer (YY_BUFFER_STATE b  );
+void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer  );
+void zconfpop_buffer_state (void );
+
+static void zconfensure_buffer_stack (void );
+static void zconf_load_buffer_state (void );
+static void zconf_init_buffer (YY_BUFFER_STATE b,FILE *file  );
+
+#define YY_FLUSH_BUFFER zconf_flush_buffer(YY_CURRENT_BUFFER )
+
+YY_BUFFER_STATE zconf_scan_buffer (char *base,yy_size_t size  );
+YY_BUFFER_STATE zconf_scan_string (yyconst char *yy_str  );
+YY_BUFFER_STATE zconf_scan_bytes (yyconst char *bytes,int len  );
+
+void *zconfalloc (yy_size_t  );
+void *zconfrealloc (void *,yy_size_t  );
+void zconffree (void *  );
+
+#define yy_new_buffer zconf_create_buffer
+
+#define yy_set_interactive(is_interactive) \
+	{ \
+	if ( ! YY_CURRENT_BUFFER ){ \
+        zconfensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            zconf_create_buffer(zconfin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
+	}
+
+#define yy_set_bol(at_bol) \
+	{ \
+	if ( ! YY_CURRENT_BUFFER ){\
+        zconfensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            zconf_create_buffer(zconfin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
+	}
+
+#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
+
+/* Begin user sect3 */
+
+#define zconfwrap() 1
+#define YY_SKIP_YYWRAP
+
+typedef unsigned char YY_CHAR;
+
+FILE *zconfin = (FILE *) 0, *zconfout = (FILE *) 0;
+
+typedef int yy_state_type;
+
+extern int zconflineno;
+
+int zconflineno = 1;
+
+extern char *zconftext;
+#define yytext_ptr zconftext
+static yyconst flex_int16_t yy_nxt[][17] =
+    {
+    {
+        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+        0,    0,    0,    0,    0,    0,    0
+    },
+
+    {
+       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
+       12,   12,   12,   12,   12,   12,   12
+    },
+
+    {
+       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
+       12,   12,   12,   12,   12,   12,   12
+    },
+
+    {
+       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
+       16,   16,   16,   18,   16,   16,   16
+    },
+
+    {
+       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
+       16,   16,   16,   18,   16,   16,   16
+
+    },
+
+    {
+       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
+       19,   19,   19,   19,   19,   19,   19
+    },
+
+    {
+       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
+       19,   19,   19,   19,   19,   19,   19
+    },
+
+    {
+       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
+       22,   22,   22,   22,   22,   25,   22
+    },
+
+    {
+       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
+       22,   22,   22,   22,   22,   25,   22
+    },
+
+    {
+       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
+       33,   34,   35,   35,   36,   37,   38
+
+    },
+
+    {
+       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
+       33,   34,   35,   35,   36,   37,   38
+    },
+
+    {
+      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
+      -11,  -11,  -11,  -11,  -11,  -11,  -11
+    },
+
+    {
+       11,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
+      -12,  -12,  -12,  -12,  -12,  -12,  -12
+    },
+
+    {
+       11,  -13,   39,   40,  -13,  -13,   41,  -13,  -13,  -13,
+      -13,  -13,  -13,  -13,  -13,  -13,  -13
+    },
+
+    {
+       11,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
+      -14,  -14,  -14,  -14,  -14,  -14,  -14
+
+    },
+
+    {
+       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
+       42,   42,   42,   42,   42,   42,   42
+    },
+
+    {
+       11,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
+      -16,  -16,  -16,  -16,  -16,  -16,  -16
+    },
+
+    {
+       11,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
+      -17,  -17,  -17,  -17,  -17,  -17,  -17
+    },
+
+    {
+       11,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
+      -18,  -18,  -18,   44,  -18,  -18,  -18
+    },
+
+    {
+       11,   45,   45,  -19,   45,   45,   45,   45,   45,   45,
+       45,   45,   45,   45,   45,   45,   45
+
+    },
+
+    {
+       11,  -20,   46,   47,  -20,  -20,  -20,  -20,  -20,  -20,
+      -20,  -20,  -20,  -20,  -20,  -20,  -20
+    },
+
+    {
+       11,   48,  -21,  -21,   48,   48,   48,   48,   48,   48,
+       48,   48,   48,   48,   48,   48,   48
+    },
+
+    {
+       11,   49,   49,   50,   49,  -22,   49,   49,  -22,   49,
+       49,   49,   49,   49,   49,  -22,   49
+    },
+
+    {
+       11,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
+      -23,  -23,  -23,  -23,  -23,  -23,  -23
+    },
+
+    {
+       11,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
+      -24,  -24,  -24,  -24,  -24,  -24,  -24
+
+    },
+
+    {
+       11,   51,   51,   52,   51,   51,   51,   51,   51,   51,
+       51,   51,   51,   51,   51,   51,   51
+    },
+
+    {
+       11,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
+      -26,  -26,  -26,  -26,  -26,  -26,  -26
+    },
+
+    {
+       11,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
+      -27,  -27,  -27,  -27,  -27,  -27,  -27
+    },
+
+    {
+       11,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
+      -28,  -28,  -28,  -28,   53,  -28,  -28
+    },
+
+    {
+       11,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
+      -29,  -29,  -29,  -29,  -29,  -29,  -29
+
+    },
+
+    {
+       11,   54,   54,  -30,   54,   54,   54,   54,   54,   54,
+       54,   54,   54,   54,   54,   54,   54
+    },
+
+    {
+       11,  -31,  -31,  -31,  -31,  -31,  -31,   55,  -31,  -31,
+      -31,  -31,  -31,  -31,  -31,  -31,  -31
+    },
+
+    {
+       11,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
+      -32,  -32,  -32,  -32,  -32,  -32,  -32
+    },
+
+    {
+       11,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
+      -33,  -33,  -33,  -33,  -33,  -33,  -33
+    },
+
+    {
+       11,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
+      -34,   56,   57,   57,  -34,  -34,  -34
+
+    },
+
+    {
+       11,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
+      -35,   57,   57,   57,  -35,  -35,  -35
+    },
+
+    {
+       11,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
+      -36,  -36,  -36,  -36,  -36,  -36,  -36
+    },
+
+    {
+       11,  -37,  -37,   58,  -37,  -37,  -37,  -37,  -37,  -37,
+      -37,  -37,  -37,  -37,  -37,  -37,  -37
+    },
+
+    {
+       11,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
+      -38,  -38,  -38,  -38,  -38,  -38,   59
+    },
+
+    {
+       11,  -39,   39,   40,  -39,  -39,   41,  -39,  -39,  -39,
+      -39,  -39,  -39,  -39,  -39,  -39,  -39
+
+    },
+
+    {
+       11,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
+      -40,  -40,  -40,  -40,  -40,  -40,  -40
+    },
+
+    {
+       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
+       42,   42,   42,   42,   42,   42,   42
+    },
+
+    {
+       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
+       42,   42,   42,   42,   42,   42,   42
+    },
+
+    {
+       11,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
+      -43,  -43,  -43,  -43,  -43,  -43,  -43
+    },
+
+    {
+       11,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
+      -44,  -44,  -44,   44,  -44,  -44,  -44
+
+    },
+
+    {
+       11,   45,   45,  -45,   45,   45,   45,   45,   45,   45,
+       45,   45,   45,   45,   45,   45,   45
+    },
+
+    {
+       11,  -46,   46,   47,  -46,  -46,  -46,  -46,  -46,  -46,
+      -46,  -46,  -46,  -46,  -46,  -46,  -46
+    },
+
+    {
+       11,   48,  -47,  -47,   48,   48,   48,   48,   48,   48,
+       48,   48,   48,   48,   48,   48,   48
+    },
+
+    {
+       11,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
+      -48,  -48,  -48,  -48,  -48,  -48,  -48
+    },
+
+    {
+       11,   49,   49,   50,   49,  -49,   49,   49,  -49,   49,
+       49,   49,   49,   49,   49,  -49,   49
+
+    },
+
+    {
+       11,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
+      -50,  -50,  -50,  -50,  -50,  -50,  -50
+    },
+
+    {
+       11,  -51,  -51,   52,  -51,  -51,  -51,  -51,  -51,  -51,
+      -51,  -51,  -51,  -51,  -51,  -51,  -51
+    },
+
+    {
+       11,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
+      -52,  -52,  -52,  -52,  -52,  -52,  -52
+    },
+
+    {
+       11,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
+      -53,  -53,  -53,  -53,  -53,  -53,  -53
+    },
+
+    {
+       11,   54,   54,  -54,   54,   54,   54,   54,   54,   54,
+       54,   54,   54,   54,   54,   54,   54
+
+    },
+
+    {
+       11,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
+      -55,  -55,  -55,  -55,  -55,  -55,  -55
+    },
+
+    {
+       11,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
+      -56,   60,   57,   57,  -56,  -56,  -56
+    },
+
+    {
+       11,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
+      -57,   57,   57,   57,  -57,  -57,  -57
+    },
+
+    {
+       11,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
+      -58,  -58,  -58,  -58,  -58,  -58,  -58
+    },
+
+    {
+       11,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
+      -59,  -59,  -59,  -59,  -59,  -59,  -59
+
+    },
+
+    {
+       11,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
+      -60,   57,   57,   57,  -60,  -60,  -60
+    },
+
+    } ;
+
+static yy_state_type yy_get_previous_state (void );
+static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
+static int yy_get_next_buffer (void );
+static void yy_fatal_error (yyconst char msg[]  );
+
+/* Done after the current pattern has been matched and before the
+ * corresponding action - sets up zconftext.
+ */
+#define YY_DO_BEFORE_ACTION \
+	(yytext_ptr) = yy_bp; \
+	zconfleng = (size_t) (yy_cp - yy_bp); \
+	(yy_hold_char) = *yy_cp; \
+	*yy_cp = '\0'; \
+	(yy_c_buf_p) = yy_cp;
+
+#define YY_NUM_RULES 33
+#define YY_END_OF_BUFFER 34
+/* This struct is not used in this scanner,
+   but its presence is necessary. */
+struct yy_trans_info
+	{
+	flex_int32_t yy_verify;
+	flex_int32_t yy_nxt;
+	};
+static yyconst flex_int16_t yy_accept[61] =
+    {   0,
+        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+       34,    5,    4,    2,    3,    7,    8,    6,   32,   29,
+       31,   24,   28,   27,   26,   22,   17,   13,   16,   20,
+       22,   11,   12,   19,   19,   14,   22,   22,    4,    2,
+        3,    3,    1,    6,   32,   29,   31,   30,   24,   23,
+       26,   25,   15,   20,    9,   19,   19,   21,   10,   18
+    } ;
+
+static yyconst flex_int32_t yy_ec[256] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    2,    4,    5,    6,    1,    1,    7,    8,    9,
+       10,    1,    1,    1,   11,   12,   12,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,    1,    1,    1,
+       14,    1,    1,    1,   13,   13,   13,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+        1,   15,    1,    1,   13,    1,   13,   13,   13,   13,
+
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+       13,   13,    1,   16,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1
+    } ;
+
+extern int zconf_flex_debug;
+int zconf_flex_debug = 0;
+
+/* The intent behind this definition is that it'll catch
+ * any uses of REJECT which flex missed.
+ */
+#define REJECT reject_used_but_not_detected
+#define yymore() yymore_used_but_not_detected
+#define YY_MORE_ADJ 0
+#define YY_RESTORE_YY_MORE_OFFSET
+char *zconftext;
+
+/*
+ * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
+ * Released under the terms of the GNU GPL v2.0.
+ */
+
+#include <limits.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+
+#define LKC_DIRECT_LINK
+#include "lkc.h"
+
+#define START_STRSIZE	16
+
+static struct {
+	struct file *file;
+	int lineno;
+} current_pos;
+
+static char *text;
+static int text_size, text_asize;
+
+struct buffer {
+        struct buffer *parent;
+        YY_BUFFER_STATE state;
+};
+
+struct buffer *current_buf;
+
+static int last_ts, first_ts;
+
+static void zconf_endhelp(void);
+static void zconf_endfile(void);
+
+void new_string(void)
+{
+	text = malloc(START_STRSIZE);
+	text_asize = START_STRSIZE;
+	text_size = 0;
+	*text = 0;
+}
+
+void append_string(const char *str, int size)
+{
+	int new_size = text_size + size + 1;
+	if (new_size > text_asize) {
+		new_size += START_STRSIZE - 1;
+		new_size &= -START_STRSIZE;
+		text = realloc(text, new_size);
+		text_asize = new_size;
+	}
+	memcpy(text + text_size, str, size);
+	text_size += size;
+	text[text_size] = 0;
+}
+
+void alloc_string(const char *str, int size)
+{
+	text = malloc(size + 1);
+	memcpy(text, str, size);
+	text[size] = 0;
+}
+
+#define INITIAL 0
+#define COMMAND 1
+#define HELP 2
+#define STRING 3
+#define PARAM 4
+
+#ifndef YY_NO_UNISTD_H
+/* Special case for "unistd.h", since it is non-ANSI. We include it way
+ * down here because we want the user's section 1 to have been scanned first.
+ * The user has a chance to override it with an option.
+ */
+#include <unistd.h>
+#endif
+
+#ifndef YY_EXTRA_TYPE
+#define YY_EXTRA_TYPE void *
+#endif
+
+static int yy_init_globals (void );
+
+/* Macros after this point can all be overridden by user definitions in
+ * section 1.
+ */
+
+#ifndef YY_SKIP_YYWRAP
+#ifdef __cplusplus
+extern "C" int zconfwrap (void );
+#else
+extern int zconfwrap (void );
+#endif
+#endif
+
+    static void yyunput (int c,char *buf_ptr  );
+    
+#ifndef yytext_ptr
+static void yy_flex_strncpy (char *,yyconst char *,int );
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int yy_flex_strlen (yyconst char * );
+#endif
+
+#ifndef YY_NO_INPUT
+
+#ifdef __cplusplus
+static int yyinput (void );
+#else
+static int input (void );
+#endif
+
+#endif
+
+/* Amount of stuff to slurp up with each read. */
+#ifndef YY_READ_BUF_SIZE
+#define YY_READ_BUF_SIZE 8192
+#endif
+
+/* Copy whatever the last rule matched to the standard output. */
+#ifndef ECHO
+/* This used to be an fputs(), but since the string might contain NUL's,
+ * we now use fwrite().
+ */
+#define ECHO (void) fwrite( zconftext, zconfleng, 1, zconfout )
+#endif
+
+/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
+ * is returned in "result".
+ */
+#ifndef YY_INPUT
+#define YY_INPUT(buf,result,max_size) \
+	errno=0; \
+	while ( (result = read( fileno(zconfin), (char *) buf, max_size )) < 0 ) \
+	{ \
+		if( errno != EINTR) \
+		{ \
+			YY_FATAL_ERROR( "input in flex scanner failed" ); \
+			break; \
+		} \
+		errno=0; \
+		clearerr(zconfin); \
+	}\
+\
+
+#endif
+
+/* No semi-colon after return; correct usage is to write "yyterminate();" -
+ * we don't want an extra ';' after the "return" because that will cause
+ * some compilers to complain about unreachable statements.
+ */
+#ifndef yyterminate
+#define yyterminate() return YY_NULL
+#endif
+
+/* Number of entries by which start-condition stack grows. */
+#ifndef YY_START_STACK_INCR
+#define YY_START_STACK_INCR 25
+#endif
+
+/* Report a fatal error. */
+#ifndef YY_FATAL_ERROR
+#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
+#endif
+
+/* end tables serialization structures and prototypes */
+
+/* Default declaration of generated scanner - a define so the user can
+ * easily add parameters.
+ */
+#ifndef YY_DECL
+#define YY_DECL_IS_OURS 1
+
+extern int zconflex (void);
+
+#define YY_DECL int zconflex (void)
+#endif /* !YY_DECL */
+
+/* Code executed at the beginning of each rule, after zconftext and zconfleng
+ * have been set up.
+ */
+#ifndef YY_USER_ACTION
+#define YY_USER_ACTION
+#endif
+
+/* Code executed at the end of each rule. */
+#ifndef YY_BREAK
+#define YY_BREAK break;
+#endif
+
+#define YY_RULE_SETUP \
+	YY_USER_ACTION
+
+/** The main scanner function which does all the work.
+ */
+YY_DECL
+{
+	register yy_state_type yy_current_state;
+	register char *yy_cp, *yy_bp;
+	register int yy_act;
+    
+	int str = 0;
+	int ts, i;
+
+	if ( !(yy_init) )
+		{
+		(yy_init) = 1;
+
+#ifdef YY_USER_INIT
+		YY_USER_INIT;
+#endif
+
+		if ( ! (yy_start) )
+			(yy_start) = 1;	/* first start state */
+
+		if ( ! zconfin )
+			zconfin = stdin;
+
+		if ( ! zconfout )
+			zconfout = stdout;
+
+		if ( ! YY_CURRENT_BUFFER ) {
+			zconfensure_buffer_stack ();
+			YY_CURRENT_BUFFER_LVALUE =
+				zconf_create_buffer(zconfin,YY_BUF_SIZE );
+		}
+
+		zconf_load_buffer_state( );
+		}
+
+	while ( 1 )		/* loops until end-of-file is reached */
+		{
+		yy_cp = (yy_c_buf_p);
+
+		/* Support of zconftext. */
+		*yy_cp = (yy_hold_char);
+
+		/* yy_bp points to the position in yy_ch_buf of the start of
+		 * the current run.
+		 */
+		yy_bp = yy_cp;
+
+		yy_current_state = (yy_start);
+yy_match:
+		while ( (yy_current_state = yy_nxt[yy_current_state][ yy_ec[YY_SC_TO_UI(*yy_cp)]  ]) > 0 )
+			++yy_cp;
+
+		yy_current_state = -yy_current_state;
+
+yy_find_action:
+		yy_act = yy_accept[yy_current_state];
+
+		YY_DO_BEFORE_ACTION;
+
+do_action:	/* This label is used only to access EOF actions. */
+
+		switch ( yy_act )
+	{ /* beginning of action switch */
+case 1:
+/* rule 1 can match eol */
+case 2:
+/* rule 2 can match eol */
+YY_RULE_SETUP
+{
+	current_file->lineno++;
+	return T_EOL;
+}
+	YY_BREAK
+case 3:
+YY_RULE_SETUP
+
+	YY_BREAK
+case 4:
+YY_RULE_SETUP
+{
+	BEGIN(COMMAND);
+}
+	YY_BREAK
+case 5:
+YY_RULE_SETUP
+{
+	unput(zconftext[0]);
+	BEGIN(COMMAND);
+}
+	YY_BREAK
+
+case 6:
+YY_RULE_SETUP
+{
+		struct kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
+		BEGIN(PARAM);
+		current_pos.file = current_file;
+		current_pos.lineno = current_file->lineno;
+		if (id && id->flags & TF_COMMAND) {
+			zconflval.id = id;
+			return id->token;
+		}
+		alloc_string(zconftext, zconfleng);
+		zconflval.string = text;
+		return T_WORD;
+	}
+	YY_BREAK
+case 7:
+YY_RULE_SETUP
+
+	YY_BREAK
+case 8:
+/* rule 8 can match eol */
+YY_RULE_SETUP
+{
+		BEGIN(INITIAL);
+		current_file->lineno++;
+		return T_EOL;
+	}
+	YY_BREAK
+
+case 9:
+YY_RULE_SETUP
+return T_AND;
+	YY_BREAK
+case 10:
+YY_RULE_SETUP
+return T_OR;
+	YY_BREAK
+case 11:
+YY_RULE_SETUP
+return T_OPEN_PAREN;
+	YY_BREAK
+case 12:
+YY_RULE_SETUP
+return T_CLOSE_PAREN;
+	YY_BREAK
+case 13:
+YY_RULE_SETUP
+return T_NOT;
+	YY_BREAK
+case 14:
+YY_RULE_SETUP
+return T_EQUAL;
+	YY_BREAK
+case 15:
+YY_RULE_SETUP
+return T_UNEQUAL;
+	YY_BREAK
+case 16:
+YY_RULE_SETUP
+{
+		str = zconftext[0];
+		new_string();
+		BEGIN(STRING);
+	}
+	YY_BREAK
+case 17:
+/* rule 17 can match eol */
+YY_RULE_SETUP
+BEGIN(INITIAL); current_file->lineno++; return T_EOL;
+	YY_BREAK
+case 18:
+YY_RULE_SETUP
+/* ignore */
+	YY_BREAK
+case 19:
+YY_RULE_SETUP
+{
+		struct kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
+		if (id && id->flags & TF_PARAM) {
+			zconflval.id = id;
+			return id->token;
+		}
+		alloc_string(zconftext, zconfleng);
+		zconflval.string = text;
+		return T_WORD;
+	}
+	YY_BREAK
+case 20:
+YY_RULE_SETUP
+/* comment */
+	YY_BREAK
+case 21:
+/* rule 21 can match eol */
+YY_RULE_SETUP
+current_file->lineno++;
+	YY_BREAK
+case 22:
+YY_RULE_SETUP
+
+	YY_BREAK
+case YY_STATE_EOF(PARAM):
+{
+		BEGIN(INITIAL);
+	}
+	YY_BREAK
+
+case 23:
+/* rule 23 can match eol */
+*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
+(yy_c_buf_p) = yy_cp -= 1;
+YY_DO_BEFORE_ACTION; /* set up zconftext again */
+YY_RULE_SETUP
+{
+		append_string(zconftext, zconfleng);
+		zconflval.string = text;
+		return T_WORD_QUOTE;
+	}
+	YY_BREAK
+case 24:
+YY_RULE_SETUP
+{
+		append_string(zconftext, zconfleng);
+	}
+	YY_BREAK
+case 25:
+/* rule 25 can match eol */
+*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
+(yy_c_buf_p) = yy_cp -= 1;
+YY_DO_BEFORE_ACTION; /* set up zconftext again */
+YY_RULE_SETUP
+{
+		append_string(zconftext + 1, zconfleng - 1);
+		zconflval.string = text;
+		return T_WORD_QUOTE;
+	}
+	YY_BREAK
+case 26:
+YY_RULE_SETUP
+{
+		append_string(zconftext + 1, zconfleng - 1);
+	}
+	YY_BREAK
+case 27:
+YY_RULE_SETUP
+{
+		if (str == zconftext[0]) {
+			BEGIN(PARAM);
+			zconflval.string = text;
+			return T_WORD_QUOTE;
+		} else
+			append_string(zconftext, 1);
+	}
+	YY_BREAK
+case 28:
+/* rule 28 can match eol */
+YY_RULE_SETUP
+{
+		printf("%s:%d:warning: multi-line strings not supported\n", zconf_curname(), zconf_lineno());
+		current_file->lineno++;
+		BEGIN(INITIAL);
+		return T_EOL;
+	}
+	YY_BREAK
+case YY_STATE_EOF(STRING):
+{
+		BEGIN(INITIAL);
+	}
+	YY_BREAK
+
+case 29:
+YY_RULE_SETUP
+{
+		ts = 0;
+		for (i = 0; i < zconfleng; i++) {
+			if (zconftext[i] == '\t')
+				ts = (ts & ~7) + 8;
+			else
+				ts++;
+		}
+		last_ts = ts;
+		if (first_ts) {
+			if (ts < first_ts) {
+				zconf_endhelp();
+				return T_HELPTEXT;
+			}
+			ts -= first_ts;
+			while (ts > 8) {
+				append_string("        ", 8);
+				ts -= 8;
+			}
+			append_string("        ", ts);
+		}
+	}
+	YY_BREAK
+case 30:
+/* rule 30 can match eol */
+*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
+(yy_c_buf_p) = yy_cp -= 1;
+YY_DO_BEFORE_ACTION; /* set up zconftext again */
+YY_RULE_SETUP
+{
+		current_file->lineno++;
+		zconf_endhelp();
+		return T_HELPTEXT;
+	}
+	YY_BREAK
+case 31:
+/* rule 31 can match eol */
+YY_RULE_SETUP
+{
+		current_file->lineno++;
+		append_string("\n", 1);
+	}
+	YY_BREAK
+case 32:
+YY_RULE_SETUP
+{
+		append_string(zconftext, zconfleng);
+		if (!first_ts)
+			first_ts = last_ts;
+	}
+	YY_BREAK
+case YY_STATE_EOF(HELP):
+{
+		zconf_endhelp();
+		return T_HELPTEXT;
+	}
+	YY_BREAK
+
+case YY_STATE_EOF(INITIAL):
+case YY_STATE_EOF(COMMAND):
+{
+	if (current_file) {
+		zconf_endfile();
+		return T_EOL;
+	}
+	fclose(zconfin);
+	yyterminate();
+}
+	YY_BREAK
+case 33:
+YY_RULE_SETUP
+YY_FATAL_ERROR( "flex scanner jammed" );
+	YY_BREAK
+
+	case YY_END_OF_BUFFER:
+		{
+		/* Amount of text matched not including the EOB char. */
+		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
+
+		/* Undo the effects of YY_DO_BEFORE_ACTION. */
+		*yy_cp = (yy_hold_char);
+		YY_RESTORE_YY_MORE_OFFSET
+
+		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
+			{
+			/* We're scanning a new file or input source.  It's
+			 * possible that this happened because the user
+			 * just pointed zconfin at a new source and called
+			 * zconflex().  If so, then we have to assure
+			 * consistency between YY_CURRENT_BUFFER and our
+			 * globals.  Here is the right place to do so, because
+			 * this is the first action (other than possibly a
+			 * back-up) that will match for the new input source.
+			 */
+			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+			YY_CURRENT_BUFFER_LVALUE->yy_input_file = zconfin;
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
+			}
+
+		/* Note that here we test for yy_c_buf_p "<=" to the position
+		 * of the first EOB in the buffer, since yy_c_buf_p will
+		 * already have been incremented past the NUL character
+		 * (since all states make transitions on EOB to the
+		 * end-of-buffer state).  Contrast this with the test
+		 * in input().
+		 */
+		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
+			{ /* This was really a NUL. */
+			yy_state_type yy_next_state;
+
+			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
+
+			yy_current_state = yy_get_previous_state(  );
+
+			/* Okay, we're now positioned to make the NUL
+			 * transition.  We couldn't have
+			 * yy_get_previous_state() go ahead and do it
+			 * for us because it doesn't know how to deal
+			 * with the possibility of jamming (and we don't
+			 * want to build jamming into it because then it
+			 * will run more slowly).
+			 */
+
+			yy_next_state = yy_try_NUL_trans( yy_current_state );
+
+			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+
+			if ( yy_next_state )
+				{
+				/* Consume the NUL. */
+				yy_cp = ++(yy_c_buf_p);
+				yy_current_state = yy_next_state;
+				goto yy_match;
+				}
+
+			else
+				{
+				yy_cp = (yy_c_buf_p);
+				goto yy_find_action;
+				}
+			}
+
+		else switch ( yy_get_next_buffer(  ) )
+			{
+			case EOB_ACT_END_OF_FILE:
+				{
+				(yy_did_buffer_switch_on_eof) = 0;
+
+				if ( zconfwrap( ) )
+					{
+					/* Note: because we've taken care in
+					 * yy_get_next_buffer() to have set up
+					 * zconftext, we can now set up
+					 * yy_c_buf_p so that if some total
+					 * hoser (like flex itself) wants to
+					 * call the scanner after we return the
+					 * YY_NULL, it'll still work - another
+					 * YY_NULL will get returned.
+					 */
+					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
+
+					yy_act = YY_STATE_EOF(YY_START);
+					goto do_action;
+					}
+
+				else
+					{
+					if ( ! (yy_did_buffer_switch_on_eof) )
+						YY_NEW_FILE;
+					}
+				break;
+				}
+
+			case EOB_ACT_CONTINUE_SCAN:
+				(yy_c_buf_p) =
+					(yytext_ptr) + yy_amount_of_matched_text;
+
+				yy_current_state = yy_get_previous_state(  );
+
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+				goto yy_match;
+
+			case EOB_ACT_LAST_MATCH:
+				(yy_c_buf_p) =
+				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
+
+				yy_current_state = yy_get_previous_state(  );
+
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+				goto yy_find_action;
+			}
+		break;
+		}
+
+	default:
+		YY_FATAL_ERROR(
+			"fatal flex scanner internal error--no action found" );
+	} /* end of action switch */
+		} /* end of scanning one token */
+} /* end of zconflex */
+
+/* yy_get_next_buffer - try to read in a new buffer
+ *
+ * Returns a code representing an action:
+ *	EOB_ACT_LAST_MATCH -
+ *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
+ *	EOB_ACT_END_OF_FILE - end of file
+ */
+static int yy_get_next_buffer (void)
+{
+    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
+	register char *source = (yytext_ptr);
+	register int number_to_move, i;
+	int ret_val;
+
+	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
+		YY_FATAL_ERROR(
+		"fatal flex scanner internal error--end of buffer missed" );
+
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
+		{ /* Don't try to fill the buffer, so this is an EOF. */
+		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
+			{
+			/* We matched a single character, the EOB, so
+			 * treat this as a final EOF.
+			 */
+			return EOB_ACT_END_OF_FILE;
+			}
+
+		else
+			{
+			/* We matched some text prior to the EOB, first
+			 * process it.
+			 */
+			return EOB_ACT_LAST_MATCH;
+			}
+		}
+
+	/* Try to read more data. */
+
+	/* First move last chars to start of buffer. */
+	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
+
+	for ( i = 0; i < number_to_move; ++i )
+		*(dest++) = *(source++);
+
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
+		/* don't do the read, it's not guaranteed to return an EOF,
+		 * just force an EOF
+		 */
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
+
+	else
+		{
+			int num_to_read =
+			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
+
+		while ( num_to_read <= 0 )
+			{ /* Not enough room in the buffer - grow it. */
+
+			/* just a shorter name for the current buffer */
+			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;
+
+			int yy_c_buf_p_offset =
+				(int) ((yy_c_buf_p) - b->yy_ch_buf);
+
+			if ( b->yy_is_our_buffer )
+				{
+				int new_size = b->yy_buf_size * 2;
+
+				if ( new_size <= 0 )
+					b->yy_buf_size += b->yy_buf_size / 8;
+				else
+					b->yy_buf_size *= 2;
+
+				b->yy_ch_buf = (char *)
+					/* Include room in for 2 EOB chars. */
+					zconfrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
+				}
+			else
+				/* Can't grow it, we don't own it. */
+				b->yy_ch_buf = 0;
+
+			if ( ! b->yy_ch_buf )
+				YY_FATAL_ERROR(
+				"fatal error - scanner input buffer overflow" );
+
+			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];
+
+			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
+						number_to_move - 1;
+
+			}
+
+		if ( num_to_read > YY_READ_BUF_SIZE )
+			num_to_read = YY_READ_BUF_SIZE;
+
+		/* Read in more data. */
+		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
+			(yy_n_chars), num_to_read );
+
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	if ( (yy_n_chars) == 0 )
+		{
+		if ( number_to_move == YY_MORE_ADJ )
+			{
+			ret_val = EOB_ACT_END_OF_FILE;
+			zconfrestart(zconfin  );
+			}
+
+		else
+			{
+			ret_val = EOB_ACT_LAST_MATCH;
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
+				YY_BUFFER_EOF_PENDING;
+			}
+		}
+
+	else
+		ret_val = EOB_ACT_CONTINUE_SCAN;
+
+	(yy_n_chars) += number_to_move;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
+
+	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
+
+	return ret_val;
+}
+
+/* yy_get_previous_state - get the state just before the EOB char was reached */
+
+    static yy_state_type yy_get_previous_state (void)
+{
+	register yy_state_type yy_current_state;
+	register char *yy_cp;
+    
+	yy_current_state = (yy_start);
+
+	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
+		{
+		yy_current_state = yy_nxt[yy_current_state][(*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1)];
+		}
+
+	return yy_current_state;
+}
+
+/* yy_try_NUL_trans - try to make a transition on the NUL character
+ *
+ * synopsis
+ *	next_state = yy_try_NUL_trans( current_state );
+ */
+    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
+{
+	register int yy_is_jam;
+    
+	yy_current_state = yy_nxt[yy_current_state][1];
+	yy_is_jam = (yy_current_state <= 0);
+
+	return yy_is_jam ? 0 : yy_current_state;
+}
+
+    static void yyunput (int c, register char * yy_bp )
+{
+	register char *yy_cp;
+    
+    yy_cp = (yy_c_buf_p);
+
+	/* undo effects of setting up zconftext */
+	*yy_cp = (yy_hold_char);
+
+	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
+		{ /* need to shift things up to make room */
+		/* +2 for EOB chars. */
+		register int number_to_move = (yy_n_chars) + 2;
+		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
+					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
+		register char *source =
+				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
+
+		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
+			*--dest = *--source;
+
+		yy_cp += (int) (dest - source);
+		yy_bp += (int) (dest - source);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
+			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
+
+		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
+			YY_FATAL_ERROR( "flex scanner push-back overflow" );
+		}
+
+	*--yy_cp = (char) c;
+
+	(yytext_ptr) = yy_bp;
+	(yy_hold_char) = *yy_cp;
+	(yy_c_buf_p) = yy_cp;
+}
+
+#ifndef YY_NO_INPUT
+#ifdef __cplusplus
+    static int yyinput (void)
+#else
+    static int input  (void)
+#endif
+
+{
+	int c;
+    
+	*(yy_c_buf_p) = (yy_hold_char);
+
+	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
+		{
+		/* yy_c_buf_p now points to the character we want to return.
+		 * If this occurs *before* the EOB characters, then it's a
+		 * valid NUL; if not, then we've hit the end of the buffer.
+		 */
+		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
+			/* This was really a NUL. */
+			*(yy_c_buf_p) = '\0';
+
+		else
+			{ /* need more input */
+			int offset = (yy_c_buf_p) - (yytext_ptr);
+			++(yy_c_buf_p);
+
+			switch ( yy_get_next_buffer(  ) )
+				{
+				case EOB_ACT_LAST_MATCH:
+					/* This happens because yy_g_n_b()
+					 * sees that we've accumulated a
+					 * token and flags that we need to
+					 * try matching the token before
+					 * proceeding.  But for input(),
+					 * there's no matching to consider.
+					 * So convert the EOB_ACT_LAST_MATCH
+					 * to EOB_ACT_END_OF_FILE.
+					 */
+
+					/* Reset buffer status. */
+					zconfrestart(zconfin );
+
+					/*FALLTHROUGH*/
+
+				case EOB_ACT_END_OF_FILE:
+					{
+					if ( zconfwrap( ) )
+						return EOF;
+
+					if ( ! (yy_did_buffer_switch_on_eof) )
+						YY_NEW_FILE;
+#ifdef __cplusplus
+					return yyinput();
+#else
+					return input();
+#endif
+					}
+
+				case EOB_ACT_CONTINUE_SCAN:
+					(yy_c_buf_p) = (yytext_ptr) + offset;
+					break;
+				}
+			}
+		}
+
+	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
+	*(yy_c_buf_p) = '\0';	/* preserve zconftext */
+	(yy_hold_char) = *++(yy_c_buf_p);
+
+	return c;
+}
+#endif	/* ifndef YY_NO_INPUT */
+
+/** Immediately switch to a different input stream.
+ * @param input_file A readable stream.
+ * 
+ * @note This function does not reset the start condition to @c INITIAL .
+ */
+    void zconfrestart  (FILE * input_file )
+{
+    
+	if ( ! YY_CURRENT_BUFFER ){
+        zconfensure_buffer_stack ();
+		YY_CURRENT_BUFFER_LVALUE =
+            zconf_create_buffer(zconfin,YY_BUF_SIZE );
+	}
+
+	zconf_init_buffer(YY_CURRENT_BUFFER,input_file );
+	zconf_load_buffer_state( );
+}
+
+/** Switch to a different input buffer.
+ * @param new_buffer The new input buffer.
+ * 
+ */
+    void zconf_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
+{
+    
+	/* TODO. We should be able to replace this entire function body
+	 * with
+	 *		zconfpop_buffer_state();
+	 *		zconfpush_buffer_state(new_buffer);
+     */
+	zconfensure_buffer_stack ();
+	if ( YY_CURRENT_BUFFER == new_buffer )
+		return;
+
+	if ( YY_CURRENT_BUFFER )
+		{
+		/* Flush out information for old buffer. */
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+	zconf_load_buffer_state( );
+
+	/* We don't actually know whether we did this switch during
+	 * EOF (zconfwrap()) processing, but the only time this flag
+	 * is looked at is after zconfwrap() is called, so it's safe
+	 * to go ahead and always set it.
+	 */
+	(yy_did_buffer_switch_on_eof) = 1;
+}
+
+static void zconf_load_buffer_state  (void)
+{
+    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
+	zconfin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
+	(yy_hold_char) = *(yy_c_buf_p);
+}
+
+/** Allocate and initialize an input buffer state.
+ * @param file A readable stream.
+ * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
+ * 
+ * @return the allocated buffer state.
+ */
+    YY_BUFFER_STATE zconf_create_buffer  (FILE * file, int  size )
+{
+	YY_BUFFER_STATE b;
+    
+	b = (YY_BUFFER_STATE) zconfalloc(sizeof( struct yy_buffer_state )  );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_create_buffer()" );
+
+	b->yy_buf_size = size;
+
+	/* yy_ch_buf has to be 2 characters longer than the size given because
+	 * we need to put in 2 end-of-buffer characters.
+	 */
+	b->yy_ch_buf = (char *) zconfalloc(b->yy_buf_size + 2  );
+	if ( ! b->yy_ch_buf )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_create_buffer()" );
+
+	b->yy_is_our_buffer = 1;
+
+	zconf_init_buffer(b,file );
+
+	return b;
+}
+
+/** Destroy the buffer.
+ * @param b a buffer created with zconf_create_buffer()
+ * 
+ */
+    void zconf_delete_buffer (YY_BUFFER_STATE  b )
+{
+    
+	if ( ! b )
+		return;
+
+	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
+		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
+
+	if ( b->yy_is_our_buffer )
+		zconffree((void *) b->yy_ch_buf  );
+
+	zconffree((void *) b  );
+}
+
+/* Initializes or reinitializes a buffer.
+ * This function is sometimes called more than once on the same buffer,
+ * such as during a zconfrestart() or at EOF.
+ */
+    static void zconf_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
+
+{
+	int oerrno = errno;
+    
+	zconf_flush_buffer(b );
+
+	b->yy_input_file = file;
+	b->yy_fill_buffer = 1;
+
+    /* If b is the current buffer, then zconf_init_buffer was _probably_
+     * called from zconfrestart() or through yy_get_next_buffer.
+     * In that case, we don't want to reset the lineno or column.
+     */
+    if (b != YY_CURRENT_BUFFER){
+        b->yy_bs_lineno = 1;
+        b->yy_bs_column = 0;
+    }
+
+        b->yy_is_interactive = 0;
+    
+	errno = oerrno;
+}
+
+/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
+ * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
+ * 
+ */
+    void zconf_flush_buffer (YY_BUFFER_STATE  b )
+{
+    	if ( ! b )
+		return;
+
+	b->yy_n_chars = 0;
+
+	/* We always need two end-of-buffer characters.  The first causes
+	 * a transition to the end-of-buffer state.  The second causes
+	 * a jam in that state.
+	 */
+	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
+	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
+
+	b->yy_buf_pos = &b->yy_ch_buf[0];
+
+	b->yy_at_bol = 1;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	if ( b == YY_CURRENT_BUFFER )
+		zconf_load_buffer_state( );
+}
+
+/** Pushes the new state onto the stack. The new state becomes
+ *  the current state. This function will allocate the stack
+ *  if necessary.
+ *  @param new_buffer The new state.
+ *  
+ */
+void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer )
+{
+    	if (new_buffer == NULL)
+		return;
+
+	zconfensure_buffer_stack();
+
+	/* This block is copied from zconf_switch_to_buffer. */
+	if ( YY_CURRENT_BUFFER )
+		{
+		/* Flush out information for old buffer. */
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	/* Only push if top exists. Otherwise, replace top. */
+	if (YY_CURRENT_BUFFER)
+		(yy_buffer_stack_top)++;
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+
+	/* copied from zconf_switch_to_buffer. */
+	zconf_load_buffer_state( );
+	(yy_did_buffer_switch_on_eof) = 1;
+}
+
+/** Removes and deletes the top of the stack, if present.
+ *  The next element becomes the new top.
+ *  
+ */
+void zconfpop_buffer_state (void)
+{
+    	if (!YY_CURRENT_BUFFER)
+		return;
+
+	zconf_delete_buffer(YY_CURRENT_BUFFER );
+	YY_CURRENT_BUFFER_LVALUE = NULL;
+	if ((yy_buffer_stack_top) > 0)
+		--(yy_buffer_stack_top);
+
+	if (YY_CURRENT_BUFFER) {
+		zconf_load_buffer_state( );
+		(yy_did_buffer_switch_on_eof) = 1;
+	}
+}
+
+/* Allocates the stack if it does not exist.
+ *  Guarantees space for at least one push.
+ */
+static void zconfensure_buffer_stack (void)
+{
+	int num_to_alloc;
+    
+	if (!(yy_buffer_stack)) {
+
+		/* First allocation is just for 2 elements, since we don't know if this
+		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
+		 * immediate realloc on the next call.
+         */
+		num_to_alloc = 1;
+		(yy_buffer_stack) = (struct yy_buffer_state**)zconfalloc
+								(num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+		
+		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
+				
+		(yy_buffer_stack_max) = num_to_alloc;
+		(yy_buffer_stack_top) = 0;
+		return;
+	}
+
+	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
+
+		/* Increase the buffer to prepare for a possible push. */
+		int grow_size = 8 /* arbitrary grow size */;
+
+		num_to_alloc = (yy_buffer_stack_max) + grow_size;
+		(yy_buffer_stack) = (struct yy_buffer_state**)zconfrealloc
+								((yy_buffer_stack),
+								num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+
+		/* zero only the new slots.*/
+		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
+		(yy_buffer_stack_max) = num_to_alloc;
+	}
+}
+
+/** Setup the input buffer state to scan directly from a user-specified character buffer.
+ * @param base the character buffer
+ * @param size the size in bytes of the character buffer
+ * 
+ * @return the newly allocated buffer state object. 
+ */
+YY_BUFFER_STATE zconf_scan_buffer  (char * base, yy_size_t  size )
+{
+	YY_BUFFER_STATE b;
+    
+	if ( size < 2 ||
+	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
+	     base[size-1] != YY_END_OF_BUFFER_CHAR )
+		/* They forgot to leave room for the EOB's. */
+		return 0;
+
+	b = (YY_BUFFER_STATE) zconfalloc(sizeof( struct yy_buffer_state )  );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_scan_buffer()" );
+
+	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
+	b->yy_buf_pos = b->yy_ch_buf = base;
+	b->yy_is_our_buffer = 0;
+	b->yy_input_file = 0;
+	b->yy_n_chars = b->yy_buf_size;
+	b->yy_is_interactive = 0;
+	b->yy_at_bol = 1;
+	b->yy_fill_buffer = 0;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	zconf_switch_to_buffer(b  );
+
+	return b;
+}
+
+/** Setup the input buffer state to scan a string. The next call to zconflex() will
+ * scan from a @e copy of @a str.
+ * @param yystr a NUL-terminated string to scan
+ * 
+ * @return the newly allocated buffer state object.
+ * @note If you want to scan bytes that may contain NUL values, then use
+ *       zconf_scan_bytes() instead.
+ */
+YY_BUFFER_STATE zconf_scan_string (yyconst char * yystr )
+{
+    
+	return zconf_scan_bytes(yystr,strlen(yystr) );
+}
+
+/** Setup the input buffer state to scan the given bytes. The next call to zconflex() will
+ * scan from a @e copy of @a bytes.
+ * @param bytes the byte buffer to scan
+ * @param len the number of bytes in the buffer pointed to by @a bytes.
+ * 
+ * @return the newly allocated buffer state object.
+ */
+YY_BUFFER_STATE zconf_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
+{
+	YY_BUFFER_STATE b;
+	char *buf;
+	yy_size_t n;
+	int i;
+    
+	/* Get memory for full buffer, including space for trailing EOB's. */
+	n = _yybytes_len + 2;
+	buf = (char *) zconfalloc(n  );
+	if ( ! buf )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_scan_bytes()" );
+
+	for ( i = 0; i < _yybytes_len; ++i )
+		buf[i] = yybytes[i];
+
+	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
+
+	b = zconf_scan_buffer(buf,n );
+	if ( ! b )
+		YY_FATAL_ERROR( "bad buffer in zconf_scan_bytes()" );
+
+	/* It's okay to grow etc. this buffer, and we should throw it
+	 * away when we're done.
+	 */
+	b->yy_is_our_buffer = 1;
+
+	return b;
+}
+
+#ifndef YY_EXIT_FAILURE
+#define YY_EXIT_FAILURE 2
+#endif
+
+static void yy_fatal_error (yyconst char* msg )
+{
+    	(void) fprintf( stderr, "%s\n", msg );
+	exit( YY_EXIT_FAILURE );
+}
+
+/* Redefine yyless() so it works in section 3 code. */
+
+#undef yyless
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up zconftext. */ \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		zconftext[zconfleng] = (yy_hold_char); \
+		(yy_c_buf_p) = zconftext + yyless_macro_arg; \
+		(yy_hold_char) = *(yy_c_buf_p); \
+		*(yy_c_buf_p) = '\0'; \
+		zconfleng = yyless_macro_arg; \
+		} \
+	while ( 0 )
+
+/* Accessor  methods (get/set functions) to struct members. */
+
+/** Get the current line number.
+ * 
+ */
+int zconfget_lineno  (void)
+{
+        
+    return zconflineno;
+}
+
+/** Get the input stream.
+ * 
+ */
+FILE *zconfget_in  (void)
+{
+        return zconfin;
+}
+
+/** Get the output stream.
+ * 
+ */
+FILE *zconfget_out  (void)
+{
+        return zconfout;
+}
+
+/** Get the length of the current token.
+ * 
+ */
+int zconfget_leng  (void)
+{
+        return zconfleng;
+}
+
+/** Get the current token.
+ * 
+ */
+
+char *zconfget_text  (void)
+{
+        return zconftext;
+}
+
+/** Set the current line number.
+ * @param line_number
+ * 
+ */
+void zconfset_lineno (int  line_number )
+{
+    
+    zconflineno = line_number;
+}
+
+/** Set the input stream. This does not discard the current
+ * input buffer.
+ * @param in_str A readable stream.
+ * 
+ * @see zconf_switch_to_buffer
+ */
+void zconfset_in (FILE *  in_str )
+{
+        zconfin = in_str ;
+}
+
+void zconfset_out (FILE *  out_str )
+{
+        zconfout = out_str ;
+}
+
+int zconfget_debug  (void)
+{
+        return zconf_flex_debug;
+}
+
+void zconfset_debug (int  bdebug )
+{
+        zconf_flex_debug = bdebug ;
+}
+
+static int yy_init_globals (void)
+{
+        /* Initialization is the same as for the non-reentrant scanner.
+     * This function is called from zconflex_destroy(), so don't allocate here.
+     */
+
+    (yy_buffer_stack) = 0;
+    (yy_buffer_stack_top) = 0;
+    (yy_buffer_stack_max) = 0;
+    (yy_c_buf_p) = (char *) 0;
+    (yy_init) = 0;
+    (yy_start) = 0;
+
+/* Defined in main.c */
+#ifdef YY_STDINIT
+    zconfin = stdin;
+    zconfout = stdout;
+#else
+    zconfin = (FILE *) 0;
+    zconfout = (FILE *) 0;
+#endif
+
+    /* For future reference: Set errno on error, since we are called by
+     * zconflex_init()
+     */
+    return 0;
+}
+
+/* zconflex_destroy is for both reentrant and non-reentrant scanners. */
+int zconflex_destroy  (void)
+{
+    
+    /* Pop the buffer stack, destroying each element. */
+	while(YY_CURRENT_BUFFER){
+		zconf_delete_buffer(YY_CURRENT_BUFFER  );
+		YY_CURRENT_BUFFER_LVALUE = NULL;
+		zconfpop_buffer_state();
+	}
+
+	/* Destroy the stack itself. */
+	zconffree((yy_buffer_stack) );
+	(yy_buffer_stack) = NULL;
+
+    /* Reset the globals. This is important in a non-reentrant scanner so the next time
+     * zconflex() is called, initialization will occur. */
+    yy_init_globals( );
+
+    return 0;
+}
+
+/*
+ * Internal utility routines.
+ */
+
+#ifndef yytext_ptr
+static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
+{
+	register int i;
+	for ( i = 0; i < n; ++i )
+		s1[i] = s2[i];
+}
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int yy_flex_strlen (yyconst char * s )
+{
+	register int n;
+	for ( n = 0; s[n]; ++n )
+		;
+
+	return n;
+}
+#endif
+
+void *zconfalloc (yy_size_t  size )
+{
+	return (void *) malloc( size );
+}
+
+void *zconfrealloc  (void * ptr, yy_size_t  size )
+{
+	/* The cast to (char *) in the following accommodates both
+	 * implementations that use char* generic pointers, and those
+	 * that use void* generic pointers.  It works with the latter
+	 * because both ANSI C and C++ allow castless assignment from
+	 * any pointer type to void*, and deal with argument conversions
+	 * as though doing an assignment.
+	 */
+	return (void *) realloc( (char *) ptr, size );
+}
+
+void zconffree (void * ptr )
+{
+	free( (char *) ptr );	/* see zconfrealloc() for (char *) cast */
+}
+
+#define YYTABLES_NAME "yytables"
+
+void zconf_starthelp(void)
+{
+	new_string();
+	last_ts = first_ts = 0;
+	BEGIN(HELP);
+}
+
+static void zconf_endhelp(void)
+{
+	zconflval.string = text;
+	BEGIN(INITIAL);
+}
+
+/*
+ * Try to open specified file with following names:
+ * ./name
+ * $(srctree)/name
+ * The latter is used when srctree is separate from objtree
+ * when compiling the kernel.
+ * Return NULL if file is not found.
+ */
+FILE *zconf_fopen(const char *name)
+{
+	char *env, fullname[PATH_MAX+1];
+	FILE *f;
+
+	f = fopen(name, "r");
+	if (!f && name != NULL && name[0] != '/') {
+		env = getenv(SRCTREE);
+		if (env) {
+			sprintf(fullname, "%s/%s", env, name);
+			f = fopen(fullname, "r");
+		}
+	}
+	return f;
+}
+
+void zconf_initscan(const char *name)
+{
+	zconfin = zconf_fopen(name);
+	if (!zconfin) {
+		printf("can't find file %s\n", name);
+		exit(1);
+	}
+
+	current_buf = malloc(sizeof(*current_buf));
+	memset(current_buf, 0, sizeof(*current_buf));
+
+	current_file = file_lookup(name);
+	current_file->lineno = 1;
+	current_file->flags = FILE_BUSY;
+}
+
+void zconf_nextfile(const char *name)
+{
+	struct file *file = file_lookup(name);
+	struct buffer *buf = malloc(sizeof(*buf));
+	memset(buf, 0, sizeof(*buf));
+
+	current_buf->state = YY_CURRENT_BUFFER;
+	zconfin = zconf_fopen(name);
+	if (!zconfin) {
+		printf("%s:%d: can't open file \"%s\"\n", zconf_curname(), zconf_lineno(), name);
+		exit(1);
+	}
+	zconf_switch_to_buffer(zconf_create_buffer(zconfin,YY_BUF_SIZE));
+	buf->parent = current_buf;
+	current_buf = buf;
+
+	if (file->flags & FILE_BUSY) {
+		printf("recursive scan (%s)?\n", name);
+		exit(1);
+	}
+	if (file->flags & FILE_SCANNED) {
+		printf("file %s already scanned?\n", name);
+		exit(1);
+	}
+	file->flags |= FILE_BUSY;
+	file->lineno = 1;
+	file->parent = current_file;
+	current_file = file;
+}
+
+static void zconf_endfile(void)
+{
+	struct buffer *parent;
+
+	current_file->flags |= FILE_SCANNED;
+	current_file->flags &= ~FILE_BUSY;
+	current_file = current_file->parent;
+
+	parent = current_buf->parent;
+	if (parent) {
+		fclose(zconfin);
+		zconf_delete_buffer(YY_CURRENT_BUFFER);
+		zconf_switch_to_buffer(parent->state);
+	}
+	free(current_buf);
+	current_buf = parent;
+}
+
+int zconf_lineno(void)
+{
+	return current_pos.lineno;
+}
+
+char *zconf_curname(void)
+{
+	return current_pos.file ? current_pos.file->name : "<none>";
+}
+
diff -urpN linux-2.6.23-sabayon/scripts/kconfig/lkc_defs.h testtry/scripts/kconfig/lkc_defs.h
--- linux-2.6.23-sabayon/scripts/kconfig/lkc_defs.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/kconfig/lkc_defs.h	2007-10-15 16:44:26.000000000 +0000
@@ -0,0 +1,45 @@
+
+/* confdata.c */
+#define conf_parse (*conf_parse_p)
+#define conf_read (*conf_read_p)
+#define conf_read_simple (*conf_read_simple_p)
+#define conf_write (*conf_write_p)
+#define conf_write_autoconf (*conf_write_autoconf_p)
+#define conf_get_changed (*conf_get_changed_p)
+#define conf_set_changed_callback (*conf_set_changed_callback_p)
+
+/* menu.c */
+#define rootmenu (*rootmenu_p)
+
+#define menu_is_visible (*menu_is_visible_p)
+#define menu_get_prompt (*menu_get_prompt_p)
+#define menu_get_root_menu (*menu_get_root_menu_p)
+#define menu_get_parent_menu (*menu_get_parent_menu_p)
+#define menu_has_help (*menu_has_help_p)
+#define menu_get_help (*menu_get_help_p)
+
+/* symbol.c */
+#define symbol_hash (*symbol_hash_p)
+
+#define sym_lookup (*sym_lookup_p)
+#define sym_find (*sym_find_p)
+#define sym_re_search (*sym_re_search_p)
+#define sym_type_name (*sym_type_name_p)
+#define sym_calc_value (*sym_calc_value_p)
+#define sym_get_type (*sym_get_type_p)
+#define sym_tristate_within_range (*sym_tristate_within_range_p)
+#define sym_set_tristate_value (*sym_set_tristate_value_p)
+#define sym_toggle_tristate_value (*sym_toggle_tristate_value_p)
+#define sym_string_valid (*sym_string_valid_p)
+#define sym_string_within_range (*sym_string_within_range_p)
+#define sym_set_string_value (*sym_set_string_value_p)
+#define sym_is_changable (*sym_is_changable_p)
+#define sym_get_choice_prop (*sym_get_choice_prop_p)
+#define sym_get_default_prop (*sym_get_default_prop_p)
+#define sym_get_string_value (*sym_get_string_value_p)
+
+#define prop_get_type_name (*prop_get_type_name_p)
+
+/* expr.c */
+#define expr_compare_type (*expr_compare_type_p)
+#define expr_print (*expr_print_p)
Files linux-2.6.23-sabayon/scripts/kconfig/qconf and testtry/scripts/kconfig/qconf differ
diff -urpN linux-2.6.23-sabayon/scripts/kconfig/qconf.moc testtry/scripts/kconfig/qconf.moc
--- linux-2.6.23-sabayon/scripts/kconfig/qconf.moc	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/kconfig/qconf.moc	2007-10-15 16:44:27.000000000 +0000
@@ -0,0 +1,781 @@
+/****************************************************************************
+** ConfigList meta object code from reading C++ file 'qconf.h'
+**
+** Created: Mon Oct 15 16:44:27 2007
+**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.8   edited Feb 2 14:59 $)
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#include <qmetaobject.h>
+#include <qapplication.h>
+
+#include <private/qucomextra_p.h>
+#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
+#error "This file was generated using the moc from 3.3.8. It"
+#error "cannot be used with the include files from this version of Qt."
+#error "(The moc has changed too much.)"
+#endif
+
+const char *ConfigList::className() const
+{
+    return "ConfigList";
+}
+
+QMetaObject *ConfigList::metaObj = 0;
+static QMetaObjectCleanUp cleanUp_ConfigList( "ConfigList", &ConfigList::staticMetaObject );
+
+#ifndef QT_NO_TRANSLATION
+QString ConfigList::tr( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigList", s, c, QApplication::DefaultCodec );
+    else
+	return QString::fromLatin1( s );
+}
+#ifndef QT_NO_TRANSLATION_UTF8
+QString ConfigList::trUtf8( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigList", s, c, QApplication::UnicodeUTF8 );
+    else
+	return QString::fromUtf8( s );
+}
+#endif // QT_NO_TRANSLATION_UTF8
+
+#endif // QT_NO_TRANSLATION
+
+QMetaObject* ConfigList::staticMetaObject()
+{
+    if ( metaObj )
+	return metaObj;
+    QMetaObject* parentObject = QListView::staticMetaObject();
+    static const QUParameter param_slot_0[] = {
+	{ "menu", &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod slot_0 = {"setRootMenu", 1, param_slot_0 };
+    static const QUParameter param_slot_1[] = {
+	{ "item", &static_QUType_ptr, "ConfigItem", QUParameter::In }
+    };
+    static const QUMethod slot_1 = {"updateList", 1, param_slot_1 };
+    static const QUParameter param_slot_2[] = {
+	{ "item", &static_QUType_ptr, "ConfigItem", QUParameter::In },
+	{ "val", &static_QUType_ptr, "tristate", QUParameter::In }
+    };
+    static const QUMethod slot_2 = {"setValue", 2, param_slot_2 };
+    static const QUParameter param_slot_3[] = {
+	{ "item", &static_QUType_ptr, "ConfigItem", QUParameter::In }
+    };
+    static const QUMethod slot_3 = {"changeValue", 1, param_slot_3 };
+    static const QUMethod slot_4 = {"updateSelection", 0, 0 };
+    static const QUMethod slot_5 = {"saveSettings", 0, 0 };
+    static const QMetaData slot_tbl[] = {
+	{ "setRootMenu(struct menu*)", &slot_0, QMetaData::Public },
+	{ "updateList(ConfigItem*)", &slot_1, QMetaData::Public },
+	{ "setValue(ConfigItem*,tristate)", &slot_2, QMetaData::Public },
+	{ "changeValue(ConfigItem*)", &slot_3, QMetaData::Public },
+	{ "updateSelection()", &slot_4, QMetaData::Public },
+	{ "saveSettings()", &slot_5, QMetaData::Public }
+    };
+    static const QUParameter param_signal_0[] = {
+	{ "menu", &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod signal_0 = {"menuChanged", 1, param_signal_0 };
+    static const QUParameter param_signal_1[] = {
+	{ "menu", &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod signal_1 = {"menuSelected", 1, param_signal_1 };
+    static const QUMethod signal_2 = {"parentSelected", 0, 0 };
+    static const QUParameter param_signal_3[] = {
+	{ 0, &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod signal_3 = {"gotFocus", 1, param_signal_3 };
+    static const QMetaData signal_tbl[] = {
+	{ "menuChanged(struct menu*)", &signal_0, QMetaData::Public },
+	{ "menuSelected(struct menu*)", &signal_1, QMetaData::Public },
+	{ "parentSelected()", &signal_2, QMetaData::Public },
+	{ "gotFocus(struct menu*)", &signal_3, QMetaData::Public }
+    };
+    metaObj = QMetaObject::new_metaobject(
+	"ConfigList", parentObject,
+	slot_tbl, 6,
+	signal_tbl, 4,
+#ifndef QT_NO_PROPERTIES
+	0, 0,
+	0, 0,
+#endif // QT_NO_PROPERTIES
+	0, 0 );
+    cleanUp_ConfigList.setMetaObject( metaObj );
+    return metaObj;
+}
+
+void* ConfigList::qt_cast( const char* clname )
+{
+    if ( !qstrcmp( clname, "ConfigList" ) )
+	return this;
+    return QListView::qt_cast( clname );
+}
+
+#include <qobjectdefs.h>
+#include <qsignalslotimp.h>
+
+// SIGNAL menuChanged
+void ConfigList::menuChanged( struct menu* t0 )
+{
+    if ( signalsBlocked() )
+	return;
+    QConnectionList *clist = receivers( staticMetaObject()->signalOffset() + 0 );
+    if ( !clist )
+	return;
+    QUObject o[2];
+    static_QUType_ptr.set(o+1,t0);
+    activate_signal( clist, o );
+}
+
+// SIGNAL menuSelected
+void ConfigList::menuSelected( struct menu* t0 )
+{
+    if ( signalsBlocked() )
+	return;
+    QConnectionList *clist = receivers( staticMetaObject()->signalOffset() + 1 );
+    if ( !clist )
+	return;
+    QUObject o[2];
+    static_QUType_ptr.set(o+1,t0);
+    activate_signal( clist, o );
+}
+
+// SIGNAL parentSelected
+void ConfigList::parentSelected()
+{
+    activate_signal( staticMetaObject()->signalOffset() + 2 );
+}
+
+// SIGNAL gotFocus
+void ConfigList::gotFocus( struct menu* t0 )
+{
+    if ( signalsBlocked() )
+	return;
+    QConnectionList *clist = receivers( staticMetaObject()->signalOffset() + 3 );
+    if ( !clist )
+	return;
+    QUObject o[2];
+    static_QUType_ptr.set(o+1,t0);
+    activate_signal( clist, o );
+}
+
+bool ConfigList::qt_invoke( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->slotOffset() ) {
+    case 0: setRootMenu((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    case 1: updateList((ConfigItem*)static_QUType_ptr.get(_o+1)); break;
+    case 2: setValue((ConfigItem*)static_QUType_ptr.get(_o+1),(tristate)(*((tristate*)static_QUType_ptr.get(_o+2)))); break;
+    case 3: changeValue((ConfigItem*)static_QUType_ptr.get(_o+1)); break;
+    case 4: updateSelection(); break;
+    case 5: saveSettings(); break;
+    default:
+	return QListView::qt_invoke( _id, _o );
+    }
+    return TRUE;
+}
+
+bool ConfigList::qt_emit( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->signalOffset() ) {
+    case 0: menuChanged((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    case 1: menuSelected((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    case 2: parentSelected(); break;
+    case 3: gotFocus((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    default:
+	return QListView::qt_emit(_id,_o);
+    }
+    return TRUE;
+}
+#ifndef QT_NO_PROPERTIES
+
+bool ConfigList::qt_property( int id, int f, QVariant* v)
+{
+    return QListView::qt_property( id, f, v);
+}
+
+bool ConfigList::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
+#endif // QT_NO_PROPERTIES
+
+
+const char *ConfigLineEdit::className() const
+{
+    return "ConfigLineEdit";
+}
+
+QMetaObject *ConfigLineEdit::metaObj = 0;
+static QMetaObjectCleanUp cleanUp_ConfigLineEdit( "ConfigLineEdit", &ConfigLineEdit::staticMetaObject );
+
+#ifndef QT_NO_TRANSLATION
+QString ConfigLineEdit::tr( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigLineEdit", s, c, QApplication::DefaultCodec );
+    else
+	return QString::fromLatin1( s );
+}
+#ifndef QT_NO_TRANSLATION_UTF8
+QString ConfigLineEdit::trUtf8( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigLineEdit", s, c, QApplication::UnicodeUTF8 );
+    else
+	return QString::fromUtf8( s );
+}
+#endif // QT_NO_TRANSLATION_UTF8
+
+#endif // QT_NO_TRANSLATION
+
+QMetaObject* ConfigLineEdit::staticMetaObject()
+{
+    if ( metaObj )
+	return metaObj;
+    QMetaObject* parentObject = QLineEdit::staticMetaObject();
+    metaObj = QMetaObject::new_metaobject(
+	"ConfigLineEdit", parentObject,
+	0, 0,
+	0, 0,
+#ifndef QT_NO_PROPERTIES
+	0, 0,
+	0, 0,
+#endif // QT_NO_PROPERTIES
+	0, 0 );
+    cleanUp_ConfigLineEdit.setMetaObject( metaObj );
+    return metaObj;
+}
+
+void* ConfigLineEdit::qt_cast( const char* clname )
+{
+    if ( !qstrcmp( clname, "ConfigLineEdit" ) )
+	return this;
+    return QLineEdit::qt_cast( clname );
+}
+
+bool ConfigLineEdit::qt_invoke( int _id, QUObject* _o )
+{
+    return QLineEdit::qt_invoke(_id,_o);
+}
+
+bool ConfigLineEdit::qt_emit( int _id, QUObject* _o )
+{
+    return QLineEdit::qt_emit(_id,_o);
+}
+#ifndef QT_NO_PROPERTIES
+
+bool ConfigLineEdit::qt_property( int id, int f, QVariant* v)
+{
+    return QLineEdit::qt_property( id, f, v);
+}
+
+bool ConfigLineEdit::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
+#endif // QT_NO_PROPERTIES
+
+
+const char *ConfigView::className() const
+{
+    return "ConfigView";
+}
+
+QMetaObject *ConfigView::metaObj = 0;
+static QMetaObjectCleanUp cleanUp_ConfigView( "ConfigView", &ConfigView::staticMetaObject );
+
+#ifndef QT_NO_TRANSLATION
+QString ConfigView::tr( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigView", s, c, QApplication::DefaultCodec );
+    else
+	return QString::fromLatin1( s );
+}
+#ifndef QT_NO_TRANSLATION_UTF8
+QString ConfigView::trUtf8( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigView", s, c, QApplication::UnicodeUTF8 );
+    else
+	return QString::fromUtf8( s );
+}
+#endif // QT_NO_TRANSLATION_UTF8
+
+#endif // QT_NO_TRANSLATION
+
+QMetaObject* ConfigView::staticMetaObject()
+{
+    if ( metaObj )
+	return metaObj;
+    QMetaObject* parentObject = QVBox::staticMetaObject();
+    static const QUParameter param_slot_0[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod slot_0 = {"setShowAll", 1, param_slot_0 };
+    static const QUParameter param_slot_1[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod slot_1 = {"setShowName", 1, param_slot_1 };
+    static const QUParameter param_slot_2[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod slot_2 = {"setShowRange", 1, param_slot_2 };
+    static const QUParameter param_slot_3[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod slot_3 = {"setShowData", 1, param_slot_3 };
+    static const QMetaData slot_tbl[] = {
+	{ "setShowAll(bool)", &slot_0, QMetaData::Public },
+	{ "setShowName(bool)", &slot_1, QMetaData::Public },
+	{ "setShowRange(bool)", &slot_2, QMetaData::Public },
+	{ "setShowData(bool)", &slot_3, QMetaData::Public }
+    };
+    static const QUParameter param_signal_0[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod signal_0 = {"showAllChanged", 1, param_signal_0 };
+    static const QUParameter param_signal_1[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod signal_1 = {"showNameChanged", 1, param_signal_1 };
+    static const QUParameter param_signal_2[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod signal_2 = {"showRangeChanged", 1, param_signal_2 };
+    static const QUParameter param_signal_3[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod signal_3 = {"showDataChanged", 1, param_signal_3 };
+    static const QMetaData signal_tbl[] = {
+	{ "showAllChanged(bool)", &signal_0, QMetaData::Public },
+	{ "showNameChanged(bool)", &signal_1, QMetaData::Public },
+	{ "showRangeChanged(bool)", &signal_2, QMetaData::Public },
+	{ "showDataChanged(bool)", &signal_3, QMetaData::Public }
+    };
+    metaObj = QMetaObject::new_metaobject(
+	"ConfigView", parentObject,
+	slot_tbl, 4,
+	signal_tbl, 4,
+#ifndef QT_NO_PROPERTIES
+	0, 0,
+	0, 0,
+#endif // QT_NO_PROPERTIES
+	0, 0 );
+    cleanUp_ConfigView.setMetaObject( metaObj );
+    return metaObj;
+}
+
+void* ConfigView::qt_cast( const char* clname )
+{
+    if ( !qstrcmp( clname, "ConfigView" ) )
+	return this;
+    return QVBox::qt_cast( clname );
+}
+
+// SIGNAL showAllChanged
+void ConfigView::showAllChanged( bool t0 )
+{
+    activate_signal_bool( staticMetaObject()->signalOffset() + 0, t0 );
+}
+
+// SIGNAL showNameChanged
+void ConfigView::showNameChanged( bool t0 )
+{
+    activate_signal_bool( staticMetaObject()->signalOffset() + 1, t0 );
+}
+
+// SIGNAL showRangeChanged
+void ConfigView::showRangeChanged( bool t0 )
+{
+    activate_signal_bool( staticMetaObject()->signalOffset() + 2, t0 );
+}
+
+// SIGNAL showDataChanged
+void ConfigView::showDataChanged( bool t0 )
+{
+    activate_signal_bool( staticMetaObject()->signalOffset() + 3, t0 );
+}
+
+bool ConfigView::qt_invoke( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->slotOffset() ) {
+    case 0: setShowAll((bool)static_QUType_bool.get(_o+1)); break;
+    case 1: setShowName((bool)static_QUType_bool.get(_o+1)); break;
+    case 2: setShowRange((bool)static_QUType_bool.get(_o+1)); break;
+    case 3: setShowData((bool)static_QUType_bool.get(_o+1)); break;
+    default:
+	return QVBox::qt_invoke( _id, _o );
+    }
+    return TRUE;
+}
+
+bool ConfigView::qt_emit( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->signalOffset() ) {
+    case 0: showAllChanged((bool)static_QUType_bool.get(_o+1)); break;
+    case 1: showNameChanged((bool)static_QUType_bool.get(_o+1)); break;
+    case 2: showRangeChanged((bool)static_QUType_bool.get(_o+1)); break;
+    case 3: showDataChanged((bool)static_QUType_bool.get(_o+1)); break;
+    default:
+	return QVBox::qt_emit(_id,_o);
+    }
+    return TRUE;
+}
+#ifndef QT_NO_PROPERTIES
+
+bool ConfigView::qt_property( int id, int f, QVariant* v)
+{
+    return QVBox::qt_property( id, f, v);
+}
+
+bool ConfigView::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
+#endif // QT_NO_PROPERTIES
+
+
+const char *ConfigInfoView::className() const
+{
+    return "ConfigInfoView";
+}
+
+QMetaObject *ConfigInfoView::metaObj = 0;
+static QMetaObjectCleanUp cleanUp_ConfigInfoView( "ConfigInfoView", &ConfigInfoView::staticMetaObject );
+
+#ifndef QT_NO_TRANSLATION
+QString ConfigInfoView::tr( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigInfoView", s, c, QApplication::DefaultCodec );
+    else
+	return QString::fromLatin1( s );
+}
+#ifndef QT_NO_TRANSLATION_UTF8
+QString ConfigInfoView::trUtf8( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigInfoView", s, c, QApplication::UnicodeUTF8 );
+    else
+	return QString::fromUtf8( s );
+}
+#endif // QT_NO_TRANSLATION_UTF8
+
+#endif // QT_NO_TRANSLATION
+
+QMetaObject* ConfigInfoView::staticMetaObject()
+{
+    if ( metaObj )
+	return metaObj;
+    QMetaObject* parentObject = QTextBrowser::staticMetaObject();
+    static const QUParameter param_slot_0[] = {
+	{ "menu", &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod slot_0 = {"setInfo", 1, param_slot_0 };
+    static const QUMethod slot_1 = {"saveSettings", 0, 0 };
+    static const QUParameter param_slot_2[] = {
+	{ "name", &static_QUType_QString, 0, QUParameter::In }
+    };
+    static const QUMethod slot_2 = {"setSource", 1, param_slot_2 };
+    static const QUParameter param_slot_3[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod slot_3 = {"setShowDebug", 1, param_slot_3 };
+    static const QMetaData slot_tbl[] = {
+	{ "setInfo(struct menu*)", &slot_0, QMetaData::Public },
+	{ "saveSettings()", &slot_1, QMetaData::Public },
+	{ "setSource(const QString&)", &slot_2, QMetaData::Public },
+	{ "setShowDebug(bool)", &slot_3, QMetaData::Public }
+    };
+    static const QUParameter param_signal_0[] = {
+	{ 0, &static_QUType_bool, 0, QUParameter::In }
+    };
+    static const QUMethod signal_0 = {"showDebugChanged", 1, param_signal_0 };
+    static const QUParameter param_signal_1[] = {
+	{ 0, &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod signal_1 = {"menuSelected", 1, param_signal_1 };
+    static const QMetaData signal_tbl[] = {
+	{ "showDebugChanged(bool)", &signal_0, QMetaData::Public },
+	{ "menuSelected(struct menu*)", &signal_1, QMetaData::Public }
+    };
+    metaObj = QMetaObject::new_metaobject(
+	"ConfigInfoView", parentObject,
+	slot_tbl, 4,
+	signal_tbl, 2,
+#ifndef QT_NO_PROPERTIES
+	0, 0,
+	0, 0,
+#endif // QT_NO_PROPERTIES
+	0, 0 );
+    cleanUp_ConfigInfoView.setMetaObject( metaObj );
+    return metaObj;
+}
+
+void* ConfigInfoView::qt_cast( const char* clname )
+{
+    if ( !qstrcmp( clname, "ConfigInfoView" ) )
+	return this;
+    return QTextBrowser::qt_cast( clname );
+}
+
+// SIGNAL showDebugChanged
+void ConfigInfoView::showDebugChanged( bool t0 )
+{
+    activate_signal_bool( staticMetaObject()->signalOffset() + 0, t0 );
+}
+
+// SIGNAL menuSelected
+void ConfigInfoView::menuSelected( struct menu* t0 )
+{
+    if ( signalsBlocked() )
+	return;
+    QConnectionList *clist = receivers( staticMetaObject()->signalOffset() + 1 );
+    if ( !clist )
+	return;
+    QUObject o[2];
+    static_QUType_ptr.set(o+1,t0);
+    activate_signal( clist, o );
+}
+
+bool ConfigInfoView::qt_invoke( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->slotOffset() ) {
+    case 0: setInfo((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    case 1: saveSettings(); break;
+    case 2: setSource((const QString&)static_QUType_QString.get(_o+1)); break;
+    case 3: setShowDebug((bool)static_QUType_bool.get(_o+1)); break;
+    default:
+	return QTextBrowser::qt_invoke( _id, _o );
+    }
+    return TRUE;
+}
+
+bool ConfigInfoView::qt_emit( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->signalOffset() ) {
+    case 0: showDebugChanged((bool)static_QUType_bool.get(_o+1)); break;
+    case 1: menuSelected((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    default:
+	return QTextBrowser::qt_emit(_id,_o);
+    }
+    return TRUE;
+}
+#ifndef QT_NO_PROPERTIES
+
+bool ConfigInfoView::qt_property( int id, int f, QVariant* v)
+{
+    return QTextBrowser::qt_property( id, f, v);
+}
+
+bool ConfigInfoView::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
+#endif // QT_NO_PROPERTIES
+
+
+const char *ConfigSearchWindow::className() const
+{
+    return "ConfigSearchWindow";
+}
+
+QMetaObject *ConfigSearchWindow::metaObj = 0;
+static QMetaObjectCleanUp cleanUp_ConfigSearchWindow( "ConfigSearchWindow", &ConfigSearchWindow::staticMetaObject );
+
+#ifndef QT_NO_TRANSLATION
+QString ConfigSearchWindow::tr( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigSearchWindow", s, c, QApplication::DefaultCodec );
+    else
+	return QString::fromLatin1( s );
+}
+#ifndef QT_NO_TRANSLATION_UTF8
+QString ConfigSearchWindow::trUtf8( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigSearchWindow", s, c, QApplication::UnicodeUTF8 );
+    else
+	return QString::fromUtf8( s );
+}
+#endif // QT_NO_TRANSLATION_UTF8
+
+#endif // QT_NO_TRANSLATION
+
+QMetaObject* ConfigSearchWindow::staticMetaObject()
+{
+    if ( metaObj )
+	return metaObj;
+    QMetaObject* parentObject = QDialog::staticMetaObject();
+    static const QUMethod slot_0 = {"saveSettings", 0, 0 };
+    static const QUMethod slot_1 = {"search", 0, 0 };
+    static const QMetaData slot_tbl[] = {
+	{ "saveSettings()", &slot_0, QMetaData::Public },
+	{ "search()", &slot_1, QMetaData::Public }
+    };
+    metaObj = QMetaObject::new_metaobject(
+	"ConfigSearchWindow", parentObject,
+	slot_tbl, 2,
+	0, 0,
+#ifndef QT_NO_PROPERTIES
+	0, 0,
+	0, 0,
+#endif // QT_NO_PROPERTIES
+	0, 0 );
+    cleanUp_ConfigSearchWindow.setMetaObject( metaObj );
+    return metaObj;
+}
+
+void* ConfigSearchWindow::qt_cast( const char* clname )
+{
+    if ( !qstrcmp( clname, "ConfigSearchWindow" ) )
+	return this;
+    return QDialog::qt_cast( clname );
+}
+
+bool ConfigSearchWindow::qt_invoke( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->slotOffset() ) {
+    case 0: saveSettings(); break;
+    case 1: search(); break;
+    default:
+	return QDialog::qt_invoke( _id, _o );
+    }
+    return TRUE;
+}
+
+bool ConfigSearchWindow::qt_emit( int _id, QUObject* _o )
+{
+    return QDialog::qt_emit(_id,_o);
+}
+#ifndef QT_NO_PROPERTIES
+
+bool ConfigSearchWindow::qt_property( int id, int f, QVariant* v)
+{
+    return QDialog::qt_property( id, f, v);
+}
+
+bool ConfigSearchWindow::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
+#endif // QT_NO_PROPERTIES
+
+
+const char *ConfigMainWindow::className() const
+{
+    return "ConfigMainWindow";
+}
+
+QMetaObject *ConfigMainWindow::metaObj = 0;
+static QMetaObjectCleanUp cleanUp_ConfigMainWindow( "ConfigMainWindow", &ConfigMainWindow::staticMetaObject );
+
+#ifndef QT_NO_TRANSLATION
+QString ConfigMainWindow::tr( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigMainWindow", s, c, QApplication::DefaultCodec );
+    else
+	return QString::fromLatin1( s );
+}
+#ifndef QT_NO_TRANSLATION_UTF8
+QString ConfigMainWindow::trUtf8( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "ConfigMainWindow", s, c, QApplication::UnicodeUTF8 );
+    else
+	return QString::fromUtf8( s );
+}
+#endif // QT_NO_TRANSLATION_UTF8
+
+#endif // QT_NO_TRANSLATION
+
+QMetaObject* ConfigMainWindow::staticMetaObject()
+{
+    if ( metaObj )
+	return metaObj;
+    QMetaObject* parentObject = QMainWindow::staticMetaObject();
+    static const QUParameter param_slot_0[] = {
+	{ 0, &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod slot_0 = {"changeMenu", 1, param_slot_0 };
+    static const QUParameter param_slot_1[] = {
+	{ 0, &static_QUType_ptr, "struct menu", QUParameter::In }
+    };
+    static const QUMethod slot_1 = {"setMenuLink", 1, param_slot_1 };
+    static const QUMethod slot_2 = {"listFocusChanged", 0, 0 };
+    static const QUMethod slot_3 = {"goBack", 0, 0 };
+    static const QUMethod slot_4 = {"loadConfig", 0, 0 };
+    static const QUMethod slot_5 = {"saveConfig", 0, 0 };
+    static const QUMethod slot_6 = {"saveConfigAs", 0, 0 };
+    static const QUMethod slot_7 = {"searchConfig", 0, 0 };
+    static const QUMethod slot_8 = {"showSingleView", 0, 0 };
+    static const QUMethod slot_9 = {"showSplitView", 0, 0 };
+    static const QUMethod slot_10 = {"showFullView", 0, 0 };
+    static const QUMethod slot_11 = {"showIntro", 0, 0 };
+    static const QUMethod slot_12 = {"showAbout", 0, 0 };
+    static const QUMethod slot_13 = {"saveSettings", 0, 0 };
+    static const QMetaData slot_tbl[] = {
+	{ "changeMenu(struct menu*)", &slot_0, QMetaData::Public },
+	{ "setMenuLink(struct menu*)", &slot_1, QMetaData::Public },
+	{ "listFocusChanged()", &slot_2, QMetaData::Public },
+	{ "goBack()", &slot_3, QMetaData::Public },
+	{ "loadConfig()", &slot_4, QMetaData::Public },
+	{ "saveConfig()", &slot_5, QMetaData::Public },
+	{ "saveConfigAs()", &slot_6, QMetaData::Public },
+	{ "searchConfig()", &slot_7, QMetaData::Public },
+	{ "showSingleView()", &slot_8, QMetaData::Public },
+	{ "showSplitView()", &slot_9, QMetaData::Public },
+	{ "showFullView()", &slot_10, QMetaData::Public },
+	{ "showIntro()", &slot_11, QMetaData::Public },
+	{ "showAbout()", &slot_12, QMetaData::Public },
+	{ "saveSettings()", &slot_13, QMetaData::Public }
+    };
+    metaObj = QMetaObject::new_metaobject(
+	"ConfigMainWindow", parentObject,
+	slot_tbl, 14,
+	0, 0,
+#ifndef QT_NO_PROPERTIES
+	0, 0,
+	0, 0,
+#endif // QT_NO_PROPERTIES
+	0, 0 );
+    cleanUp_ConfigMainWindow.setMetaObject( metaObj );
+    return metaObj;
+}
+
+void* ConfigMainWindow::qt_cast( const char* clname )
+{
+    if ( !qstrcmp( clname, "ConfigMainWindow" ) )
+	return this;
+    return QMainWindow::qt_cast( clname );
+}
+
+bool ConfigMainWindow::qt_invoke( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->slotOffset() ) {
+    case 0: changeMenu((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    case 1: setMenuLink((struct menu*)static_QUType_ptr.get(_o+1)); break;
+    case 2: listFocusChanged(); break;
+    case 3: goBack(); break;
+    case 4: loadConfig(); break;
+    case 5: saveConfig(); break;
+    case 6: saveConfigAs(); break;
+    case 7: searchConfig(); break;
+    case 8: showSingleView(); break;
+    case 9: showSplitView(); break;
+    case 10: showFullView(); break;
+    case 11: showIntro(); break;
+    case 12: showAbout(); break;
+    case 13: saveSettings(); break;
+    default:
+	return QMainWindow::qt_invoke( _id, _o );
+    }
+    return TRUE;
+}
+
+bool ConfigMainWindow::qt_emit( int _id, QUObject* _o )
+{
+    return QMainWindow::qt_emit(_id,_o);
+}
+#ifndef QT_NO_PROPERTIES
+
+bool ConfigMainWindow::qt_property( int id, int f, QVariant* v)
+{
+    return QMainWindow::qt_property( id, f, v);
+}
+
+bool ConfigMainWindow::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
+#endif // QT_NO_PROPERTIES
diff -urpN linux-2.6.23-sabayon/scripts/kconfig/.tmp_qtcheck testtry/scripts/kconfig/.tmp_qtcheck
--- linux-2.6.23-sabayon/scripts/kconfig/.tmp_qtcheck	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/kconfig/.tmp_qtcheck	2007-10-15 16:44:26.000000000 +0000
@@ -0,0 +1,3 @@
+KC_QT_CFLAGS=$(shell pkg-config qt-mt --cflags)
+KC_QT_LIBS=$(shell pkg-config qt-mt --libs)
+KC_QT_MOC=$(shell pkg-config qt-mt --variable=prefix)/bin/moc
diff -urpN linux-2.6.23-sabayon/scripts/kconfig/zconf.hash.c testtry/scripts/kconfig/zconf.hash.c
--- linux-2.6.23-sabayon/scripts/kconfig/zconf.hash.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/kconfig/zconf.hash.c	2007-10-15 16:44:22.000000000 +0000
@@ -0,0 +1,242 @@
+/* ANSI-C code produced by gperf version 3.0.1 */
+/* Command-line: gperf  */
+/* Computed positions: -k'1,3' */
+
+#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
+      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
+      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
+      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
+      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
+      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
+      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
+      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
+      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
+      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
+      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
+      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
+      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
+      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
+      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
+      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
+      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
+      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
+      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
+      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
+      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
+      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
+      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
+/* The character set is not based on ISO-646.  */
+#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
+#endif
+
+struct kconf_id;
+/* maximum key range = 45, duplicates = 0 */
+
+#ifdef __GNUC__
+__inline
+#else
+#ifdef __cplusplus
+inline
+#endif
+#endif
+static unsigned int
+kconf_id_hash (register const char *str, register unsigned int len)
+{
+  static unsigned char asso_values[] =
+    {
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 25, 30, 15,
+       0, 15,  0, 47,  5, 15, 47, 47, 30, 20,
+       5,  0, 25, 15,  0,  0, 10, 35, 47, 47,
+       5, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
+      47, 47, 47, 47, 47, 47
+    };
+  register int hval = len;
+
+  switch (hval)
+    {
+      default:
+        hval += asso_values[(unsigned char)str[2]];
+      /*FALLTHROUGH*/
+      case 2:
+      case 1:
+        hval += asso_values[(unsigned char)str[0]];
+        break;
+    }
+  return hval;
+}
+
+struct kconf_id_strings_t
+  {
+    char kconf_id_strings_str2[sizeof("on")];
+    char kconf_id_strings_str6[sizeof("string")];
+    char kconf_id_strings_str7[sizeof("default")];
+    char kconf_id_strings_str8[sizeof("def_bool")];
+    char kconf_id_strings_str10[sizeof("range")];
+    char kconf_id_strings_str11[sizeof("def_boolean")];
+    char kconf_id_strings_str12[sizeof("def_tristate")];
+    char kconf_id_strings_str13[sizeof("hex")];
+    char kconf_id_strings_str14[sizeof("defconfig_list")];
+    char kconf_id_strings_str16[sizeof("option")];
+    char kconf_id_strings_str17[sizeof("if")];
+    char kconf_id_strings_str18[sizeof("optional")];
+    char kconf_id_strings_str20[sizeof("endif")];
+    char kconf_id_strings_str21[sizeof("choice")];
+    char kconf_id_strings_str22[sizeof("endmenu")];
+    char kconf_id_strings_str23[sizeof("requires")];
+    char kconf_id_strings_str24[sizeof("endchoice")];
+    char kconf_id_strings_str26[sizeof("config")];
+    char kconf_id_strings_str27[sizeof("modules")];
+    char kconf_id_strings_str28[sizeof("int")];
+    char kconf_id_strings_str29[sizeof("menu")];
+    char kconf_id_strings_str31[sizeof("prompt")];
+    char kconf_id_strings_str32[sizeof("depends")];
+    char kconf_id_strings_str33[sizeof("tristate")];
+    char kconf_id_strings_str34[sizeof("bool")];
+    char kconf_id_strings_str35[sizeof("menuconfig")];
+    char kconf_id_strings_str36[sizeof("select")];
+    char kconf_id_strings_str37[sizeof("boolean")];
+    char kconf_id_strings_str39[sizeof("help")];
+    char kconf_id_strings_str41[sizeof("source")];
+    char kconf_id_strings_str42[sizeof("comment")];
+    char kconf_id_strings_str43[sizeof("mainmenu")];
+    char kconf_id_strings_str46[sizeof("enable")];
+  };
+static struct kconf_id_strings_t kconf_id_strings_contents =
+  {
+    "on",
+    "string",
+    "default",
+    "def_bool",
+    "range",
+    "def_boolean",
+    "def_tristate",
+    "hex",
+    "defconfig_list",
+    "option",
+    "if",
+    "optional",
+    "endif",
+    "choice",
+    "endmenu",
+    "requires",
+    "endchoice",
+    "config",
+    "modules",
+    "int",
+    "menu",
+    "prompt",
+    "depends",
+    "tristate",
+    "bool",
+    "menuconfig",
+    "select",
+    "boolean",
+    "help",
+    "source",
+    "comment",
+    "mainmenu",
+    "enable"
+  };
+#define kconf_id_strings ((const char *) &kconf_id_strings_contents)
+#ifdef __GNUC__
+__inline
+#endif
+struct kconf_id *
+kconf_id_lookup (register const char *str, register unsigned int len)
+{
+  enum
+    {
+      TOTAL_KEYWORDS = 33,
+      MIN_WORD_LENGTH = 2,
+      MAX_WORD_LENGTH = 14,
+      MIN_HASH_VALUE = 2,
+      MAX_HASH_VALUE = 46
+    };
+
+  static struct kconf_id wordlist[] =
+    {
+      {-1}, {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str2,		T_ON,		TF_PARAM},
+      {-1}, {-1}, {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str6,		T_TYPE,		TF_COMMAND, S_STRING},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str7,	T_DEFAULT,	TF_COMMAND, S_UNKNOWN},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str8,	T_DEFAULT,	TF_COMMAND, S_BOOLEAN},
+      {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str10,		T_RANGE,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str11,	T_DEFAULT,	TF_COMMAND, S_BOOLEAN},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str12,	T_DEFAULT,	TF_COMMAND, S_TRISTATE},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str13,		T_TYPE,		TF_COMMAND, S_HEX},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str14,	T_OPT_DEFCONFIG_LIST,TF_OPTION},
+      {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str16,		T_OPTION,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str17,		T_IF,		TF_COMMAND|TF_PARAM},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str18,	T_OPTIONAL,	TF_COMMAND},
+      {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str20,		T_ENDIF,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str21,		T_CHOICE,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str22,	T_ENDMENU,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str23,	T_REQUIRES,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str24,	T_ENDCHOICE,	TF_COMMAND},
+      {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str26,		T_CONFIG,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str27,	T_OPT_MODULES,	TF_OPTION},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str28,		T_TYPE,		TF_COMMAND, S_INT},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str29,		T_MENU,		TF_COMMAND},
+      {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str31,		T_PROMPT,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str32,	T_DEPENDS,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str33,	T_TYPE,		TF_COMMAND, S_TRISTATE},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str34,		T_TYPE,		TF_COMMAND, S_BOOLEAN},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str35,	T_MENUCONFIG,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str36,		T_SELECT,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str37,	T_TYPE,		TF_COMMAND, S_BOOLEAN},
+      {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str39,		T_HELP,		TF_COMMAND},
+      {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str41,		T_SOURCE,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str42,	T_COMMENT,	TF_COMMAND},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str43,	T_MAINMENU,	TF_COMMAND},
+      {-1}, {-1},
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str46,		T_SELECT,	TF_COMMAND}
+    };
+
+  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
+    {
+      register int key = kconf_id_hash (str, len);
+
+      if (key <= MAX_HASH_VALUE && key >= 0)
+        {
+          register int o = wordlist[key].name;
+          if (o >= 0)
+            {
+              register const char *s = o + kconf_id_strings;
+
+              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
+                return &wordlist[key];
+            }
+        }
+    }
+  return 0;
+}
+
diff -urpN linux-2.6.23-sabayon/scripts/kconfig/zconf.tab.c testtry/scripts/kconfig/zconf.tab.c
--- linux-2.6.23-sabayon/scripts/kconfig/zconf.tab.c	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/kconfig/zconf.tab.c	2007-10-15 16:44:22.000000000 +0000
@@ -0,0 +1,2347 @@
+/* A Bison parser, made by GNU Bison 2.1.  */
+
+/* Skeleton parser for Yacc-like parsing with Bison,
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
+
+/* As a special exception, when this file is copied by Bison into a
+   Bison output file, you may use that output file without restriction.
+   This special exception was added by the Free Software Foundation
+   in version 1.24 of Bison.  */
+
+/* Written by Richard Stallman by simplifying the original so called
+   ``semantic'' parser.  */
+
+/* All symbols defined below should begin with yy or YY, to avoid
+   infringing on user name space.  This should be done even for local
+   variables, as they might otherwise be expanded by user macros.
+   There are some unavoidable exceptions within include files to
+   define necessary library symbols; they are noted "INFRINGES ON
+   USER NAME SPACE" below.  */
+
+/* Identify Bison output.  */
+#define YYBISON 1
+
+/* Bison version.  */
+#define YYBISON_VERSION "2.1"
+
+/* Skeleton name.  */
+#define YYSKELETON_NAME "yacc.c"
+
+/* Pure parsers.  */
+#define YYPURE 0
+
+/* Using locations.  */
+#define YYLSP_NEEDED 0
+
+/* Substitute the variable and function names.  */
+#define yyparse zconfparse
+#define yylex   zconflex
+#define yyerror zconferror
+#define yylval  zconflval
+#define yychar  zconfchar
+#define yydebug zconfdebug
+#define yynerrs zconfnerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     T_MAINMENU = 258,
+     T_MENU = 259,
+     T_ENDMENU = 260,
+     T_SOURCE = 261,
+     T_CHOICE = 262,
+     T_ENDCHOICE = 263,
+     T_COMMENT = 264,
+     T_CONFIG = 265,
+     T_MENUCONFIG = 266,
+     T_HELP = 267,
+     T_HELPTEXT = 268,
+     T_IF = 269,
+     T_ENDIF = 270,
+     T_DEPENDS = 271,
+     T_REQUIRES = 272,
+     T_OPTIONAL = 273,
+     T_PROMPT = 274,
+     T_TYPE = 275,
+     T_DEFAULT = 276,
+     T_SELECT = 277,
+     T_RANGE = 278,
+     T_OPTION = 279,
+     T_ON = 280,
+     T_WORD = 281,
+     T_WORD_QUOTE = 282,
+     T_UNEQUAL = 283,
+     T_CLOSE_PAREN = 284,
+     T_OPEN_PAREN = 285,
+     T_EOL = 286,
+     T_OR = 287,
+     T_AND = 288,
+     T_EQUAL = 289,
+     T_NOT = 290
+   };
+#endif
+/* Tokens.  */
+#define T_MAINMENU 258
+#define T_MENU 259
+#define T_ENDMENU 260
+#define T_SOURCE 261
+#define T_CHOICE 262
+#define T_ENDCHOICE 263
+#define T_COMMENT 264
+#define T_CONFIG 265
+#define T_MENUCONFIG 266
+#define T_HELP 267
+#define T_HELPTEXT 268
+#define T_IF 269
+#define T_ENDIF 270
+#define T_DEPENDS 271
+#define T_REQUIRES 272
+#define T_OPTIONAL 273
+#define T_PROMPT 274
+#define T_TYPE 275
+#define T_DEFAULT 276
+#define T_SELECT 277
+#define T_RANGE 278
+#define T_OPTION 279
+#define T_ON 280
+#define T_WORD 281
+#define T_WORD_QUOTE 282
+#define T_UNEQUAL 283
+#define T_CLOSE_PAREN 284
+#define T_OPEN_PAREN 285
+#define T_EOL 286
+#define T_OR 287
+#define T_AND 288
+#define T_EQUAL 289
+#define T_NOT 290
+
+
+
+
+/* Copy the first part of user declarations.  */
+
+
+/*
+ * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
+ * Released under the terms of the GNU GPL v2.0.
+ */
+
+#include <ctype.h>
+#include <stdarg.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <stdbool.h>
+
+#define LKC_DIRECT_LINK
+#include "lkc.h"
+
+#include "zconf.hash.c"
+
+#define printd(mask, fmt...) if (cdebug & (mask)) printf(fmt)
+
+#define PRINTD		0x0001
+#define DEBUG_PARSE	0x0002
+
+int cdebug = PRINTD;
+
+extern int zconflex(void);
+static void zconfprint(const char *err, ...);
+static void zconf_error(const char *err, ...);
+static void zconferror(const char *err);
+static bool zconf_endtoken(struct kconf_id *id, int starttoken, int endtoken);
+
+struct symbol *symbol_hash[257];
+
+static struct menu *current_menu, *current_entry;
+
+#define YYDEBUG 0
+#if YYDEBUG
+#define YYERROR_VERBOSE
+#endif
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
+
+#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
+
+typedef union YYSTYPE {
+	char *string;
+	struct file *file;
+	struct symbol *symbol;
+	struct expr *expr;
+	struct menu *menu;
+	struct kconf_id *id;
+} YYSTYPE;
+/* Line 196 of yacc.c.  */
+
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
+#endif
+
+
+
+/* Copy the second part of user declarations.  */
+
+
+/* Line 219 of yacc.c.  */
+
+
+#if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
+# define YYSIZE_T __SIZE_TYPE__
+#endif
+#if ! defined (YYSIZE_T) && defined (size_t)
+# define YYSIZE_T size_t
+#endif
+#if ! defined (YYSIZE_T) && (defined (__STDC__) || defined (__cplusplus))
+# include <stddef.h> /* INFRINGES ON USER NAME SPACE */
+# define YYSIZE_T size_t
+#endif
+#if ! defined (YYSIZE_T)
+# define YYSIZE_T unsigned int
+#endif
+
+#ifndef YY_
+# if YYENABLE_NLS
+#  if ENABLE_NLS
+#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
+#   define YY_(msgid) dgettext ("bison-runtime", msgid)
+#  endif
+# endif
+# ifndef YY_
+#  define YY_(msgid) msgid
+# endif
+#endif
+
+#if ! defined (yyoverflow) || YYERROR_VERBOSE
+
+/* The parser invokes alloca or malloc; define the necessary symbols.  */
+
+# ifdef YYSTACK_USE_ALLOCA
+#  if YYSTACK_USE_ALLOCA
+#   ifdef __GNUC__
+#    define YYSTACK_ALLOC __builtin_alloca
+#   else
+#    define YYSTACK_ALLOC alloca
+#    if defined (__STDC__) || defined (__cplusplus)
+#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#     define YYINCLUDED_STDLIB_H
+#    endif
+#   endif
+#  endif
+# endif
+
+# ifdef YYSTACK_ALLOC
+   /* Pacify GCC's `empty if-body' warning. */
+#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+    /* The OS might guarantee only one guard page at the bottom of the stack,
+       and a page size can be as small as 4096 bytes.  So we cannot safely
+       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
+       to allow for a few compiler-allocated temporary stack slots.  */
+#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2005 */
+#  endif
+# else
+#  define YYSTACK_ALLOC YYMALLOC
+#  define YYSTACK_FREE YYFREE
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+#   define YYSTACK_ALLOC_MAXIMUM ((YYSIZE_T) -1)
+#  endif
+#  ifdef __cplusplus
+extern "C" {
+#  endif
+#  ifndef YYMALLOC
+#   define YYMALLOC malloc
+#   if (! defined (malloc) && ! defined (YYINCLUDED_STDLIB_H) \
+	&& (defined (__STDC__) || defined (__cplusplus)))
+void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+#  ifndef YYFREE
+#   define YYFREE free
+#   if (! defined (free) && ! defined (YYINCLUDED_STDLIB_H) \
+	&& (defined (__STDC__) || defined (__cplusplus)))
+void free (void *); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+#  ifdef __cplusplus
+}
+#  endif
+# endif
+#endif /* ! defined (yyoverflow) || YYERROR_VERBOSE */
+
+
+#if (! defined (yyoverflow) \
+     && (! defined (__cplusplus) \
+	 || (defined (YYSTYPE_IS_TRIVIAL) && YYSTYPE_IS_TRIVIAL)))
+
+/* A type that is properly aligned for any stack member.  */
+union yyalloc
+{
+  short int yyss;
+  YYSTYPE yyvs;
+  };
+
+/* The size of the maximum gap between one aligned stack and the next.  */
+# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
+
+/* The size of an array large to enough to hold all stacks, each with
+   N elements.  */
+# define YYSTACK_BYTES(N) \
+     ((N) * (sizeof (short int) + sizeof (YYSTYPE))			\
+      + YYSTACK_GAP_MAXIMUM)
+
+/* Copy COUNT objects from FROM to TO.  The source and destination do
+   not overlap.  */
+# ifndef YYCOPY
+#  if defined (__GNUC__) && 1 < __GNUC__
+#   define YYCOPY(To, From, Count) \
+      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
+#  else
+#   define YYCOPY(To, From, Count)		\
+      do					\
+	{					\
+	  YYSIZE_T yyi;				\
+	  for (yyi = 0; yyi < (Count); yyi++)	\
+	    (To)[yyi] = (From)[yyi];		\
+	}					\
+      while (0)
+#  endif
+# endif
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (0)
+
+#endif
+
+#if defined (__STDC__) || defined (__cplusplus)
+   typedef signed char yysigned_char;
+#else
+   typedef short int yysigned_char;
+#endif
+
+/* YYFINAL -- State number of the termination state. */
+#define YYFINAL  3
+/* YYLAST -- Last index in YYTABLE.  */
+#define YYLAST   275
+
+/* YYNTOKENS -- Number of terminals. */
+#define YYNTOKENS  36
+/* YYNNTS -- Number of nonterminals. */
+#define YYNNTS  45
+/* YYNRULES -- Number of rules. */
+#define YYNRULES  110
+/* YYNRULES -- Number of states. */
+#define YYNSTATES  183
+
+/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+#define YYUNDEFTOK  2
+#define YYMAXUTOK   290
+
+#define YYTRANSLATE(YYX)						\
+  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
+
+/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+static const unsigned char yytranslate[] =
+{
+       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
+       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      35
+};
+
+#if YYDEBUG
+/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
+   YYRHS.  */
+static const unsigned short int yyprhs[] =
+{
+       0,     0,     3,     5,     6,     9,    12,    15,    20,    23,
+      28,    33,    37,    39,    41,    43,    45,    47,    49,    51,
+      53,    55,    57,    59,    61,    63,    67,    70,    74,    77,
+      81,    84,    85,    88,    91,    94,    97,   100,   103,   107,
+     112,   117,   122,   128,   132,   133,   137,   138,   141,   144,
+     147,   149,   153,   154,   157,   160,   163,   166,   169,   174,
+     178,   181,   186,   187,   190,   194,   196,   200,   201,   204,
+     207,   210,   214,   217,   219,   223,   224,   227,   230,   233,
+     237,   241,   244,   247,   250,   251,   254,   257,   260,   265,
+     269,   273,   274,   277,   279,   281,   284,   287,   290,   292,
+     295,   296,   299,   301,   305,   309,   313,   316,   320,   324,
+     326
+};
+
+/* YYRHS -- A `-1'-separated list of the rules' RHS. */
+static const yysigned_char yyrhs[] =
+{
+      37,     0,    -1,    38,    -1,    -1,    38,    40,    -1,    38,
+      54,    -1,    38,    65,    -1,    38,     3,    75,    77,    -1,
+      38,    76,    -1,    38,    26,     1,    31,    -1,    38,    39,
+       1,    31,    -1,    38,     1,    31,    -1,    16,    -1,    19,
+      -1,    20,    -1,    22,    -1,    18,    -1,    23,    -1,    21,
+      -1,    31,    -1,    60,    -1,    69,    -1,    43,    -1,    45,
+      -1,    67,    -1,    26,     1,    31,    -1,     1,    31,    -1,
+      10,    26,    31,    -1,    42,    46,    -1,    11,    26,    31,
+      -1,    44,    46,    -1,    -1,    46,    47,    -1,    46,    48,
+      -1,    46,    73,    -1,    46,    71,    -1,    46,    41,    -1,
+      46,    31,    -1,    20,    74,    31,    -1,    19,    75,    78,
+      31,    -1,    21,    79,    78,    31,    -1,    22,    26,    78,
+      31,    -1,    23,    80,    80,    78,    31,    -1,    24,    49,
+      31,    -1,    -1,    49,    26,    50,    -1,    -1,    34,    75,
+      -1,     7,    31,    -1,    51,    55,    -1,    76,    -1,    52,
+      57,    53,    -1,    -1,    55,    56,    -1,    55,    73,    -1,
+      55,    71,    -1,    55,    31,    -1,    55,    41,    -1,    19,
+      75,    78,    31,    -1,    20,    74,    31,    -1,    18,    31,
+      -1,    21,    26,    78,    31,    -1,    -1,    57,    40,    -1,
+      14,    79,    77,    -1,    76,    -1,    58,    61,    59,    -1,
+      -1,    61,    40,    -1,    61,    65,    -1,    61,    54,    -1,
+       4,    75,    31,    -1,    62,    72,    -1,    76,    -1,    63,
+      66,    64,    -1,    -1,    66,    40,    -1,    66,    65,    -1,
+      66,    54,    -1,     6,    75,    31,    -1,     9,    75,    31,
+      -1,    68,    72,    -1,    12,    31,    -1,    70,    13,    -1,
+      -1,    72,    73,    -1,    72,    31,    -1,    72,    41,    -1,
+      16,    25,    79,    31,    -1,    16,    79,    31,    -1,    17,
+      79,    31,    -1,    -1,    75,    78,    -1,    26,    -1,    27,
+      -1,     5,    31,    -1,     8,    31,    -1,    15,    31,    -1,
+      31,    -1,    77,    31,    -1,    -1,    14,    79,    -1,    80,
+      -1,    80,    34,    80,    -1,    80,    28,    80,    -1,    30,
+      79,    29,    -1,    35,    79,    -1,    79,    32,    79,    -1,
+      79,    33,    79,    -1,    26,    -1,    27,    -1
+};
+
+/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+static const unsigned short int yyrline[] =
+{
+       0,   105,   105,   107,   109,   110,   111,   112,   113,   114,
+     115,   119,   123,   123,   123,   123,   123,   123,   123,   127,
+     128,   129,   130,   131,   132,   136,   137,   143,   151,   157,
+     165,   175,   177,   178,   179,   180,   181,   182,   185,   193,
+     199,   209,   215,   221,   224,   226,   237,   238,   243,   252,
+     257,   265,   268,   270,   271,   272,   273,   274,   277,   283,
+     294,   300,   310,   312,   317,   325,   333,   336,   338,   339,
+     340,   345,   352,   357,   365,   368,   370,   371,   372,   375,
+     383,   390,   397,   403,   410,   412,   413,   414,   417,   422,
+     427,   435,   437,   442,   443,   446,   447,   448,   452,   453,
+     456,   457,   460,   461,   462,   463,   464,   465,   466,   469,
+     470
+};
+#endif
+
+#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
+/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
+   First, the terminals, then, starting at YYNTOKENS, nonterminals. */
+static const char *const yytname[] =
+{
+  "$end", "error", "$undefined", "T_MAINMENU", "T_MENU", "T_ENDMENU",
+  "T_SOURCE", "T_CHOICE", "T_ENDCHOICE", "T_COMMENT", "T_CONFIG",
+  "T_MENUCONFIG", "T_HELP", "T_HELPTEXT", "T_IF", "T_ENDIF", "T_DEPENDS",
+  "T_REQUIRES", "T_OPTIONAL", "T_PROMPT", "T_TYPE", "T_DEFAULT",
+  "T_SELECT", "T_RANGE", "T_OPTION", "T_ON", "T_WORD", "T_WORD_QUOTE",
+  "T_UNEQUAL", "T_CLOSE_PAREN", "T_OPEN_PAREN", "T_EOL", "T_OR", "T_AND",
+  "T_EQUAL", "T_NOT", "$accept", "input", "stmt_list", "option_name",
+  "common_stmt", "option_error", "config_entry_start", "config_stmt",
+  "menuconfig_entry_start", "menuconfig_stmt", "config_option_list",
+  "config_option", "symbol_option", "symbol_option_list",
+  "symbol_option_arg", "choice", "choice_entry", "choice_end",
+  "choice_stmt", "choice_option_list", "choice_option", "choice_block",
+  "if_entry", "if_end", "if_stmt", "if_block", "menu", "menu_entry",
+  "menu_end", "menu_stmt", "menu_block", "source_stmt", "comment",
+  "comment_stmt", "help_start", "help", "depends_list", "depends",
+  "prompt_stmt_opt", "prompt", "end", "nl", "if_expr", "expr", "symbol", 0
+};
+#endif
+
+# ifdef YYPRINT
+/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
+   token YYLEX-NUM.  */
+static const unsigned short int yytoknum[] =
+{
+       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
+     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
+     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
+     285,   286,   287,   288,   289,   290
+};
+# endif
+
+/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const unsigned char yyr1[] =
+{
+       0,    36,    37,    38,    38,    38,    38,    38,    38,    38,
+      38,    38,    39,    39,    39,    39,    39,    39,    39,    40,
+      40,    40,    40,    40,    40,    41,    41,    42,    43,    44,
+      45,    46,    46,    46,    46,    46,    46,    46,    47,    47,
+      47,    47,    47,    48,    49,    49,    50,    50,    51,    52,
+      53,    54,    55,    55,    55,    55,    55,    55,    56,    56,
+      56,    56,    57,    57,    58,    59,    60,    61,    61,    61,
+      61,    62,    63,    64,    65,    66,    66,    66,    66,    67,
+      68,    69,    70,    71,    72,    72,    72,    72,    73,    73,
+      73,    74,    74,    75,    75,    76,    76,    76,    77,    77,
+      78,    78,    79,    79,    79,    79,    79,    79,    79,    80,
+      80
+};
+
+/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
+static const unsigned char yyr2[] =
+{
+       0,     2,     1,     0,     2,     2,     2,     4,     2,     4,
+       4,     3,     1,     1,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     3,     2,     3,     2,     3,
+       2,     0,     2,     2,     2,     2,     2,     2,     3,     4,
+       4,     4,     5,     3,     0,     3,     0,     2,     2,     2,
+       1,     3,     0,     2,     2,     2,     2,     2,     4,     3,
+       2,     4,     0,     2,     3,     1,     3,     0,     2,     2,
+       2,     3,     2,     1,     3,     0,     2,     2,     2,     3,
+       3,     2,     2,     2,     0,     2,     2,     2,     4,     3,
+       3,     0,     2,     1,     1,     2,     2,     2,     1,     2,
+       0,     2,     1,     3,     3,     3,     2,     3,     3,     1,
+       1
+};
+
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
+   means the default is an error.  */
+static const unsigned char yydefact[] =
+{
+       3,     0,     0,     1,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,    12,    16,    13,    14,
+      18,    15,    17,     0,    19,     0,     4,    31,    22,    31,
+      23,    52,    62,     5,    67,    20,    84,    75,     6,    24,
+      84,    21,     8,    11,    93,    94,     0,     0,    95,     0,
+      48,    96,     0,     0,     0,   109,   110,     0,     0,     0,
+     102,    97,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,    98,     7,    71,    79,    80,    27,    29,     0,
+     106,     0,     0,    64,     0,     0,     9,    10,     0,     0,
+       0,     0,     0,    91,     0,     0,     0,    44,     0,    37,
+      36,    32,    33,     0,    35,    34,     0,     0,    91,     0,
+      56,    57,    53,    55,    54,    63,    51,    50,    68,    70,
+      66,    69,    65,    86,    87,    85,    76,    78,    74,    77,
+      73,    99,   105,   107,   108,   104,   103,    26,    82,     0,
+       0,     0,   100,     0,   100,   100,   100,     0,     0,     0,
+      83,    60,   100,     0,   100,     0,    89,    90,     0,     0,
+      38,    92,     0,     0,   100,    46,    43,    25,     0,    59,
+       0,    88,   101,    39,    40,    41,     0,     0,    45,    58,
+      61,    42,    47
+};
+
+/* YYDEFGOTO[NTERM-NUM]. */
+static const short int yydefgoto[] =
+{
+      -1,     1,     2,    25,    26,   100,    27,    28,    29,    30,
+      64,   101,   102,   148,   178,    31,    32,   116,    33,    66,
+     112,    67,    34,   120,    35,    68,    36,    37,   128,    38,
+      70,    39,    40,    41,   103,   104,    69,   105,   143,   144,
+      42,    73,   159,    59,    60
+};
+
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
+#define YYPACT_NINF -135
+static const short int yypact[] =
+{
+    -135,     2,   170,  -135,   -14,    56,    56,    -8,    56,    24,
+      67,    56,     7,    14,    62,    97,  -135,  -135,  -135,  -135,
+    -135,  -135,  -135,   156,  -135,   166,  -135,  -135,  -135,  -135,
+    -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,
+    -135,  -135,  -135,  -135,  -135,  -135,   138,   151,  -135,   152,
+    -135,  -135,   163,   167,   176,  -135,  -135,    62,    62,   185,
+     -19,  -135,   188,   190,    42,   103,   194,    85,    70,   222,
+      70,   132,  -135,   191,  -135,  -135,  -135,  -135,  -135,   127,
+    -135,    62,    62,   191,   104,   104,  -135,  -135,   193,   203,
+       9,    62,    56,    56,    62,   161,   104,  -135,   196,  -135,
+    -135,  -135,  -135,   233,  -135,  -135,   204,    56,    56,   221,
+    -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,
+    -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,
+    -135,  -135,  -135,   219,  -135,  -135,  -135,  -135,  -135,    62,
+     209,   212,   240,   224,   240,    -1,   240,   104,    41,   225,
+    -135,  -135,   240,   226,   240,   218,  -135,  -135,    62,   227,
+    -135,  -135,   228,   229,   240,   230,  -135,  -135,   231,  -135,
+     232,  -135,   112,  -135,  -135,  -135,   234,    56,  -135,  -135,
+    -135,  -135,  -135
+};
+
+/* YYPGOTO[NTERM-NUM].  */
+static const short int yypgoto[] =
+{
+    -135,  -135,  -135,  -135,    94,   -45,  -135,  -135,  -135,  -135,
+     237,  -135,  -135,  -135,  -135,  -135,  -135,  -135,   -54,  -135,
+    -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,     1,
+    -135,  -135,  -135,  -135,  -135,   195,   235,   -44,   159,    -5,
+      98,   210,  -134,   -53,   -77
+};
+
+/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule which
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
+#define YYTABLE_NINF -82
+static const short int yytable[] =
+{
+      46,    47,     3,    49,    79,    80,    52,   135,   136,    84,
+     161,   162,   163,   158,   119,    85,   127,    43,   168,   147,
+     170,   111,   114,    48,   124,   125,   124,   125,   133,   134,
+     176,    81,    82,    53,   139,    55,    56,   140,   141,    57,
+      54,   145,   -28,    88,    58,   -28,   -28,   -28,   -28,   -28,
+     -28,   -28,   -28,   -28,    89,    50,   -28,   -28,    90,    91,
+     -28,    92,    93,    94,    95,    96,    97,   165,    98,   121,
+     164,   129,   166,    99,     6,     7,     8,     9,    10,    11,
+      12,    13,    44,    45,    14,    15,   155,   142,    55,    56,
+       7,     8,    57,    10,    11,    12,    13,    58,    51,    14,
+      15,    24,   152,   -30,    88,   172,   -30,   -30,   -30,   -30,
+     -30,   -30,   -30,   -30,   -30,    89,    24,   -30,   -30,    90,
+      91,   -30,    92,    93,    94,    95,    96,    97,    61,    98,
+      55,    56,   -81,    88,    99,   -81,   -81,   -81,   -81,   -81,
+     -81,   -81,   -81,   -81,    81,    82,   -81,   -81,    90,    91,
+     -81,   -81,   -81,   -81,   -81,   -81,   132,    62,    98,    81,
+      82,   115,   118,   123,   126,   117,   122,    63,   130,    72,
+      -2,     4,   182,     5,     6,     7,     8,     9,    10,    11,
+      12,    13,    74,    75,    14,    15,    16,   146,    17,    18,
+      19,    20,    21,    22,    76,    88,    23,   149,    77,   -49,
+     -49,    24,   -49,   -49,   -49,   -49,    89,    78,   -49,   -49,
+      90,    91,   106,   107,   108,   109,    72,    81,    82,    86,
+      98,    87,   131,    88,   137,   110,   -72,   -72,   -72,   -72,
+     -72,   -72,   -72,   -72,   138,   151,   -72,   -72,    90,    91,
+     156,    81,    82,   157,    81,    82,   150,   154,    98,   171,
+      81,    82,    82,   123,   158,   160,   167,   169,   173,   174,
+     175,   113,   179,   180,   177,   181,    65,   153,     0,    83,
+       0,     0,     0,     0,     0,    71
+};
+
+static const short int yycheck[] =
+{
+       5,     6,     0,     8,    57,    58,    11,    84,    85,    28,
+     144,   145,   146,    14,    68,    34,    70,    31,   152,    96,
+     154,    66,    66,    31,    69,    69,    71,    71,    81,    82,
+     164,    32,    33,    26,    25,    26,    27,    90,    91,    30,
+      26,    94,     0,     1,    35,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    12,    31,    14,    15,    16,    17,
+      18,    19,    20,    21,    22,    23,    24,    26,    26,    68,
+     147,    70,    31,    31,     4,     5,     6,     7,     8,     9,
+      10,    11,    26,    27,    14,    15,   139,    92,    26,    27,
+       5,     6,    30,     8,     9,    10,    11,    35,    31,    14,
+      15,    31,   107,     0,     1,   158,     3,     4,     5,     6,
+       7,     8,     9,    10,    11,    12,    31,    14,    15,    16,
+      17,    18,    19,    20,    21,    22,    23,    24,    31,    26,
+      26,    27,     0,     1,    31,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    32,    33,    14,    15,    16,    17,
+      18,    19,    20,    21,    22,    23,    29,     1,    26,    32,
+      33,    67,    68,    31,    70,    67,    68,     1,    70,    31,
+       0,     1,   177,     3,     4,     5,     6,     7,     8,     9,
+      10,    11,    31,    31,    14,    15,    16,    26,    18,    19,
+      20,    21,    22,    23,    31,     1,    26,     1,    31,     5,
+       6,    31,     8,     9,    10,    11,    12,    31,    14,    15,
+      16,    17,    18,    19,    20,    21,    31,    32,    33,    31,
+      26,    31,    31,     1,    31,    31,     4,     5,     6,     7,
+       8,     9,    10,    11,    31,    31,    14,    15,    16,    17,
+      31,    32,    33,    31,    32,    33,    13,    26,    26,    31,
+      32,    33,    33,    31,    14,    31,    31,    31,    31,    31,
+      31,    66,    31,    31,    34,    31,    29,   108,    -1,    59,
+      -1,    -1,    -1,    -1,    -1,    40
+};
+
+/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+   symbol of state STATE-NUM.  */
+static const unsigned char yystos[] =
+{
+       0,    37,    38,     0,     1,     3,     4,     5,     6,     7,
+       8,     9,    10,    11,    14,    15,    16,    18,    19,    20,
+      21,    22,    23,    26,    31,    39,    40,    42,    43,    44,
+      45,    51,    52,    54,    58,    60,    62,    63,    65,    67,
+      68,    69,    76,    31,    26,    27,    75,    75,    31,    75,
+      31,    31,    75,    26,    26,    26,    27,    30,    35,    79,
+      80,    31,     1,     1,    46,    46,    55,    57,    61,    72,
+      66,    72,    31,    77,    31,    31,    31,    31,    31,    79,
+      79,    32,    33,    77,    28,    34,    31,    31,     1,    12,
+      16,    17,    19,    20,    21,    22,    23,    24,    26,    31,
+      41,    47,    48,    70,    71,    73,    18,    19,    20,    21,
+      31,    41,    56,    71,    73,    40,    53,    76,    40,    54,
+      59,    65,    76,    31,    41,    73,    40,    54,    64,    65,
+      76,    31,    29,    79,    79,    80,    80,    31,    31,    25,
+      79,    79,    75,    74,    75,    79,    26,    80,    49,     1,
+      13,    31,    75,    74,    26,    79,    31,    31,    14,    78,
+      31,    78,    78,    78,    80,    26,    31,    31,    78,    31,
+      78,    31,    79,    31,    31,    31,    78,    34,    50,    31,
+      31,    31,    75
+};
+
+#define yyerrok		(yyerrstatus = 0)
+#define yyclearin	(yychar = YYEMPTY)
+#define YYEMPTY		(-2)
+#define YYEOF		0
+
+#define YYACCEPT	goto yyacceptlab
+#define YYABORT		goto yyabortlab
+#define YYERROR		goto yyerrorlab
+
+
+/* Like YYERROR except do call yyerror.  This remains here temporarily
+   to ease the transition to the new meaning of YYERROR, for GCC.
+   Once GCC version 2 has supplanted version 1, this can go.  */
+
+#define YYFAIL		goto yyerrlab
+
+#define YYRECOVERING()  (!!yyerrstatus)
+
+#define YYBACKUP(Token, Value)					\
+do								\
+  if (yychar == YYEMPTY && yylen == 1)				\
+    {								\
+      yychar = (Token);						\
+      yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
+      YYPOPSTACK;						\
+      goto yybackup;						\
+    }								\
+  else								\
+    {								\
+      yyerror (YY_("syntax error: cannot back up")); \
+      YYERROR;							\
+    }								\
+while (0)
+
+
+#define YYTERROR	1
+#define YYERRCODE	256
+
+
+/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
+   If N is 0, then set CURRENT to the empty location which ends
+   the previous symbol: RHS[0] (always defined).  */
+
+#define YYRHSLOC(Rhs, K) ((Rhs)[K])
+#ifndef YYLLOC_DEFAULT
+# define YYLLOC_DEFAULT(Current, Rhs, N)				\
+    do									\
+      if (N)								\
+	{								\
+	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
+	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
+	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
+	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
+	}								\
+      else								\
+	{								\
+	  (Current).first_line   = (Current).last_line   =		\
+	    YYRHSLOC (Rhs, 0).last_line;				\
+	  (Current).first_column = (Current).last_column =		\
+	    YYRHSLOC (Rhs, 0).last_column;				\
+	}								\
+    while (0)
+#endif
+
+
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
+
+#ifndef YY_LOCATION_PRINT
+# if YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+              (Loc).first_line, (Loc).first_column,	\
+              (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
+#endif
+
+
+/* YYLEX -- calling `yylex' with the right arguments.  */
+
+#ifdef YYLEX_PARAM
+# define YYLEX yylex (YYLEX_PARAM)
+#else
+# define YYLEX yylex ()
+#endif
+
+/* Enable debugging if requested.  */
+#if YYDEBUG
+
+# ifndef YYFPRINTF
+#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYFPRINTF fprintf
+# endif
+
+# define YYDPRINTF(Args)			\
+do {						\
+  if (yydebug)					\
+    YYFPRINTF Args;				\
+} while (0)
+
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)		\
+do {								\
+  if (yydebug)							\
+    {								\
+      YYFPRINTF (stderr, "%s ", Title);				\
+      yysymprint (stderr,					\
+                  Type, Value);	\
+      YYFPRINTF (stderr, "\n");					\
+    }								\
+} while (0)
+
+/*------------------------------------------------------------------.
+| yy_stack_print -- Print the state stack from its BOTTOM up to its |
+| TOP (included).                                                   |
+`------------------------------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yy_stack_print (short int *bottom, short int *top)
+#else
+static void
+yy_stack_print (bottom, top)
+    short int *bottom;
+    short int *top;
+#endif
+{
+  YYFPRINTF (stderr, "Stack now");
+  for (/* Nothing. */; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
+  YYFPRINTF (stderr, "\n");
+}
+
+# define YY_STACK_PRINT(Bottom, Top)				\
+do {								\
+  if (yydebug)							\
+    yy_stack_print ((Bottom), (Top));				\
+} while (0)
+
+
+/*------------------------------------------------.
+| Report that the YYRULE is going to be reduced.  |
+`------------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yy_reduce_print (int yyrule)
+#else
+static void
+yy_reduce_print (yyrule)
+    int yyrule;
+#endif
+{
+  int yyi;
+  unsigned long int yylno = yyrline[yyrule];
+  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu), ",
+             yyrule - 1, yylno);
+  /* Print the symbols being reduced, and their result.  */
+  for (yyi = yyprhs[yyrule]; 0 <= yyrhs[yyi]; yyi++)
+    YYFPRINTF (stderr, "%s ", yytname[yyrhs[yyi]]);
+  YYFPRINTF (stderr, "-> %s\n", yytname[yyr1[yyrule]]);
+}
+
+# define YY_REDUCE_PRINT(Rule)		\
+do {					\
+  if (yydebug)				\
+    yy_reduce_print (Rule);		\
+} while (0)
+
+/* Nonzero means print parse trace.  It is left uninitialized so that
+   multiple parsers can coexist.  */
+int yydebug;
+#else /* !YYDEBUG */
+# define YYDPRINTF(Args)
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
+# define YY_STACK_PRINT(Bottom, Top)
+# define YY_REDUCE_PRINT(Rule)
+#endif /* !YYDEBUG */
+
+
+/* YYINITDEPTH -- initial size of the parser's stacks.  */
+#ifndef	YYINITDEPTH
+# define YYINITDEPTH 200
+#endif
+
+/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
+   if the built-in stack extension method is used).
+
+   Do not make this value too large; the results are undefined if
+   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
+   evaluated with infinite-precision integer arithmetic.  */
+
+#ifndef YYMAXDEPTH
+# define YYMAXDEPTH 10000
+#endif
+
+
+
+#if YYERROR_VERBOSE
+
+# ifndef yystrlen
+#  if defined (__GLIBC__) && defined (_STRING_H)
+#   define yystrlen strlen
+#  else
+/* Return the length of YYSTR.  */
+static YYSIZE_T
+#   if defined (__STDC__) || defined (__cplusplus)
+yystrlen (const char *yystr)
+#   else
+yystrlen (yystr)
+     const char *yystr;
+#   endif
+{
+  const char *yys = yystr;
+
+  while (*yys++ != '\0')
+    continue;
+
+  return yys - yystr - 1;
+}
+#  endif
+# endif
+
+# ifndef yystpcpy
+#  if defined (__GLIBC__) && defined (_STRING_H) && defined (_GNU_SOURCE)
+#   define yystpcpy stpcpy
+#  else
+/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
+   YYDEST.  */
+static char *
+#   if defined (__STDC__) || defined (__cplusplus)
+yystpcpy (char *yydest, const char *yysrc)
+#   else
+yystpcpy (yydest, yysrc)
+     char *yydest;
+     const char *yysrc;
+#   endif
+{
+  char *yyd = yydest;
+  const char *yys = yysrc;
+
+  while ((*yyd++ = *yys++) != '\0')
+    continue;
+
+  return yyd - 1;
+}
+#  endif
+# endif
+
+# ifndef yytnamerr
+/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
+   quotes and backslashes, so that it's suitable for yyerror.  The
+   heuristic is that double-quoting is unnecessary unless the string
+   contains an apostrophe, a comma, or backslash (other than
+   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
+   null, do not copy; instead, return the length of what the result
+   would have been.  */
+static YYSIZE_T
+yytnamerr (char *yyres, const char *yystr)
+{
+  if (*yystr == '"')
+    {
+      size_t yyn = 0;
+      char const *yyp = yystr;
+
+      for (;;)
+	switch (*++yyp)
+	  {
+	  case '\'':
+	  case ',':
+	    goto do_not_strip_quotes;
+
+	  case '\\':
+	    if (*++yyp != '\\')
+	      goto do_not_strip_quotes;
+	    /* Fall through.  */
+	  default:
+	    if (yyres)
+	      yyres[yyn] = *yyp;
+	    yyn++;
+	    break;
+
+	  case '"':
+	    if (yyres)
+	      yyres[yyn] = '\0';
+	    return yyn;
+	  }
+    do_not_strip_quotes: ;
+    }
+
+  if (! yyres)
+    return yystrlen (yystr);
+
+  return yystpcpy (yyres, yystr) - yyres;
+}
+# endif
+
+#endif /* YYERROR_VERBOSE */
+
+
+
+#if YYDEBUG
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yysymprint (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  /* Pacify ``unused variable'' warnings.  */
+  (void) yyvaluep;
+
+  if (yytype < YYNTOKENS)
+    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
+  else
+    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+
+
+# ifdef YYPRINT
+  if (yytype < YYNTOKENS)
+    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
+# endif
+  switch (yytype)
+    {
+      default:
+        break;
+    }
+  YYFPRINTF (yyoutput, ")");
+}
+
+#endif /* ! YYDEBUG */
+/*-----------------------------------------------.
+| Release the memory associated to this symbol.  |
+`-----------------------------------------------*/
+
+#if defined (__STDC__) || defined (__cplusplus)
+static void
+yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yydestruct (yymsg, yytype, yyvaluep)
+    const char *yymsg;
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  /* Pacify ``unused variable'' warnings.  */
+  (void) yyvaluep;
+
+  if (!yymsg)
+    yymsg = "Deleting";
+  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
+
+  switch (yytype)
+    {
+      case 52: /* "choice_entry" */
+
+        {
+	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
+		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
+	if (current_menu == (yyvaluep->menu))
+		menu_end_menu();
+};
+
+        break;
+      case 58: /* "if_entry" */
+
+        {
+	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
+		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
+	if (current_menu == (yyvaluep->menu))
+		menu_end_menu();
+};
+
+        break;
+      case 63: /* "menu_entry" */
+
+        {
+	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
+		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
+	if (current_menu == (yyvaluep->menu))
+		menu_end_menu();
+};
+
+        break;
+
+      default:
+        break;
+    }
+}
+
+
+/* Prevent warnings from -Wmissing-prototypes.  */
+
+#ifdef YYPARSE_PARAM
+# if defined (__STDC__) || defined (__cplusplus)
+int yyparse (void *YYPARSE_PARAM);
+# else
+int yyparse ();
+# endif
+#else /* ! YYPARSE_PARAM */
+#if defined (__STDC__) || defined (__cplusplus)
+int yyparse (void);
+#else
+int yyparse ();
+#endif
+#endif /* ! YYPARSE_PARAM */
+
+
+
+/* The look-ahead symbol.  */
+int yychar;
+
+/* The semantic value of the look-ahead symbol.  */
+YYSTYPE yylval;
+
+/* Number of syntax errors so far.  */
+int yynerrs;
+
+
+
+/*----------.
+| yyparse.  |
+`----------*/
+
+#ifdef YYPARSE_PARAM
+# if defined (__STDC__) || defined (__cplusplus)
+int yyparse (void *YYPARSE_PARAM)
+# else
+int yyparse (YYPARSE_PARAM)
+  void *YYPARSE_PARAM;
+# endif
+#else /* ! YYPARSE_PARAM */
+#if defined (__STDC__) || defined (__cplusplus)
+int
+yyparse (void)
+#else
+int
+yyparse ()
+    ;
+#endif
+#endif
+{
+  
+  int yystate;
+  int yyn;
+  int yyresult;
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
+
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  short int yyssa[YYINITDEPTH];
+  short int *yyss = yyssa;
+  short int *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
+#define YYPOPSTACK   (yyvsp--, yyssp--)
+
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
+  /* When reducing, the number of symbols on the RHS of the reduced
+     rule.  */
+  int yylen;
+
+  YYDPRINTF ((stderr, "Starting parse\n"));
+
+  yystate = 0;
+  yyerrstatus = 0;
+  yynerrs = 0;
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
+
+  /* Initialize stack pointers.
+     Waste one element of value and location stack
+     so that they stay on the same level as the state stack.
+     The wasted elements are never initialized.  */
+
+  yyssp = yyss;
+  yyvsp = yyvs;
+
+  goto yysetstate;
+
+/*------------------------------------------------------------.
+| yynewstate -- Push a new state, which is found in yystate.  |
+`------------------------------------------------------------*/
+ yynewstate:
+  /* In all cases, when you get here, the value and location stacks
+     have just been pushed. so pushing a state here evens the stacks.
+     */
+  yyssp++;
+
+ yysetstate:
+  *yyssp = yystate;
+
+  if (yyss + yystacksize - 1 <= yyssp)
+    {
+      /* Get the current used size of the three stacks, in elements.  */
+      YYSIZE_T yysize = yyssp - yyss + 1;
+
+#ifdef yyoverflow
+      {
+	/* Give user a chance to reallocate the stack. Use copies of
+	   these so that the &'s don't force the real ones into
+	   memory.  */
+	YYSTYPE *yyvs1 = yyvs;
+	short int *yyss1 = yyss;
+
+
+	/* Each stack pointer address is followed by the size of the
+	   data in use in that stack, in bytes.  This used to be a
+	   conditional around just the two extra args, but that might
+	   be undefined if yyoverflow is a macro.  */
+	yyoverflow (YY_("memory exhausted"),
+		    &yyss1, yysize * sizeof (*yyssp),
+		    &yyvs1, yysize * sizeof (*yyvsp),
+
+		    &yystacksize);
+
+	yyss = yyss1;
+	yyvs = yyvs1;
+      }
+#else /* no yyoverflow */
+# ifndef YYSTACK_RELOCATE
+      goto yyexhaustedlab;
+# else
+      /* Extend the stack our own way.  */
+      if (YYMAXDEPTH <= yystacksize)
+	goto yyexhaustedlab;
+      yystacksize *= 2;
+      if (YYMAXDEPTH < yystacksize)
+	yystacksize = YYMAXDEPTH;
+
+      {
+	short int *yyss1 = yyss;
+	union yyalloc *yyptr =
+	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
+	if (! yyptr)
+	  goto yyexhaustedlab;
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
+#  undef YYSTACK_RELOCATE
+	if (yyss1 != yyssa)
+	  YYSTACK_FREE (yyss1);
+      }
+# endif
+#endif /* no yyoverflow */
+
+      yyssp = yyss + yysize - 1;
+      yyvsp = yyvs + yysize - 1;
+
+
+      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
+		  (unsigned long int) yystacksize));
+
+      if (yyss + yystacksize - 1 <= yyssp)
+	YYABORT;
+    }
+
+  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
+
+  goto yybackup;
+
+/*-----------.
+| yybackup.  |
+`-----------*/
+yybackup:
+
+/* Do appropriate processing given the current state.  */
+/* Read a look-ahead token if we need one and don't already have one.  */
+/* yyresume: */
+
+  /* First try to decide what to do without reference to look-ahead token.  */
+
+  yyn = yypact[yystate];
+  if (yyn == YYPACT_NINF)
+    goto yydefault;
+
+  /* Not known => get a look-ahead token if don't already have one.  */
+
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
+  if (yychar == YYEMPTY)
+    {
+      YYDPRINTF ((stderr, "Reading a token: "));
+      yychar = YYLEX;
+    }
+
+  if (yychar <= YYEOF)
+    {
+      yychar = yytoken = YYEOF;
+      YYDPRINTF ((stderr, "Now at end of input.\n"));
+    }
+  else
+    {
+      yytoken = YYTRANSLATE (yychar);
+      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
+    }
+
+  /* If the proper action on seeing token YYTOKEN is to reduce or to
+     detect an error, take that action.  */
+  yyn += yytoken;
+  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
+    goto yydefault;
+  yyn = yytable[yyn];
+  if (yyn <= 0)
+    {
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
+      yyn = -yyn;
+      goto yyreduce;
+    }
+
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
+  /* Shift the look-ahead token.  */
+  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
+
+  /* Discard the token being shifted unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
+
+  *++yyvsp = yylval;
+
+
+  /* Count tokens shifted since error; after three, turn off error
+     status.  */
+  if (yyerrstatus)
+    yyerrstatus--;
+
+  yystate = yyn;
+  goto yynewstate;
+
+
+/*-----------------------------------------------------------.
+| yydefault -- do the default action for the current state.  |
+`-----------------------------------------------------------*/
+yydefault:
+  yyn = yydefact[yystate];
+  if (yyn == 0)
+    goto yyerrlab;
+  goto yyreduce;
+
+
+/*-----------------------------.
+| yyreduce -- Do a reduction.  |
+`-----------------------------*/
+yyreduce:
+  /* yyn is the number of a rule to reduce with.  */
+  yylen = yyr2[yyn];
+
+  /* If YYLEN is nonzero, implement the default value of the action:
+     `$$ = $1'.
+
+     Otherwise, the following line sets YYVAL to garbage.
+     This behavior is undocumented and Bison
+     users should not rely upon it.  Assigning to YYVAL
+     unconditionally makes the parser a bit smaller, and it avoids a
+     GCC warning that YYVAL may be used uninitialized.  */
+  yyval = yyvsp[1-yylen];
+
+
+  YY_REDUCE_PRINT (yyn);
+  switch (yyn)
+    {
+        case 8:
+
+    { zconf_error("unexpected end statement"); ;}
+    break;
+
+  case 9:
+
+    { zconf_error("unknown statement \"%s\"", (yyvsp[-2].string)); ;}
+    break;
+
+  case 10:
+
+    {
+	zconf_error("unexpected option \"%s\"", kconf_id_strings + (yyvsp[-2].id)->name);
+;}
+    break;
+
+  case 11:
+
+    { zconf_error("invalid statement"); ;}
+    break;
+
+  case 25:
+
+    { zconf_error("unknown option \"%s\"", (yyvsp[-2].string)); ;}
+    break;
+
+  case 26:
+
+    { zconf_error("invalid option"); ;}
+    break;
+
+  case 27:
+
+    {
+	struct symbol *sym = sym_lookup((yyvsp[-1].string), 0);
+	sym->flags |= SYMBOL_OPTIONAL;
+	menu_add_entry(sym);
+	printd(DEBUG_PARSE, "%s:%d:config %s\n", zconf_curname(), zconf_lineno(), (yyvsp[-1].string));
+;}
+    break;
+
+  case 28:
+
+    {
+	menu_end_entry();
+	printd(DEBUG_PARSE, "%s:%d:endconfig\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 29:
+
+    {
+	struct symbol *sym = sym_lookup((yyvsp[-1].string), 0);
+	sym->flags |= SYMBOL_OPTIONAL;
+	menu_add_entry(sym);
+	printd(DEBUG_PARSE, "%s:%d:menuconfig %s\n", zconf_curname(), zconf_lineno(), (yyvsp[-1].string));
+;}
+    break;
+
+  case 30:
+
+    {
+	if (current_entry->prompt)
+		current_entry->prompt->type = P_MENU;
+	else
+		zconfprint("warning: menuconfig statement without prompt");
+	menu_end_entry();
+	printd(DEBUG_PARSE, "%s:%d:endconfig\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 38:
+
+    {
+	menu_set_type((yyvsp[-2].id)->stype);
+	printd(DEBUG_PARSE, "%s:%d:type(%u)\n",
+		zconf_curname(), zconf_lineno(),
+		(yyvsp[-2].id)->stype);
+;}
+    break;
+
+  case 39:
+
+    {
+	menu_add_prompt(P_PROMPT, (yyvsp[-2].string), (yyvsp[-1].expr));
+	printd(DEBUG_PARSE, "%s:%d:prompt\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 40:
+
+    {
+	menu_add_expr(P_DEFAULT, (yyvsp[-2].expr), (yyvsp[-1].expr));
+	if ((yyvsp[-3].id)->stype != S_UNKNOWN)
+		menu_set_type((yyvsp[-3].id)->stype);
+	printd(DEBUG_PARSE, "%s:%d:default(%u)\n",
+		zconf_curname(), zconf_lineno(),
+		(yyvsp[-3].id)->stype);
+;}
+    break;
+
+  case 41:
+
+    {
+	menu_add_symbol(P_SELECT, sym_lookup((yyvsp[-2].string), 0), (yyvsp[-1].expr));
+	printd(DEBUG_PARSE, "%s:%d:select\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 42:
+
+    {
+	menu_add_expr(P_RANGE, expr_alloc_comp(E_RANGE,(yyvsp[-3].symbol), (yyvsp[-2].symbol)), (yyvsp[-1].expr));
+	printd(DEBUG_PARSE, "%s:%d:range\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 45:
+
+    {
+	struct kconf_id *id = kconf_id_lookup((yyvsp[-1].string), strlen((yyvsp[-1].string)));
+	if (id && id->flags & TF_OPTION)
+		menu_add_option(id->token, (yyvsp[0].string));
+	else
+		zconfprint("warning: ignoring unknown option %s", (yyvsp[-1].string));
+	free((yyvsp[-1].string));
+;}
+    break;
+
+  case 46:
+
+    { (yyval.string) = NULL; ;}
+    break;
+
+  case 47:
+
+    { (yyval.string) = (yyvsp[0].string); ;}
+    break;
+
+  case 48:
+
+    {
+	struct symbol *sym = sym_lookup(NULL, 0);
+	sym->flags |= SYMBOL_CHOICE;
+	menu_add_entry(sym);
+	menu_add_expr(P_CHOICE, NULL, NULL);
+	printd(DEBUG_PARSE, "%s:%d:choice\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 49:
+
+    {
+	(yyval.menu) = menu_add_menu();
+;}
+    break;
+
+  case 50:
+
+    {
+	if (zconf_endtoken((yyvsp[0].id), T_CHOICE, T_ENDCHOICE)) {
+		menu_end_menu();
+		printd(DEBUG_PARSE, "%s:%d:endchoice\n", zconf_curname(), zconf_lineno());
+	}
+;}
+    break;
+
+  case 58:
+
+    {
+	menu_add_prompt(P_PROMPT, (yyvsp[-2].string), (yyvsp[-1].expr));
+	printd(DEBUG_PARSE, "%s:%d:prompt\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 59:
+
+    {
+	if ((yyvsp[-2].id)->stype == S_BOOLEAN || (yyvsp[-2].id)->stype == S_TRISTATE) {
+		menu_set_type((yyvsp[-2].id)->stype);
+		printd(DEBUG_PARSE, "%s:%d:type(%u)\n",
+			zconf_curname(), zconf_lineno(),
+			(yyvsp[-2].id)->stype);
+	} else
+		YYERROR;
+;}
+    break;
+
+  case 60:
+
+    {
+	current_entry->sym->flags |= SYMBOL_OPTIONAL;
+	printd(DEBUG_PARSE, "%s:%d:optional\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 61:
+
+    {
+	if ((yyvsp[-3].id)->stype == S_UNKNOWN) {
+		menu_add_symbol(P_DEFAULT, sym_lookup((yyvsp[-2].string), 0), (yyvsp[-1].expr));
+		printd(DEBUG_PARSE, "%s:%d:default\n",
+			zconf_curname(), zconf_lineno());
+	} else
+		YYERROR;
+;}
+    break;
+
+  case 64:
+
+    {
+	printd(DEBUG_PARSE, "%s:%d:if\n", zconf_curname(), zconf_lineno());
+	menu_add_entry(NULL);
+	menu_add_dep((yyvsp[-1].expr));
+	(yyval.menu) = menu_add_menu();
+;}
+    break;
+
+  case 65:
+
+    {
+	if (zconf_endtoken((yyvsp[0].id), T_IF, T_ENDIF)) {
+		menu_end_menu();
+		printd(DEBUG_PARSE, "%s:%d:endif\n", zconf_curname(), zconf_lineno());
+	}
+;}
+    break;
+
+  case 71:
+
+    {
+	menu_add_entry(NULL);
+	menu_add_prompt(P_MENU, (yyvsp[-1].string), NULL);
+	printd(DEBUG_PARSE, "%s:%d:menu\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 72:
+
+    {
+	(yyval.menu) = menu_add_menu();
+;}
+    break;
+
+  case 73:
+
+    {
+	if (zconf_endtoken((yyvsp[0].id), T_MENU, T_ENDMENU)) {
+		menu_end_menu();
+		printd(DEBUG_PARSE, "%s:%d:endmenu\n", zconf_curname(), zconf_lineno());
+	}
+;}
+    break;
+
+  case 79:
+
+    {
+	printd(DEBUG_PARSE, "%s:%d:source %s\n", zconf_curname(), zconf_lineno(), (yyvsp[-1].string));
+	zconf_nextfile((yyvsp[-1].string));
+;}
+    break;
+
+  case 80:
+
+    {
+	menu_add_entry(NULL);
+	menu_add_prompt(P_COMMENT, (yyvsp[-1].string), NULL);
+	printd(DEBUG_PARSE, "%s:%d:comment\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 81:
+
+    {
+	menu_end_entry();
+;}
+    break;
+
+  case 82:
+
+    {
+	printd(DEBUG_PARSE, "%s:%d:help\n", zconf_curname(), zconf_lineno());
+	zconf_starthelp();
+;}
+    break;
+
+  case 83:
+
+    {
+	current_entry->help = (yyvsp[0].string);
+;}
+    break;
+
+  case 88:
+
+    {
+	menu_add_dep((yyvsp[-1].expr));
+	printd(DEBUG_PARSE, "%s:%d:depends on\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 89:
+
+    {
+	menu_add_dep((yyvsp[-1].expr));
+	printd(DEBUG_PARSE, "%s:%d:depends\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 90:
+
+    {
+	menu_add_dep((yyvsp[-1].expr));
+	printd(DEBUG_PARSE, "%s:%d:requires\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 92:
+
+    {
+	menu_add_prompt(P_PROMPT, (yyvsp[-1].string), (yyvsp[0].expr));
+;}
+    break;
+
+  case 95:
+
+    { (yyval.id) = (yyvsp[-1].id); ;}
+    break;
+
+  case 96:
+
+    { (yyval.id) = (yyvsp[-1].id); ;}
+    break;
+
+  case 97:
+
+    { (yyval.id) = (yyvsp[-1].id); ;}
+    break;
+
+  case 100:
+
+    { (yyval.expr) = NULL; ;}
+    break;
+
+  case 101:
+
+    { (yyval.expr) = (yyvsp[0].expr); ;}
+    break;
+
+  case 102:
+
+    { (yyval.expr) = expr_alloc_symbol((yyvsp[0].symbol)); ;}
+    break;
+
+  case 103:
+
+    { (yyval.expr) = expr_alloc_comp(E_EQUAL, (yyvsp[-2].symbol), (yyvsp[0].symbol)); ;}
+    break;
+
+  case 104:
+
+    { (yyval.expr) = expr_alloc_comp(E_UNEQUAL, (yyvsp[-2].symbol), (yyvsp[0].symbol)); ;}
+    break;
+
+  case 105:
+
+    { (yyval.expr) = (yyvsp[-1].expr); ;}
+    break;
+
+  case 106:
+
+    { (yyval.expr) = expr_alloc_one(E_NOT, (yyvsp[0].expr)); ;}
+    break;
+
+  case 107:
+
+    { (yyval.expr) = expr_alloc_two(E_OR, (yyvsp[-2].expr), (yyvsp[0].expr)); ;}
+    break;
+
+  case 108:
+
+    { (yyval.expr) = expr_alloc_two(E_AND, (yyvsp[-2].expr), (yyvsp[0].expr)); ;}
+    break;
+
+  case 109:
+
+    { (yyval.symbol) = sym_lookup((yyvsp[0].string), 0); free((yyvsp[0].string)); ;}
+    break;
+
+  case 110:
+
+    { (yyval.symbol) = sym_lookup((yyvsp[0].string), 1); free((yyvsp[0].string)); ;}
+    break;
+
+
+      default: break;
+    }
+
+/* Line 1126 of yacc.c.  */
+
+
+  yyvsp -= yylen;
+  yyssp -= yylen;
+
+
+  YY_STACK_PRINT (yyss, yyssp);
+
+  *++yyvsp = yyval;
+
+
+  /* Now `shift' the result of the reduction.  Determine what state
+     that goes to, based on the state we popped back to and the rule
+     number reduced by.  */
+
+  yyn = yyr1[yyn];
+
+  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
+  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
+    yystate = yytable[yystate];
+  else
+    yystate = yydefgoto[yyn - YYNTOKENS];
+
+  goto yynewstate;
+
+
+/*------------------------------------.
+| yyerrlab -- here on detecting error |
+`------------------------------------*/
+yyerrlab:
+  /* If not already recovering from an error, report this error.  */
+  if (!yyerrstatus)
+    {
+      ++yynerrs;
+#if YYERROR_VERBOSE
+      yyn = yypact[yystate];
+
+      if (YYPACT_NINF < yyn && yyn < YYLAST)
+	{
+	  int yytype = YYTRANSLATE (yychar);
+	  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+	  YYSIZE_T yysize = yysize0;
+	  YYSIZE_T yysize1;
+	  int yysize_overflow = 0;
+	  char *yymsg = 0;
+#	  define YYERROR_VERBOSE_ARGS_MAXIMUM 5
+	  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+	  int yyx;
+
+#if 0
+	  /* This is so xgettext sees the translatable formats that are
+	     constructed on the fly.  */
+	  YY_("syntax error, unexpected %s");
+	  YY_("syntax error, unexpected %s, expecting %s");
+	  YY_("syntax error, unexpected %s, expecting %s or %s");
+	  YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+	  YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+#endif
+	  char *yyfmt;
+	  char const *yyf;
+	  static char const yyunexpected[] = "syntax error, unexpected %s";
+	  static char const yyexpecting[] = ", expecting %s";
+	  static char const yyor[] = " or %s";
+	  char yyformat[sizeof yyunexpected
+			+ sizeof yyexpecting - 1
+			+ ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+			   * (sizeof yyor - 1))];
+	  char const *yyprefix = yyexpecting;
+
+	  /* Start YYX at -YYN if negative to avoid negative indexes in
+	     YYCHECK.  */
+	  int yyxbegin = yyn < 0 ? -yyn : 0;
+
+	  /* Stay within bounds of both yycheck and yytname.  */
+	  int yychecklim = YYLAST - yyn;
+	  int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+	  int yycount = 1;
+
+	  yyarg[0] = yytname[yytype];
+	  yyfmt = yystpcpy (yyformat, yyunexpected);
+
+	  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	      {
+		if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+		  {
+		    yycount = 1;
+		    yysize = yysize0;
+		    yyformat[sizeof yyunexpected - 1] = '\0';
+		    break;
+		  }
+		yyarg[yycount++] = yytname[yyx];
+		yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+		yysize_overflow |= yysize1 < yysize;
+		yysize = yysize1;
+		yyfmt = yystpcpy (yyfmt, yyprefix);
+		yyprefix = yyor;
+	      }
+
+	  yyf = YY_(yyformat);
+	  yysize1 = yysize + yystrlen (yyf);
+	  yysize_overflow |= yysize1 < yysize;
+	  yysize = yysize1;
+
+	  if (!yysize_overflow && yysize <= YYSTACK_ALLOC_MAXIMUM)
+	    yymsg = (char *) YYSTACK_ALLOC (yysize);
+	  if (yymsg)
+	    {
+	      /* Avoid sprintf, as that infringes on the user's name space.
+		 Don't have undefined behavior even if the translation
+		 produced a string with the wrong number of "%s"s.  */
+	      char *yyp = yymsg;
+	      int yyi = 0;
+	      while ((*yyp = *yyf))
+		{
+		  if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		    {
+		      yyp += yytnamerr (yyp, yyarg[yyi++]);
+		      yyf += 2;
+		    }
+		  else
+		    {
+		      yyp++;
+		      yyf++;
+		    }
+		}
+	      yyerror (yymsg);
+	      YYSTACK_FREE (yymsg);
+	    }
+	  else
+	    {
+	      yyerror (YY_("syntax error"));
+	      goto yyexhaustedlab;
+	    }
+	}
+      else
+#endif /* YYERROR_VERBOSE */
+	yyerror (YY_("syntax error"));
+    }
+
+
+
+  if (yyerrstatus == 3)
+    {
+      /* If just tried and failed to reuse look-ahead token after an
+	 error, discard it.  */
+
+      if (yychar <= YYEOF)
+        {
+	  /* Return failure if at end of input.  */
+	  if (yychar == YYEOF)
+	    YYABORT;
+        }
+      else
+	{
+	  yydestruct ("Error: discarding", yytoken, &yylval);
+	  yychar = YYEMPTY;
+	}
+    }
+
+  /* Else will try to reuse look-ahead token after shifting the error
+     token.  */
+  goto yyerrlab1;
+
+
+/*---------------------------------------------------.
+| yyerrorlab -- error raised explicitly by YYERROR.  |
+`---------------------------------------------------*/
+yyerrorlab:
+
+  /* Pacify compilers like GCC when the user code never invokes
+     YYERROR and the label yyerrorlab therefore never appears in user
+     code.  */
+  if (0)
+     goto yyerrorlab;
+
+yyvsp -= yylen;
+  yyssp -= yylen;
+  yystate = *yyssp;
+  goto yyerrlab1;
+
+
+/*-------------------------------------------------------------.
+| yyerrlab1 -- common code for both syntax error and YYERROR.  |
+`-------------------------------------------------------------*/
+yyerrlab1:
+  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
+
+  for (;;)
+    {
+      yyn = yypact[yystate];
+      if (yyn != YYPACT_NINF)
+	{
+	  yyn += YYTERROR;
+	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+	    {
+	      yyn = yytable[yyn];
+	      if (0 < yyn)
+		break;
+	    }
+	}
+
+      /* Pop the current state because it cannot handle the error token.  */
+      if (yyssp == yyss)
+	YYABORT;
+
+
+      yydestruct ("Error: popping", yystos[yystate], yyvsp);
+      YYPOPSTACK;
+      yystate = *yyssp;
+      YY_STACK_PRINT (yyss, yyssp);
+    }
+
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
+  *++yyvsp = yylval;
+
+
+  /* Shift the error token. */
+  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);
+
+  yystate = yyn;
+  goto yynewstate;
+
+
+/*-------------------------------------.
+| yyacceptlab -- YYACCEPT comes here.  |
+`-------------------------------------*/
+yyacceptlab:
+  yyresult = 0;
+  goto yyreturn;
+
+/*-----------------------------------.
+| yyabortlab -- YYABORT comes here.  |
+`-----------------------------------*/
+yyabortlab:
+  yyresult = 1;
+  goto yyreturn;
+
+#ifndef yyoverflow
+/*-------------------------------------------------.
+| yyexhaustedlab -- memory exhaustion comes here.  |
+`-------------------------------------------------*/
+yyexhaustedlab:
+  yyerror (YY_("memory exhausted"));
+  yyresult = 2;
+  /* Fall through.  */
+#endif
+
+yyreturn:
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
+  while (yyssp != yyss)
+    {
+      yydestruct ("Cleanup: popping",
+		  yystos[*yyssp], yyvsp);
+      YYPOPSTACK;
+    }
+#ifndef yyoverflow
+  if (yyss != yyssa)
+    YYSTACK_FREE (yyss);
+#endif
+  return yyresult;
+}
+
+
+
+
+
+void conf_parse(const char *name)
+{
+	struct symbol *sym;
+	int i;
+
+	zconf_initscan(name);
+
+	sym_init();
+	menu_init();
+	modules_sym = sym_lookup(NULL, 0);
+	modules_sym->type = S_BOOLEAN;
+	modules_sym->flags |= SYMBOL_AUTO;
+	rootmenu.prompt = menu_add_prompt(P_MENU, "Linux Kernel Configuration", NULL);
+
+#if YYDEBUG
+	if (getenv("ZCONF_DEBUG"))
+		zconfdebug = 1;
+#endif
+	zconfparse();
+	if (zconfnerrs)
+		exit(1);
+	if (!modules_sym->prop) {
+		struct property *prop;
+
+		prop = prop_alloc(P_DEFAULT, modules_sym);
+		prop->expr = expr_alloc_symbol(sym_lookup("MODULES", 0));
+	}
+	menu_finalize(&rootmenu);
+	for_all_symbols(i, sym) {
+		if (sym_check_deps(sym))
+			zconfnerrs++;
+        }
+	if (zconfnerrs)
+		exit(1);
+	sym_set_change_count(1);
+}
+
+const char *zconf_tokenname(int token)
+{
+	switch (token) {
+	case T_MENU:		return "menu";
+	case T_ENDMENU:		return "endmenu";
+	case T_CHOICE:		return "choice";
+	case T_ENDCHOICE:	return "endchoice";
+	case T_IF:		return "if";
+	case T_ENDIF:		return "endif";
+	case T_DEPENDS:		return "depends";
+	}
+	return "<token>";
+}
+
+static bool zconf_endtoken(struct kconf_id *id, int starttoken, int endtoken)
+{
+	if (id->token != endtoken) {
+		zconf_error("unexpected '%s' within %s block",
+			kconf_id_strings + id->name, zconf_tokenname(starttoken));
+		zconfnerrs++;
+		return false;
+	}
+	if (current_menu->file != current_file) {
+		zconf_error("'%s' in different file than '%s'",
+			kconf_id_strings + id->name, zconf_tokenname(starttoken));
+		fprintf(stderr, "%s:%d: location of the '%s'\n",
+			current_menu->file->name, current_menu->lineno,
+			zconf_tokenname(starttoken));
+		zconfnerrs++;
+		return false;
+	}
+	return true;
+}
+
+static void zconfprint(const char *err, ...)
+{
+	va_list ap;
+
+	fprintf(stderr, "%s:%d: ", zconf_curname(), zconf_lineno());
+	va_start(ap, err);
+	vfprintf(stderr, err, ap);
+	va_end(ap);
+	fprintf(stderr, "\n");
+}
+
+static void zconf_error(const char *err, ...)
+{
+	va_list ap;
+
+	zconfnerrs++;
+	fprintf(stderr, "%s:%d: ", zconf_curname(), zconf_lineno());
+	va_start(ap, err);
+	vfprintf(stderr, err, ap);
+	va_end(ap);
+	fprintf(stderr, "\n");
+}
+
+static void zconferror(const char *err)
+{
+#if YYDEBUG
+	fprintf(stderr, "%s:%d: %s\n", zconf_curname(), zconf_lineno() + 1, err);
+#endif
+}
+
+void print_quoted_string(FILE *out, const char *str)
+{
+	const char *p;
+	int len;
+
+	putc('"', out);
+	while ((p = strchr(str, '"'))) {
+		len = p - str;
+		if (len)
+			fprintf(out, "%.*s", len, str);
+		fputs("\\\"", out);
+		str = p + 1;
+	}
+	fputs(str, out);
+	putc('"', out);
+}
+
+void print_symbol(FILE *out, struct menu *menu)
+{
+	struct symbol *sym = menu->sym;
+	struct property *prop;
+
+	if (sym_is_choice(sym))
+		fprintf(out, "choice\n");
+	else
+		fprintf(out, "config %s\n", sym->name);
+	switch (sym->type) {
+	case S_BOOLEAN:
+		fputs("  boolean\n", out);
+		break;
+	case S_TRISTATE:
+		fputs("  tristate\n", out);
+		break;
+	case S_STRING:
+		fputs("  string\n", out);
+		break;
+	case S_INT:
+		fputs("  integer\n", out);
+		break;
+	case S_HEX:
+		fputs("  hex\n", out);
+		break;
+	default:
+		fputs("  ???\n", out);
+		break;
+	}
+	for (prop = sym->prop; prop; prop = prop->next) {
+		if (prop->menu != menu)
+			continue;
+		switch (prop->type) {
+		case P_PROMPT:
+			fputs("  prompt ", out);
+			print_quoted_string(out, prop->text);
+			if (!expr_is_yes(prop->visible.expr)) {
+				fputs(" if ", out);
+				expr_fprint(prop->visible.expr, out);
+			}
+			fputc('\n', out);
+			break;
+		case P_DEFAULT:
+			fputs( "  default ", out);
+			expr_fprint(prop->expr, out);
+			if (!expr_is_yes(prop->visible.expr)) {
+				fputs(" if ", out);
+				expr_fprint(prop->visible.expr, out);
+			}
+			fputc('\n', out);
+			break;
+		case P_CHOICE:
+			fputs("  #choice value\n", out);
+			break;
+		default:
+			fprintf(out, "  unknown prop %d!\n", prop->type);
+			break;
+		}
+	}
+	if (menu->help) {
+		int len = strlen(menu->help);
+		while (menu->help[--len] == '\n')
+			menu->help[len] = 0;
+		fprintf(out, "  help\n%s\n", menu->help);
+	}
+	fputc('\n', out);
+}
+
+void zconfdump(FILE *out)
+{
+	struct property *prop;
+	struct symbol *sym;
+	struct menu *menu;
+
+	menu = rootmenu.list;
+	while (menu) {
+		if ((sym = menu->sym))
+			print_symbol(out, menu);
+		else if ((prop = menu->prompt)) {
+			switch (prop->type) {
+			case P_COMMENT:
+				fputs("\ncomment ", out);
+				print_quoted_string(out, prop->text);
+				fputs("\n", out);
+				break;
+			case P_MENU:
+				fputs("\nmenu ", out);
+				print_quoted_string(out, prop->text);
+				fputs("\n", out);
+				break;
+			default:
+				;
+			}
+			if (!expr_is_yes(prop->visible.expr)) {
+				fputs("  depends ", out);
+				expr_fprint(prop->visible.expr, out);
+				fputc('\n', out);
+			}
+			fputs("\n", out);
+		}
+
+		if (menu->list)
+			menu = menu->list;
+		else if (menu->next)
+			menu = menu->next;
+		else while ((menu = menu->parent)) {
+			if (menu->prompt && menu->prompt->type == P_MENU)
+				fputs("\nendmenu\n", out);
+			if (menu->next) {
+				menu = menu->next;
+				break;
+			}
+		}
+	}
+}
+
+#include "lex.zconf.c"
+#include "util.c"
+#include "confdata.c"
+#include "expr.c"
+#include "symbol.c"
+#include "menu.c"
+
+
diff -urpN linux-2.6.23-sabayon/scripts/mod/elfconfig.h testtry/scripts/mod/elfconfig.h
--- linux-2.6.23-sabayon/scripts/mod/elfconfig.h	1970-01-01 00:00:00.000000000 +0000
+++ testtry/scripts/mod/elfconfig.h	2007-10-15 16:44:58.000000000 +0000
@@ -0,0 +1,5 @@
+#define KERNEL_ELFCLASS ELFCLASS64
+#define KERNEL_ELFDATA ELFDATA2LSB
+#define HOST_ELFCLASS ELFCLASS64
+#define HOST_ELFDATA ELFDATA2LSB
+#define MODULE_SYMBOL_PREFIX ""
Files linux-2.6.23-sabayon/scripts/mod/mk_elfconfig and testtry/scripts/mod/mk_elfconfig differ
Files linux-2.6.23-sabayon/scripts/mod/modpost and testtry/scripts/mod/modpost differ
Files linux-2.6.23-sabayon/scripts/pnmtologo and testtry/scripts/pnmtologo differ
diff -urpN linux-2.6.23-sabayon/.version testtry/.version
--- linux-2.6.23-sabayon/.version	1970-01-01 00:00:00.000000000 +0000
+++ testtry/.version	2007-10-15 16:53:21.000000000 +0000
@@ -0,0 +1 @@
+1
