diff -ur src.orig/wizard.cpp src/wizard.cpp
--- src.orig/wizard.cpp	2011-10-02 00:37:33.675840658 +0200
+++ src/wizard.cpp	2011-10-02 00:53:03.644034834 +0200
@@ -22,6 +22,7 @@
 #include "profilesdialog.h"
 #include "v4l/v4lcapture.h"
 #include "kdenlive-config.h"
+#include "mlt/framework/mlt_version.h"
 
 #include <KStandardDirs>
 #include <KLocale>
@@ -214,8 +215,11 @@
         button(QWizard::NextButton)->setEnabled(false);
     } else {
         checkProcess.waitForFinished();
+#if (LIBMLT_VERSION_INT >= (((0<<16)+(7<<8)+4)))
+        QByteArray result = checkProcess.readAllStandardOutput();
+#else
         QByteArray result = checkProcess.readAllStandardError();
-
+#endif
         // Check MLT avformat module
         QTreeWidgetItem *avformatItem = new QTreeWidgetItem(m_mltCheck.programList, QStringList() << QString() << i18n("Avformat module (FFmpeg)"));
         avformatItem->setData(1, Qt::UserRole, i18n("Required to work with various video formats (hdv, mpeg, flash, ...)"));
@@ -246,7 +250,11 @@
                     kDebug() << "// Error querying MLT's version";
                 } else {
                     checkProcess.waitForFinished();
+#if (LIBMLT_VERSION_INT >= (((0<<16)+(7<<8)+4)))
+                    mltVersion = checkProcess.readAllStandardOutput();
+#else
                     mltVersion = checkProcess.readAllStandardError();
+#endif
                     mltVersion = mltVersion.section('\n', 0, 0).simplified();
                     mltVersion = mltVersion.section(' ', -1).simplified();
                     version = 1000 * mltVersion.section('.', 0, 0).toInt() + 100 * mltVersion.section('.', 1, 1).toInt() + mltVersion.section('.', 2, 2).toInt();
@@ -275,7 +283,11 @@
                     kDebug() << "// Error parsing MLT's avformat codecs";
                 } else {
                     checkProcess2.waitForFinished();
+#if (LIBMLT_VERSION_INT >= (((0<<16)+(7<<8)+4)))
+                    QByteArray codecList = checkProcess2.readAllStandardOutput();
+#else
                     QByteArray codecList = checkProcess2.readAllStandardError();
+#endif
                     QString acodecList(codecList);
                     QStringList result;
                     QStringList alist = acodecList.split('\n', QString::SkipEmptyParts);
@@ -292,7 +304,11 @@
                     kDebug() << "// Error parsing MLT's avformat codecs";
                 } else {
                     checkProcess2.waitForFinished();
+#if (LIBMLT_VERSION_INT >= (((0<<16)+(7<<8)+4)))
+                    QByteArray codecList = checkProcess2.readAllStandardOutput();
+#else
                     QByteArray codecList = checkProcess2.readAllStandardError();
+#endif
                     QString vcodecList(codecList);
                     QStringList result;
                     QStringList vlist = vcodecList.split('\n', QString::SkipEmptyParts);
@@ -309,7 +325,11 @@
                     kDebug() << "// Error parsing MLT's avformat codecs";
                 } else {
                     checkProcess2.waitForFinished();
+#if (LIBMLT_VERSION_INT >= (((0<<16)+(7<<8)+4)))
+                    QByteArray codecList = checkProcess2.readAllStandardOutput();
+#else
                     QByteArray codecList = checkProcess2.readAllStandardError();
+#endif
                     QString vcodecList(codecList);
                     QStringList result;
                     QStringList vlist = vcodecList.split('\n', QString::SkipEmptyParts);
@@ -606,7 +626,7 @@
 
     checkProcess.waitForFinished();
 
-    QByteArray result = checkProcess.readAllStandardError();
+    QByteArray result = checkProcess.readAllStandardOutput();
     if (!result.contains("- avformat")) errorMessage.append(i18n("MLT's avformat (FFMPEG) module not found. Please check your FFMPEG and MLT install. Kdenlive will not work until this issue is fixed.") + "\n");*/
 
     QProcess checkProcess2;
@@ -616,7 +636,11 @@
 
     checkProcess2.waitForFinished();
 
+#if (LIBMLT_VERSION_INT >= (((0<<16)+(7<<8)+4)))
+    QByteArray result = checkProcess2.readAllStandardOutput();
+#else
     QByteArray result = checkProcess2.readAllStandardError();
+#endif
     if (!result.contains("sdl") || !result.contains("sdl_preview")) errorMessage.append(i18n("MLT's SDL module not found. Please check your MLT install. Kdenlive will not work until this issue is fixed.") + '\n');
 
     if (!errorMessage.isEmpty()) {
